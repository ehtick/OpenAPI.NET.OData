{
  "openapi": "3.0.4",
  "info": {
    "title": "OData Service for namespace microsoft.graph",
    "description": "This OData service is located at https://graph.microsoft.com/v1.0",
    "version": "1.0.1"
  },
  "servers": [
    {
      "url": "https://graph.microsoft.com/v1.0"
    }
  ],
  "paths": {
    "/contracts": {
      "get": {
        "tags": [
          "contracts.contract"
        ],
        "summary": "Get entities from contracts",
        "operationId": "contracts.contract.ListContract",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "contractType",
                  "contractType desc",
                  "customerId",
                  "customerId desc",
                  "defaultDomainName",
                  "defaultDomainName desc",
                  "displayName",
                  "displayName desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "contractType",
                  "customerId",
                  "defaultDomainName",
                  "displayName"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of contract",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.contract"
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n  \"contractType\": \"contractType-value\",\r\n  \"customerId\": \"customerId-value\",\r\n  \"defaultDomainName\": \"defaultDomainName-value\",\r\n  \"displayName\": \"displayName-value\",\r\n  \"id\": \"id-value\"\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Directory.Read.All",
              "Directory.ReadWrite.All",
              "Directory.AccessAsUser.All"
            ]
          },
          {
            "Application": [
              "Directory.Read.All",
              "Directory.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "contracts.contract"
        ],
        "summary": "Add new entity to contracts",
        "operationId": "contracts.contract.CreateContract",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.contract"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.contract"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/contracts/{contract-id}": {
      "get": {
        "tags": [
          "contracts.contract"
        ],
        "summary": "Get entity from contracts by key",
        "operationId": "contracts.contract.GetContract",
        "parameters": [
          {
            "name": "contract-id",
            "in": "path",
            "description": "key: contract-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "contract"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "contractType",
                  "customerId",
                  "defaultDomainName",
                  "displayName"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.contract"
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n  \"contractType\": \"contractType-value\",\r\n  \"customerId\": \"customerId-value\",\r\n  \"defaultDomainName\": \"defaultDomainName-value\",\r\n  \"displayName\": \"displayName-value\",\r\n  \"id\": \"id-value\"\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Directory.Read.All",
              "Directory.ReadWrite.All",
              "Directory.AccessAsUser.All"
            ]
          },
          {
            "Application": [
              "Directory.Read.All",
              "Directory.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "contracts.contract"
        ],
        "summary": "Update entity in contracts",
        "operationId": "contracts.contract.UpdateContract",
        "parameters": [
          {
            "name": "contract-id",
            "in": "path",
            "description": "key: contract-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "contract"
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.contract"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "contracts.contract"
        ],
        "summary": "Delete entity from contracts",
        "operationId": "contracts.contract.DeleteContract",
        "parameters": [
          {
            "name": "contract-id",
            "in": "path",
            "description": "key: contract-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "contract"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/devices": {
      "get": {
        "tags": [
          "devices.device"
        ],
        "summary": "Get entities from devices",
        "operationId": "devices.device.ListDevice",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "accountEnabled",
                  "accountEnabled desc",
                  "alternativeSecurityIds",
                  "alternativeSecurityIds desc",
                  "approximateLastSignInDateTime",
                  "approximateLastSignInDateTime desc",
                  "deviceId",
                  "deviceId desc",
                  "deviceMetadata",
                  "deviceMetadata desc",
                  "deviceVersion",
                  "deviceVersion desc",
                  "displayName",
                  "displayName desc",
                  "isCompliant",
                  "isCompliant desc",
                  "isManaged",
                  "isManaged desc",
                  "onPremisesLastSyncDateTime",
                  "onPremisesLastSyncDateTime desc",
                  "onPremisesSyncEnabled",
                  "onPremisesSyncEnabled desc",
                  "operatingSystem",
                  "operatingSystem desc",
                  "operatingSystemVersion",
                  "operatingSystemVersion desc",
                  "physicalIds",
                  "physicalIds desc",
                  "trustType",
                  "trustType desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "accountEnabled",
                  "alternativeSecurityIds",
                  "approximateLastSignInDateTime",
                  "deviceId",
                  "deviceMetadata",
                  "deviceVersion",
                  "displayName",
                  "isCompliant",
                  "isManaged",
                  "onPremisesLastSyncDateTime",
                  "onPremisesSyncEnabled",
                  "operatingSystem",
                  "operatingSystemVersion",
                  "physicalIds",
                  "trustType",
                  "extensions",
                  "registeredOwners",
                  "registeredUsers"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "extensions",
                  "registeredOwners",
                  "registeredUsers"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of device",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.device"
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n  \"accountEnabled\":false,\r\n  \"deviceId\":\"4c299165-6e8f-4b45-a5ba-c5d250a707ff\",\r\n  \"displayName\":\"Test device\",\r\n  \"id\": \"id-value\",\r\n  \"operatingSystem\":\"linux\",\r\n  \"operatingSystemVersion\":\"1\"\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Directory.Read.All",
              "Directory.ReadWrite.All",
              "Directory.AccessAsUser.All"
            ]
          },
          {
            "Application": [
              "Device.ReadWrite.All",
              "Directory.Read.All",
              "Directory.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "devices.device"
        ],
        "summary": "Add new entity to devices",
        "operationId": "devices.device.CreateDevice",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.device"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.device"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/devices/{device-id}": {
      "get": {
        "tags": [
          "devices.device"
        ],
        "summary": "Get entity from devices by key",
        "operationId": "devices.device.GetDevice",
        "parameters": [
          {
            "name": "device-id",
            "in": "path",
            "description": "key: device-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "device"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "accountEnabled",
                  "alternativeSecurityIds",
                  "approximateLastSignInDateTime",
                  "deviceId",
                  "deviceMetadata",
                  "deviceVersion",
                  "displayName",
                  "isCompliant",
                  "isManaged",
                  "onPremisesLastSyncDateTime",
                  "onPremisesSyncEnabled",
                  "operatingSystem",
                  "operatingSystemVersion",
                  "physicalIds",
                  "trustType",
                  "extensions",
                  "registeredOwners",
                  "registeredUsers"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "extensions",
                  "registeredOwners",
                  "registeredUsers"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.device"
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n  \"accountEnabled\":false,\r\n  \"deviceId\":\"4c299165-6e8f-4b45-a5ba-c5d250a707ff\",\r\n  \"displayName\":\"Test device\",\r\n  \"id\": \"id-value\",\r\n  \"operatingSystem\":\"linux\",\r\n  \"operatingSystemVersion\":\"1\"\r\n}\n"
                  }
                }
              }
            },
            "links": {
              "extensions": {
                "operationId": "devices.device.GetDevice",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "registeredOwners": {
                "operationId": "devices.device.GetDevice",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "registeredUsers": {
                "operationId": "devices.device.GetDevice",
                "parameters": {
                  "id": "$request.path.id"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Directory.Read.All",
              "Directory.ReadWrite.All",
              "Directory.AccessAsUser.All"
            ]
          },
          {
            "Application": [
              "Device.ReadWrite.All",
              "Directory.Read.All",
              "Directory.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "devices.device"
        ],
        "summary": "Update entity in devices",
        "operationId": "devices.device.UpdateDevice",
        "parameters": [
          {
            "name": "device-id",
            "in": "path",
            "description": "key: device-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "device"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.device"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Directory.ReadWrite.All",
              "Directory.AccessAsUser.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "devices.device"
        ],
        "summary": "Delete entity from devices",
        "operationId": "devices.device.DeleteDevice",
        "parameters": [
          {
            "name": "device-id",
            "in": "path",
            "description": "key: device-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "device"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Directory.AccessAsUser.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/devices/{device-id}/extensions": {
      "get": {
        "tags": [
          "devices.extension"
        ],
        "summary": "Get extensions from devices",
        "operationId": "devices.ListExtensions",
        "parameters": [
          {
            "name": "device-id",
            "in": "path",
            "description": "key: device-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "device"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/devices/{device-id}/extensions/{extension-id}": {
      "get": {
        "tags": [
          "devices.extension"
        ],
        "summary": "Get extensions from devices",
        "operationId": "devices.GetExtensions",
        "parameters": [
          {
            "name": "device-id",
            "in": "path",
            "description": "key: device-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "device"
          },
          {
            "name": "extension-id",
            "in": "path",
            "description": "key: extension-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "extension"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/devices/{device-id}/registeredOwners": {
      "get": {
        "tags": [
          "devices.directoryObject"
        ],
        "summary": "Get registeredOwners from devices",
        "operationId": "devices.ListRegisteredOwners",
        "parameters": [
          {
            "name": "device-id",
            "in": "path",
            "description": "key: device-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "device"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/devices/{device-id}/registeredOwners/{directoryObject-id}": {
      "get": {
        "tags": [
          "devices.directoryObject"
        ],
        "summary": "Get registeredOwners from devices",
        "operationId": "devices.GetRegisteredOwners",
        "parameters": [
          {
            "name": "device-id",
            "in": "path",
            "description": "key: device-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "device"
          },
          {
            "name": "directoryObject-id",
            "in": "path",
            "description": "key: directoryObject-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "directoryObject"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/devices/{device-id}/registeredUsers": {
      "get": {
        "tags": [
          "devices.directoryObject"
        ],
        "summary": "Get registeredUsers from devices",
        "operationId": "devices.ListRegisteredUsers",
        "parameters": [
          {
            "name": "device-id",
            "in": "path",
            "description": "key: device-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "device"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/devices/{device-id}/registeredUsers/{directoryObject-id}": {
      "get": {
        "tags": [
          "devices.directoryObject"
        ],
        "summary": "Get registeredUsers from devices",
        "operationId": "devices.GetRegisteredUsers",
        "parameters": [
          {
            "name": "device-id",
            "in": "path",
            "description": "key: device-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "device"
          },
          {
            "name": "directoryObject-id",
            "in": "path",
            "description": "key: directoryObject-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "directoryObject"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/directory": {
      "get": {
        "tags": [
          "directory.directory"
        ],
        "summary": "Get directory",
        "operationId": "directory.directory.GetDirectory",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "deletedItems"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "deletedItems"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.directory"
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "directory.directory"
        ],
        "summary": "Update directory",
        "operationId": "directory.directory.UpdateDirectory",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.directory"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/directory/deletedItems": {
      "get": {
        "tags": [
          "directory.directoryObject"
        ],
        "summary": "Get deletedItems from directory",
        "operationId": "directory.ListDeletedItems",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/directory/deletedItems/{directoryObject-id}": {
      "get": {
        "tags": [
          "directory.directoryObject"
        ],
        "summary": "Get deletedItems from directory",
        "operationId": "directory.GetDeletedItems",
        "parameters": [
          {
            "name": "directoryObject-id",
            "in": "path",
            "description": "key: directoryObject-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "directoryObject"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/directoryObjects": {
      "get": {
        "tags": [
          "directoryObjects.directoryObject"
        ],
        "summary": "Get entities from directoryObjects",
        "operationId": "directoryObjects.directoryObject.ListDirectoryObject",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of directoryObject",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n  \"id\": \"id-value\"\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Directory.Read.All",
              "Directory.AccessAsUser.All"
            ]
          },
          {
            "Application": [
              "Directory.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "directoryObjects.directoryObject"
        ],
        "summary": "Add new entity to directoryObjects",
        "operationId": "directoryObjects.directoryObject.CreateDirectoryObject",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.directoryObject"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/directoryObjects/{directoryObject-id}": {
      "get": {
        "tags": [
          "directoryObjects.directoryObject"
        ],
        "summary": "Get entity from directoryObjects by key",
        "operationId": "directoryObjects.directoryObject.GetDirectoryObject",
        "parameters": [
          {
            "name": "directoryObject-id",
            "in": "path",
            "description": "key: directoryObject-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "directoryObject"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n  \"id\": \"id-value\"\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Directory.Read.All",
              "Directory.AccessAsUser.All"
            ]
          },
          {
            "Application": [
              "Directory.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "directoryObjects.directoryObject"
        ],
        "summary": "Update entity in directoryObjects",
        "operationId": "directoryObjects.directoryObject.UpdateDirectoryObject",
        "parameters": [
          {
            "name": "directoryObject-id",
            "in": "path",
            "description": "key: directoryObject-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "directoryObject"
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.directoryObject"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "directoryObjects.directoryObject"
        ],
        "summary": "Delete entity from directoryObjects",
        "operationId": "directoryObjects.directoryObject.DeleteDirectoryObject",
        "parameters": [
          {
            "name": "directoryObject-id",
            "in": "path",
            "description": "key: directoryObject-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "directoryObject"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Directory.AccessAsUser.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/directoryObjects/{directoryObject-id}/checkMemberGroups": {
      "post": {
        "tags": [
          "directoryObjects.Actions"
        ],
        "summary": "Invoke action checkMemberGroups",
        "operationId": "directoryObjects.checkMemberGroups",
        "parameters": [
          {
            "name": "directoryObject-id",
            "in": "path",
            "description": "key: directoryObject-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "directoryObject"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "groupIds": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "nullable": true
                  }
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n  \"value\": [\r\n        \"fee2c45b-915a-4a64-b130-f4eb9e75525e\"\r\n  ]\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "User.Read.All",
              "and",
              "Group.Read.All",
              "Directory.Read.All"
            ]
          },
          {
            "Application": [
              "User.Read.All",
              "and",
              "Group.Read.All",
              "Directory.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      }
    },
    "/directoryObjects/{directoryObject-id}/getMemberGroups": {
      "post": {
        "tags": [
          "directoryObjects.Actions"
        ],
        "summary": "Invoke action getMemberGroups",
        "operationId": "directoryObjects.getMemberGroups",
        "parameters": [
          {
            "name": "directoryObject-id",
            "in": "path",
            "description": "key: directoryObject-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "directoryObject"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "securityEnabledOnly": {
                    "type": "boolean",
                    "default": false,
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "nullable": true
                  }
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n    \"@odata.context\": \"https://graph.microsoft.com/v1.0/$metadata#Collection(Edm.String)\",\r\n    \"value\": [\r\n        \"fee2c45b-915a-4a64-b130-f4eb9e75525e\",\r\n        \"4fe90ae7-065a-478b-9400-e0a0e1cbd540\",\r\n        \"e0c3beaf-eeb4-43d8-abc5-94f037a65697\"\r\n    ]\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "User.Read.All",
              "and",
              "Group.Read.All",
              "Directory.Read.All"
            ]
          },
          {
            "Application": [
              "User.Read.All",
              "and",
              "Group.Read.All",
              "Directory.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      }
    },
    "/directoryObjects/{directoryObject-id}/getMemberObjects": {
      "post": {
        "tags": [
          "directoryObjects.Actions"
        ],
        "summary": "Invoke action getMemberObjects",
        "operationId": "directoryObjects.getMemberObjects",
        "parameters": [
          {
            "name": "directoryObject-id",
            "in": "path",
            "description": "key: directoryObject-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "directoryObject"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "securityEnabledOnly": {
                    "type": "boolean",
                    "default": false,
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "nullable": true
                  }
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n    \"@odata.context\": \"https://graph.microsoft.com/v1.0/$metadata#Collection(Edm.String)\",\r\n    \"value\": [\r\n        \"fee2c45b-915a-4a64-b130-f4eb9e75525e\",\r\n        \"4fe90ae7-065a-478b-9400-e0a0e1cbd540\",\r\n        \"c9ee2d50-9e8a-4352-b97c-4c2c99557c22\",\r\n        \"e0c3beaf-eeb4-43d8-abc5-94f037a65697\"\r\n    ]\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "User.Read.All",
              "and",
              "Group.Read.All",
              "Directory.Read.All"
            ]
          },
          {
            "Application": [
              "User.Read.All",
              "and",
              "Group.Read.All",
              "Directory.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      }
    },
    "/directoryObjects/{directoryObject-id}/restore": {
      "post": {
        "tags": [
          "directoryObjects.Actions"
        ],
        "summary": "Invoke action restore",
        "operationId": "directoryObjects.restore",
        "parameters": [
          {
            "name": "directoryObject-id",
            "in": "path",
            "description": "key: directoryObject-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "directoryObject"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer code Required",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                    }
                  ],
                  "nullable": true
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n  \"@odata.context\":\"https://graph.microsoft.com/v1.0/$metadata#directoryObjects/$entity\",\r\n  \"@odata.type\":\"#microsoft.graph.group\",\r\n  \"id\":\"46cc6179-19d0-473e-97ad-6ff84347bbbb\",\r\n  \"displayName\":\"SampleGroup\",\r\n  \"groupTypes\":[\"Unified\"],\r\n  \"mail\":\"example@contoso.com\",\r\n  \"mailEnabled\":true,\r\n  \"mailNickname\":\"Example\",\r\n  \"securityEnabled\":false,\r\n  \"visibility\":\"Public\"\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "action"
      }
    },
    "/directoryObjects/getByIds": {
      "post": {
        "tags": [
          "directoryObjects.Actions"
        ],
        "summary": "Invoke action getByIds",
        "operationId": "directoryObjects.getByIds",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ids": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "types": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                      }
                    ],
                    "nullable": true
                  }
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n    \"@odata.context\": \"https://graph.microsoft.com/v1.0/$metadata#directoryObjects\",\r\n    \"value\": [\r\n      {\r\n        \"@odata.type\": \"#microsoft.graph.user\",\r\n        \"id\": \"84b80893-8749-40a3-97b7-68513b600544\",\r\n        \"accountEnabled\": true,\r\n        \"displayName\": \"Trevor Jones\"\r\n      },\r\n      {\r\n        \"@odata.type\": \"#microsoft.graph.user\",\r\n        \"id\": \"84b80893-8749-40a3-97b7-68513b600544\",\r\n        \"accountEnabled\": true,\r\n        \"displayName\": \"Billy Smith\"\r\n      }\r\n    ]\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Directory.Read.All",
              "Directory.AccessAsUser.All"
            ]
          },
          {
            "Application": [
              "Directory.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      }
    },
    "/directoryRoles": {
      "get": {
        "tags": [
          "directoryRoles.directoryRole"
        ],
        "summary": "Get entities from directoryRoles",
        "operationId": "directoryRoles.directoryRole.ListDirectoryRole",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "description",
                  "description desc",
                  "displayName",
                  "displayName desc",
                  "roleTemplateId",
                  "roleTemplateId desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "description",
                  "displayName",
                  "roleTemplateId",
                  "members"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "members"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of directoryRole",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.directoryRole"
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n  \"description\": \"description-value\",\r\n  \"displayName\": \"displayName-value\",\r\n  \"roleTemplateId\": \"roleTemplateId-value\",\r\n  \"id\": \"id-value\"\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Directory.Read.All",
              "Directory.ReadWrite.All",
              "Directory.AccessAsUser.All"
            ]
          },
          {
            "Application": [
              "Directory.Read.All",
              "Directory.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "directoryRoles.directoryRole"
        ],
        "summary": "Add new entity to directoryRoles",
        "operationId": "directoryRoles.directoryRole.CreateDirectoryRole",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.directoryRole"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryRole"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/directoryRoles/{directoryRole-id}": {
      "get": {
        "tags": [
          "directoryRoles.directoryRole"
        ],
        "summary": "Get entity from directoryRoles by key",
        "operationId": "directoryRoles.directoryRole.GetDirectoryRole",
        "parameters": [
          {
            "name": "directoryRole-id",
            "in": "path",
            "description": "key: directoryRole-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "directoryRole"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "description",
                  "displayName",
                  "roleTemplateId",
                  "members"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "members"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryRole"
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n  \"description\": \"description-value\",\r\n  \"displayName\": \"displayName-value\",\r\n  \"roleTemplateId\": \"roleTemplateId-value\",\r\n  \"id\": \"id-value\"\r\n}\n"
                  }
                }
              }
            },
            "links": {
              "members": {
                "operationId": "directoryRoles.directoryRole.GetDirectoryRole",
                "parameters": {
                  "id": "$request.path.id"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Directory.Read.All",
              "Directory.ReadWrite.All",
              "Directory.AccessAsUser.All"
            ]
          },
          {
            "Application": [
              "Directory.Read.All",
              "Directory.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "directoryRoles.directoryRole"
        ],
        "summary": "Update entity in directoryRoles",
        "operationId": "directoryRoles.directoryRole.UpdateDirectoryRole",
        "parameters": [
          {
            "name": "directoryRole-id",
            "in": "path",
            "description": "key: directoryRole-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "directoryRole"
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.directoryRole"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "directoryRoles.directoryRole"
        ],
        "summary": "Delete entity from directoryRoles",
        "operationId": "directoryRoles.directoryRole.DeleteDirectoryRole",
        "parameters": [
          {
            "name": "directoryRole-id",
            "in": "path",
            "description": "key: directoryRole-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "directoryRole"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/directoryRoles/{directoryRole-id}/members": {
      "get": {
        "tags": [
          "directoryRoles.directoryObject"
        ],
        "summary": "Get members from directoryRoles",
        "operationId": "directoryRoles.ListMembers",
        "parameters": [
          {
            "name": "directoryRole-id",
            "in": "path",
            "description": "key: directoryRole-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "directoryRole"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/directoryRoles/{directoryRole-id}/members/{directoryObject-id}": {
      "get": {
        "tags": [
          "directoryRoles.directoryObject"
        ],
        "summary": "Get members from directoryRoles",
        "operationId": "directoryRoles.GetMembers",
        "parameters": [
          {
            "name": "directoryRole-id",
            "in": "path",
            "description": "key: directoryRole-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "directoryRole"
          },
          {
            "name": "directoryObject-id",
            "in": "path",
            "description": "key: directoryObject-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "directoryObject"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/directoryRoleTemplates": {
      "get": {
        "tags": [
          "directoryRoleTemplates.directoryRoleTemplate"
        ],
        "summary": "Get entities from directoryRoleTemplates",
        "operationId": "directoryRoleTemplates.directoryRoleTemplate.ListDirectoryRoleTemplate",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "description",
                  "description desc",
                  "displayName",
                  "displayName desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "description",
                  "displayName"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of directoryRoleTemplate",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.directoryRoleTemplate"
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n  \"description\": \"description-value\",\r\n  \"displayName\": \"displayName-value\",\r\n  \"id\": \"id-value\"\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Directory.Read.All",
              "Directory.ReadWrite.All",
              "Directory.AccessAsUser.All"
            ]
          },
          {
            "Application": [
              "Directory.Read.All",
              "Directory.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "directoryRoleTemplates.directoryRoleTemplate"
        ],
        "summary": "Add new entity to directoryRoleTemplates",
        "operationId": "directoryRoleTemplates.directoryRoleTemplate.CreateDirectoryRoleTemplate",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.directoryRoleTemplate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryRoleTemplate"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/directoryRoleTemplates/{directoryRoleTemplate-id}": {
      "get": {
        "tags": [
          "directoryRoleTemplates.directoryRoleTemplate"
        ],
        "summary": "Get entity from directoryRoleTemplates by key",
        "operationId": "directoryRoleTemplates.directoryRoleTemplate.GetDirectoryRoleTemplate",
        "parameters": [
          {
            "name": "directoryRoleTemplate-id",
            "in": "path",
            "description": "key: directoryRoleTemplate-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "directoryRoleTemplate"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "description",
                  "displayName"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryRoleTemplate"
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n  \"description\": \"description-value\",\r\n  \"displayName\": \"displayName-value\",\r\n  \"id\": \"id-value\"\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Directory.Read.All",
              "Directory.ReadWrite.All",
              "Directory.AccessAsUser.All"
            ]
          },
          {
            "Application": [
              "Directory.Read.All",
              "Directory.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "directoryRoleTemplates.directoryRoleTemplate"
        ],
        "summary": "Update entity in directoryRoleTemplates",
        "operationId": "directoryRoleTemplates.directoryRoleTemplate.UpdateDirectoryRoleTemplate",
        "parameters": [
          {
            "name": "directoryRoleTemplate-id",
            "in": "path",
            "description": "key: directoryRoleTemplate-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "directoryRoleTemplate"
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.directoryRoleTemplate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "directoryRoleTemplates.directoryRoleTemplate"
        ],
        "summary": "Delete entity from directoryRoleTemplates",
        "operationId": "directoryRoleTemplates.directoryRoleTemplate.DeleteDirectoryRoleTemplate",
        "parameters": [
          {
            "name": "directoryRoleTemplate-id",
            "in": "path",
            "description": "key: directoryRoleTemplate-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "directoryRoleTemplate"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/domains": {
      "get": {
        "tags": [
          "domains.domain"
        ],
        "summary": "Get entities from domains",
        "operationId": "domains.domain.ListDomain",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "application/json",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "authenticationType",
                  "authenticationType desc",
                  "availabilityStatus",
                  "availabilityStatus desc",
                  "isAdminManaged",
                  "isAdminManaged desc",
                  "isDefault",
                  "isDefault desc",
                  "isInitial",
                  "isInitial desc",
                  "isRoot",
                  "isRoot desc",
                  "isVerified",
                  "isVerified desc",
                  "state",
                  "state desc",
                  "supportedServices",
                  "supportedServices desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "authenticationType",
                  "availabilityStatus",
                  "isAdminManaged",
                  "isDefault",
                  "isInitial",
                  "isRoot",
                  "isVerified",
                  "state",
                  "supportedServices",
                  "domainNameReferences",
                  "serviceConfigurationRecords",
                  "verificationDnsRecords"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "domainNameReferences",
                  "serviceConfigurationRecords",
                  "verificationDnsRecords"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of domain",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.domain"
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n  \"authenticationType\": \"authenticationType-value\",\r\n  \"availabilityStatus\": \"availabilityStatus-value\",\r\n  \"id\": \"contoso.com\",\r\n  \"isAdminManaged\": true,\r\n  \"isDefault\": true,\r\n  \"isInitial\": true,\r\n  \"isRoot\": true\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Directory.Read.All"
            ]
          },
          {
            "Application": [
              "Directory.Read.All",
              "Domain.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "domains.domain"
        ],
        "summary": "Add new entity to domains",
        "operationId": "domains.domain.CreateDomain",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.domain"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.domain"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/domains/{domain-id}": {
      "get": {
        "tags": [
          "domains.domain"
        ],
        "summary": "Get entity from domains by key",
        "operationId": "domains.domain.GetDomain",
        "parameters": [
          {
            "name": "domain-id",
            "in": "path",
            "description": "key: domain-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "domain"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "application/json",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "authenticationType",
                  "availabilityStatus",
                  "isAdminManaged",
                  "isDefault",
                  "isInitial",
                  "isRoot",
                  "isVerified",
                  "state",
                  "supportedServices",
                  "domainNameReferences",
                  "serviceConfigurationRecords",
                  "verificationDnsRecords"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "domainNameReferences",
                  "serviceConfigurationRecords",
                  "verificationDnsRecords"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.domain"
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n  \"authenticationType\": \"authenticationType-value\",\r\n  \"availabilityStatus\": \"availabilityStatus-value\",\r\n  \"id\": \"contoso.com\",\r\n  \"isAdminManaged\": true,\r\n  \"isDefault\": true,\r\n  \"isInitial\": true,\r\n  \"isRoot\": true\r\n}\n"
                  }
                }
              }
            },
            "links": {
              "domainNameReferences": {
                "operationId": "domains.domain.GetDomain",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "serviceConfigurationRecords": {
                "operationId": "domains.domain.GetDomain",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "verificationDnsRecords": {
                "operationId": "domains.domain.GetDomain",
                "parameters": {
                  "id": "$request.path.id"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Directory.Read.All"
            ]
          },
          {
            "Application": [
              "Directory.Read.All",
              "Domain.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "domains.domain"
        ],
        "summary": "Update entity in domains",
        "operationId": "domains.domain.UpdateDomain",
        "parameters": [
          {
            "name": "domain-id",
            "in": "path",
            "description": "key: domain-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "domain"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.domain"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Directory.AccessAsUser.All"
            ]
          },
          {
            "Application": [
              "Domain.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "domains.domain"
        ],
        "summary": "Delete entity from domains",
        "operationId": "domains.domain.DeleteDomain",
        "parameters": [
          {
            "name": "domain-id",
            "in": "path",
            "description": "key: domain-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "domain"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "application/json",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Directory.AccessAsUser.All"
            ]
          },
          {
            "Application": [
              "Domain.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/domains/{domain-id}/domainNameReferences": {
      "get": {
        "tags": [
          "domains.directoryObject"
        ],
        "summary": "Get domainNameReferences from domains",
        "operationId": "domains.ListDomainNameReferences",
        "parameters": [
          {
            "name": "domain-id",
            "in": "path",
            "description": "key: domain-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "domain"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/domains/{domain-id}/domainNameReferences/{directoryObject-id}": {
      "get": {
        "tags": [
          "domains.directoryObject"
        ],
        "summary": "Get domainNameReferences from domains",
        "operationId": "domains.GetDomainNameReferences",
        "parameters": [
          {
            "name": "domain-id",
            "in": "path",
            "description": "key: domain-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "domain"
          },
          {
            "name": "directoryObject-id",
            "in": "path",
            "description": "key: directoryObject-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "directoryObject"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/domains/{domain-id}/verify": {
      "post": {
        "tags": [
          "domains.Actions"
        ],
        "summary": "Invoke action verify",
        "operationId": "domains.verify",
        "parameters": [
          {
            "name": "domain-id",
            "in": "path",
            "description": "key: domain-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "domain"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.domain"
                    }
                  ],
                  "nullable": true
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n  \"authenticationType\": \"authenticationType-value\",\r\n  \"availabilityStatus\": \"availabilityStatus-value\",\r\n  \"isAdminManaged\": true,\r\n  \"isDefault\": true,\r\n  \"isInitial\": true,\r\n  \"isRoot\": true,\r\n  \"id\": \"contoso.com\"\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Directory.Read.All"
            ]
          },
          {
            "Application": [
              "Directory.Read.All",
              "Domain.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      }
    },
    "/domains/{domain-id}/serviceConfigurationRecords": {
      "get": {
        "tags": [
          "domains.domainDnsRecord"
        ],
        "summary": "Get serviceConfigurationRecords from domains",
        "operationId": "domains.ListServiceConfigurationRecords",
        "parameters": [
          {
            "name": "domain-id",
            "in": "path",
            "description": "key: domain-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "domain"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "isOptional",
                  "isOptional desc",
                  "label",
                  "label desc",
                  "recordType",
                  "recordType desc",
                  "supportedService",
                  "supportedService desc",
                  "ttl",
                  "ttl desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "isOptional",
                  "label",
                  "recordType",
                  "supportedService",
                  "ttl"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.domainDnsRecord"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/domains/{domain-id}/serviceConfigurationRecords/{domainDnsRecord-id}": {
      "get": {
        "tags": [
          "domains.domainDnsRecord"
        ],
        "summary": "Get serviceConfigurationRecords from domains",
        "operationId": "domains.GetServiceConfigurationRecords",
        "parameters": [
          {
            "name": "domain-id",
            "in": "path",
            "description": "key: domain-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "domain"
          },
          {
            "name": "domainDnsRecord-id",
            "in": "path",
            "description": "key: domainDnsRecord-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "domainDnsRecord"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "isOptional",
                  "label",
                  "recordType",
                  "supportedService",
                  "ttl"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.domainDnsRecord"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/domains/{domain-id}/verificationDnsRecords": {
      "get": {
        "tags": [
          "domains.domainDnsRecord"
        ],
        "summary": "Get verificationDnsRecords from domains",
        "operationId": "domains.ListVerificationDnsRecords",
        "parameters": [
          {
            "name": "domain-id",
            "in": "path",
            "description": "key: domain-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "domain"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "isOptional",
                  "isOptional desc",
                  "label",
                  "label desc",
                  "recordType",
                  "recordType desc",
                  "supportedService",
                  "supportedService desc",
                  "ttl",
                  "ttl desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "isOptional",
                  "label",
                  "recordType",
                  "supportedService",
                  "ttl"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.domainDnsRecord"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/domains/{domain-id}/verificationDnsRecords/{domainDnsRecord-id}": {
      "get": {
        "tags": [
          "domains.domainDnsRecord"
        ],
        "summary": "Get verificationDnsRecords from domains",
        "operationId": "domains.GetVerificationDnsRecords",
        "parameters": [
          {
            "name": "domain-id",
            "in": "path",
            "description": "key: domain-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "domain"
          },
          {
            "name": "domainDnsRecord-id",
            "in": "path",
            "description": "key: domainDnsRecord-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "domainDnsRecord"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "isOptional",
                  "label",
                  "recordType",
                  "supportedService",
                  "ttl"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.domainDnsRecord"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/drives": {
      "get": {
        "tags": [
          "drives.drive"
        ],
        "summary": "Get entities from drives",
        "operationId": "drives.drive.ListDrive",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "createdBy",
                  "createdBy desc",
                  "createdDateTime",
                  "createdDateTime desc",
                  "description",
                  "description desc",
                  "eTag",
                  "eTag desc",
                  "lastModifiedBy",
                  "lastModifiedBy desc",
                  "lastModifiedDateTime",
                  "lastModifiedDateTime desc",
                  "name",
                  "name desc",
                  "parentReference",
                  "parentReference desc",
                  "webUrl",
                  "webUrl desc",
                  "driveType",
                  "driveType desc",
                  "owner",
                  "owner desc",
                  "quota",
                  "quota desc",
                  "sharepointIds",
                  "sharepointIds desc",
                  "system",
                  "system desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "driveType",
                  "owner",
                  "quota",
                  "sharepointIds",
                  "system",
                  "createdByUser",
                  "lastModifiedByUser",
                  "items",
                  "root",
                  "special",
                  "list"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "items",
                  "root",
                  "special",
                  "list"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of drive",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.drive"
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "drives.drive"
        ],
        "summary": "Add new entity to drives",
        "operationId": "drives.drive.CreateDrive",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.drive"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.drive"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/drives/{drive-id}": {
      "get": {
        "tags": [
          "drives.drive"
        ],
        "summary": "Get entity from drives by key",
        "operationId": "drives.drive.GetDrive",
        "parameters": [
          {
            "name": "drive-id",
            "in": "path",
            "description": "key: drive-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "drive"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "driveType",
                  "owner",
                  "quota",
                  "sharepointIds",
                  "system",
                  "createdByUser",
                  "lastModifiedByUser",
                  "items",
                  "root",
                  "special",
                  "list"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "items",
                  "root",
                  "special",
                  "list"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.drive"
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n}\n"
                  }
                }
              }
            },
            "links": {
              "items": {
                "operationId": "drives.drive.GetDrive",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "root": {
                "operationId": "drives.drive.GetDrive",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "special": {
                "operationId": "drives.drive.GetDrive",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "list": {
                "operationId": "drives.drive.GetDrive",
                "parameters": {
                  "id": "$request.path.id"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "drives.drive"
        ],
        "summary": "Update entity in drives",
        "operationId": "drives.drive.UpdateDrive",
        "parameters": [
          {
            "name": "drive-id",
            "in": "path",
            "description": "key: drive-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "drive"
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.drive"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "drives.drive"
        ],
        "summary": "Delete entity from drives",
        "operationId": "drives.drive.DeleteDrive",
        "parameters": [
          {
            "name": "drive-id",
            "in": "path",
            "description": "key: drive-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "drive"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/drives/{drive-id}/items": {
      "get": {
        "tags": [
          "drives.driveItem"
        ],
        "summary": "Get items from drives",
        "operationId": "drives.ListItems",
        "parameters": [
          {
            "name": "drive-id",
            "in": "path",
            "description": "key: drive-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "drive"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "createdBy",
                  "createdBy desc",
                  "createdDateTime",
                  "createdDateTime desc",
                  "description",
                  "description desc",
                  "eTag",
                  "eTag desc",
                  "lastModifiedBy",
                  "lastModifiedBy desc",
                  "lastModifiedDateTime",
                  "lastModifiedDateTime desc",
                  "name",
                  "name desc",
                  "parentReference",
                  "parentReference desc",
                  "webUrl",
                  "webUrl desc",
                  "audio",
                  "audio desc",
                  "content",
                  "content desc",
                  "cTag",
                  "cTag desc",
                  "deleted",
                  "deleted desc",
                  "file",
                  "file desc",
                  "fileSystemInfo",
                  "fileSystemInfo desc",
                  "folder",
                  "folder desc",
                  "image",
                  "image desc",
                  "location",
                  "location desc",
                  "package",
                  "package desc",
                  "photo",
                  "photo desc",
                  "publication",
                  "publication desc",
                  "remoteItem",
                  "remoteItem desc",
                  "root",
                  "root desc",
                  "searchResult",
                  "searchResult desc",
                  "shared",
                  "shared desc",
                  "sharepointIds",
                  "sharepointIds desc",
                  "size",
                  "size desc",
                  "specialFolder",
                  "specialFolder desc",
                  "video",
                  "video desc",
                  "webDavUrl",
                  "webDavUrl desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "audio",
                  "content",
                  "cTag",
                  "deleted",
                  "file",
                  "fileSystemInfo",
                  "folder",
                  "image",
                  "location",
                  "package",
                  "photo",
                  "publication",
                  "remoteItem",
                  "root",
                  "searchResult",
                  "shared",
                  "sharepointIds",
                  "size",
                  "specialFolder",
                  "video",
                  "webDavUrl",
                  "createdByUser",
                  "lastModifiedByUser",
                  "children",
                  "permissions",
                  "thumbnails",
                  "versions",
                  "listItem",
                  "workbook"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "children",
                  "permissions",
                  "thumbnails",
                  "versions",
                  "listItem",
                  "workbook"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.driveItem"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/drives/{drive-id}/items/{driveItem-id}": {
      "get": {
        "tags": [
          "drives.driveItem"
        ],
        "summary": "Get items from drives",
        "operationId": "drives.GetItems",
        "parameters": [
          {
            "name": "drive-id",
            "in": "path",
            "description": "key: drive-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "drive"
          },
          {
            "name": "driveItem-id",
            "in": "path",
            "description": "key: driveItem-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "driveItem"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "audio",
                  "content",
                  "cTag",
                  "deleted",
                  "file",
                  "fileSystemInfo",
                  "folder",
                  "image",
                  "location",
                  "package",
                  "photo",
                  "publication",
                  "remoteItem",
                  "root",
                  "searchResult",
                  "shared",
                  "sharepointIds",
                  "size",
                  "specialFolder",
                  "video",
                  "webDavUrl",
                  "createdByUser",
                  "lastModifiedByUser",
                  "children",
                  "permissions",
                  "thumbnails",
                  "versions",
                  "listItem",
                  "workbook"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "children",
                  "permissions",
                  "thumbnails",
                  "versions",
                  "listItem",
                  "workbook"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.driveItem"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/drives/{drive-id}/items/{driveItem-id}/copy": {
      "post": {
        "tags": [
          "drives.Actions"
        ],
        "summary": "Returns details about how to [monitor the progress](../../../concepts/long_running_actions_overview.md) of the copy, upon accepting the request.",
        "operationId": "drives.items.copy",
        "parameters": [
          {
            "name": "drive-id",
            "in": "path",
            "description": "key: drive-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "drive"
          },
          {
            "name": "driveItem-id",
            "in": "path",
            "description": "key: driveItem-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "driveItem"
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "parentReference": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.itemReference"
                      }
                    ],
                    "nullable": true
                  },
                  "name": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/drives/{drive-id}/root/copy",
        "/drives/{drive-id}/special/{driveItem-id}/copy"
      ]
    },
    "/drives/{drive-id}/items/{driveItem-id}/createLink": {
      "post": {
        "tags": [
          "drives.Actions"
        ],
        "summary": "The following example requests a sharing link to be created for the DriveItem specified by {itemId} in the user's OneDrive.\r\nThe sharing link is configured to be read-only and usable by anyone with the link.",
        "operationId": "drives.items.createLink",
        "parameters": [
          {
            "name": "drive-id",
            "in": "path",
            "description": "key: drive-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "drive"
          },
          {
            "name": "driveItem-id",
            "in": "path",
            "description": "key: driveItem-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "driveItem"
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "nullable": true
                  },
                  "scope": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.permission"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/drives/{drive-id}/root/createLink",
        "/drives/{drive-id}/special/{driveItem-id}/createLink"
      ]
    },
    "/drives/{drive-id}/items/{driveItem-id}/createUploadSession": {
      "post": {
        "tags": [
          "drives.Actions"
        ],
        "summary": "Invoke action createUploadSession",
        "operationId": "drives.items.createUploadSession",
        "parameters": [
          {
            "name": "drive-id",
            "in": "path",
            "description": "key: drive-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "drive"
          },
          {
            "name": "driveItem-id",
            "in": "path",
            "description": "key: driveItem-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "driveItem"
          },
          {
            "name": "if-match",
            "in": "header",
            "description": "If this request header is included and the eTag (or cTag) provided does not match the current etag on the item, a 412 Precondition Failed error response is returned.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "item": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.driveItemUploadableProperties"
                      }
                    ],
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.uploadSession"
                    }
                  ],
                  "nullable": true
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n  \"uploadUrl\": \"https://sn3302.up.1drv.com/up/fe6987415ace7X4e1eF866337\",\r\n  \"expirationDateTime\": \"2015-01-29T09:21:55.523Z\"\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/drives/{drive-id}/root/createUploadSession",
        "/drives/{drive-id}/special/{driveItem-id}/createUploadSession"
      ]
    },
    "/drives/{drive-id}/items/{driveItem-id}/delta()": {
      "get": {
        "tags": [
          "drives.Functions"
        ],
        "summary": "Here is an example of how to call this API to establish your local state.",
        "operationId": "drives.items.delta.2209",
        "parameters": [
          {
            "name": "drive-id",
            "in": "path",
            "description": "key: drive-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "drive"
          },
          {
            "name": "driveItem-id",
            "in": "path",
            "description": "key: driveItem-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "driveItem"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.driveItem"
                      }
                    ],
                    "nullable": true
                  }
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n    \"value\": [\r\n        {\r\n            \"id\": \"0123456789abc\",\r\n            \"name\": \"folder2\",\r\n            \"folder\": { }\r\n        },\r\n        {\r\n            \"id\": \"123010204abac\",\r\n            \"name\": \"file.txt\",\r\n            \"file\": { }\r\n        },\r\n        {\r\n            \"id\": \"2353010204ddgg\",\r\n            \"name\": \"file5.txt\",\r\n            \"deleted\": { }\r\n        }\r\n    ],\r\n    \"@odata.nextLink\": \"https://graph.microsoft.com/v1.0/me/drive/delta(token=1230919asd190410jlka)\"\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.Read",
              "Files.ReadWrite",
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.Read",
              "Files.ReadWrite",
              "Files.Read.All",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/drives/{drive-id}/items/{driveItem-id}/delta(token={token})",
        "/drives/{drive-id}/root/delta()",
        "/drives/{drive-id}/root/delta(token={token})",
        "/drives/{drive-id}/special/{driveItem-id}/delta()",
        "/drives/{drive-id}/special/{driveItem-id}/delta(token={token})"
      ]
    },
    "/drives/{drive-id}/items/{driveItem-id}/delta(token={token})": {
      "get": {
        "tags": [
          "drives.Functions"
        ],
        "summary": "Here is an example of how to call this API to update your local state.",
        "operationId": "drives.items.delta.cf70",
        "parameters": [
          {
            "name": "drive-id",
            "in": "path",
            "description": "key: drive-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "drive"
          },
          {
            "name": "driveItem-id",
            "in": "path",
            "description": "key: driveItem-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "driveItem"
          },
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.driveItem"
                      }
                    ],
                    "nullable": true
                  }
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n    \"value\": [\r\n        {\r\n            \"id\": \"0123456789abc\",\r\n            \"name\": \"folder2\",\r\n            \"folder\": { },\r\n            \"deleted\": { }\r\n        },\r\n        {\r\n            \"id\": \"123010204abac\",\r\n            \"name\": \"file.txt\",\r\n            \"file\": { }\r\n        }\r\n    ],\r\n    \"@odata.deltaLink\": \"https://graph.microsoft.com/v1.0/me/drive/root/delta?(token='1230919asd190410jlka')\"\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.Read",
              "Files.ReadWrite",
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.Read",
              "Files.ReadWrite",
              "Files.Read.All",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/drives/{drive-id}/items/{driveItem-id}/delta()",
        "/drives/{drive-id}/root/delta()",
        "/drives/{drive-id}/root/delta(token={token})",
        "/drives/{drive-id}/special/{driveItem-id}/delta()",
        "/drives/{drive-id}/special/{driveItem-id}/delta(token={token})"
      ]
    },
    "/drives/{drive-id}/items/{driveItem-id}/invite": {
      "post": {
        "tags": [
          "drives.Actions"
        ],
        "summary": "This example sends a sharing invitation to a user with email address 'ryan@contoso.com' with a message about a file being collaborated on.\r\nThe invitation grants Ryan read-write access to the file.",
        "operationId": "drives.items.invite",
        "parameters": [
          {
            "name": "drive-id",
            "in": "path",
            "description": "key: drive-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "drive"
          },
          {
            "name": "driveItem-id",
            "in": "path",
            "description": "key: driveItem-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "driveItem"
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "recipients": {
                    "type": "array",
                    "items": {
                      "anyOf": [
                        {
                          "$ref": "#/components/schemas/microsoft.graph.driveRecipient"
                        }
                      ],
                      "nullable": true
                    }
                  },
                  "message": {
                    "type": "string",
                    "nullable": true
                  },
                  "requireSignIn": {
                    "type": "boolean",
                    "default": false,
                    "nullable": true
                  },
                  "sendInvitation": {
                    "type": "boolean",
                    "default": false,
                    "nullable": true
                  },
                  "roles": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.permission"
                      }
                    ],
                    "nullable": true
                  }
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n  \"value\": [\r\n    {\r\n      \"grantedTo\": {\r\n        \"user\": {\r\n          \"displayName\": \"Ryan Gregg\",\r\n          \"id\": \"42F177F1-22C0-4BE3-900D-4507125C5C20\"\r\n        }\r\n      },\r\n      \"id\": \"CCFC7CA3-7A19-4D57-8CEF-149DB9DDFA62\",\r\n      \"invitation\": {\r\n        \"email\": \"ryan@contoso.com\",\r\n        \"signInRequired\": true\r\n      },\r\n      \"roles\": [ \"write\" ]\r\n    }\r\n  ]\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/drives/{drive-id}/root/invite",
        "/drives/{drive-id}/special/{driveItem-id}/invite"
      ]
    },
    "/drives/{drive-id}/items/{driveItem-id}/search(q={q})": {
      "get": {
        "tags": [
          "drives.Functions"
        ],
        "summary": "Invoke function search",
        "operationId": "drives.items.search.f2b1",
        "parameters": [
          {
            "name": "drive-id",
            "in": "path",
            "description": "key: drive-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "drive"
          },
          {
            "name": "driveItem-id",
            "in": "path",
            "description": "key: driveItem-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "driveItem"
          },
          {
            "name": "q",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.driveItem"
                      }
                    ],
                    "nullable": true
                  }
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n    \"value\": [\r\n      {\r\n        \"id\": \"0123456789abc!123\",\r\n        \"name\": \"Contoso Project\",\r\n        \"folder\": {},\r\n        \"searchResult\": { \"onClickTelemetryUrl\": \"https://bing.com/0123456789abc!123\" }\r\n      },\r\n      {\r\n        \"id\": \"0123456789abc!456\",\r\n        \"name\": \"Contoso Project 2016\",\r\n        \"folder\": {},\r\n        \"searchResult\": { \"onClickTelemetryUrl\": \"https://bing.com/0123456789abc!456\" }\r\n      }\r\n    ],\r\n    \"@odata.nextLink\": \"https://graph.microsoft.com/v1.0/me/drive/root/search(query='contoso project')&skipToken=1asdlnjnkj1nalkm!asd\"\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.Read",
              "Files.ReadWrite",
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.Read",
              "Files.ReadWrite",
              "Files.Read.All",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/drives/{drive-id}/search(q={q})",
        "/drives/{drive-id}/root/search(q={q})",
        "/drives/{drive-id}/special/{driveItem-id}/search(q={q})"
      ]
    },
    "/drives/{drive-id}/list": {
      "get": {
        "tags": [
          "drives.list"
        ],
        "summary": "Get list from drives",
        "operationId": "drives.GetList",
        "parameters": [
          {
            "name": "drive-id",
            "in": "path",
            "description": "key: drive-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "drive"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "displayName",
                  "list",
                  "system",
                  "sharepointIds",
                  "createdByUser",
                  "lastModifiedByUser",
                  "columns",
                  "contentTypes",
                  "drive",
                  "items"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "columns",
                  "contentTypes",
                  "drive",
                  "items"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.list"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/drives/{drive-id}/recent()": {
      "get": {
        "tags": [
          "drives.Functions"
        ],
        "summary": "This method returns a collection of [DriveItem](../resources/driveitem.md) resources for items which the owner of the drive has recently accessed.",
        "operationId": "drives.recent.f75f",
        "parameters": [
          {
            "name": "drive-id",
            "in": "path",
            "description": "key: drive-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "drive"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.driveItem"
                      }
                    ],
                    "nullable": true
                  }
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n  \"value\": [\r\n    {\r\n      \"id\": \"1312abc!1231\",\r\n      \"remoteItem\":\r\n      {\r\n        \"id\": \"1991210caf!192\",\r\n        \"name\": \"March Proposal.docx\",\r\n        \"file\": { },\r\n        \"size\": 19121,\r\n        \"parentReference\": {\r\n          \"driveId\": \"1991210caf\",\r\n          \"id\": \"1991210caf!104\"\r\n        }\r\n      },\r\n      \"fileSystemInfo\": {\r\n        \"lastAccessedDateTime\": \"2017-02-20T19:13:00Z\"\r\n      }\r\n    },\r\n    {\r\n      \"id\": \"1312def!9943\",\r\n      \"name\": \"Vacation.jpg\",\r\n      \"file\": { },\r\n      \"size\": 37810,\r\n      \"parentReference\": {\r\n        \"driveId\": \"1312def\",\r\n        \"id\": \"1312def!123\"\r\n      },\r\n      \"fileSystemInfo\": {\r\n        \"lastAccessedDateTime\": \"2017-02-20T16:43:21Z\"\r\n      }\r\n    }\r\n  ]\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.Read",
              "Files.ReadWrite",
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.Read",
              "Files.ReadWrite",
              "Files.Read.All",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/drives/{drive-id}/search(q={q})": {
      "get": {
        "tags": [
          "drives.Functions"
        ],
        "summary": "In addition to searching for items within a drive, your app can search more broadly to include items shared with the current user.\r\nTo broaden the search scope, use the **search** method on the [Drive](../resources/drive.md) resource.",
        "operationId": "drives.search.f2b1",
        "parameters": [
          {
            "name": "drive-id",
            "in": "path",
            "description": "key: drive-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "drive"
          },
          {
            "name": "q",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.driveItem"
                      }
                    ],
                    "nullable": true
                  }
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n    \"value\": [\r\n      {\r\n        \"id\": \"0123456789abc!123\",\r\n        \"name\": \"Contoso Project\",\r\n        \"folder\": {},\r\n        \"searchResult\": { \"onClickTelemetryUrl\": \"https://bing.com/0123456789abc!123\" },\r\n        \"remoteItem\": { \"id\": \"!23141901\", \"parentReference\": { \"driveId\": \"s!1020101jlkjl12lx\" } }\r\n      },\r\n      {\r\n        \"id\": \"0123456789abc!456\",\r\n        \"name\": \"Contoso Project 2016\",\r\n        \"folder\": {},\r\n        \"searchResult\": { \"onClickTelemetryUrl\": \"https://bing.com/0123456789abc!456\" }\r\n      }\r\n    ],\r\n    \"@odata.nextLink\": \"https://graph.microsoft.com/v1.0/me/drive/root/search(query='contoso project')&skipToken=1asdlnjnkj1nalkm!asd\"\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.Read",
              "Files.ReadWrite",
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.Read",
              "Files.ReadWrite",
              "Files.Read.All",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/drives/{drive-id}/items/{driveItem-id}/search(q={q})",
        "/drives/{drive-id}/root/search(q={q})",
        "/drives/{drive-id}/special/{driveItem-id}/search(q={q})"
      ]
    },
    "/drives/{drive-id}/sharedWithMe()": {
      "get": {
        "tags": [
          "drives.Functions"
        ],
        "summary": "This returns a collection of [DriveItem](../resources/driveitem.md) resources which contain the DriveItem resources shared with the owner of the drive.\r\nIn this example, since the drive is the user's default drive, this returns items shared with the signed in user.",
        "operationId": "drives.sharedWithMe.29d5",
        "parameters": [
          {
            "name": "drive-id",
            "in": "path",
            "description": "key: drive-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "drive"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.driveItem"
                      }
                    ],
                    "nullable": true
                  }
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n  \"value\": [\r\n    {\r\n      \"id\": \"1312abc\",\r\n      \"remoteItem\": {\r\n        \"id\": \"1991210caf!192\",\r\n        \"name\": \"March Proposal.docx\",\r\n        \"file\": { },\r\n        \"size\": 19121,\r\n        \"parentReference\": {\r\n          \"driveId\": \"1991210caf\",\r\n          \"id\": \"1991210caf!104\"\r\n        }\r\n      }\r\n    },\r\n    {\r\n      \"id\": \"1312def\",\r\n      \"remoteItem\": {\r\n        \"id\": \"1991210caf!1991\",\r\n        \"name\": \"Team Roster.xlsx\",\r\n        \"file\": { },\r\n        \"size\": 37619,\r\n        \"parentReference\": {\r\n          \"driveId\": \"1991210caf\",\r\n          \"id\": \"1991210caf!104\"\r\n        }\r\n      }\r\n    }\r\n  ]\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.Read.All",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/drives/{drive-id}/root": {
      "get": {
        "tags": [
          "drives.driveItem"
        ],
        "summary": "Get root from drives",
        "operationId": "drives.GetRoot",
        "parameters": [
          {
            "name": "drive-id",
            "in": "path",
            "description": "key: drive-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "drive"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "audio",
                  "content",
                  "cTag",
                  "deleted",
                  "file",
                  "fileSystemInfo",
                  "folder",
                  "image",
                  "location",
                  "package",
                  "photo",
                  "publication",
                  "remoteItem",
                  "root",
                  "searchResult",
                  "shared",
                  "sharepointIds",
                  "size",
                  "specialFolder",
                  "video",
                  "webDavUrl",
                  "createdByUser",
                  "lastModifiedByUser",
                  "children",
                  "permissions",
                  "thumbnails",
                  "versions",
                  "listItem",
                  "workbook"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "children",
                  "permissions",
                  "thumbnails",
                  "versions",
                  "listItem",
                  "workbook"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.driveItem"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/drives/{drive-id}/root/copy": {
      "post": {
        "tags": [
          "drives.Actions"
        ],
        "summary": "Returns details about how to [monitor the progress](../../../concepts/long_running_actions_overview.md) of the copy, upon accepting the request.",
        "operationId": "drives.root.copy",
        "parameters": [
          {
            "name": "drive-id",
            "in": "path",
            "description": "key: drive-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "drive"
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "parentReference": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.itemReference"
                      }
                    ],
                    "nullable": true
                  },
                  "name": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/drives/{drive-id}/items/{driveItem-id}/copy",
        "/drives/{drive-id}/special/{driveItem-id}/copy"
      ]
    },
    "/drives/{drive-id}/root/createLink": {
      "post": {
        "tags": [
          "drives.Actions"
        ],
        "summary": "The following example requests a sharing link to be created for the DriveItem specified by {itemId} in the user's OneDrive.\r\nThe sharing link is configured to be read-only and usable by anyone with the link.",
        "operationId": "drives.root.createLink",
        "parameters": [
          {
            "name": "drive-id",
            "in": "path",
            "description": "key: drive-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "drive"
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "nullable": true
                  },
                  "scope": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.permission"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/drives/{drive-id}/items/{driveItem-id}/createLink",
        "/drives/{drive-id}/special/{driveItem-id}/createLink"
      ]
    },
    "/drives/{drive-id}/root/createUploadSession": {
      "post": {
        "tags": [
          "drives.Actions"
        ],
        "summary": "Invoke action createUploadSession",
        "operationId": "drives.root.createUploadSession",
        "parameters": [
          {
            "name": "drive-id",
            "in": "path",
            "description": "key: drive-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "drive"
          },
          {
            "name": "if-match",
            "in": "header",
            "description": "If this request header is included and the eTag (or cTag) provided does not match the current etag on the item, a 412 Precondition Failed error response is returned.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "item": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.driveItemUploadableProperties"
                      }
                    ],
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.uploadSession"
                    }
                  ],
                  "nullable": true
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n  \"uploadUrl\": \"https://sn3302.up.1drv.com/up/fe6987415ace7X4e1eF866337\",\r\n  \"expirationDateTime\": \"2015-01-29T09:21:55.523Z\"\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/drives/{drive-id}/items/{driveItem-id}/createUploadSession",
        "/drives/{drive-id}/special/{driveItem-id}/createUploadSession"
      ]
    },
    "/drives/{drive-id}/root/delta()": {
      "get": {
        "tags": [
          "drives.Functions"
        ],
        "summary": "Here is an example of how to call this API to establish your local state.",
        "operationId": "drives.root.delta.2209",
        "parameters": [
          {
            "name": "drive-id",
            "in": "path",
            "description": "key: drive-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "drive"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.driveItem"
                      }
                    ],
                    "nullable": true
                  }
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n    \"value\": [\r\n        {\r\n            \"id\": \"0123456789abc\",\r\n            \"name\": \"folder2\",\r\n            \"folder\": { }\r\n        },\r\n        {\r\n            \"id\": \"123010204abac\",\r\n            \"name\": \"file.txt\",\r\n            \"file\": { }\r\n        },\r\n        {\r\n            \"id\": \"2353010204ddgg\",\r\n            \"name\": \"file5.txt\",\r\n            \"deleted\": { }\r\n        }\r\n    ],\r\n    \"@odata.nextLink\": \"https://graph.microsoft.com/v1.0/me/drive/delta(token=1230919asd190410jlka)\"\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.Read",
              "Files.ReadWrite",
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.Read",
              "Files.ReadWrite",
              "Files.Read.All",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/drives/{drive-id}/items/{driveItem-id}/delta()",
        "/drives/{drive-id}/items/{driveItem-id}/delta(token={token})",
        "/drives/{drive-id}/root/delta(token={token})",
        "/drives/{drive-id}/special/{driveItem-id}/delta()",
        "/drives/{drive-id}/special/{driveItem-id}/delta(token={token})"
      ]
    },
    "/drives/{drive-id}/root/delta(token={token})": {
      "get": {
        "tags": [
          "drives.Functions"
        ],
        "summary": "Here is an example of how to call this API to update your local state.",
        "operationId": "drives.root.delta.cf70",
        "parameters": [
          {
            "name": "drive-id",
            "in": "path",
            "description": "key: drive-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "drive"
          },
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.driveItem"
                      }
                    ],
                    "nullable": true
                  }
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n    \"value\": [\r\n        {\r\n            \"id\": \"0123456789abc\",\r\n            \"name\": \"folder2\",\r\n            \"folder\": { },\r\n            \"deleted\": { }\r\n        },\r\n        {\r\n            \"id\": \"123010204abac\",\r\n            \"name\": \"file.txt\",\r\n            \"file\": { }\r\n        }\r\n    ],\r\n    \"@odata.deltaLink\": \"https://graph.microsoft.com/v1.0/me/drive/root/delta?(token='1230919asd190410jlka')\"\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.Read",
              "Files.ReadWrite",
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.Read",
              "Files.ReadWrite",
              "Files.Read.All",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/drives/{drive-id}/items/{driveItem-id}/delta()",
        "/drives/{drive-id}/items/{driveItem-id}/delta(token={token})",
        "/drives/{drive-id}/root/delta()",
        "/drives/{drive-id}/special/{driveItem-id}/delta()",
        "/drives/{drive-id}/special/{driveItem-id}/delta(token={token})"
      ]
    },
    "/drives/{drive-id}/root/invite": {
      "post": {
        "tags": [
          "drives.Actions"
        ],
        "summary": "This example sends a sharing invitation to a user with email address 'ryan@contoso.com' with a message about a file being collaborated on.\r\nThe invitation grants Ryan read-write access to the file.",
        "operationId": "drives.root.invite",
        "parameters": [
          {
            "name": "drive-id",
            "in": "path",
            "description": "key: drive-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "drive"
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "recipients": {
                    "type": "array",
                    "items": {
                      "anyOf": [
                        {
                          "$ref": "#/components/schemas/microsoft.graph.driveRecipient"
                        }
                      ],
                      "nullable": true
                    }
                  },
                  "message": {
                    "type": "string",
                    "nullable": true
                  },
                  "requireSignIn": {
                    "type": "boolean",
                    "default": false,
                    "nullable": true
                  },
                  "sendInvitation": {
                    "type": "boolean",
                    "default": false,
                    "nullable": true
                  },
                  "roles": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.permission"
                      }
                    ],
                    "nullable": true
                  }
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n  \"value\": [\r\n    {\r\n      \"grantedTo\": {\r\n        \"user\": {\r\n          \"displayName\": \"Ryan Gregg\",\r\n          \"id\": \"42F177F1-22C0-4BE3-900D-4507125C5C20\"\r\n        }\r\n      },\r\n      \"id\": \"CCFC7CA3-7A19-4D57-8CEF-149DB9DDFA62\",\r\n      \"invitation\": {\r\n        \"email\": \"ryan@contoso.com\",\r\n        \"signInRequired\": true\r\n      },\r\n      \"roles\": [ \"write\" ]\r\n    }\r\n  ]\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/drives/{drive-id}/items/{driveItem-id}/invite",
        "/drives/{drive-id}/special/{driveItem-id}/invite"
      ]
    },
    "/drives/{drive-id}/root/search(q={q})": {
      "get": {
        "tags": [
          "drives.Functions"
        ],
        "summary": "Invoke function search",
        "operationId": "drives.root.search.f2b1",
        "parameters": [
          {
            "name": "drive-id",
            "in": "path",
            "description": "key: drive-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "drive"
          },
          {
            "name": "q",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.driveItem"
                      }
                    ],
                    "nullable": true
                  }
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n    \"value\": [\r\n      {\r\n        \"id\": \"0123456789abc!123\",\r\n        \"name\": \"Contoso Project\",\r\n        \"folder\": {},\r\n        \"searchResult\": { \"onClickTelemetryUrl\": \"https://bing.com/0123456789abc!123\" }\r\n      },\r\n      {\r\n        \"id\": \"0123456789abc!456\",\r\n        \"name\": \"Contoso Project 2016\",\r\n        \"folder\": {},\r\n        \"searchResult\": { \"onClickTelemetryUrl\": \"https://bing.com/0123456789abc!456\" }\r\n      }\r\n    ],\r\n    \"@odata.nextLink\": \"https://graph.microsoft.com/v1.0/me/drive/root/search(query='contoso project')&skipToken=1asdlnjnkj1nalkm!asd\"\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.Read",
              "Files.ReadWrite",
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.Read",
              "Files.ReadWrite",
              "Files.Read.All",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/drives/{drive-id}/items/{driveItem-id}/search(q={q})",
        "/drives/{drive-id}/search(q={q})",
        "/drives/{drive-id}/special/{driveItem-id}/search(q={q})"
      ]
    },
    "/drives/{drive-id}/special": {
      "get": {
        "tags": [
          "drives.driveItem"
        ],
        "summary": "Get special from drives",
        "operationId": "drives.ListSpecial",
        "parameters": [
          {
            "name": "drive-id",
            "in": "path",
            "description": "key: drive-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "drive"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "createdBy",
                  "createdBy desc",
                  "createdDateTime",
                  "createdDateTime desc",
                  "description",
                  "description desc",
                  "eTag",
                  "eTag desc",
                  "lastModifiedBy",
                  "lastModifiedBy desc",
                  "lastModifiedDateTime",
                  "lastModifiedDateTime desc",
                  "name",
                  "name desc",
                  "parentReference",
                  "parentReference desc",
                  "webUrl",
                  "webUrl desc",
                  "audio",
                  "audio desc",
                  "content",
                  "content desc",
                  "cTag",
                  "cTag desc",
                  "deleted",
                  "deleted desc",
                  "file",
                  "file desc",
                  "fileSystemInfo",
                  "fileSystemInfo desc",
                  "folder",
                  "folder desc",
                  "image",
                  "image desc",
                  "location",
                  "location desc",
                  "package",
                  "package desc",
                  "photo",
                  "photo desc",
                  "publication",
                  "publication desc",
                  "remoteItem",
                  "remoteItem desc",
                  "root",
                  "root desc",
                  "searchResult",
                  "searchResult desc",
                  "shared",
                  "shared desc",
                  "sharepointIds",
                  "sharepointIds desc",
                  "size",
                  "size desc",
                  "specialFolder",
                  "specialFolder desc",
                  "video",
                  "video desc",
                  "webDavUrl",
                  "webDavUrl desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "audio",
                  "content",
                  "cTag",
                  "deleted",
                  "file",
                  "fileSystemInfo",
                  "folder",
                  "image",
                  "location",
                  "package",
                  "photo",
                  "publication",
                  "remoteItem",
                  "root",
                  "searchResult",
                  "shared",
                  "sharepointIds",
                  "size",
                  "specialFolder",
                  "video",
                  "webDavUrl",
                  "createdByUser",
                  "lastModifiedByUser",
                  "children",
                  "permissions",
                  "thumbnails",
                  "versions",
                  "listItem",
                  "workbook"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "children",
                  "permissions",
                  "thumbnails",
                  "versions",
                  "listItem",
                  "workbook"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.driveItem"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/drives/{drive-id}/special/{driveItem-id}": {
      "get": {
        "tags": [
          "drives.driveItem"
        ],
        "summary": "Get special from drives",
        "operationId": "drives.GetSpecial",
        "parameters": [
          {
            "name": "drive-id",
            "in": "path",
            "description": "key: drive-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "drive"
          },
          {
            "name": "driveItem-id",
            "in": "path",
            "description": "key: driveItem-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "driveItem"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "audio",
                  "content",
                  "cTag",
                  "deleted",
                  "file",
                  "fileSystemInfo",
                  "folder",
                  "image",
                  "location",
                  "package",
                  "photo",
                  "publication",
                  "remoteItem",
                  "root",
                  "searchResult",
                  "shared",
                  "sharepointIds",
                  "size",
                  "specialFolder",
                  "video",
                  "webDavUrl",
                  "createdByUser",
                  "lastModifiedByUser",
                  "children",
                  "permissions",
                  "thumbnails",
                  "versions",
                  "listItem",
                  "workbook"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "children",
                  "permissions",
                  "thumbnails",
                  "versions",
                  "listItem",
                  "workbook"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.driveItem"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/drives/{drive-id}/special/{driveItem-id}/copy": {
      "post": {
        "tags": [
          "drives.Actions"
        ],
        "summary": "Returns details about how to [monitor the progress](../../../concepts/long_running_actions_overview.md) of the copy, upon accepting the request.",
        "operationId": "drives.special.copy",
        "parameters": [
          {
            "name": "drive-id",
            "in": "path",
            "description": "key: drive-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "drive"
          },
          {
            "name": "driveItem-id",
            "in": "path",
            "description": "key: driveItem-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "driveItem"
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "parentReference": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.itemReference"
                      }
                    ],
                    "nullable": true
                  },
                  "name": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/drives/{drive-id}/items/{driveItem-id}/copy",
        "/drives/{drive-id}/root/copy"
      ]
    },
    "/drives/{drive-id}/special/{driveItem-id}/createLink": {
      "post": {
        "tags": [
          "drives.Actions"
        ],
        "summary": "The following example requests a sharing link to be created for the DriveItem specified by {itemId} in the user's OneDrive.\r\nThe sharing link is configured to be read-only and usable by anyone with the link.",
        "operationId": "drives.special.createLink",
        "parameters": [
          {
            "name": "drive-id",
            "in": "path",
            "description": "key: drive-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "drive"
          },
          {
            "name": "driveItem-id",
            "in": "path",
            "description": "key: driveItem-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "driveItem"
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "nullable": true
                  },
                  "scope": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.permission"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/drives/{drive-id}/items/{driveItem-id}/createLink",
        "/drives/{drive-id}/root/createLink"
      ]
    },
    "/drives/{drive-id}/special/{driveItem-id}/createUploadSession": {
      "post": {
        "tags": [
          "drives.Actions"
        ],
        "summary": "Invoke action createUploadSession",
        "operationId": "drives.special.createUploadSession",
        "parameters": [
          {
            "name": "drive-id",
            "in": "path",
            "description": "key: drive-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "drive"
          },
          {
            "name": "driveItem-id",
            "in": "path",
            "description": "key: driveItem-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "driveItem"
          },
          {
            "name": "if-match",
            "in": "header",
            "description": "If this request header is included and the eTag (or cTag) provided does not match the current etag on the item, a 412 Precondition Failed error response is returned.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "item": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.driveItemUploadableProperties"
                      }
                    ],
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.uploadSession"
                    }
                  ],
                  "nullable": true
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n  \"uploadUrl\": \"https://sn3302.up.1drv.com/up/fe6987415ace7X4e1eF866337\",\r\n  \"expirationDateTime\": \"2015-01-29T09:21:55.523Z\"\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/drives/{drive-id}/items/{driveItem-id}/createUploadSession",
        "/drives/{drive-id}/root/createUploadSession"
      ]
    },
    "/drives/{drive-id}/special/{driveItem-id}/delta()": {
      "get": {
        "tags": [
          "drives.Functions"
        ],
        "summary": "Here is an example of how to call this API to establish your local state.",
        "operationId": "drives.special.delta.2209",
        "parameters": [
          {
            "name": "drive-id",
            "in": "path",
            "description": "key: drive-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "drive"
          },
          {
            "name": "driveItem-id",
            "in": "path",
            "description": "key: driveItem-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "driveItem"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.driveItem"
                      }
                    ],
                    "nullable": true
                  }
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n    \"value\": [\r\n        {\r\n            \"id\": \"0123456789abc\",\r\n            \"name\": \"folder2\",\r\n            \"folder\": { }\r\n        },\r\n        {\r\n            \"id\": \"123010204abac\",\r\n            \"name\": \"file.txt\",\r\n            \"file\": { }\r\n        },\r\n        {\r\n            \"id\": \"2353010204ddgg\",\r\n            \"name\": \"file5.txt\",\r\n            \"deleted\": { }\r\n        }\r\n    ],\r\n    \"@odata.nextLink\": \"https://graph.microsoft.com/v1.0/me/drive/delta(token=1230919asd190410jlka)\"\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.Read",
              "Files.ReadWrite",
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.Read",
              "Files.ReadWrite",
              "Files.Read.All",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/drives/{drive-id}/items/{driveItem-id}/delta()",
        "/drives/{drive-id}/items/{driveItem-id}/delta(token={token})",
        "/drives/{drive-id}/root/delta()",
        "/drives/{drive-id}/root/delta(token={token})",
        "/drives/{drive-id}/special/{driveItem-id}/delta(token={token})"
      ]
    },
    "/drives/{drive-id}/special/{driveItem-id}/delta(token={token})": {
      "get": {
        "tags": [
          "drives.Functions"
        ],
        "summary": "Here is an example of how to call this API to update your local state.",
        "operationId": "drives.special.delta.cf70",
        "parameters": [
          {
            "name": "drive-id",
            "in": "path",
            "description": "key: drive-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "drive"
          },
          {
            "name": "driveItem-id",
            "in": "path",
            "description": "key: driveItem-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "driveItem"
          },
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.driveItem"
                      }
                    ],
                    "nullable": true
                  }
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n    \"value\": [\r\n        {\r\n            \"id\": \"0123456789abc\",\r\n            \"name\": \"folder2\",\r\n            \"folder\": { },\r\n            \"deleted\": { }\r\n        },\r\n        {\r\n            \"id\": \"123010204abac\",\r\n            \"name\": \"file.txt\",\r\n            \"file\": { }\r\n        }\r\n    ],\r\n    \"@odata.deltaLink\": \"https://graph.microsoft.com/v1.0/me/drive/root/delta?(token='1230919asd190410jlka')\"\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.Read",
              "Files.ReadWrite",
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.Read",
              "Files.ReadWrite",
              "Files.Read.All",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/drives/{drive-id}/items/{driveItem-id}/delta()",
        "/drives/{drive-id}/items/{driveItem-id}/delta(token={token})",
        "/drives/{drive-id}/root/delta()",
        "/drives/{drive-id}/root/delta(token={token})",
        "/drives/{drive-id}/special/{driveItem-id}/delta()"
      ]
    },
    "/drives/{drive-id}/special/{driveItem-id}/invite": {
      "post": {
        "tags": [
          "drives.Actions"
        ],
        "summary": "This example sends a sharing invitation to a user with email address 'ryan@contoso.com' with a message about a file being collaborated on.\r\nThe invitation grants Ryan read-write access to the file.",
        "operationId": "drives.special.invite",
        "parameters": [
          {
            "name": "drive-id",
            "in": "path",
            "description": "key: drive-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "drive"
          },
          {
            "name": "driveItem-id",
            "in": "path",
            "description": "key: driveItem-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "driveItem"
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "recipients": {
                    "type": "array",
                    "items": {
                      "anyOf": [
                        {
                          "$ref": "#/components/schemas/microsoft.graph.driveRecipient"
                        }
                      ],
                      "nullable": true
                    }
                  },
                  "message": {
                    "type": "string",
                    "nullable": true
                  },
                  "requireSignIn": {
                    "type": "boolean",
                    "default": false,
                    "nullable": true
                  },
                  "sendInvitation": {
                    "type": "boolean",
                    "default": false,
                    "nullable": true
                  },
                  "roles": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.permission"
                      }
                    ],
                    "nullable": true
                  }
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n  \"value\": [\r\n    {\r\n      \"grantedTo\": {\r\n        \"user\": {\r\n          \"displayName\": \"Ryan Gregg\",\r\n          \"id\": \"42F177F1-22C0-4BE3-900D-4507125C5C20\"\r\n        }\r\n      },\r\n      \"id\": \"CCFC7CA3-7A19-4D57-8CEF-149DB9DDFA62\",\r\n      \"invitation\": {\r\n        \"email\": \"ryan@contoso.com\",\r\n        \"signInRequired\": true\r\n      },\r\n      \"roles\": [ \"write\" ]\r\n    }\r\n  ]\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/drives/{drive-id}/items/{driveItem-id}/invite",
        "/drives/{drive-id}/root/invite"
      ]
    },
    "/drives/{drive-id}/special/{driveItem-id}/search(q={q})": {
      "get": {
        "tags": [
          "drives.Functions"
        ],
        "summary": "Invoke function search",
        "operationId": "drives.special.search.f2b1",
        "parameters": [
          {
            "name": "drive-id",
            "in": "path",
            "description": "key: drive-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "drive"
          },
          {
            "name": "driveItem-id",
            "in": "path",
            "description": "key: driveItem-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "driveItem"
          },
          {
            "name": "q",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.driveItem"
                      }
                    ],
                    "nullable": true
                  }
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n    \"value\": [\r\n      {\r\n        \"id\": \"0123456789abc!123\",\r\n        \"name\": \"Contoso Project\",\r\n        \"folder\": {},\r\n        \"searchResult\": { \"onClickTelemetryUrl\": \"https://bing.com/0123456789abc!123\" }\r\n      },\r\n      {\r\n        \"id\": \"0123456789abc!456\",\r\n        \"name\": \"Contoso Project 2016\",\r\n        \"folder\": {},\r\n        \"searchResult\": { \"onClickTelemetryUrl\": \"https://bing.com/0123456789abc!456\" }\r\n      }\r\n    ],\r\n    \"@odata.nextLink\": \"https://graph.microsoft.com/v1.0/me/drive/root/search(query='contoso project')&skipToken=1asdlnjnkj1nalkm!asd\"\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.Read",
              "Files.ReadWrite",
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.Read",
              "Files.ReadWrite",
              "Files.Read.All",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/drives/{drive-id}/items/{driveItem-id}/search(q={q})",
        "/drives/{drive-id}/search(q={q})",
        "/drives/{drive-id}/root/search(q={q})"
      ]
    },
    "/education": {
      "get": {
        "tags": [
          "education.educationRoot"
        ],
        "summary": "Here is a JSON representation of the resource.",
        "operationId": "education.educationRoot.GetEducationRoot",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "classes",
                  "me",
                  "schools",
                  "users"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "classes",
                  "me",
                  "schools",
                  "users"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.educationRoot"
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "education.educationRoot"
        ],
        "summary": "Update education",
        "operationId": "education.educationRoot.UpdateEducationRoot",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.educationRoot"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/education/classes": {
      "get": {
        "tags": [
          "education.educationClass"
        ],
        "summary": "Get classes from education",
        "operationId": "education.ListClasses",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "description",
                  "description desc",
                  "classCode",
                  "classCode desc",
                  "createdBy",
                  "createdBy desc",
                  "displayName",
                  "displayName desc",
                  "externalId",
                  "externalId desc",
                  "externalName",
                  "externalName desc",
                  "externalSource",
                  "externalSource desc",
                  "mailNickname",
                  "mailNickname desc",
                  "term",
                  "term desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "description",
                  "classCode",
                  "createdBy",
                  "displayName",
                  "externalId",
                  "externalName",
                  "externalSource",
                  "mailNickname",
                  "term",
                  "members",
                  "schools",
                  "teachers",
                  "group"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "members",
                  "schools",
                  "teachers",
                  "group"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.educationClass"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/education/classes/{educationClass-id}": {
      "get": {
        "tags": [
          "education.educationClass"
        ],
        "summary": "Get classes from education",
        "operationId": "education.GetClasses",
        "parameters": [
          {
            "name": "educationClass-id",
            "in": "path",
            "description": "key: educationClass-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "educationClass"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "description",
                  "classCode",
                  "createdBy",
                  "displayName",
                  "externalId",
                  "externalName",
                  "externalSource",
                  "mailNickname",
                  "term",
                  "members",
                  "schools",
                  "teachers",
                  "group"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "members",
                  "schools",
                  "teachers",
                  "group"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.educationClass"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/education/me": {
      "get": {
        "tags": [
          "education.educationUser"
        ],
        "summary": "Get me from education",
        "operationId": "education.GetMe",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "accountEnabled",
                  "assignedLicenses",
                  "assignedPlans",
                  "businessPhones",
                  "department",
                  "displayName",
                  "givenName",
                  "middleName",
                  "surname",
                  "mail",
                  "mailNickname",
                  "mobilePhone",
                  "createdBy",
                  "externalSource",
                  "mailingAddress",
                  "passwordPolicies",
                  "passwordProfile",
                  "preferredLanguage",
                  "primaryRole",
                  "provisionedPlans",
                  "residenceAddress",
                  "student",
                  "teacher",
                  "usageLocation",
                  "userPrincipalName",
                  "userType",
                  "classes",
                  "schools",
                  "assignments",
                  "user"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "classes",
                  "schools",
                  "assignments",
                  "user"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.educationUser"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/education/schools": {
      "get": {
        "tags": [
          "education.educationSchool"
        ],
        "summary": "Get schools from education",
        "operationId": "education.ListSchools",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "description",
                  "description desc",
                  "displayName",
                  "displayName desc",
                  "externalSource",
                  "externalSource desc",
                  "status",
                  "status desc",
                  "principalEmail",
                  "principalEmail desc",
                  "principalName",
                  "principalName desc",
                  "externalPrincipalId",
                  "externalPrincipalId desc",
                  "highestGrade",
                  "highestGrade desc",
                  "lowestGrade",
                  "lowestGrade desc",
                  "schoolNumber",
                  "schoolNumber desc",
                  "address",
                  "address desc",
                  "createdBy",
                  "createdBy desc",
                  "externalId",
                  "externalId desc",
                  "fax",
                  "fax desc",
                  "phone",
                  "phone desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "description",
                  "displayName",
                  "externalSource",
                  "status",
                  "principalEmail",
                  "principalName",
                  "externalPrincipalId",
                  "highestGrade",
                  "lowestGrade",
                  "schoolNumber",
                  "address",
                  "createdBy",
                  "externalId",
                  "fax",
                  "phone",
                  "classes",
                  "users"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "classes",
                  "users"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.educationSchool"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/education/schools/{educationSchool-id}": {
      "get": {
        "tags": [
          "education.educationSchool"
        ],
        "summary": "Get schools from education",
        "operationId": "education.GetSchools",
        "parameters": [
          {
            "name": "educationSchool-id",
            "in": "path",
            "description": "key: educationSchool-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "educationSchool"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "description",
                  "displayName",
                  "externalSource",
                  "status",
                  "principalEmail",
                  "principalName",
                  "externalPrincipalId",
                  "highestGrade",
                  "lowestGrade",
                  "schoolNumber",
                  "address",
                  "createdBy",
                  "externalId",
                  "fax",
                  "phone",
                  "classes",
                  "users"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "classes",
                  "users"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.educationSchool"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/education/users": {
      "get": {
        "tags": [
          "education.educationUser"
        ],
        "summary": "Get users from education",
        "operationId": "education.ListUsers",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "accountEnabled",
                  "accountEnabled desc",
                  "assignedLicenses",
                  "assignedLicenses desc",
                  "assignedPlans",
                  "assignedPlans desc",
                  "businessPhones",
                  "businessPhones desc",
                  "department",
                  "department desc",
                  "displayName",
                  "displayName desc",
                  "givenName",
                  "givenName desc",
                  "middleName",
                  "middleName desc",
                  "surname",
                  "surname desc",
                  "mail",
                  "mail desc",
                  "mailNickname",
                  "mailNickname desc",
                  "mobilePhone",
                  "mobilePhone desc",
                  "createdBy",
                  "createdBy desc",
                  "externalSource",
                  "externalSource desc",
                  "mailingAddress",
                  "mailingAddress desc",
                  "passwordPolicies",
                  "passwordPolicies desc",
                  "passwordProfile",
                  "passwordProfile desc",
                  "preferredLanguage",
                  "preferredLanguage desc",
                  "primaryRole",
                  "primaryRole desc",
                  "provisionedPlans",
                  "provisionedPlans desc",
                  "residenceAddress",
                  "residenceAddress desc",
                  "student",
                  "student desc",
                  "teacher",
                  "teacher desc",
                  "usageLocation",
                  "usageLocation desc",
                  "userPrincipalName",
                  "userPrincipalName desc",
                  "userType",
                  "userType desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "accountEnabled",
                  "assignedLicenses",
                  "assignedPlans",
                  "businessPhones",
                  "department",
                  "displayName",
                  "givenName",
                  "middleName",
                  "surname",
                  "mail",
                  "mailNickname",
                  "mobilePhone",
                  "createdBy",
                  "externalSource",
                  "mailingAddress",
                  "passwordPolicies",
                  "passwordProfile",
                  "preferredLanguage",
                  "primaryRole",
                  "provisionedPlans",
                  "residenceAddress",
                  "student",
                  "teacher",
                  "usageLocation",
                  "userPrincipalName",
                  "userType",
                  "classes",
                  "schools",
                  "assignments",
                  "user"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "classes",
                  "schools",
                  "assignments",
                  "user"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.educationUser"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/education/users/{educationUser-id}": {
      "get": {
        "tags": [
          "education.educationUser"
        ],
        "summary": "Get users from education",
        "operationId": "education.GetUsers",
        "parameters": [
          {
            "name": "educationUser-id",
            "in": "path",
            "description": "key: educationUser-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "educationUser"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "accountEnabled",
                  "assignedLicenses",
                  "assignedPlans",
                  "businessPhones",
                  "department",
                  "displayName",
                  "givenName",
                  "middleName",
                  "surname",
                  "mail",
                  "mailNickname",
                  "mobilePhone",
                  "createdBy",
                  "externalSource",
                  "mailingAddress",
                  "passwordPolicies",
                  "passwordProfile",
                  "preferredLanguage",
                  "primaryRole",
                  "provisionedPlans",
                  "residenceAddress",
                  "student",
                  "teacher",
                  "usageLocation",
                  "userPrincipalName",
                  "userType",
                  "classes",
                  "schools",
                  "assignments",
                  "user"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "classes",
                  "schools",
                  "assignments",
                  "user"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.educationUser"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groupLifecyclePolicies": {
      "get": {
        "tags": [
          "groupLifecyclePolicies.groupLifecyclePolicy"
        ],
        "summary": "Get entities from groupLifecyclePolicies",
        "operationId": "groupLifecyclePolicies.groupLifecyclePolicy.ListGroupLifecyclePolicy",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "alternateNotificationEmails",
                  "alternateNotificationEmails desc",
                  "groupLifetimeInDays",
                  "groupLifetimeInDays desc",
                  "managedGroupTypes",
                  "managedGroupTypes desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "alternateNotificationEmails",
                  "groupLifetimeInDays",
                  "managedGroupTypes"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of groupLifecyclePolicy",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.groupLifecyclePolicy"
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n  \"id\": \"ffffffff-ffff-ffff-ffff-ffffffffffff\",\r\n  \"groupLifetimeInDays\": 100,\r\n  \"managedGroupTypes\": \"Selected\",\r\n  \"alternateNotificationEmails\": \"admin@contoso.com\"\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Directory.Read.All",
              "or",
              "Directory.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Directory.Read.All",
              "or",
              "Directory.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "groupLifecyclePolicies.groupLifecyclePolicy"
        ],
        "summary": "Add new entity to groupLifecyclePolicies",
        "operationId": "groupLifecyclePolicies.groupLifecyclePolicy.CreateGroupLifecyclePolicy",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.groupLifecyclePolicy"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.groupLifecyclePolicy"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groupLifecyclePolicies/{groupLifecyclePolicy-id}": {
      "get": {
        "tags": [
          "groupLifecyclePolicies.groupLifecyclePolicy"
        ],
        "summary": "Get entity from groupLifecyclePolicies by key",
        "operationId": "groupLifecyclePolicies.groupLifecyclePolicy.GetGroupLifecyclePolicy",
        "parameters": [
          {
            "name": "groupLifecyclePolicy-id",
            "in": "path",
            "description": "key: groupLifecyclePolicy-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "groupLifecyclePolicy"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "alternateNotificationEmails",
                  "groupLifetimeInDays",
                  "managedGroupTypes"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.groupLifecyclePolicy"
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n  \"id\": \"ffffffff-ffff-ffff-ffff-ffffffffffff\",\r\n  \"groupLifetimeInDays\": 100,\r\n  \"managedGroupTypes\": \"Selected\",\r\n  \"alternateNotificationEmails\": \"admin@contoso.com\"\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Directory.Read.All",
              "or",
              "Directory.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Directory.Read.All",
              "or",
              "Directory.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "groupLifecyclePolicies.groupLifecyclePolicy"
        ],
        "summary": "Update entity in groupLifecyclePolicies",
        "operationId": "groupLifecyclePolicies.groupLifecyclePolicy.UpdateGroupLifecyclePolicy",
        "parameters": [
          {
            "name": "groupLifecyclePolicy-id",
            "in": "path",
            "description": "key: groupLifecyclePolicy-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "groupLifecyclePolicy"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.groupLifecyclePolicy"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Directory.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Directory.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "groupLifecyclePolicies.groupLifecyclePolicy"
        ],
        "summary": "Delete entity from groupLifecyclePolicies",
        "operationId": "groupLifecyclePolicies.groupLifecyclePolicy.DeleteGroupLifecyclePolicy",
        "parameters": [
          {
            "name": "groupLifecyclePolicy-id",
            "in": "path",
            "description": "key: groupLifecyclePolicy-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "groupLifecyclePolicy"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "application/json",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Directory.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Directory.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groups": {
      "get": {
        "tags": [
          "groups.group"
        ],
        "summary": "Get entities from groups",
        "operationId": "groups.group.ListGroup",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "allowExternalSenders",
                  "allowExternalSenders desc",
                  "autoSubscribeNewMembers",
                  "autoSubscribeNewMembers desc",
                  "classification",
                  "classification desc",
                  "createdDateTime",
                  "createdDateTime desc",
                  "description",
                  "description desc",
                  "displayName",
                  "displayName desc",
                  "groupTypes",
                  "groupTypes desc",
                  "isSubscribedByMail",
                  "isSubscribedByMail desc",
                  "mail",
                  "mail desc",
                  "mailEnabled",
                  "mailEnabled desc",
                  "mailNickname",
                  "mailNickname desc",
                  "onPremisesLastSyncDateTime",
                  "onPremisesLastSyncDateTime desc",
                  "onPremisesProvisioningErrors",
                  "onPremisesProvisioningErrors desc",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSecurityIdentifier desc",
                  "onPremisesSyncEnabled",
                  "onPremisesSyncEnabled desc",
                  "proxyAddresses",
                  "proxyAddresses desc",
                  "renewedDateTime",
                  "renewedDateTime desc",
                  "securityEnabled",
                  "securityEnabled desc",
                  "unseenCount",
                  "unseenCount desc",
                  "visibility",
                  "visibility desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "allowExternalSenders",
                  "autoSubscribeNewMembers",
                  "classification",
                  "createdDateTime",
                  "description",
                  "displayName",
                  "groupTypes",
                  "isSubscribedByMail",
                  "mail",
                  "mailEnabled",
                  "mailNickname",
                  "onPremisesLastSyncDateTime",
                  "onPremisesProvisioningErrors",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSyncEnabled",
                  "proxyAddresses",
                  "renewedDateTime",
                  "securityEnabled",
                  "unseenCount",
                  "visibility",
                  "acceptedSenders",
                  "calendar",
                  "calendarView",
                  "conversations",
                  "createdOnBehalfOf",
                  "drive",
                  "events",
                  "memberOf",
                  "members",
                  "owners",
                  "photo",
                  "rejectedSenders",
                  "sites",
                  "threads",
                  "drives",
                  "extensions",
                  "groupLifecyclePolicies",
                  "onenote",
                  "photos",
                  "planner",
                  "settings"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "acceptedSenders",
                  "calendar",
                  "calendarView",
                  "conversations",
                  "createdOnBehalfOf",
                  "drive",
                  "events",
                  "memberOf",
                  "members",
                  "owners",
                  "photo",
                  "rejectedSenders",
                  "sites",
                  "threads",
                  "drives",
                  "extensions",
                  "groupLifecyclePolicies",
                  "onenote",
                  "photos",
                  "planner",
                  "settings"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of group",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.group"
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n  \"id\": \"id-value\",\r\n  \"description\": \"description-value\",\r\n  \"displayName\": \"displayName-value\",\r\n  \"groupTypes\": [\r\n    \"groupTypes-value\"\r\n  ],\r\n  \"mail\": \"mail-value\",\r\n  \"mailEnabled\": true,\r\n  \"mailNickname\": \"mailNickname-value\",\r\n  \"onPremisesLastSyncDateTime\": \"onPremisesLastSyncDateTime-value\",\r\n  \"onPremisesSecurityIdentifier\": \"onPremisesSecurityIdentifier-value\",\r\n  \"onPremisesSyncEnabled\": true,\r\n  \"proxyAddresses\": [\r\n    \"proxyAddresses-value\"\r\n   ],\r\n   \"securityEnabled\": true,\r\n   \"visibility\": \"visibility-value\"\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Group.Read.All",
              "Group.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Group.Read.All",
              "Group.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "groups.group"
        ],
        "summary": "Add new entity to groups",
        "operationId": "groups.group.CreateGroup",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.group"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.group"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groups/{group-id}": {
      "get": {
        "tags": [
          "groups.group"
        ],
        "summary": "Get entity from groups by key",
        "operationId": "groups.group.GetGroup",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "key: group-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "group"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "allowExternalSenders",
                  "autoSubscribeNewMembers",
                  "classification",
                  "createdDateTime",
                  "description",
                  "displayName",
                  "groupTypes",
                  "isSubscribedByMail",
                  "mail",
                  "mailEnabled",
                  "mailNickname",
                  "onPremisesLastSyncDateTime",
                  "onPremisesProvisioningErrors",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSyncEnabled",
                  "proxyAddresses",
                  "renewedDateTime",
                  "securityEnabled",
                  "unseenCount",
                  "visibility",
                  "acceptedSenders",
                  "calendar",
                  "calendarView",
                  "conversations",
                  "createdOnBehalfOf",
                  "drive",
                  "events",
                  "memberOf",
                  "members",
                  "owners",
                  "photo",
                  "rejectedSenders",
                  "sites",
                  "threads",
                  "drives",
                  "extensions",
                  "groupLifecyclePolicies",
                  "onenote",
                  "photos",
                  "planner",
                  "settings"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "acceptedSenders",
                  "calendar",
                  "calendarView",
                  "conversations",
                  "createdOnBehalfOf",
                  "drive",
                  "events",
                  "memberOf",
                  "members",
                  "owners",
                  "photo",
                  "rejectedSenders",
                  "sites",
                  "threads",
                  "drives",
                  "extensions",
                  "groupLifecyclePolicies",
                  "onenote",
                  "photos",
                  "planner",
                  "settings"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.group"
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n  \"id\": \"id-value\",\r\n  \"description\": \"description-value\",\r\n  \"displayName\": \"displayName-value\",\r\n  \"groupTypes\": [\r\n    \"groupTypes-value\"\r\n  ],\r\n  \"mail\": \"mail-value\",\r\n  \"mailEnabled\": true,\r\n  \"mailNickname\": \"mailNickname-value\",\r\n  \"onPremisesLastSyncDateTime\": \"onPremisesLastSyncDateTime-value\",\r\n  \"onPremisesSecurityIdentifier\": \"onPremisesSecurityIdentifier-value\",\r\n  \"onPremisesSyncEnabled\": true,\r\n  \"proxyAddresses\": [\r\n    \"proxyAddresses-value\"\r\n   ],\r\n   \"securityEnabled\": true,\r\n   \"visibility\": \"visibility-value\"\r\n}\n"
                  }
                }
              }
            },
            "links": {
              "acceptedSenders": {
                "operationId": "groups.group.GetGroup",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "calendar": {
                "operationId": "groups.group.GetGroup",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "calendarView": {
                "operationId": "groups.group.GetGroup",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "conversations": {
                "operationId": "groups.group.GetGroup",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "createdOnBehalfOf": {
                "operationId": "groups.group.GetGroup",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "drive": {
                "operationId": "groups.group.GetGroup",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "events": {
                "operationId": "groups.group.GetGroup",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "memberOf": {
                "operationId": "groups.group.GetGroup",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "members": {
                "operationId": "groups.group.GetGroup",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "owners": {
                "operationId": "groups.group.GetGroup",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "photo": {
                "operationId": "groups.group.GetGroup",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "rejectedSenders": {
                "operationId": "groups.group.GetGroup",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "sites": {
                "operationId": "groups.group.GetGroup",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "threads": {
                "operationId": "groups.group.GetGroup",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "drives": {
                "operationId": "groups.group.GetGroup",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "extensions": {
                "operationId": "groups.group.GetGroup",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "groupLifecyclePolicies": {
                "operationId": "groups.group.GetGroup",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "onenote": {
                "operationId": "groups.group.GetGroup",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "photos": {
                "operationId": "groups.group.GetGroup",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "planner": {
                "operationId": "groups.group.GetGroup",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "settings": {
                "operationId": "groups.group.GetGroup",
                "parameters": {
                  "id": "$request.path.id"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Group.Read.All",
              "Group.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Group.Read.All",
              "Group.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "groups.group"
        ],
        "summary": "Update entity in groups",
        "operationId": "groups.group.UpdateGroup",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "key: group-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "group"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.group"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Group.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Group.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "groups.group"
        ],
        "summary": "Delete entity from groups",
        "operationId": "groups.group.DeleteGroup",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "key: group-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "group"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Group.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Group.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groups/{group-id}/acceptedSenders": {
      "get": {
        "tags": [
          "groups.directoryObject"
        ],
        "summary": "Get acceptedSenders from groups",
        "operationId": "groups.ListAcceptedSenders",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "key: group-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "group"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groups/{group-id}/acceptedSenders/{directoryObject-id}": {
      "get": {
        "tags": [
          "groups.directoryObject"
        ],
        "summary": "Get acceptedSenders from groups",
        "operationId": "groups.GetAcceptedSenders",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "key: group-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "group"
          },
          {
            "name": "directoryObject-id",
            "in": "path",
            "description": "key: directoryObject-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "directoryObject"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groups/{group-id}/calendar": {
      "get": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "Get calendar from groups",
        "operationId": "groups.GetCalendar",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "key: group-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "group"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "canEdit",
                  "canShare",
                  "canViewPrivateItems",
                  "changeKey",
                  "color",
                  "name",
                  "owner",
                  "calendarView",
                  "events",
                  "multiValueExtendedProperties",
                  "singleValueExtendedProperties"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "calendarView",
                  "events",
                  "multiValueExtendedProperties",
                  "singleValueExtendedProperties"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.calendar"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groups/{group-id}/calendarView": {
      "get": {
        "tags": [
          "groups.event"
        ],
        "summary": "Get calendarView from groups",
        "operationId": "groups.ListCalendarView",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "key: group-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "group"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "categories",
                  "categories desc",
                  "changeKey",
                  "changeKey desc",
                  "createdDateTime",
                  "createdDateTime desc",
                  "lastModifiedDateTime",
                  "lastModifiedDateTime desc",
                  "attendees",
                  "attendees desc",
                  "body",
                  "body desc",
                  "bodyPreview",
                  "bodyPreview desc",
                  "end",
                  "end desc",
                  "hasAttachments",
                  "hasAttachments desc",
                  "iCalUId",
                  "iCalUId desc",
                  "importance",
                  "importance desc",
                  "isAllDay",
                  "isAllDay desc",
                  "isCancelled",
                  "isCancelled desc",
                  "isOrganizer",
                  "isOrganizer desc",
                  "isReminderOn",
                  "isReminderOn desc",
                  "location",
                  "location desc",
                  "locations",
                  "locations desc",
                  "onlineMeetingUrl",
                  "onlineMeetingUrl desc",
                  "organizer",
                  "organizer desc",
                  "originalEndTimeZone",
                  "originalEndTimeZone desc",
                  "originalStart",
                  "originalStart desc",
                  "originalStartTimeZone",
                  "originalStartTimeZone desc",
                  "recurrence",
                  "recurrence desc",
                  "reminderMinutesBeforeStart",
                  "reminderMinutesBeforeStart desc",
                  "responseRequested",
                  "responseRequested desc",
                  "responseStatus",
                  "responseStatus desc",
                  "sensitivity",
                  "sensitivity desc",
                  "seriesMasterId",
                  "seriesMasterId desc",
                  "showAs",
                  "showAs desc",
                  "start",
                  "start desc",
                  "subject",
                  "subject desc",
                  "type",
                  "type desc",
                  "webLink",
                  "webLink desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "categories",
                  "changeKey",
                  "createdDateTime",
                  "lastModifiedDateTime",
                  "attendees",
                  "body",
                  "bodyPreview",
                  "end",
                  "hasAttachments",
                  "iCalUId",
                  "importance",
                  "isAllDay",
                  "isCancelled",
                  "isOrganizer",
                  "isReminderOn",
                  "location",
                  "locations",
                  "onlineMeetingUrl",
                  "organizer",
                  "originalEndTimeZone",
                  "originalStart",
                  "originalStartTimeZone",
                  "recurrence",
                  "reminderMinutesBeforeStart",
                  "responseRequested",
                  "responseStatus",
                  "sensitivity",
                  "seriesMasterId",
                  "showAs",
                  "start",
                  "subject",
                  "type",
                  "webLink",
                  "attachments",
                  "calendar",
                  "extensions",
                  "instances",
                  "multiValueExtendedProperties",
                  "singleValueExtendedProperties"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "attachments",
                  "calendar",
                  "extensions",
                  "instances",
                  "multiValueExtendedProperties",
                  "singleValueExtendedProperties"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.event"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groups/{group-id}/calendarView/{event-id}": {
      "get": {
        "tags": [
          "groups.event"
        ],
        "summary": "Get calendarView from groups",
        "operationId": "groups.GetCalendarView",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "key: group-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "group"
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "key: event-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "event"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "categories",
                  "changeKey",
                  "createdDateTime",
                  "lastModifiedDateTime",
                  "attendees",
                  "body",
                  "bodyPreview",
                  "end",
                  "hasAttachments",
                  "iCalUId",
                  "importance",
                  "isAllDay",
                  "isCancelled",
                  "isOrganizer",
                  "isReminderOn",
                  "location",
                  "locations",
                  "onlineMeetingUrl",
                  "organizer",
                  "originalEndTimeZone",
                  "originalStart",
                  "originalStartTimeZone",
                  "recurrence",
                  "reminderMinutesBeforeStart",
                  "responseRequested",
                  "responseStatus",
                  "sensitivity",
                  "seriesMasterId",
                  "showAs",
                  "start",
                  "subject",
                  "type",
                  "webLink",
                  "attachments",
                  "calendar",
                  "extensions",
                  "instances",
                  "multiValueExtendedProperties",
                  "singleValueExtendedProperties"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "attachments",
                  "calendar",
                  "extensions",
                  "instances",
                  "multiValueExtendedProperties",
                  "singleValueExtendedProperties"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.event"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groups/{group-id}/calendarView/{event-id}/accept": {
      "post": {
        "tags": [
          "groups.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "groups.calendarView.accept",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "key: group-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "group"
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "key: event-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "event"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Nature of the data in the body of an entity. Required.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string",
                    "nullable": true
                  },
                  "sendResponse": {
                    "type": "boolean",
                    "default": false,
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Application": [
              "Calendars.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/groups/{group-id}/events/{event-id}/accept"
      ]
    },
    "/groups/{group-id}/calendarView/{event-id}/decline": {
      "post": {
        "tags": [
          "groups.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "groups.calendarView.decline",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "key: group-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "group"
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "key: event-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "event"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Nature of the data in the body of an entity. Required.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string",
                    "nullable": true
                  },
                  "sendResponse": {
                    "type": "boolean",
                    "default": false,
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Application": [
              "Calendars.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/groups/{group-id}/events/{event-id}/decline"
      ]
    },
    "/groups/{group-id}/calendarView/{event-id}/dismissReminder": {
      "post": {
        "tags": [
          "groups.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "groups.calendarView.dismissReminder",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "key: group-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "group"
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "key: event-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "event"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Application": [
              "Calendars.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/groups/{group-id}/events/{event-id}/dismissReminder"
      ]
    },
    "/groups/{group-id}/calendarView/{event-id}/snoozeReminder": {
      "post": {
        "tags": [
          "groups.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "groups.calendarView.snoozeReminder",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "key: group-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "group"
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "key: event-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "event"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Nature of the data in the body of an entity. Required.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "newReminderTime": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.dateTimeTimeZone"
                      }
                    ],
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Application": [
              "Calendars.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/groups/{group-id}/events/{event-id}/snoozeReminder"
      ]
    },
    "/groups/{group-id}/calendarView/{event-id}/tentativelyAccept": {
      "post": {
        "tags": [
          "groups.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "groups.calendarView.tentativelyAccept",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "key: group-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "group"
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "key: event-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "event"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Nature of the data in the body of an entity. Required.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string",
                    "nullable": true
                  },
                  "sendResponse": {
                    "type": "boolean",
                    "default": false,
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Application": [
              "Calendars.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/groups/{group-id}/events/{event-id}/tentativelyAccept"
      ]
    },
    "/groups/{group-id}/calendarView/delta()": {
      "get": {
        "tags": [
          "groups.Functions"
        ],
        "summary": "Invoke function delta",
        "operationId": "groups.calendarView.delta.2209",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "key: group-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "group"
          },
          {
            "name": "startDateTime",
            "in": "query",
            "description": "String",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDateTime",
            "in": "query",
            "description": "String",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$deltatoken",
            "in": "query",
            "description": "String",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skiptoken",
            "in": "query",
            "description": "String",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "application/json. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Prefer",
            "in": "header",
            "description": "odata.maxpagesize={x}. Optional.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Prefer",
            "in": "header",
            "description": "{Time zone}. Optional, UTC assumed if absent.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.event"
                      }
                    ],
                    "nullable": true
                  }
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n  \"@odata.nextLink\":\"https://graph.microsoft.com/v1.0/me/calendarView/delta?$skiptoken={_skipToken_}\",\r\n  \"value\": [\r\n    {\r\n      \"originalStartTimeZone\": \"originalStartTimeZone-value\",\r\n      \"originalEndTimeZone\": \"originalEndTimeZone-value\",\r\n      \"responseStatus\": {\r\n        \"response\": \"response-value\",\r\n        \"time\": \"datetime-value\"\r\n      },\r\n      \"iCalUId\": \"iCalUId-value\",\r\n      \"reminderMinutesBeforeStart\": 99,\r\n      \"isReminderOn\": true\r\n    }\r\n  ]\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Calendars.Read"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Calendars.Read"
            ]
          },
          {
            "Application": [
              "Calendars.Read"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/groups/{group-id}/events/delta()",
        "/groups/delta()"
      ]
    },
    "/groups/{group-id}/conversations": {
      "get": {
        "tags": [
          "groups.conversation"
        ],
        "summary": "Get conversations from groups",
        "operationId": "groups.ListConversations",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "key: group-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "group"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "hasAttachments",
                  "hasAttachments desc",
                  "lastDeliveredDateTime",
                  "lastDeliveredDateTime desc",
                  "preview",
                  "preview desc",
                  "topic",
                  "topic desc",
                  "uniqueSenders",
                  "uniqueSenders desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "hasAttachments",
                  "lastDeliveredDateTime",
                  "preview",
                  "topic",
                  "uniqueSenders",
                  "threads"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "threads"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.conversation"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groups/{group-id}/conversations/{conversation-id}": {
      "get": {
        "tags": [
          "groups.conversation"
        ],
        "summary": "Get conversations from groups",
        "operationId": "groups.GetConversations",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "key: group-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "group"
          },
          {
            "name": "conversation-id",
            "in": "path",
            "description": "key: conversation-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "conversation"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "hasAttachments",
                  "lastDeliveredDateTime",
                  "preview",
                  "topic",
                  "uniqueSenders",
                  "threads"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "threads"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.conversation"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groups/{group-id}/createdOnBehalfOf": {
      "get": {
        "tags": [
          "groups.directoryObject"
        ],
        "summary": "Get createdOnBehalfOf from groups",
        "operationId": "groups.GetCreatedOnBehalfOf",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "key: group-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "group"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groups/{group-id}/drive": {
      "get": {
        "tags": [
          "groups.drive"
        ],
        "summary": "Get drive from groups",
        "operationId": "groups.GetDrive",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "key: group-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "group"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "driveType",
                  "owner",
                  "quota",
                  "sharepointIds",
                  "system",
                  "createdByUser",
                  "lastModifiedByUser",
                  "items",
                  "root",
                  "special",
                  "list"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "items",
                  "root",
                  "special",
                  "list"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.drive"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groups/{group-id}/drives": {
      "get": {
        "tags": [
          "groups.drive"
        ],
        "summary": "Get drives from groups",
        "operationId": "groups.ListDrives",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "key: group-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "group"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "createdBy",
                  "createdBy desc",
                  "createdDateTime",
                  "createdDateTime desc",
                  "description",
                  "description desc",
                  "eTag",
                  "eTag desc",
                  "lastModifiedBy",
                  "lastModifiedBy desc",
                  "lastModifiedDateTime",
                  "lastModifiedDateTime desc",
                  "name",
                  "name desc",
                  "parentReference",
                  "parentReference desc",
                  "webUrl",
                  "webUrl desc",
                  "driveType",
                  "driveType desc",
                  "owner",
                  "owner desc",
                  "quota",
                  "quota desc",
                  "sharepointIds",
                  "sharepointIds desc",
                  "system",
                  "system desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "driveType",
                  "owner",
                  "quota",
                  "sharepointIds",
                  "system",
                  "createdByUser",
                  "lastModifiedByUser",
                  "items",
                  "root",
                  "special",
                  "list"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "items",
                  "root",
                  "special",
                  "list"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.drive"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groups/{group-id}/drives/{drive-id}": {
      "get": {
        "tags": [
          "groups.drive"
        ],
        "summary": "Get drives from groups",
        "operationId": "groups.GetDrives",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "key: group-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "group"
          },
          {
            "name": "drive-id",
            "in": "path",
            "description": "key: drive-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "drive"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "driveType",
                  "owner",
                  "quota",
                  "sharepointIds",
                  "system",
                  "createdByUser",
                  "lastModifiedByUser",
                  "items",
                  "root",
                  "special",
                  "list"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "items",
                  "root",
                  "special",
                  "list"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.drive"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groups/{group-id}/events": {
      "get": {
        "tags": [
          "groups.event"
        ],
        "summary": "Get events from groups",
        "operationId": "groups.ListEvents",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "key: group-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "group"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "categories",
                  "categories desc",
                  "changeKey",
                  "changeKey desc",
                  "createdDateTime",
                  "createdDateTime desc",
                  "lastModifiedDateTime",
                  "lastModifiedDateTime desc",
                  "attendees",
                  "attendees desc",
                  "body",
                  "body desc",
                  "bodyPreview",
                  "bodyPreview desc",
                  "end",
                  "end desc",
                  "hasAttachments",
                  "hasAttachments desc",
                  "iCalUId",
                  "iCalUId desc",
                  "importance",
                  "importance desc",
                  "isAllDay",
                  "isAllDay desc",
                  "isCancelled",
                  "isCancelled desc",
                  "isOrganizer",
                  "isOrganizer desc",
                  "isReminderOn",
                  "isReminderOn desc",
                  "location",
                  "location desc",
                  "locations",
                  "locations desc",
                  "onlineMeetingUrl",
                  "onlineMeetingUrl desc",
                  "organizer",
                  "organizer desc",
                  "originalEndTimeZone",
                  "originalEndTimeZone desc",
                  "originalStart",
                  "originalStart desc",
                  "originalStartTimeZone",
                  "originalStartTimeZone desc",
                  "recurrence",
                  "recurrence desc",
                  "reminderMinutesBeforeStart",
                  "reminderMinutesBeforeStart desc",
                  "responseRequested",
                  "responseRequested desc",
                  "responseStatus",
                  "responseStatus desc",
                  "sensitivity",
                  "sensitivity desc",
                  "seriesMasterId",
                  "seriesMasterId desc",
                  "showAs",
                  "showAs desc",
                  "start",
                  "start desc",
                  "subject",
                  "subject desc",
                  "type",
                  "type desc",
                  "webLink",
                  "webLink desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "categories",
                  "changeKey",
                  "createdDateTime",
                  "lastModifiedDateTime",
                  "attendees",
                  "body",
                  "bodyPreview",
                  "end",
                  "hasAttachments",
                  "iCalUId",
                  "importance",
                  "isAllDay",
                  "isCancelled",
                  "isOrganizer",
                  "isReminderOn",
                  "location",
                  "locations",
                  "onlineMeetingUrl",
                  "organizer",
                  "originalEndTimeZone",
                  "originalStart",
                  "originalStartTimeZone",
                  "recurrence",
                  "reminderMinutesBeforeStart",
                  "responseRequested",
                  "responseStatus",
                  "sensitivity",
                  "seriesMasterId",
                  "showAs",
                  "start",
                  "subject",
                  "type",
                  "webLink",
                  "attachments",
                  "calendar",
                  "extensions",
                  "instances",
                  "multiValueExtendedProperties",
                  "singleValueExtendedProperties"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "attachments",
                  "calendar",
                  "extensions",
                  "instances",
                  "multiValueExtendedProperties",
                  "singleValueExtendedProperties"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.event"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groups/{group-id}/events/{event-id}": {
      "get": {
        "tags": [
          "groups.event"
        ],
        "summary": "Get events from groups",
        "operationId": "groups.GetEvents",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "key: group-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "group"
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "key: event-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "event"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "categories",
                  "changeKey",
                  "createdDateTime",
                  "lastModifiedDateTime",
                  "attendees",
                  "body",
                  "bodyPreview",
                  "end",
                  "hasAttachments",
                  "iCalUId",
                  "importance",
                  "isAllDay",
                  "isCancelled",
                  "isOrganizer",
                  "isReminderOn",
                  "location",
                  "locations",
                  "onlineMeetingUrl",
                  "organizer",
                  "originalEndTimeZone",
                  "originalStart",
                  "originalStartTimeZone",
                  "recurrence",
                  "reminderMinutesBeforeStart",
                  "responseRequested",
                  "responseStatus",
                  "sensitivity",
                  "seriesMasterId",
                  "showAs",
                  "start",
                  "subject",
                  "type",
                  "webLink",
                  "attachments",
                  "calendar",
                  "extensions",
                  "instances",
                  "multiValueExtendedProperties",
                  "singleValueExtendedProperties"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "attachments",
                  "calendar",
                  "extensions",
                  "instances",
                  "multiValueExtendedProperties",
                  "singleValueExtendedProperties"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.event"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groups/{group-id}/events/{event-id}/accept": {
      "post": {
        "tags": [
          "groups.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "groups.events.accept",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "key: group-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "group"
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "key: event-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "event"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Nature of the data in the body of an entity. Required.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string",
                    "nullable": true
                  },
                  "sendResponse": {
                    "type": "boolean",
                    "default": false,
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Application": [
              "Calendars.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/groups/{group-id}/calendarView/{event-id}/accept"
      ]
    },
    "/groups/{group-id}/events/{event-id}/decline": {
      "post": {
        "tags": [
          "groups.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "groups.events.decline",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "key: group-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "group"
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "key: event-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "event"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Nature of the data in the body of an entity. Required.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string",
                    "nullable": true
                  },
                  "sendResponse": {
                    "type": "boolean",
                    "default": false,
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Application": [
              "Calendars.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/groups/{group-id}/calendarView/{event-id}/decline"
      ]
    },
    "/groups/{group-id}/events/{event-id}/dismissReminder": {
      "post": {
        "tags": [
          "groups.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "groups.events.dismissReminder",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "key: group-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "group"
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "key: event-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "event"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Application": [
              "Calendars.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/groups/{group-id}/calendarView/{event-id}/dismissReminder"
      ]
    },
    "/groups/{group-id}/events/{event-id}/snoozeReminder": {
      "post": {
        "tags": [
          "groups.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "groups.events.snoozeReminder",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "key: group-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "group"
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "key: event-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "event"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Nature of the data in the body of an entity. Required.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "newReminderTime": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.dateTimeTimeZone"
                      }
                    ],
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Application": [
              "Calendars.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/groups/{group-id}/calendarView/{event-id}/snoozeReminder"
      ]
    },
    "/groups/{group-id}/events/{event-id}/tentativelyAccept": {
      "post": {
        "tags": [
          "groups.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "groups.events.tentativelyAccept",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "key: group-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "group"
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "key: event-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "event"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Nature of the data in the body of an entity. Required.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string",
                    "nullable": true
                  },
                  "sendResponse": {
                    "type": "boolean",
                    "default": false,
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Application": [
              "Calendars.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/groups/{group-id}/calendarView/{event-id}/tentativelyAccept"
      ]
    },
    "/groups/{group-id}/events/delta()": {
      "get": {
        "tags": [
          "groups.Functions"
        ],
        "summary": "Invoke function delta",
        "operationId": "groups.events.delta.2209",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "key: group-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "group"
          },
          {
            "name": "startDateTime",
            "in": "query",
            "description": "String",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDateTime",
            "in": "query",
            "description": "String",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$deltatoken",
            "in": "query",
            "description": "String",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skiptoken",
            "in": "query",
            "description": "String",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "application/json. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Prefer",
            "in": "header",
            "description": "odata.maxpagesize={x}. Optional.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Prefer",
            "in": "header",
            "description": "{Time zone}. Optional, UTC assumed if absent.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.event"
                      }
                    ],
                    "nullable": true
                  }
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n  \"@odata.nextLink\":\"https://graph.microsoft.com/v1.0/me/calendarView/delta?$skiptoken={_skipToken_}\",\r\n  \"value\": [\r\n    {\r\n      \"originalStartTimeZone\": \"originalStartTimeZone-value\",\r\n      \"originalEndTimeZone\": \"originalEndTimeZone-value\",\r\n      \"responseStatus\": {\r\n        \"response\": \"response-value\",\r\n        \"time\": \"datetime-value\"\r\n      },\r\n      \"iCalUId\": \"iCalUId-value\",\r\n      \"reminderMinutesBeforeStart\": 99,\r\n      \"isReminderOn\": true\r\n    }\r\n  ]\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Calendars.Read"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Calendars.Read"
            ]
          },
          {
            "Application": [
              "Calendars.Read"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/groups/{group-id}/calendarView/delta()",
        "/groups/delta()"
      ]
    },
    "/groups/{group-id}/extensions": {
      "get": {
        "tags": [
          "groups.extension"
        ],
        "summary": "Get extensions from groups",
        "operationId": "groups.ListExtensions",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "key: group-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "group"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groups/{group-id}/extensions/{extension-id}": {
      "get": {
        "tags": [
          "groups.extension"
        ],
        "summary": "Get extensions from groups",
        "operationId": "groups.GetExtensions",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "key: group-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "group"
          },
          {
            "name": "extension-id",
            "in": "path",
            "description": "key: extension-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "extension"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groups/{group-id}/groupLifecyclePolicies": {
      "get": {
        "tags": [
          "groups.groupLifecyclePolicy"
        ],
        "summary": "Get groupLifecyclePolicies from groups",
        "operationId": "groups.ListGroupLifecyclePolicies",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "key: group-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "group"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "alternateNotificationEmails",
                  "alternateNotificationEmails desc",
                  "groupLifetimeInDays",
                  "groupLifetimeInDays desc",
                  "managedGroupTypes",
                  "managedGroupTypes desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "alternateNotificationEmails",
                  "groupLifetimeInDays",
                  "managedGroupTypes"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.groupLifecyclePolicy"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groups/{group-id}/groupLifecyclePolicies/{groupLifecyclePolicy-id}": {
      "get": {
        "tags": [
          "groups.groupLifecyclePolicy"
        ],
        "summary": "Get groupLifecyclePolicies from groups",
        "operationId": "groups.GetGroupLifecyclePolicies",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "key: group-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "group"
          },
          {
            "name": "groupLifecyclePolicy-id",
            "in": "path",
            "description": "key: groupLifecyclePolicy-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "groupLifecyclePolicy"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "alternateNotificationEmails",
                  "groupLifetimeInDays",
                  "managedGroupTypes"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.groupLifecyclePolicy"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groups/{group-id}/memberOf": {
      "get": {
        "tags": [
          "groups.directoryObject"
        ],
        "summary": "Get memberOf from groups",
        "operationId": "groups.ListMemberOf",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "key: group-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "group"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groups/{group-id}/memberOf/{directoryObject-id}": {
      "get": {
        "tags": [
          "groups.directoryObject"
        ],
        "summary": "Get memberOf from groups",
        "operationId": "groups.GetMemberOf",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "key: group-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "group"
          },
          {
            "name": "directoryObject-id",
            "in": "path",
            "description": "key: directoryObject-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "directoryObject"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groups/{group-id}/members": {
      "get": {
        "tags": [
          "groups.directoryObject"
        ],
        "summary": "Get members from groups",
        "operationId": "groups.ListMembers",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "key: group-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "group"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groups/{group-id}/members/{directoryObject-id}": {
      "get": {
        "tags": [
          "groups.directoryObject"
        ],
        "summary": "Get members from groups",
        "operationId": "groups.GetMembers",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "key: group-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "group"
          },
          {
            "name": "directoryObject-id",
            "in": "path",
            "description": "key: directoryObject-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "directoryObject"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groups/{group-id}/addFavorite": {
      "post": {
        "tags": [
          "groups.Actions"
        ],
        "summary": "Invoke action addFavorite",
        "operationId": "groups.addFavorite",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "key: group-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "group"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Prefer",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Group.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      }
    },
    "/groups/{group-id}/removeFavorite": {
      "post": {
        "tags": [
          "groups.Actions"
        ],
        "summary": "Invoke action removeFavorite",
        "operationId": "groups.removeFavorite",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "key: group-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "group"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Prefer",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Group.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      }
    },
    "/groups/{group-id}/renew": {
      "post": {
        "tags": [
          "groups.Actions"
        ],
        "summary": "Invoke action renew",
        "operationId": "groups.renew",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "key: group-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "group"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "default": false,
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Group.ReadWrite.All",
              "or",
              "Directory.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Group.ReadWrite.All",
              "or",
              "Directory.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      }
    },
    "/groups/{group-id}/resetUnseenCount": {
      "post": {
        "tags": [
          "groups.Actions"
        ],
        "summary": "Invoke action resetUnseenCount",
        "operationId": "groups.resetUnseenCount",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "key: group-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "group"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Prefer",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Group.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      }
    },
    "/groups/{group-id}/subscribeByMail": {
      "post": {
        "tags": [
          "groups.Actions"
        ],
        "summary": "Invoke action subscribeByMail",
        "operationId": "groups.subscribeByMail",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "key: group-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "group"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Prefer",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Group.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      }
    },
    "/groups/{group-id}/unsubscribeByMail": {
      "post": {
        "tags": [
          "groups.Actions"
        ],
        "summary": "Invoke action unsubscribeByMail",
        "operationId": "groups.unsubscribeByMail",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "key: group-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "group"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Prefer",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Group.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      }
    },
    "/groups/{group-id}/onenote": {
      "get": {
        "tags": [
          "groups.onenote"
        ],
        "summary": "Get onenote from groups",
        "operationId": "groups.GetOnenote",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "key: group-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "group"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "notebooks",
                  "operations",
                  "pages",
                  "resources",
                  "sectionGroups",
                  "sections"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "notebooks",
                  "operations",
                  "pages",
                  "resources",
                  "sectionGroups",
                  "sections"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.onenote"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groups/{group-id}/owners": {
      "get": {
        "tags": [
          "groups.directoryObject"
        ],
        "summary": "Get owners from groups",
        "operationId": "groups.ListOwners",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "key: group-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "group"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groups/{group-id}/owners/{directoryObject-id}": {
      "get": {
        "tags": [
          "groups.directoryObject"
        ],
        "summary": "Get owners from groups",
        "operationId": "groups.GetOwners",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "key: group-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "group"
          },
          {
            "name": "directoryObject-id",
            "in": "path",
            "description": "key: directoryObject-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "directoryObject"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groups/{group-id}/photo": {
      "get": {
        "tags": [
          "groups.profilePhoto"
        ],
        "summary": "Get photo from groups",
        "operationId": "groups.GetPhoto",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "key: group-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "group"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "height",
                  "width"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.profilePhoto"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groups/{group-id}/photos": {
      "get": {
        "tags": [
          "groups.profilePhoto"
        ],
        "summary": "Get photos from groups",
        "operationId": "groups.ListPhotos",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "key: group-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "group"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "height",
                  "height desc",
                  "width",
                  "width desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "height",
                  "width"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.profilePhoto"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groups/{group-id}/photos/{profilePhoto-id}": {
      "get": {
        "tags": [
          "groups.profilePhoto"
        ],
        "summary": "Get photos from groups",
        "operationId": "groups.GetPhotos",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "key: group-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "group"
          },
          {
            "name": "profilePhoto-id",
            "in": "path",
            "description": "key: profilePhoto-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "profilePhoto"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "height",
                  "width"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.profilePhoto"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groups/{group-id}/planner": {
      "get": {
        "tags": [
          "groups.plannerGroup"
        ],
        "summary": "Get planner from groups",
        "operationId": "groups.GetPlanner",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "key: group-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "group"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "plans"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "plans"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.plannerGroup"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groups/{group-id}/rejectedSenders": {
      "get": {
        "tags": [
          "groups.directoryObject"
        ],
        "summary": "Get rejectedSenders from groups",
        "operationId": "groups.ListRejectedSenders",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "key: group-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "group"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groups/{group-id}/rejectedSenders/{directoryObject-id}": {
      "get": {
        "tags": [
          "groups.directoryObject"
        ],
        "summary": "Get rejectedSenders from groups",
        "operationId": "groups.GetRejectedSenders",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "key: group-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "group"
          },
          {
            "name": "directoryObject-id",
            "in": "path",
            "description": "key: directoryObject-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "directoryObject"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groups/{group-id}/settings": {
      "get": {
        "tags": [
          "groups.groupSetting"
        ],
        "summary": "Get settings from groups",
        "operationId": "groups.ListSettings",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "key: group-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "group"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "displayName",
                  "displayName desc",
                  "templateId",
                  "templateId desc",
                  "values",
                  "values desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "displayName",
                  "templateId",
                  "values"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.groupSetting"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groups/{group-id}/settings/{groupSetting-id}": {
      "get": {
        "tags": [
          "groups.groupSetting"
        ],
        "summary": "Get settings from groups",
        "operationId": "groups.GetSettings",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "key: group-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "group"
          },
          {
            "name": "groupSetting-id",
            "in": "path",
            "description": "key: groupSetting-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "groupSetting"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "displayName",
                  "templateId",
                  "values"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.groupSetting"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groups/{group-id}/sites": {
      "get": {
        "tags": [
          "groups.site"
        ],
        "summary": "Get sites from groups",
        "operationId": "groups.ListSites",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "key: group-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "group"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "createdBy",
                  "createdBy desc",
                  "createdDateTime",
                  "createdDateTime desc",
                  "description",
                  "description desc",
                  "eTag",
                  "eTag desc",
                  "lastModifiedBy",
                  "lastModifiedBy desc",
                  "lastModifiedDateTime",
                  "lastModifiedDateTime desc",
                  "name",
                  "name desc",
                  "parentReference",
                  "parentReference desc",
                  "webUrl",
                  "webUrl desc",
                  "root",
                  "root desc",
                  "sharepointIds",
                  "sharepointIds desc",
                  "siteCollection",
                  "siteCollection desc",
                  "displayName",
                  "displayName desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "root",
                  "sharepointIds",
                  "siteCollection",
                  "displayName",
                  "createdByUser",
                  "lastModifiedByUser",
                  "contentTypes",
                  "drive",
                  "drives",
                  "items",
                  "lists",
                  "sites",
                  "columns",
                  "onenote"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "contentTypes",
                  "drive",
                  "drives",
                  "items",
                  "lists",
                  "sites",
                  "columns",
                  "onenote"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.site"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groups/{group-id}/sites/{site-id}": {
      "get": {
        "tags": [
          "groups.site"
        ],
        "summary": "Get sites from groups",
        "operationId": "groups.GetSites",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "key: group-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "group"
          },
          {
            "name": "site-id",
            "in": "path",
            "description": "key: site-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "site"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "root",
                  "sharepointIds",
                  "siteCollection",
                  "displayName",
                  "createdByUser",
                  "lastModifiedByUser",
                  "contentTypes",
                  "drive",
                  "drives",
                  "items",
                  "lists",
                  "sites",
                  "columns",
                  "onenote"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "contentTypes",
                  "drive",
                  "drives",
                  "items",
                  "lists",
                  "sites",
                  "columns",
                  "onenote"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.site"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groups/{group-id}/threads": {
      "get": {
        "tags": [
          "groups.conversationThread"
        ],
        "summary": "Get threads from groups",
        "operationId": "groups.ListThreads",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "key: group-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "group"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "ccRecipients",
                  "ccRecipients desc",
                  "hasAttachments",
                  "hasAttachments desc",
                  "isLocked",
                  "isLocked desc",
                  "lastDeliveredDateTime",
                  "lastDeliveredDateTime desc",
                  "preview",
                  "preview desc",
                  "toRecipients",
                  "toRecipients desc",
                  "topic",
                  "topic desc",
                  "uniqueSenders",
                  "uniqueSenders desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "ccRecipients",
                  "hasAttachments",
                  "isLocked",
                  "lastDeliveredDateTime",
                  "preview",
                  "toRecipients",
                  "topic",
                  "uniqueSenders",
                  "posts"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "posts"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.conversationThread"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groups/{group-id}/threads/{conversationThread-id}": {
      "get": {
        "tags": [
          "groups.conversationThread"
        ],
        "summary": "Get threads from groups",
        "operationId": "groups.GetThreads",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "key: group-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "group"
          },
          {
            "name": "conversationThread-id",
            "in": "path",
            "description": "key: conversationThread-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "conversationThread"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "ccRecipients",
                  "hasAttachments",
                  "isLocked",
                  "lastDeliveredDateTime",
                  "preview",
                  "toRecipients",
                  "topic",
                  "uniqueSenders",
                  "posts"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "posts"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.conversationThread"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groups/{group-id}/threads/{conversationThread-id}/reply": {
      "post": {
        "tags": [
          "groups.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "groups.threads.reply",
        "parameters": [
          {
            "name": "group-id",
            "in": "path",
            "description": "key: group-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "group"
          },
          {
            "name": "conversationThread-id",
            "in": "path",
            "description": "key: conversationThread-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "conversationThread"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "post": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.post"
                      }
                    ],
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Group.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Group.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      }
    },
    "/groups/delta()": {
      "get": {
        "tags": [
          "groups.Functions"
        ],
        "summary": "Invoke function delta",
        "operationId": "groups.delta.2209",
        "parameters": [
          {
            "name": "$deltatoken",
            "in": "query",
            "description": "String",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skiptoken",
            "in": "query",
            "description": "String",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.group"
                      }
                    ],
                    "nullable": true
                  }
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n  \"@odata.context\":\"https://graph.microsoft.com/v1.0/$metadata#groups\",\"@odata.nextLink\":\"https://graph.microsoft.com/v1.0/groups/delta?$skiptoken=pqwSUjGYvb3jQpbwVAwEL7yuI3dU1LecfkkfLPtnIjvY1FSSc_\",\r\n  \"value\":[\r\n    {\r\n      \"classification\": \"classification-value\",\r\n      \"createdDateTime\":\"datetime-value\",\r\n      \"description\":\"Test group 1\",\r\n      \"displayName\":\"TestGroup1\",\r\n      \"groupTypes\": [\r\n        \"groupTypes-value\"\r\n      ],\r\n      \"mail\": \"mail-value\",\r\n      \"members@delta\": [\r\n               {\r\n                   \"@odata.type\": \"#microsoft.graph.user\",\r\n                   \"id\": \"693acd06-2877-4339-8ade-b704261fe7a0\"\r\n               },\r\n               {\r\n                   \"@odata.type\": \"#microsoft.graph.user\",\r\n                   \"id\": \"49320844-be99-4164-8167-87ff5d047ace\"\r\n               }\r\n      ]\r\n    }\r\n  ]\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Group.Read.All",
              "Group.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Group.Read.All",
              "Group.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/groups/{group-id}/calendarView/delta()",
        "/groups/{group-id}/events/delta()"
      ]
    },
    "/groupSettings": {
      "get": {
        "tags": [
          "groupSettings.groupSetting"
        ],
        "summary": "Get entities from groupSettings",
        "operationId": "groupSettings.groupSetting.ListGroupSetting",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "displayName",
                  "displayName desc",
                  "templateId",
                  "templateId desc",
                  "values",
                  "values desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "displayName",
                  "templateId",
                  "values"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of groupSetting",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.groupSetting"
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n  \"displayName\": \"displayName-value\",\r\n  \"templateId\": \"templateId-value\",\r\n  \"values\": [\r\n    {\r\n      \"name\": \"name-value\",\r\n      \"value\": \"value-value\"\r\n    }\r\n  ],\r\n  \"id\": \"id-value\"\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Directory.Read.All",
              "Directory.ReadWrite.All",
              "Directory.AccessAsUser.All"
            ]
          },
          {
            "Application": [
              "Directory.Read.All",
              "Directory.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "groupSettings.groupSetting"
        ],
        "summary": "Add new entity to groupSettings",
        "operationId": "groupSettings.groupSetting.CreateGroupSetting",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.groupSetting"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.groupSetting"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groupSettings/{groupSetting-id}": {
      "get": {
        "tags": [
          "groupSettings.groupSetting"
        ],
        "summary": "Get entity from groupSettings by key",
        "operationId": "groupSettings.groupSetting.GetGroupSetting",
        "parameters": [
          {
            "name": "groupSetting-id",
            "in": "path",
            "description": "key: groupSetting-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "groupSetting"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "displayName",
                  "templateId",
                  "values"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.groupSetting"
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n  \"displayName\": \"displayName-value\",\r\n  \"templateId\": \"templateId-value\",\r\n  \"values\": [\r\n    {\r\n      \"name\": \"name-value\",\r\n      \"value\": \"value-value\"\r\n    }\r\n  ],\r\n  \"id\": \"id-value\"\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Directory.Read.All",
              "Directory.ReadWrite.All",
              "Directory.AccessAsUser.All"
            ]
          },
          {
            "Application": [
              "Directory.Read.All",
              "Directory.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "groupSettings.groupSetting"
        ],
        "summary": "Update entity in groupSettings",
        "operationId": "groupSettings.groupSetting.UpdateGroupSetting",
        "parameters": [
          {
            "name": "groupSetting-id",
            "in": "path",
            "description": "key: groupSetting-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "groupSetting"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.groupSetting"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Directory.ReadWrite.All",
              "Directory.AccessAsUser.All"
            ]
          },
          {
            "Application": [
              "Directory.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "groupSettings.groupSetting"
        ],
        "summary": "Delete entity from groupSettings",
        "operationId": "groupSettings.groupSetting.DeleteGroupSetting",
        "parameters": [
          {
            "name": "groupSetting-id",
            "in": "path",
            "description": "key: groupSetting-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "groupSetting"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "application/json",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Directory.ReadWrite.All",
              "Directory.AccessAsUser.All"
            ]
          },
          {
            "Application": [
              "Directory.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groupSettingTemplates": {
      "get": {
        "tags": [
          "groupSettingTemplates.groupSettingTemplate"
        ],
        "summary": "Get entities from groupSettingTemplates",
        "operationId": "groupSettingTemplates.groupSettingTemplate.ListGroupSettingTemplate",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "description",
                  "description desc",
                  "displayName",
                  "displayName desc",
                  "values",
                  "values desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "description",
                  "displayName",
                  "values"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of groupSettingTemplate",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.groupSettingTemplate"
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n    \"@odata.context\": \"https://graph.microsoft.com/v1.0/$metadata#groupSettingTemplates/$entity\",\r\n    \"id\": \"62375ab9-6b52-47ed-826b-58e47e0e304b\",\r\n    \"deletedDateTime\": null,\r\n    \"displayName\": \"Group.Unified\",\r\n    \"description\": \"Setting templates define the different settings that can be used for the associated ObjectSettings. This template defines settings that can be used for Unified Groups.\",\r\n    \"values\": [\r\n        {\r\n            \"name\": \"CustomBlockedWordsList\",\r\n            \"type\": \"System.String\",\r\n            \"defaultValue\": \"\",\r\n            \"description\": \"A comma-delimited list of blocked words for Unified Group displayName and mailNickName.\"\r\n        },\r\n        {\r\n            \"name\": \"EnableMSStandardBlockedWords\",\r\n            \"type\": \"System.Boolean\",\r\n            \"defaultValue\": \"false\",\r\n            \"description\": \"A flag indicating whether or not to enable the Microsoft Standard list of blocked words for Unified Group displayName and mailNickName.\"\r\n        },\r\n        {\r\n            \"name\": \"ClassificationDescriptions\",\r\n            \"type\": \"System.String\",\r\n            \"defaultValue\": \"\",\r\n            \"description\": \"A comma-delimited list of structured strings describing the classification values in the ClassificationList. The structure of the string is: Value: Description\"\r\n        }\r\n    ]\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Directory.Read.All",
              "Directory.ReadWrite.All",
              "Directory.AccessAsUser.All"
            ]
          },
          {
            "Application": [
              "Directory.Read.All",
              "Directory.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "groupSettingTemplates.groupSettingTemplate"
        ],
        "summary": "Add new entity to groupSettingTemplates",
        "operationId": "groupSettingTemplates.groupSettingTemplate.CreateGroupSettingTemplate",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.groupSettingTemplate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.groupSettingTemplate"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groupSettingTemplates/{groupSettingTemplate-id}": {
      "get": {
        "tags": [
          "groupSettingTemplates.groupSettingTemplate"
        ],
        "summary": "Get entity from groupSettingTemplates by key",
        "operationId": "groupSettingTemplates.groupSettingTemplate.GetGroupSettingTemplate",
        "parameters": [
          {
            "name": "groupSettingTemplate-id",
            "in": "path",
            "description": "key: groupSettingTemplate-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "groupSettingTemplate"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "description",
                  "displayName",
                  "values"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.groupSettingTemplate"
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n    \"@odata.context\": \"https://graph.microsoft.com/v1.0/$metadata#groupSettingTemplates/$entity\",\r\n    \"id\": \"62375ab9-6b52-47ed-826b-58e47e0e304b\",\r\n    \"deletedDateTime\": null,\r\n    \"displayName\": \"Group.Unified\",\r\n    \"description\": \"Setting templates define the different settings that can be used for the associated ObjectSettings. This template defines settings that can be used for Unified Groups.\",\r\n    \"values\": [\r\n        {\r\n            \"name\": \"CustomBlockedWordsList\",\r\n            \"type\": \"System.String\",\r\n            \"defaultValue\": \"\",\r\n            \"description\": \"A comma-delimited list of blocked words for Unified Group displayName and mailNickName.\"\r\n        },\r\n        {\r\n            \"name\": \"EnableMSStandardBlockedWords\",\r\n            \"type\": \"System.Boolean\",\r\n            \"defaultValue\": \"false\",\r\n            \"description\": \"A flag indicating whether or not to enable the Microsoft Standard list of blocked words for Unified Group displayName and mailNickName.\"\r\n        },\r\n        {\r\n            \"name\": \"ClassificationDescriptions\",\r\n            \"type\": \"System.String\",\r\n            \"defaultValue\": \"\",\r\n            \"description\": \"A comma-delimited list of structured strings describing the classification values in the ClassificationList. The structure of the string is: Value: Description\"\r\n        }\r\n    ]\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Directory.Read.All",
              "Directory.ReadWrite.All",
              "Directory.AccessAsUser.All"
            ]
          },
          {
            "Application": [
              "Directory.Read.All",
              "Directory.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "groupSettingTemplates.groupSettingTemplate"
        ],
        "summary": "Update entity in groupSettingTemplates",
        "operationId": "groupSettingTemplates.groupSettingTemplate.UpdateGroupSettingTemplate",
        "parameters": [
          {
            "name": "groupSettingTemplate-id",
            "in": "path",
            "description": "key: groupSettingTemplate-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "groupSettingTemplate"
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.groupSettingTemplate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "groupSettingTemplates.groupSettingTemplate"
        ],
        "summary": "Delete entity from groupSettingTemplates",
        "operationId": "groupSettingTemplates.groupSettingTemplate.DeleteGroupSettingTemplate",
        "parameters": [
          {
            "name": "groupSettingTemplate-id",
            "in": "path",
            "description": "key: groupSettingTemplate-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "groupSettingTemplate"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/invitations": {
      "get": {
        "tags": [
          "invitations.invitation"
        ],
        "summary": "Get invitations",
        "operationId": "invitations.invitation.GetInvitation",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "invitedUserDisplayName",
                  "invitedUserEmailAddress",
                  "invitedUserMessageInfo",
                  "sendInvitationMessage",
                  "inviteRedirectUrl",
                  "inviteRedeemUrl",
                  "status",
                  "invitedUserType",
                  "invitedUser"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "invitedUser"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.invitation"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "invitations.invitation"
        ],
        "summary": "Update invitations",
        "operationId": "invitations.invitation.UpdateInvitation",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.invitation"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/invitations/invitedUser": {
      "get": {
        "tags": [
          "invitations.user"
        ],
        "summary": "Get invitedUser from invitations",
        "operationId": "invitations.GetInvitedUser",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "deviceEnrollmentLimit",
                  "aboutMe",
                  "accountEnabled",
                  "ageGroup",
                  "assignedLicenses",
                  "assignedPlans",
                  "birthday",
                  "businessPhones",
                  "city",
                  "companyName",
                  "consentProvidedForMinor",
                  "country",
                  "department",
                  "displayName",
                  "givenName",
                  "hireDate",
                  "imAddresses",
                  "interests",
                  "jobTitle",
                  "legalAgeGroupClassification",
                  "mail",
                  "mailboxSettings",
                  "mailNickname",
                  "mobilePhone",
                  "mySite",
                  "officeLocation",
                  "onPremisesDomainName",
                  "onPremisesExtensionAttributes",
                  "onPremisesImmutableId",
                  "onPremisesLastSyncDateTime",
                  "onPremisesProvisioningErrors",
                  "onPremisesSamAccountName",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSyncEnabled",
                  "onPremisesUserPrincipalName",
                  "passwordPolicies",
                  "passwordProfile",
                  "pastProjects",
                  "postalCode",
                  "preferredLanguage",
                  "preferredName",
                  "provisionedPlans",
                  "proxyAddresses",
                  "responsibilities",
                  "schools",
                  "skills",
                  "state",
                  "streetAddress",
                  "surname",
                  "usageLocation",
                  "userPrincipalName",
                  "userType",
                  "managedDevices",
                  "managedAppRegistrations",
                  "deviceManagementTroubleshootingEvents",
                  "calendar",
                  "calendarGroups",
                  "calendarView",
                  "calendars",
                  "contacts",
                  "contactFolders",
                  "createdObjects",
                  "directReports",
                  "drive",
                  "drives",
                  "events",
                  "inferenceClassification",
                  "mailFolders",
                  "manager",
                  "memberOf",
                  "messages",
                  "outlook",
                  "ownedDevices",
                  "ownedObjects",
                  "photo",
                  "registeredDevices",
                  "activities",
                  "extensions",
                  "licenseDetails",
                  "onenote",
                  "people",
                  "planner"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "managedDevices",
                  "managedAppRegistrations",
                  "deviceManagementTroubleshootingEvents",
                  "calendar",
                  "calendarGroups",
                  "calendarView",
                  "calendars",
                  "contacts",
                  "contactFolders",
                  "createdObjects",
                  "directReports",
                  "drive",
                  "drives",
                  "events",
                  "inferenceClassification",
                  "mailFolders",
                  "manager",
                  "memberOf",
                  "messages",
                  "outlook",
                  "ownedDevices",
                  "ownedObjects",
                  "photo",
                  "registeredDevices",
                  "activities",
                  "extensions",
                  "licenseDetails",
                  "onenote",
                  "people",
                  "planner"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.user"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me": {
      "get": {
        "tags": [
          "me.user"
        ],
        "summary": "Get me",
        "operationId": "me.user.GetUser",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "deviceEnrollmentLimit",
                  "aboutMe",
                  "accountEnabled",
                  "ageGroup",
                  "assignedLicenses",
                  "assignedPlans",
                  "birthday",
                  "businessPhones",
                  "city",
                  "companyName",
                  "consentProvidedForMinor",
                  "country",
                  "department",
                  "displayName",
                  "givenName",
                  "hireDate",
                  "imAddresses",
                  "interests",
                  "jobTitle",
                  "legalAgeGroupClassification",
                  "mail",
                  "mailboxSettings",
                  "mailNickname",
                  "mobilePhone",
                  "mySite",
                  "officeLocation",
                  "onPremisesDomainName",
                  "onPremisesExtensionAttributes",
                  "onPremisesImmutableId",
                  "onPremisesLastSyncDateTime",
                  "onPremisesProvisioningErrors",
                  "onPremisesSamAccountName",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSyncEnabled",
                  "onPremisesUserPrincipalName",
                  "passwordPolicies",
                  "passwordProfile",
                  "pastProjects",
                  "postalCode",
                  "preferredLanguage",
                  "preferredName",
                  "provisionedPlans",
                  "proxyAddresses",
                  "responsibilities",
                  "schools",
                  "skills",
                  "state",
                  "streetAddress",
                  "surname",
                  "usageLocation",
                  "userPrincipalName",
                  "userType",
                  "managedDevices",
                  "managedAppRegistrations",
                  "deviceManagementTroubleshootingEvents",
                  "calendar",
                  "calendarGroups",
                  "calendarView",
                  "calendars",
                  "contacts",
                  "contactFolders",
                  "createdObjects",
                  "directReports",
                  "drive",
                  "drives",
                  "events",
                  "inferenceClassification",
                  "mailFolders",
                  "manager",
                  "memberOf",
                  "messages",
                  "outlook",
                  "ownedDevices",
                  "ownedObjects",
                  "photo",
                  "registeredDevices",
                  "activities",
                  "extensions",
                  "licenseDetails",
                  "onenote",
                  "people",
                  "planner"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "managedDevices",
                  "managedAppRegistrations",
                  "deviceManagementTroubleshootingEvents",
                  "calendar",
                  "calendarGroups",
                  "calendarView",
                  "calendars",
                  "contacts",
                  "contactFolders",
                  "createdObjects",
                  "directReports",
                  "drive",
                  "drives",
                  "events",
                  "inferenceClassification",
                  "mailFolders",
                  "manager",
                  "memberOf",
                  "messages",
                  "outlook",
                  "ownedDevices",
                  "ownedObjects",
                  "photo",
                  "registeredDevices",
                  "activities",
                  "extensions",
                  "licenseDetails",
                  "onenote",
                  "people",
                  "planner"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.user"
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "me.user"
        ],
        "summary": "Update me",
        "operationId": "me.user.UpdateUser",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.user"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "User.ReadWrite",
              "User.ReadWrite.All",
              "Directory.ReadWrite.All",
              "Directory.AccessAsUser.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "User.ReadWrite"
            ]
          },
          {
            "Application": [
              "User.ReadWrite.All",
              "Directory.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/activities": {
      "get": {
        "tags": [
          "me.userActivity"
        ],
        "summary": "Get activities from me",
        "operationId": "me.ListActivities",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "appActivityId",
                  "appActivityId desc",
                  "activitySourceHost",
                  "activitySourceHost desc",
                  "userTimezone",
                  "userTimezone desc",
                  "appDisplayName",
                  "appDisplayName desc",
                  "activationUrl",
                  "activationUrl desc",
                  "contentUrl",
                  "contentUrl desc",
                  "fallbackUrl",
                  "fallbackUrl desc",
                  "createdDateTime",
                  "createdDateTime desc",
                  "lastModifiedDateTime",
                  "lastModifiedDateTime desc",
                  "expirationDateTime",
                  "expirationDateTime desc",
                  "status",
                  "status desc",
                  "contentInfo",
                  "contentInfo desc",
                  "visualElements",
                  "visualElements desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "appActivityId",
                  "activitySourceHost",
                  "userTimezone",
                  "appDisplayName",
                  "activationUrl",
                  "contentUrl",
                  "fallbackUrl",
                  "createdDateTime",
                  "lastModifiedDateTime",
                  "expirationDateTime",
                  "status",
                  "contentInfo",
                  "visualElements",
                  "historyItems"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "historyItems"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.userActivity"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/activities/{userActivity-id}": {
      "get": {
        "tags": [
          "me.userActivity"
        ],
        "summary": "Get activities from me",
        "operationId": "me.GetActivities",
        "parameters": [
          {
            "name": "userActivity-id",
            "in": "path",
            "description": "key: userActivity-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "userActivity"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "appActivityId",
                  "activitySourceHost",
                  "userTimezone",
                  "appDisplayName",
                  "activationUrl",
                  "contentUrl",
                  "fallbackUrl",
                  "createdDateTime",
                  "lastModifiedDateTime",
                  "expirationDateTime",
                  "status",
                  "contentInfo",
                  "visualElements",
                  "historyItems"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "historyItems"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.userActivity"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/activities/recent()": {
      "get": {
        "tags": [
          "me.Functions"
        ],
        "summary": "Invoke function recent",
        "operationId": "me.activities.recent.f75f",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.userActivity"
                      }
                    ],
                    "nullable": true
                  }
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n    \"@odata.context\": \"https://graph.microsoft.com/v1.0/$metadata#Collection(userActivity)\",\r\n    \"@odata.nextLink\": \"https://graph.microsoft.com/v1.0/me/activities/recent?$skiptoken=%24filter%3dlastModifiedDateTime+lt+2018-02-26T18%3a06%3a19.365Z\",\r\n    \"value\": [{\r\n        \"@odata.type\": \"#microsoft.graph.userActivity\",\r\n        \"activitySourceHost\": \"https://www.contoso.com\",\r\n        \"createdDateTime\": \"2018-02-26T18:34:29.592Z\",\r\n        \"lastModifiedDateTime\": \"2018-02-26T18:34:29.607Z\",\r\n        \"id\": \"5347642601316252694\",\r\n        \"appActivityId\": \"/article?12345\",\r\n        \"visualElements\": {\r\n            \"attribution\": {\r\n              \"iconUrl\": \"http://www.contoso.com/icon\",\r\n              \"alternateText\": \"Contoso, Ltd.\",\r\n              \"addImageQuery\": false,\r\n              },\r\n            \"displayText\": \"Contoso How-To: How to Tie a Reef Knot\",\r\n            \"description\": \"How to Tie a Reef Knot. A step-by-step visual guide to the art of nautical knot-tying.\",\r\n            \"backgroundColor\": \"#ff0000\",\r\n            \"content\": {\r\n              \"$schema\": \"http://adaptivecards.io/schemas/adaptive-card.json\",\r\n              \"type\": \"AdaptiveCard\",\r\n              \"body\":\r\n              [{\r\n                  \"type\": \"TextBlock\",\r\n                  \"text\": \"Contoso MainPage\"\r\n              }]\r\n            }\r\n        },\r\n        \"activationUrl\": \"http://www.contoso.com/article?id=12345\",\r\n        \"appDisplayName\": \"Contoso, Ltd.\",\r\n        \"userTimezone\": \"Africa/Casablanca\",\r\n        \"fallbackUrl\": \"http://www.contoso.com/article?id=12345\",\r\n        \"contentUrl\": \"http://www.contoso.com/article?id=12345\",\r\n        \"contentInfo\": {\r\n            \"@context\": \"http://schema.org\",\r\n            \"@type\": \"Article\",\r\n            \"author\": \"John Doe\",\r\n            \"name\": \"How to Tie a Reef Knot\"\r\n        },\r\n        \"expirationDateTime\": \"2018-03-28T18:34:29.607Z\",\r\n        \"status\": \"updated\"\r\n    }]\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "UserActivity.ReadWrite.CreatedByApp"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "UserActivity.ReadWrite.CreatedByApp"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/me/calendar": {
      "get": {
        "tags": [
          "me.calendar"
        ],
        "summary": "Get calendar from me",
        "operationId": "me.GetCalendar",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "canEdit",
                  "canShare",
                  "canViewPrivateItems",
                  "changeKey",
                  "color",
                  "name",
                  "owner",
                  "calendarView",
                  "events",
                  "multiValueExtendedProperties",
                  "singleValueExtendedProperties"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "calendarView",
                  "events",
                  "multiValueExtendedProperties",
                  "singleValueExtendedProperties"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.calendar"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/calendarGroups": {
      "get": {
        "tags": [
          "me.calendarGroup"
        ],
        "summary": "Get calendarGroups from me",
        "operationId": "me.ListCalendarGroups",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "changeKey",
                  "changeKey desc",
                  "classId",
                  "classId desc",
                  "name",
                  "name desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "changeKey",
                  "classId",
                  "name",
                  "calendars"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "calendars"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.calendarGroup"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/calendarGroups/{calendarGroup-id}": {
      "get": {
        "tags": [
          "me.calendarGroup"
        ],
        "summary": "Get calendarGroups from me",
        "operationId": "me.GetCalendarGroups",
        "parameters": [
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "key: calendarGroup-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "calendarGroup"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "changeKey",
                  "classId",
                  "name",
                  "calendars"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "calendars"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.calendarGroup"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/calendars": {
      "get": {
        "tags": [
          "me.calendar"
        ],
        "summary": "Get calendars from me",
        "operationId": "me.ListCalendars",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "canEdit",
                  "canEdit desc",
                  "canShare",
                  "canShare desc",
                  "canViewPrivateItems",
                  "canViewPrivateItems desc",
                  "changeKey",
                  "changeKey desc",
                  "color",
                  "color desc",
                  "name",
                  "name desc",
                  "owner",
                  "owner desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "canEdit",
                  "canShare",
                  "canViewPrivateItems",
                  "changeKey",
                  "color",
                  "name",
                  "owner",
                  "calendarView",
                  "events",
                  "multiValueExtendedProperties",
                  "singleValueExtendedProperties"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "calendarView",
                  "events",
                  "multiValueExtendedProperties",
                  "singleValueExtendedProperties"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.calendar"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/calendars/{calendar-id}": {
      "get": {
        "tags": [
          "me.calendar"
        ],
        "summary": "Get calendars from me",
        "operationId": "me.GetCalendars",
        "parameters": [
          {
            "name": "calendar-id",
            "in": "path",
            "description": "key: calendar-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "calendar"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "canEdit",
                  "canShare",
                  "canViewPrivateItems",
                  "changeKey",
                  "color",
                  "name",
                  "owner",
                  "calendarView",
                  "events",
                  "multiValueExtendedProperties",
                  "singleValueExtendedProperties"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "calendarView",
                  "events",
                  "multiValueExtendedProperties",
                  "singleValueExtendedProperties"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.calendar"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/calendarView": {
      "get": {
        "tags": [
          "me.event"
        ],
        "summary": "Get calendarView from me",
        "operationId": "me.ListCalendarView",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "categories",
                  "categories desc",
                  "changeKey",
                  "changeKey desc",
                  "createdDateTime",
                  "createdDateTime desc",
                  "lastModifiedDateTime",
                  "lastModifiedDateTime desc",
                  "attendees",
                  "attendees desc",
                  "body",
                  "body desc",
                  "bodyPreview",
                  "bodyPreview desc",
                  "end",
                  "end desc",
                  "hasAttachments",
                  "hasAttachments desc",
                  "iCalUId",
                  "iCalUId desc",
                  "importance",
                  "importance desc",
                  "isAllDay",
                  "isAllDay desc",
                  "isCancelled",
                  "isCancelled desc",
                  "isOrganizer",
                  "isOrganizer desc",
                  "isReminderOn",
                  "isReminderOn desc",
                  "location",
                  "location desc",
                  "locations",
                  "locations desc",
                  "onlineMeetingUrl",
                  "onlineMeetingUrl desc",
                  "organizer",
                  "organizer desc",
                  "originalEndTimeZone",
                  "originalEndTimeZone desc",
                  "originalStart",
                  "originalStart desc",
                  "originalStartTimeZone",
                  "originalStartTimeZone desc",
                  "recurrence",
                  "recurrence desc",
                  "reminderMinutesBeforeStart",
                  "reminderMinutesBeforeStart desc",
                  "responseRequested",
                  "responseRequested desc",
                  "responseStatus",
                  "responseStatus desc",
                  "sensitivity",
                  "sensitivity desc",
                  "seriesMasterId",
                  "seriesMasterId desc",
                  "showAs",
                  "showAs desc",
                  "start",
                  "start desc",
                  "subject",
                  "subject desc",
                  "type",
                  "type desc",
                  "webLink",
                  "webLink desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "categories",
                  "changeKey",
                  "createdDateTime",
                  "lastModifiedDateTime",
                  "attendees",
                  "body",
                  "bodyPreview",
                  "end",
                  "hasAttachments",
                  "iCalUId",
                  "importance",
                  "isAllDay",
                  "isCancelled",
                  "isOrganizer",
                  "isReminderOn",
                  "location",
                  "locations",
                  "onlineMeetingUrl",
                  "organizer",
                  "originalEndTimeZone",
                  "originalStart",
                  "originalStartTimeZone",
                  "recurrence",
                  "reminderMinutesBeforeStart",
                  "responseRequested",
                  "responseStatus",
                  "sensitivity",
                  "seriesMasterId",
                  "showAs",
                  "start",
                  "subject",
                  "type",
                  "webLink",
                  "attachments",
                  "calendar",
                  "extensions",
                  "instances",
                  "multiValueExtendedProperties",
                  "singleValueExtendedProperties"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "attachments",
                  "calendar",
                  "extensions",
                  "instances",
                  "multiValueExtendedProperties",
                  "singleValueExtendedProperties"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.event"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/calendarView/{event-id}": {
      "get": {
        "tags": [
          "me.event"
        ],
        "summary": "Get calendarView from me",
        "operationId": "me.GetCalendarView",
        "parameters": [
          {
            "name": "event-id",
            "in": "path",
            "description": "key: event-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "event"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "categories",
                  "changeKey",
                  "createdDateTime",
                  "lastModifiedDateTime",
                  "attendees",
                  "body",
                  "bodyPreview",
                  "end",
                  "hasAttachments",
                  "iCalUId",
                  "importance",
                  "isAllDay",
                  "isCancelled",
                  "isOrganizer",
                  "isReminderOn",
                  "location",
                  "locations",
                  "onlineMeetingUrl",
                  "organizer",
                  "originalEndTimeZone",
                  "originalStart",
                  "originalStartTimeZone",
                  "recurrence",
                  "reminderMinutesBeforeStart",
                  "responseRequested",
                  "responseStatus",
                  "sensitivity",
                  "seriesMasterId",
                  "showAs",
                  "start",
                  "subject",
                  "type",
                  "webLink",
                  "attachments",
                  "calendar",
                  "extensions",
                  "instances",
                  "multiValueExtendedProperties",
                  "singleValueExtendedProperties"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "attachments",
                  "calendar",
                  "extensions",
                  "instances",
                  "multiValueExtendedProperties",
                  "singleValueExtendedProperties"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.event"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/calendarView/{event-id}/accept": {
      "post": {
        "tags": [
          "me.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "me.calendarView.accept",
        "parameters": [
          {
            "name": "event-id",
            "in": "path",
            "description": "key: event-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "event"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Nature of the data in the body of an entity. Required.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string",
                    "nullable": true
                  },
                  "sendResponse": {
                    "type": "boolean",
                    "default": false,
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Application": [
              "Calendars.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/me/events/{event-id}/accept"
      ]
    },
    "/me/calendarView/{event-id}/decline": {
      "post": {
        "tags": [
          "me.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "me.calendarView.decline",
        "parameters": [
          {
            "name": "event-id",
            "in": "path",
            "description": "key: event-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "event"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Nature of the data in the body of an entity. Required.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string",
                    "nullable": true
                  },
                  "sendResponse": {
                    "type": "boolean",
                    "default": false,
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Application": [
              "Calendars.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/me/events/{event-id}/decline"
      ]
    },
    "/me/calendarView/{event-id}/dismissReminder": {
      "post": {
        "tags": [
          "me.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "me.calendarView.dismissReminder",
        "parameters": [
          {
            "name": "event-id",
            "in": "path",
            "description": "key: event-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "event"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Application": [
              "Calendars.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/me/events/{event-id}/dismissReminder"
      ]
    },
    "/me/calendarView/{event-id}/snoozeReminder": {
      "post": {
        "tags": [
          "me.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "me.calendarView.snoozeReminder",
        "parameters": [
          {
            "name": "event-id",
            "in": "path",
            "description": "key: event-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "event"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Nature of the data in the body of an entity. Required.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "newReminderTime": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.dateTimeTimeZone"
                      }
                    ],
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Application": [
              "Calendars.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/me/events/{event-id}/snoozeReminder"
      ]
    },
    "/me/calendarView/{event-id}/tentativelyAccept": {
      "post": {
        "tags": [
          "me.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "me.calendarView.tentativelyAccept",
        "parameters": [
          {
            "name": "event-id",
            "in": "path",
            "description": "key: event-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "event"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Nature of the data in the body of an entity. Required.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string",
                    "nullable": true
                  },
                  "sendResponse": {
                    "type": "boolean",
                    "default": false,
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Application": [
              "Calendars.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/me/events/{event-id}/tentativelyAccept"
      ]
    },
    "/me/calendarView/delta()": {
      "get": {
        "tags": [
          "me.Functions"
        ],
        "summary": "Invoke function delta",
        "operationId": "me.calendarView.delta.2209",
        "parameters": [
          {
            "name": "startDateTime",
            "in": "query",
            "description": "String",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDateTime",
            "in": "query",
            "description": "String",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$deltatoken",
            "in": "query",
            "description": "String",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skiptoken",
            "in": "query",
            "description": "String",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "application/json. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Prefer",
            "in": "header",
            "description": "odata.maxpagesize={x}. Optional.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Prefer",
            "in": "header",
            "description": "{Time zone}. Optional, UTC assumed if absent.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.event"
                      }
                    ],
                    "nullable": true
                  }
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n  \"@odata.nextLink\":\"https://graph.microsoft.com/v1.0/me/calendarView/delta?$skiptoken={_skipToken_}\",\r\n  \"value\": [\r\n    {\r\n      \"originalStartTimeZone\": \"originalStartTimeZone-value\",\r\n      \"originalEndTimeZone\": \"originalEndTimeZone-value\",\r\n      \"responseStatus\": {\r\n        \"response\": \"response-value\",\r\n        \"time\": \"datetime-value\"\r\n      },\r\n      \"iCalUId\": \"iCalUId-value\",\r\n      \"reminderMinutesBeforeStart\": 99,\r\n      \"isReminderOn\": true\r\n    }\r\n  ]\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Calendars.Read"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Calendars.Read"
            ]
          },
          {
            "Application": [
              "Calendars.Read"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/me/contactFolders/delta()",
        "/me/contacts/delta()",
        "/me/events/delta()",
        "/me/mailFolders/delta()",
        "/me/messages/delta()"
      ]
    },
    "/me/contactFolders": {
      "get": {
        "tags": [
          "me.contactFolder"
        ],
        "summary": "Get contactFolders from me",
        "operationId": "me.ListContactFolders",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "displayName",
                  "displayName desc",
                  "parentFolderId",
                  "parentFolderId desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "displayName",
                  "parentFolderId",
                  "childFolders",
                  "contacts",
                  "multiValueExtendedProperties",
                  "singleValueExtendedProperties"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "childFolders",
                  "contacts",
                  "multiValueExtendedProperties",
                  "singleValueExtendedProperties"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.contactFolder"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/contactFolders/{contactFolder-id}": {
      "get": {
        "tags": [
          "me.contactFolder"
        ],
        "summary": "Get contactFolders from me",
        "operationId": "me.GetContactFolders",
        "parameters": [
          {
            "name": "contactFolder-id",
            "in": "path",
            "description": "key: contactFolder-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "contactFolder"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "displayName",
                  "parentFolderId",
                  "childFolders",
                  "contacts",
                  "multiValueExtendedProperties",
                  "singleValueExtendedProperties"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "childFolders",
                  "contacts",
                  "multiValueExtendedProperties",
                  "singleValueExtendedProperties"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.contactFolder"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/contactFolders/delta()": {
      "get": {
        "tags": [
          "me.Functions"
        ],
        "summary": "Invoke function delta",
        "operationId": "me.contactFolders.delta.2209",
        "parameters": [
          {
            "name": "$deltatoken",
            "in": "query",
            "description": "String",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skiptoken",
            "in": "query",
            "description": "String",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "application/json. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Prefer",
            "in": "header",
            "description": "odata.maxpagesize={x}. Optional.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.contactFolder"
                      }
                    ],
                    "nullable": true
                  }
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n  \"@odata.nextLink\":\"https://graph.microsoft.com/v1.0/me/contactfolders/delta?$skiptoken={_skipToken_}\",\r\n  \"value\": [\r\n    {\r\n     \"parentFolderId\": \"parentFolderId-value\",\r\n      \"displayName\": \"displayName-value\",\r\n      \"id\": \"id-value\"\r\n    }\r\n  ]\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Contacts.Read",
              "Contacts.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Contacts.Read",
              "Contacts.ReadWrite"
            ]
          },
          {
            "Application": [
              "Contacts.Read",
              "Contacts.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/me/calendarView/delta()",
        "/me/contacts/delta()",
        "/me/events/delta()",
        "/me/mailFolders/delta()",
        "/me/messages/delta()"
      ]
    },
    "/me/contacts": {
      "get": {
        "tags": [
          "me.contact"
        ],
        "summary": "Get contacts from me",
        "operationId": "me.ListContacts",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "categories",
                  "categories desc",
                  "changeKey",
                  "changeKey desc",
                  "createdDateTime",
                  "createdDateTime desc",
                  "lastModifiedDateTime",
                  "lastModifiedDateTime desc",
                  "assistantName",
                  "assistantName desc",
                  "birthday",
                  "birthday desc",
                  "businessAddress",
                  "businessAddress desc",
                  "businessHomePage",
                  "businessHomePage desc",
                  "businessPhones",
                  "businessPhones desc",
                  "children",
                  "children desc",
                  "companyName",
                  "companyName desc",
                  "department",
                  "department desc",
                  "displayName",
                  "displayName desc",
                  "emailAddresses",
                  "emailAddresses desc",
                  "flag",
                  "flag desc",
                  "fileAs",
                  "fileAs desc",
                  "generation",
                  "generation desc",
                  "givenName",
                  "givenName desc",
                  "homeAddress",
                  "homeAddress desc",
                  "homePhones",
                  "homePhones desc",
                  "imAddresses",
                  "imAddresses desc",
                  "initials",
                  "initials desc",
                  "jobTitle",
                  "jobTitle desc",
                  "manager",
                  "manager desc",
                  "middleName",
                  "middleName desc",
                  "mobilePhone",
                  "mobilePhone desc",
                  "nickName",
                  "nickName desc",
                  "officeLocation",
                  "officeLocation desc",
                  "otherAddress",
                  "otherAddress desc",
                  "parentFolderId",
                  "parentFolderId desc",
                  "personalNotes",
                  "personalNotes desc",
                  "profession",
                  "profession desc",
                  "spouseName",
                  "spouseName desc",
                  "surname",
                  "surname desc",
                  "title",
                  "title desc",
                  "yomiCompanyName",
                  "yomiCompanyName desc",
                  "yomiGivenName",
                  "yomiGivenName desc",
                  "yomiSurname",
                  "yomiSurname desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "categories",
                  "changeKey",
                  "createdDateTime",
                  "lastModifiedDateTime",
                  "assistantName",
                  "birthday",
                  "businessAddress",
                  "businessHomePage",
                  "businessPhones",
                  "children",
                  "companyName",
                  "department",
                  "displayName",
                  "emailAddresses",
                  "flag",
                  "fileAs",
                  "generation",
                  "givenName",
                  "homeAddress",
                  "homePhones",
                  "imAddresses",
                  "initials",
                  "jobTitle",
                  "manager",
                  "middleName",
                  "mobilePhone",
                  "nickName",
                  "officeLocation",
                  "otherAddress",
                  "parentFolderId",
                  "personalNotes",
                  "profession",
                  "spouseName",
                  "surname",
                  "title",
                  "yomiCompanyName",
                  "yomiGivenName",
                  "yomiSurname",
                  "photo",
                  "extensions",
                  "multiValueExtendedProperties",
                  "singleValueExtendedProperties"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "photo",
                  "extensions",
                  "multiValueExtendedProperties",
                  "singleValueExtendedProperties"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.contact"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/contacts/{contact-id}": {
      "get": {
        "tags": [
          "me.contact"
        ],
        "summary": "Get contacts from me",
        "operationId": "me.GetContacts",
        "parameters": [
          {
            "name": "contact-id",
            "in": "path",
            "description": "key: contact-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "contact"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "categories",
                  "changeKey",
                  "createdDateTime",
                  "lastModifiedDateTime",
                  "assistantName",
                  "birthday",
                  "businessAddress",
                  "businessHomePage",
                  "businessPhones",
                  "children",
                  "companyName",
                  "department",
                  "displayName",
                  "emailAddresses",
                  "flag",
                  "fileAs",
                  "generation",
                  "givenName",
                  "homeAddress",
                  "homePhones",
                  "imAddresses",
                  "initials",
                  "jobTitle",
                  "manager",
                  "middleName",
                  "mobilePhone",
                  "nickName",
                  "officeLocation",
                  "otherAddress",
                  "parentFolderId",
                  "personalNotes",
                  "profession",
                  "spouseName",
                  "surname",
                  "title",
                  "yomiCompanyName",
                  "yomiGivenName",
                  "yomiSurname",
                  "photo",
                  "extensions",
                  "multiValueExtendedProperties",
                  "singleValueExtendedProperties"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "photo",
                  "extensions",
                  "multiValueExtendedProperties",
                  "singleValueExtendedProperties"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.contact"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/contacts/delta()": {
      "get": {
        "tags": [
          "me.Functions"
        ],
        "summary": "Invoke function delta",
        "operationId": "me.contacts.delta.2209",
        "parameters": [
          {
            "name": "$deltatoken",
            "in": "query",
            "description": "String",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skiptoken",
            "in": "query",
            "description": "String",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "application/json. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Prefer",
            "in": "header",
            "description": "odata.maxpagesize={x}. Optional.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.contact"
                      }
                    ],
                    "nullable": true
                  }
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n  \"@odata.nextLink\":\"https://graph.microsoft.com/v1.0/me/contactfolders('{id}')/contacts/delta?$skiptoken={_skipToken_}\",\r\n  \"value\": [\r\n    {\r\n      \"parentFolderId\": \"parentFolderId-value\",\r\n      \"birthday\": \"2016-10-19T10:37:00Z\",\r\n      \"fileAs\": \"fileAs-value\",\r\n      \"displayName\": \"displayName-value\",\r\n      \"givenName\": \"givenName-value\",\r\n      \"initials\": \"initials-value\"\r\n    }\r\n  ]\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Contacts.Read",
              "Contacts.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Contacts.Read",
              "Contacts.ReadWrite"
            ]
          },
          {
            "Application": [
              "Contacts.Read",
              "Contacts.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/me/calendarView/delta()",
        "/me/contactFolders/delta()",
        "/me/events/delta()",
        "/me/mailFolders/delta()",
        "/me/messages/delta()"
      ]
    },
    "/me/createdObjects": {
      "get": {
        "tags": [
          "me.directoryObject"
        ],
        "summary": "Get createdObjects from me",
        "operationId": "me.ListCreatedObjects",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/createdObjects/{directoryObject-id}": {
      "get": {
        "tags": [
          "me.directoryObject"
        ],
        "summary": "Get createdObjects from me",
        "operationId": "me.GetCreatedObjects",
        "parameters": [
          {
            "name": "directoryObject-id",
            "in": "path",
            "description": "key: directoryObject-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "directoryObject"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/deviceManagementTroubleshootingEvents": {
      "get": {
        "tags": [
          "me.deviceManagementTroubleshootingEvent"
        ],
        "summary": "Get deviceManagementTroubleshootingEvents from me",
        "operationId": "me.ListDeviceManagementTroubleshootingEvents",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "eventDateTime",
                  "eventDateTime desc",
                  "correlationId",
                  "correlationId desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "eventDateTime",
                  "correlationId"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.deviceManagementTroubleshootingEvent"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/deviceManagementTroubleshootingEvents/{deviceManagementTroubleshootingEvent-id}": {
      "get": {
        "tags": [
          "me.deviceManagementTroubleshootingEvent"
        ],
        "summary": "Get deviceManagementTroubleshootingEvents from me",
        "operationId": "me.GetDeviceManagementTroubleshootingEvents",
        "parameters": [
          {
            "name": "deviceManagementTroubleshootingEvent-id",
            "in": "path",
            "description": "key: deviceManagementTroubleshootingEvent-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "deviceManagementTroubleshootingEvent"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "eventDateTime",
                  "correlationId"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.deviceManagementTroubleshootingEvent"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/directReports": {
      "get": {
        "tags": [
          "me.directoryObject"
        ],
        "summary": "Get directReports from me",
        "operationId": "me.ListDirectReports",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/directReports/{directoryObject-id}": {
      "get": {
        "tags": [
          "me.directoryObject"
        ],
        "summary": "Get directReports from me",
        "operationId": "me.GetDirectReports",
        "parameters": [
          {
            "name": "directoryObject-id",
            "in": "path",
            "description": "key: directoryObject-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "directoryObject"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/drive": {
      "get": {
        "tags": [
          "me.drive"
        ],
        "summary": "Get drive from me",
        "operationId": "me.GetDrive",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "driveType",
                  "owner",
                  "quota",
                  "sharepointIds",
                  "system",
                  "createdByUser",
                  "lastModifiedByUser",
                  "items",
                  "root",
                  "special",
                  "list"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "items",
                  "root",
                  "special",
                  "list"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.drive"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/drives": {
      "get": {
        "tags": [
          "me.drive"
        ],
        "summary": "Get drives from me",
        "operationId": "me.ListDrives",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "createdBy",
                  "createdBy desc",
                  "createdDateTime",
                  "createdDateTime desc",
                  "description",
                  "description desc",
                  "eTag",
                  "eTag desc",
                  "lastModifiedBy",
                  "lastModifiedBy desc",
                  "lastModifiedDateTime",
                  "lastModifiedDateTime desc",
                  "name",
                  "name desc",
                  "parentReference",
                  "parentReference desc",
                  "webUrl",
                  "webUrl desc",
                  "driveType",
                  "driveType desc",
                  "owner",
                  "owner desc",
                  "quota",
                  "quota desc",
                  "sharepointIds",
                  "sharepointIds desc",
                  "system",
                  "system desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "driveType",
                  "owner",
                  "quota",
                  "sharepointIds",
                  "system",
                  "createdByUser",
                  "lastModifiedByUser",
                  "items",
                  "root",
                  "special",
                  "list"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "items",
                  "root",
                  "special",
                  "list"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.drive"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/drives/{drive-id}": {
      "get": {
        "tags": [
          "me.drive"
        ],
        "summary": "Get drives from me",
        "operationId": "me.GetDrives",
        "parameters": [
          {
            "name": "drive-id",
            "in": "path",
            "description": "key: drive-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "drive"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "driveType",
                  "owner",
                  "quota",
                  "sharepointIds",
                  "system",
                  "createdByUser",
                  "lastModifiedByUser",
                  "items",
                  "root",
                  "special",
                  "list"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "items",
                  "root",
                  "special",
                  "list"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.drive"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/events": {
      "get": {
        "tags": [
          "me.event"
        ],
        "summary": "Get events from me",
        "operationId": "me.ListEvents",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "categories",
                  "categories desc",
                  "changeKey",
                  "changeKey desc",
                  "createdDateTime",
                  "createdDateTime desc",
                  "lastModifiedDateTime",
                  "lastModifiedDateTime desc",
                  "attendees",
                  "attendees desc",
                  "body",
                  "body desc",
                  "bodyPreview",
                  "bodyPreview desc",
                  "end",
                  "end desc",
                  "hasAttachments",
                  "hasAttachments desc",
                  "iCalUId",
                  "iCalUId desc",
                  "importance",
                  "importance desc",
                  "isAllDay",
                  "isAllDay desc",
                  "isCancelled",
                  "isCancelled desc",
                  "isOrganizer",
                  "isOrganizer desc",
                  "isReminderOn",
                  "isReminderOn desc",
                  "location",
                  "location desc",
                  "locations",
                  "locations desc",
                  "onlineMeetingUrl",
                  "onlineMeetingUrl desc",
                  "organizer",
                  "organizer desc",
                  "originalEndTimeZone",
                  "originalEndTimeZone desc",
                  "originalStart",
                  "originalStart desc",
                  "originalStartTimeZone",
                  "originalStartTimeZone desc",
                  "recurrence",
                  "recurrence desc",
                  "reminderMinutesBeforeStart",
                  "reminderMinutesBeforeStart desc",
                  "responseRequested",
                  "responseRequested desc",
                  "responseStatus",
                  "responseStatus desc",
                  "sensitivity",
                  "sensitivity desc",
                  "seriesMasterId",
                  "seriesMasterId desc",
                  "showAs",
                  "showAs desc",
                  "start",
                  "start desc",
                  "subject",
                  "subject desc",
                  "type",
                  "type desc",
                  "webLink",
                  "webLink desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "categories",
                  "changeKey",
                  "createdDateTime",
                  "lastModifiedDateTime",
                  "attendees",
                  "body",
                  "bodyPreview",
                  "end",
                  "hasAttachments",
                  "iCalUId",
                  "importance",
                  "isAllDay",
                  "isCancelled",
                  "isOrganizer",
                  "isReminderOn",
                  "location",
                  "locations",
                  "onlineMeetingUrl",
                  "organizer",
                  "originalEndTimeZone",
                  "originalStart",
                  "originalStartTimeZone",
                  "recurrence",
                  "reminderMinutesBeforeStart",
                  "responseRequested",
                  "responseStatus",
                  "sensitivity",
                  "seriesMasterId",
                  "showAs",
                  "start",
                  "subject",
                  "type",
                  "webLink",
                  "attachments",
                  "calendar",
                  "extensions",
                  "instances",
                  "multiValueExtendedProperties",
                  "singleValueExtendedProperties"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "attachments",
                  "calendar",
                  "extensions",
                  "instances",
                  "multiValueExtendedProperties",
                  "singleValueExtendedProperties"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.event"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/events/{event-id}": {
      "get": {
        "tags": [
          "me.event"
        ],
        "summary": "Get events from me",
        "operationId": "me.GetEvents",
        "parameters": [
          {
            "name": "event-id",
            "in": "path",
            "description": "key: event-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "event"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "categories",
                  "changeKey",
                  "createdDateTime",
                  "lastModifiedDateTime",
                  "attendees",
                  "body",
                  "bodyPreview",
                  "end",
                  "hasAttachments",
                  "iCalUId",
                  "importance",
                  "isAllDay",
                  "isCancelled",
                  "isOrganizer",
                  "isReminderOn",
                  "location",
                  "locations",
                  "onlineMeetingUrl",
                  "organizer",
                  "originalEndTimeZone",
                  "originalStart",
                  "originalStartTimeZone",
                  "recurrence",
                  "reminderMinutesBeforeStart",
                  "responseRequested",
                  "responseStatus",
                  "sensitivity",
                  "seriesMasterId",
                  "showAs",
                  "start",
                  "subject",
                  "type",
                  "webLink",
                  "attachments",
                  "calendar",
                  "extensions",
                  "instances",
                  "multiValueExtendedProperties",
                  "singleValueExtendedProperties"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "attachments",
                  "calendar",
                  "extensions",
                  "instances",
                  "multiValueExtendedProperties",
                  "singleValueExtendedProperties"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.event"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/events/{event-id}/accept": {
      "post": {
        "tags": [
          "me.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "me.events.accept",
        "parameters": [
          {
            "name": "event-id",
            "in": "path",
            "description": "key: event-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "event"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Nature of the data in the body of an entity. Required.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string",
                    "nullable": true
                  },
                  "sendResponse": {
                    "type": "boolean",
                    "default": false,
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Application": [
              "Calendars.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/me/calendarView/{event-id}/accept"
      ]
    },
    "/me/events/{event-id}/decline": {
      "post": {
        "tags": [
          "me.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "me.events.decline",
        "parameters": [
          {
            "name": "event-id",
            "in": "path",
            "description": "key: event-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "event"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Nature of the data in the body of an entity. Required.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string",
                    "nullable": true
                  },
                  "sendResponse": {
                    "type": "boolean",
                    "default": false,
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Application": [
              "Calendars.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/me/calendarView/{event-id}/decline"
      ]
    },
    "/me/events/{event-id}/dismissReminder": {
      "post": {
        "tags": [
          "me.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "me.events.dismissReminder",
        "parameters": [
          {
            "name": "event-id",
            "in": "path",
            "description": "key: event-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "event"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Application": [
              "Calendars.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/me/calendarView/{event-id}/dismissReminder"
      ]
    },
    "/me/events/{event-id}/snoozeReminder": {
      "post": {
        "tags": [
          "me.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "me.events.snoozeReminder",
        "parameters": [
          {
            "name": "event-id",
            "in": "path",
            "description": "key: event-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "event"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Nature of the data in the body of an entity. Required.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "newReminderTime": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.dateTimeTimeZone"
                      }
                    ],
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Application": [
              "Calendars.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/me/calendarView/{event-id}/snoozeReminder"
      ]
    },
    "/me/events/{event-id}/tentativelyAccept": {
      "post": {
        "tags": [
          "me.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "me.events.tentativelyAccept",
        "parameters": [
          {
            "name": "event-id",
            "in": "path",
            "description": "key: event-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "event"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Nature of the data in the body of an entity. Required.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string",
                    "nullable": true
                  },
                  "sendResponse": {
                    "type": "boolean",
                    "default": false,
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Application": [
              "Calendars.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/me/calendarView/{event-id}/tentativelyAccept"
      ]
    },
    "/me/events/delta()": {
      "get": {
        "tags": [
          "me.Functions"
        ],
        "summary": "Invoke function delta",
        "operationId": "me.events.delta.2209",
        "parameters": [
          {
            "name": "startDateTime",
            "in": "query",
            "description": "String",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDateTime",
            "in": "query",
            "description": "String",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$deltatoken",
            "in": "query",
            "description": "String",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skiptoken",
            "in": "query",
            "description": "String",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "application/json. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Prefer",
            "in": "header",
            "description": "odata.maxpagesize={x}. Optional.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Prefer",
            "in": "header",
            "description": "{Time zone}. Optional, UTC assumed if absent.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.event"
                      }
                    ],
                    "nullable": true
                  }
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n  \"@odata.nextLink\":\"https://graph.microsoft.com/v1.0/me/calendarView/delta?$skiptoken={_skipToken_}\",\r\n  \"value\": [\r\n    {\r\n      \"originalStartTimeZone\": \"originalStartTimeZone-value\",\r\n      \"originalEndTimeZone\": \"originalEndTimeZone-value\",\r\n      \"responseStatus\": {\r\n        \"response\": \"response-value\",\r\n        \"time\": \"datetime-value\"\r\n      },\r\n      \"iCalUId\": \"iCalUId-value\",\r\n      \"reminderMinutesBeforeStart\": 99,\r\n      \"isReminderOn\": true\r\n    }\r\n  ]\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Calendars.Read"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Calendars.Read"
            ]
          },
          {
            "Application": [
              "Calendars.Read"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/me/calendarView/delta()",
        "/me/contactFolders/delta()",
        "/me/contacts/delta()",
        "/me/mailFolders/delta()",
        "/me/messages/delta()"
      ]
    },
    "/me/extensions": {
      "get": {
        "tags": [
          "me.extension"
        ],
        "summary": "Get extensions from me",
        "operationId": "me.ListExtensions",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/extensions/{extension-id}": {
      "get": {
        "tags": [
          "me.extension"
        ],
        "summary": "Get extensions from me",
        "operationId": "me.GetExtensions",
        "parameters": [
          {
            "name": "extension-id",
            "in": "path",
            "description": "key: extension-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "extension"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/inferenceClassification": {
      "get": {
        "tags": [
          "me.inferenceClassification"
        ],
        "summary": "Get inferenceClassification from me",
        "operationId": "me.GetInferenceClassification",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "overrides"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "overrides"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.inferenceClassification"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/licenseDetails": {
      "get": {
        "tags": [
          "me.licenseDetails"
        ],
        "summary": "Get licenseDetails from me",
        "operationId": "me.ListLicenseDetails",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "servicePlans",
                  "servicePlans desc",
                  "skuId",
                  "skuId desc",
                  "skuPartNumber",
                  "skuPartNumber desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "servicePlans",
                  "skuId",
                  "skuPartNumber"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.licenseDetails"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/licenseDetails/{licenseDetails-id}": {
      "get": {
        "tags": [
          "me.licenseDetails"
        ],
        "summary": "Get licenseDetails from me",
        "operationId": "me.GetLicenseDetails",
        "parameters": [
          {
            "name": "licenseDetails-id",
            "in": "path",
            "description": "key: licenseDetails-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "licenseDetails"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "servicePlans",
                  "skuId",
                  "skuPartNumber"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.licenseDetails"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/mailFolders": {
      "get": {
        "tags": [
          "me.mailFolder"
        ],
        "summary": "Get mailFolders from me",
        "operationId": "me.ListMailFolders",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "childFolderCount",
                  "childFolderCount desc",
                  "displayName",
                  "displayName desc",
                  "parentFolderId",
                  "parentFolderId desc",
                  "totalItemCount",
                  "totalItemCount desc",
                  "unreadItemCount",
                  "unreadItemCount desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "childFolderCount",
                  "displayName",
                  "parentFolderId",
                  "totalItemCount",
                  "unreadItemCount",
                  "childFolders",
                  "messageRules",
                  "messages",
                  "multiValueExtendedProperties",
                  "singleValueExtendedProperties"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "childFolders",
                  "messageRules",
                  "messages",
                  "multiValueExtendedProperties",
                  "singleValueExtendedProperties"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.mailFolder"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/mailFolders/{mailFolder-id}": {
      "get": {
        "tags": [
          "me.mailFolder"
        ],
        "summary": "Get mailFolders from me",
        "operationId": "me.GetMailFolders",
        "parameters": [
          {
            "name": "mailFolder-id",
            "in": "path",
            "description": "key: mailFolder-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "mailFolder"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "childFolderCount",
                  "displayName",
                  "parentFolderId",
                  "totalItemCount",
                  "unreadItemCount",
                  "childFolders",
                  "messageRules",
                  "messages",
                  "multiValueExtendedProperties",
                  "singleValueExtendedProperties"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "childFolders",
                  "messageRules",
                  "messages",
                  "multiValueExtendedProperties",
                  "singleValueExtendedProperties"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.mailFolder"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/mailFolders/{mailFolder-id}/copy": {
      "post": {
        "tags": [
          "me.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "me.mailFolders.copy",
        "parameters": [
          {
            "name": "mailFolder-id",
            "in": "path",
            "description": "key: mailFolder-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "mailFolder"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "destinationId": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.mailFolder"
                    }
                  ],
                  "nullable": true
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n  \"displayName\": \"displayName-value\",\r\n  \"parentFolderId\": \"parentFolderId-value\",\r\n  \"childFolderCount\": 99,\r\n  \"unreadItemCount\": 99,\r\n  \"totalItemCount\": 99,\r\n  \"id\": \"id-value\"\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Mail.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Mail.ReadWrite"
            ]
          },
          {
            "Application": [
              "Mail.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/me/messages/{message-id}/copy"
      ]
    },
    "/me/mailFolders/{mailFolder-id}/move": {
      "post": {
        "tags": [
          "me.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "me.mailFolders.move",
        "parameters": [
          {
            "name": "mailFolder-id",
            "in": "path",
            "description": "key: mailFolder-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "mailFolder"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "destinationId": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.mailFolder"
                    }
                  ],
                  "nullable": true
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n  \"displayName\": \"displayName-value\",\r\n  \"parentFolderId\": \"parentFolderId-value\",\r\n  \"childFolderCount\": 99,\r\n  \"unreadItemCount\": 99,\r\n  \"totalItemCount\": 99,\r\n  \"id\": \"id-value\"\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Mail.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Mail.ReadWrite"
            ]
          },
          {
            "Application": [
              "Mail.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/me/messages/{message-id}/move"
      ]
    },
    "/me/mailFolders/delta()": {
      "get": {
        "tags": [
          "me.Functions"
        ],
        "summary": "Invoke function delta",
        "operationId": "me.mailFolders.delta.2209",
        "parameters": [
          {
            "name": "$deltatoken",
            "in": "query",
            "description": "String",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skiptoken",
            "in": "query",
            "description": "String",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "application/json. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Prefer",
            "in": "header",
            "description": "odata.maxpagesize={x}. Optional.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.mailFolder"
                      }
                    ],
                    "nullable": true
                  }
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n  \"@odata.nextLink\":\"https://graph.microsoft.com/v1.0/me/mailfolders/delta?$skiptoken={_skipToken_}\",\r\n  \"value\": [\r\n    {\r\n      \"displayName\": \"displayName-value\",\r\n      \"parentFolderId\": \"parentFolderId-value\",\r\n      \"childFolderCount\": 99,\r\n      \"unreadItemCount\": 99,\r\n      \"totalItemCount\": 99\r\n    }\r\n  ]\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Mail.Read",
              "Mail.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Mail.Read",
              "Mail.ReadWrite"
            ]
          },
          {
            "Application": [
              "Mail.Read",
              "Mail.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/me/calendarView/delta()",
        "/me/contactFolders/delta()",
        "/me/contacts/delta()",
        "/me/events/delta()",
        "/me/messages/delta()"
      ]
    },
    "/me/managedAppRegistrations": {
      "get": {
        "tags": [
          "me.managedAppRegistration"
        ],
        "summary": "Get managedAppRegistrations from me",
        "operationId": "me.ListManagedAppRegistrations",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "createdDateTime",
                  "createdDateTime desc",
                  "lastSyncDateTime",
                  "lastSyncDateTime desc",
                  "applicationVersion",
                  "applicationVersion desc",
                  "managementSdkVersion",
                  "managementSdkVersion desc",
                  "platformVersion",
                  "platformVersion desc",
                  "deviceType",
                  "deviceType desc",
                  "deviceTag",
                  "deviceTag desc",
                  "deviceName",
                  "deviceName desc",
                  "flaggedReasons",
                  "flaggedReasons desc",
                  "userId",
                  "userId desc",
                  "appIdentifier",
                  "appIdentifier desc",
                  "version",
                  "version desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdDateTime",
                  "lastSyncDateTime",
                  "applicationVersion",
                  "managementSdkVersion",
                  "platformVersion",
                  "deviceType",
                  "deviceTag",
                  "deviceName",
                  "flaggedReasons",
                  "userId",
                  "appIdentifier",
                  "version",
                  "appliedPolicies",
                  "intendedPolicies",
                  "operations"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "appliedPolicies",
                  "intendedPolicies",
                  "operations"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.managedAppRegistration"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/managedAppRegistrations/{managedAppRegistration-id}": {
      "get": {
        "tags": [
          "me.managedAppRegistration"
        ],
        "summary": "Get managedAppRegistrations from me",
        "operationId": "me.GetManagedAppRegistrations",
        "parameters": [
          {
            "name": "managedAppRegistration-id",
            "in": "path",
            "description": "key: managedAppRegistration-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "managedAppRegistration"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdDateTime",
                  "lastSyncDateTime",
                  "applicationVersion",
                  "managementSdkVersion",
                  "platformVersion",
                  "deviceType",
                  "deviceTag",
                  "deviceName",
                  "flaggedReasons",
                  "userId",
                  "appIdentifier",
                  "version",
                  "appliedPolicies",
                  "intendedPolicies",
                  "operations"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "appliedPolicies",
                  "intendedPolicies",
                  "operations"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.managedAppRegistration"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/managedDevices": {
      "get": {
        "tags": [
          "me.managedDevice"
        ],
        "summary": "Get managedDevices from me",
        "operationId": "me.ListManagedDevices",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "userId",
                  "userId desc",
                  "deviceName",
                  "deviceName desc",
                  "managedDeviceOwnerType",
                  "managedDeviceOwnerType desc",
                  "deviceActionResults",
                  "deviceActionResults desc",
                  "enrolledDateTime",
                  "enrolledDateTime desc",
                  "lastSyncDateTime",
                  "lastSyncDateTime desc",
                  "operatingSystem",
                  "operatingSystem desc",
                  "complianceState",
                  "complianceState desc",
                  "jailBroken",
                  "jailBroken desc",
                  "managementAgent",
                  "managementAgent desc",
                  "osVersion",
                  "osVersion desc",
                  "easActivated",
                  "easActivated desc",
                  "easDeviceId",
                  "easDeviceId desc",
                  "easActivationDateTime",
                  "easActivationDateTime desc",
                  "azureADRegistered",
                  "azureADRegistered desc",
                  "deviceEnrollmentType",
                  "deviceEnrollmentType desc",
                  "activationLockBypassCode",
                  "activationLockBypassCode desc",
                  "emailAddress",
                  "emailAddress desc",
                  "azureADDeviceId",
                  "azureADDeviceId desc",
                  "deviceRegistrationState",
                  "deviceRegistrationState desc",
                  "deviceCategoryDisplayName",
                  "deviceCategoryDisplayName desc",
                  "isSupervised",
                  "isSupervised desc",
                  "exchangeLastSuccessfulSyncDateTime",
                  "exchangeLastSuccessfulSyncDateTime desc",
                  "exchangeAccessState",
                  "exchangeAccessState desc",
                  "exchangeAccessStateReason",
                  "exchangeAccessStateReason desc",
                  "remoteAssistanceSessionUrl",
                  "remoteAssistanceSessionUrl desc",
                  "remoteAssistanceSessionErrorDetails",
                  "remoteAssistanceSessionErrorDetails desc",
                  "isEncrypted",
                  "isEncrypted desc",
                  "userPrincipalName",
                  "userPrincipalName desc",
                  "model",
                  "model desc",
                  "manufacturer",
                  "manufacturer desc",
                  "imei",
                  "imei desc",
                  "complianceGracePeriodExpirationDateTime",
                  "complianceGracePeriodExpirationDateTime desc",
                  "serialNumber",
                  "serialNumber desc",
                  "phoneNumber",
                  "phoneNumber desc",
                  "androidSecurityPatchLevel",
                  "androidSecurityPatchLevel desc",
                  "userDisplayName",
                  "userDisplayName desc",
                  "configurationManagerClientEnabledFeatures",
                  "configurationManagerClientEnabledFeatures desc",
                  "wiFiMacAddress",
                  "wiFiMacAddress desc",
                  "deviceHealthAttestationState",
                  "deviceHealthAttestationState desc",
                  "subscriberCarrier",
                  "subscriberCarrier desc",
                  "meid",
                  "meid desc",
                  "totalStorageSpaceInBytes",
                  "totalStorageSpaceInBytes desc",
                  "freeStorageSpaceInBytes",
                  "freeStorageSpaceInBytes desc",
                  "managedDeviceName",
                  "managedDeviceName desc",
                  "partnerReportedThreatState",
                  "partnerReportedThreatState desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "userId",
                  "deviceName",
                  "managedDeviceOwnerType",
                  "deviceActionResults",
                  "enrolledDateTime",
                  "lastSyncDateTime",
                  "operatingSystem",
                  "complianceState",
                  "jailBroken",
                  "managementAgent",
                  "osVersion",
                  "easActivated",
                  "easDeviceId",
                  "easActivationDateTime",
                  "azureADRegistered",
                  "deviceEnrollmentType",
                  "activationLockBypassCode",
                  "emailAddress",
                  "azureADDeviceId",
                  "deviceRegistrationState",
                  "deviceCategoryDisplayName",
                  "isSupervised",
                  "exchangeLastSuccessfulSyncDateTime",
                  "exchangeAccessState",
                  "exchangeAccessStateReason",
                  "remoteAssistanceSessionUrl",
                  "remoteAssistanceSessionErrorDetails",
                  "isEncrypted",
                  "userPrincipalName",
                  "model",
                  "manufacturer",
                  "imei",
                  "complianceGracePeriodExpirationDateTime",
                  "serialNumber",
                  "phoneNumber",
                  "androidSecurityPatchLevel",
                  "userDisplayName",
                  "configurationManagerClientEnabledFeatures",
                  "wiFiMacAddress",
                  "deviceHealthAttestationState",
                  "subscriberCarrier",
                  "meid",
                  "totalStorageSpaceInBytes",
                  "freeStorageSpaceInBytes",
                  "managedDeviceName",
                  "partnerReportedThreatState",
                  "deviceCategory"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "deviceCategory"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.managedDevice"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/managedDevices/{managedDevice-id}": {
      "get": {
        "tags": [
          "me.managedDevice"
        ],
        "summary": "Get managedDevices from me",
        "operationId": "me.GetManagedDevices",
        "parameters": [
          {
            "name": "managedDevice-id",
            "in": "path",
            "description": "key: managedDevice-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "managedDevice"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "userId",
                  "deviceName",
                  "managedDeviceOwnerType",
                  "deviceActionResults",
                  "enrolledDateTime",
                  "lastSyncDateTime",
                  "operatingSystem",
                  "complianceState",
                  "jailBroken",
                  "managementAgent",
                  "osVersion",
                  "easActivated",
                  "easDeviceId",
                  "easActivationDateTime",
                  "azureADRegistered",
                  "deviceEnrollmentType",
                  "activationLockBypassCode",
                  "emailAddress",
                  "azureADDeviceId",
                  "deviceRegistrationState",
                  "deviceCategoryDisplayName",
                  "isSupervised",
                  "exchangeLastSuccessfulSyncDateTime",
                  "exchangeAccessState",
                  "exchangeAccessStateReason",
                  "remoteAssistanceSessionUrl",
                  "remoteAssistanceSessionErrorDetails",
                  "isEncrypted",
                  "userPrincipalName",
                  "model",
                  "manufacturer",
                  "imei",
                  "complianceGracePeriodExpirationDateTime",
                  "serialNumber",
                  "phoneNumber",
                  "androidSecurityPatchLevel",
                  "userDisplayName",
                  "configurationManagerClientEnabledFeatures",
                  "wiFiMacAddress",
                  "deviceHealthAttestationState",
                  "subscriberCarrier",
                  "meid",
                  "totalStorageSpaceInBytes",
                  "freeStorageSpaceInBytes",
                  "managedDeviceName",
                  "partnerReportedThreatState",
                  "deviceCategory"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "deviceCategory"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.managedDevice"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/manager": {
      "get": {
        "tags": [
          "me.directoryObject"
        ],
        "summary": "Get manager from me",
        "operationId": "me.GetManager",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/memberOf": {
      "get": {
        "tags": [
          "me.directoryObject"
        ],
        "summary": "Get memberOf from me",
        "operationId": "me.ListMemberOf",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/memberOf/{directoryObject-id}": {
      "get": {
        "tags": [
          "me.directoryObject"
        ],
        "summary": "Get memberOf from me",
        "operationId": "me.GetMemberOf",
        "parameters": [
          {
            "name": "directoryObject-id",
            "in": "path",
            "description": "key: directoryObject-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "directoryObject"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/messages": {
      "get": {
        "tags": [
          "me.message"
        ],
        "summary": "Get messages from me",
        "operationId": "me.ListMessages",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "categories",
                  "categories desc",
                  "changeKey",
                  "changeKey desc",
                  "createdDateTime",
                  "createdDateTime desc",
                  "lastModifiedDateTime",
                  "lastModifiedDateTime desc",
                  "bccRecipients",
                  "bccRecipients desc",
                  "body",
                  "body desc",
                  "bodyPreview",
                  "bodyPreview desc",
                  "ccRecipients",
                  "ccRecipients desc",
                  "conversationId",
                  "conversationId desc",
                  "flag",
                  "flag desc",
                  "from",
                  "from desc",
                  "hasAttachments",
                  "hasAttachments desc",
                  "importance",
                  "importance desc",
                  "inferenceClassification",
                  "inferenceClassification desc",
                  "internetMessageHeaders",
                  "internetMessageHeaders desc",
                  "internetMessageId",
                  "internetMessageId desc",
                  "isDeliveryReceiptRequested",
                  "isDeliveryReceiptRequested desc",
                  "isDraft",
                  "isDraft desc",
                  "isRead",
                  "isRead desc",
                  "isReadReceiptRequested",
                  "isReadReceiptRequested desc",
                  "parentFolderId",
                  "parentFolderId desc",
                  "receivedDateTime",
                  "receivedDateTime desc",
                  "replyTo",
                  "replyTo desc",
                  "sender",
                  "sender desc",
                  "sentDateTime",
                  "sentDateTime desc",
                  "subject",
                  "subject desc",
                  "toRecipients",
                  "toRecipients desc",
                  "uniqueBody",
                  "uniqueBody desc",
                  "webLink",
                  "webLink desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "categories",
                  "changeKey",
                  "createdDateTime",
                  "lastModifiedDateTime",
                  "bccRecipients",
                  "body",
                  "bodyPreview",
                  "ccRecipients",
                  "conversationId",
                  "flag",
                  "from",
                  "hasAttachments",
                  "importance",
                  "inferenceClassification",
                  "internetMessageHeaders",
                  "internetMessageId",
                  "isDeliveryReceiptRequested",
                  "isDraft",
                  "isRead",
                  "isReadReceiptRequested",
                  "parentFolderId",
                  "receivedDateTime",
                  "replyTo",
                  "sender",
                  "sentDateTime",
                  "subject",
                  "toRecipients",
                  "uniqueBody",
                  "webLink",
                  "attachments",
                  "extensions",
                  "multiValueExtendedProperties",
                  "singleValueExtendedProperties"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "attachments",
                  "extensions",
                  "multiValueExtendedProperties",
                  "singleValueExtendedProperties"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.message"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/messages/{message-id}": {
      "get": {
        "tags": [
          "me.message"
        ],
        "summary": "Get messages from me",
        "operationId": "me.GetMessages",
        "parameters": [
          {
            "name": "message-id",
            "in": "path",
            "description": "key: message-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "message"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "categories",
                  "changeKey",
                  "createdDateTime",
                  "lastModifiedDateTime",
                  "bccRecipients",
                  "body",
                  "bodyPreview",
                  "ccRecipients",
                  "conversationId",
                  "flag",
                  "from",
                  "hasAttachments",
                  "importance",
                  "inferenceClassification",
                  "internetMessageHeaders",
                  "internetMessageId",
                  "isDeliveryReceiptRequested",
                  "isDraft",
                  "isRead",
                  "isReadReceiptRequested",
                  "parentFolderId",
                  "receivedDateTime",
                  "replyTo",
                  "sender",
                  "sentDateTime",
                  "subject",
                  "toRecipients",
                  "uniqueBody",
                  "webLink",
                  "attachments",
                  "extensions",
                  "multiValueExtendedProperties",
                  "singleValueExtendedProperties"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "attachments",
                  "extensions",
                  "multiValueExtendedProperties",
                  "singleValueExtendedProperties"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.message"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/messages/{message-id}/copy": {
      "post": {
        "tags": [
          "me.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "me.messages.copy",
        "parameters": [
          {
            "name": "message-id",
            "in": "path",
            "description": "key: message-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "message"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "destinationId": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.message"
                    }
                  ],
                  "nullable": true
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n  \"receivedDateTime\": \"datetime-value\",\r\n  \"sentDateTime\": \"datetime-value\",\r\n  \"hasAttachments\": true,\r\n  \"subject\": \"subject-value\",\r\n  \"body\": {\r\n    \"contentType\": \"\",\r\n    \"content\": \"content-value\"\r\n  },\r\n  \"bodyPreview\": \"bodyPreview-value\"\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Mail.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Mail.ReadWrite"
            ]
          },
          {
            "Application": [
              "Mail.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/me/mailFolders/{mailFolder-id}/copy"
      ]
    },
    "/me/messages/{message-id}/createForward": {
      "post": {
        "tags": [
          "me.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "me.messages.createForward",
        "parameters": [
          {
            "name": "message-id",
            "in": "path",
            "description": "key: message-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "message"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.message"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Mail.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Mail.ReadWrite"
            ]
          },
          {
            "Application": [
              "Mail.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      }
    },
    "/me/messages/{message-id}/createReply": {
      "post": {
        "tags": [
          "me.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "me.messages.createReply",
        "parameters": [
          {
            "name": "message-id",
            "in": "path",
            "description": "key: message-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "message"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.message"
                    }
                  ],
                  "nullable": true
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n  \"receivedDateTime\": \"datetime-value\",\r\n  \"sentDateTime\": \"datetime-value\",\r\n  \"hasAttachments\": true,\r\n  \"subject\": \"subject-value\",\r\n  \"body\": {\r\n    \"contentType\": \"\",\r\n    \"content\": \"content-value\"\r\n  },\r\n  \"bodyPreview\": \"bodyPreview-value\"\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Mail.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Mail.ReadWrite"
            ]
          },
          {
            "Application": [
              "Mail.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      }
    },
    "/me/messages/{message-id}/createReplyAll": {
      "post": {
        "tags": [
          "me.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "me.messages.createReplyAll",
        "parameters": [
          {
            "name": "message-id",
            "in": "path",
            "description": "key: message-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "message"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.message"
                    }
                  ],
                  "nullable": true
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n  \"receivedDateTime\": \"datetime-value\",\r\n  \"sentDateTime\": \"datetime-value\",\r\n  \"hasAttachments\": true,\r\n  \"subject\": \"subject-value\",\r\n  \"body\": {\r\n    \"contentType\": \"\",\r\n    \"content\": \"content-value\"\r\n  },\r\n  \"bodyPreview\": \"bodyPreview-value\"\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Mail.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Mail.ReadWrite"
            ]
          },
          {
            "Application": [
              "Mail.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      }
    },
    "/me/messages/{message-id}/forward": {
      "post": {
        "tags": [
          "me.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "me.messages.forward",
        "parameters": [
          {
            "name": "message-id",
            "in": "path",
            "description": "key: message-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "message"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Nature of the data in the body of an entity. Required.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string",
                    "nullable": true
                  },
                  "toRecipients": {
                    "type": "array",
                    "items": {
                      "anyOf": [
                        {
                          "$ref": "#/components/schemas/microsoft.graph.recipient"
                        }
                      ],
                      "nullable": true
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Mail.Send"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Mail.Send"
            ]
          },
          {
            "Application": [
              "Mail.Send"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      }
    },
    "/me/messages/{message-id}/move": {
      "post": {
        "tags": [
          "me.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "me.messages.move",
        "parameters": [
          {
            "name": "message-id",
            "in": "path",
            "description": "key: message-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "message"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "destinationId": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.message"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Mail.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Mail.ReadWrite"
            ]
          },
          {
            "Application": [
              "Mail.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/me/mailFolders/{mailFolder-id}/move"
      ]
    },
    "/me/messages/{message-id}/reply": {
      "post": {
        "tags": [
          "me.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "me.messages.reply",
        "parameters": [
          {
            "name": "message-id",
            "in": "path",
            "description": "key: message-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "message"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Nature of the data in the body of an entity. Required.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Mail.Send"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Mail.Send"
            ]
          },
          {
            "Application": [
              "Mail.Send"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      }
    },
    "/me/messages/{message-id}/replyAll": {
      "post": {
        "tags": [
          "me.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "me.messages.replyAll",
        "parameters": [
          {
            "name": "message-id",
            "in": "path",
            "description": "key: message-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "message"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Nature of the data in the body of an entity. Required.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Mail.Send"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Mail.Send"
            ]
          },
          {
            "Application": [
              "Mail.Send"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      }
    },
    "/me/messages/{message-id}/send": {
      "post": {
        "tags": [
          "me.Actions"
        ],
        "summary": "The following example shows how to call this API.",
        "operationId": "me.messages.send",
        "parameters": [
          {
            "name": "message-id",
            "in": "path",
            "description": "key: message-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "message"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Length",
            "in": "header",
            "description": "* Required.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Mail.Send"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Mail.Send"
            ]
          },
          {
            "Application": [
              "Mail.Send"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      }
    },
    "/me/messages/delta()": {
      "get": {
        "tags": [
          "me.Functions"
        ],
        "summary": "Invoke function delta",
        "operationId": "me.messages.delta.2209",
        "parameters": [
          {
            "name": "$deltatoken",
            "in": "query",
            "description": "String",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skiptoken",
            "in": "query",
            "description": "String",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "application/json. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Prefer",
            "in": "header",
            "description": "odata.maxpagesize={x}. Optional.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.message"
                      }
                    ],
                    "nullable": true
                  }
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n  \"@odata.nextLink\":\"https://graph.microsoft.com/v1.0/me/mailfolders('{id}')/messages/delta?$skiptoken={_skipToken_}\",\r\n  \"value\": [\r\n    {\r\n      \"receivedDateTime\": \"datetime-value\",\r\n      \"sentDateTime\": \"datetime-value\",\r\n      \"hasAttachments\": true,\r\n      \"internetMessageId\": \"internetMessageId-value\",\r\n      \"subject\": \"subject-value\",\r\n      \"body\": {\r\n        \"contentType\": \"contentType-value\",\r\n        \"content\": \"content-value\"\r\n      }\r\n    }\r\n  ]\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Mail.Read",
              "Mail.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Mail.Read",
              "Mail.ReadWrite"
            ]
          },
          {
            "Application": [
              "Mail.Read",
              "Mail.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/me/calendarView/delta()",
        "/me/contactFolders/delta()",
        "/me/contacts/delta()",
        "/me/events/delta()",
        "/me/mailFolders/delta()"
      ]
    },
    "/me/assignLicense": {
      "post": {
        "tags": [
          "me.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "me.assignLicense",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "addLicenses": {
                    "type": "array",
                    "items": {
                      "anyOf": [
                        {
                          "$ref": "#/components/schemas/microsoft.graph.assignedLicense"
                        }
                      ],
                      "nullable": true
                    }
                  },
                  "removeLicenses": {
                    "type": "array",
                    "items": {
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "type": "string",
                      "format": "uuid",
                      "nullable": true
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.user"
                    }
                  ],
                  "nullable": true
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n  \"accountEnabled\": true,\r\n  \"assignedLicenses\": [\r\n    {\r\n      \"disabledPlans\": [ \"11b0131d-43c8-4bbb-b2c8-e80f9a50834a\" ],\r\n      \"skuId\": \"0118A350-71FC-4EC3-8F0C-6A1CB8867561\"\r\n    }\r\n  ],\r\n  \"assignedPlans\": [\r\n    {\r\n      \"assignedDateTime\": \"2016-10-02T12:13:14Z\",\r\n      \"capabilityStatus\": \"capabilityStatus-value\",\r\n      \"service\": \"service-value\",\r\n      \"servicePlanId\": \"bea13e0c-3828-4daa-a392-28af7ff61a0f\"\r\n    }\r\n  ],\r\n  \"businessPhones\": [\r\n    \"businessPhones-value\"\r\n  ],\r\n  \"city\": \"city-value\",\r\n  \"companyName\": \"companyName-value\"\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "User.ReadWrite.All",
              "Directory.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "User.ReadWrite.All",
              "Directory.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      }
    },
    "/me/findMeetingTimes": {
      "post": {
        "tags": [
          "me.Actions"
        ],
        "summary": "Notice that the request specifies time in the PST time zone, and the response returns meeting time suggestions in UTC, by default. You can use the `Prefer: outlook.timezone` request \r\nheader to specify PST as well for the time values in the response.",
        "operationId": "me.findMeetingTimes",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Prefer: outlook.timezone",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "attendees": {
                    "type": "array",
                    "items": {
                      "anyOf": [
                        {
                          "$ref": "#/components/schemas/microsoft.graph.attendeeBase"
                        }
                      ],
                      "nullable": true
                    }
                  },
                  "locationConstraint": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.locationConstraint"
                      }
                    ],
                    "nullable": true
                  },
                  "timeConstraint": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.timeConstraint"
                      }
                    ],
                    "nullable": true
                  },
                  "meetingDuration": {
                    "pattern": "^-?P([0-9]+D)?(T([0-9]+H)?([0-9]+M)?([0-9]+([.][0-9]+)?S)?)?$",
                    "type": "string",
                    "format": "duration",
                    "nullable": true
                  },
                  "returnSuggestionReasons": {
                    "type": "boolean",
                    "default": false,
                    "nullable": true
                  },
                  "minimumAttendeePercentage": {
                    "anyOf": [
                      {
                        "type": "number"
                      },
                      {
                        "type": "string"
                      },
                      {
                        "enum": [
                          "-INF",
                          "INF",
                          "NaN"
                        ]
                      }
                    ],
                    "format": "double",
                    "nullable": true
                  },
                  "isOrganizerOptional": {
                    "type": "boolean",
                    "default": false,
                    "nullable": true
                  },
                  "maxCandidates": {
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.meetingTimeSuggestionsResult"
                    }
                  ],
                  "nullable": true
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n    \"@odata.context\":\"https://graph.microsoft.com/v1.0/$metadata#microsoft.graph.meetingTimeSuggestionsResult\",\r\n    \"emptySuggestionsReason\":\"\",\r\n    \"meetingTimeSuggestions\":[\r\n        {\r\n            \"confidence\":100.0,\r\n            \"organizerAvailability\":\"free\",\r\n            \"suggestionReason\":\"Suggested because it is one of the nearest times when all attendees are available.\",\r\n            \"meetingTimeSlot\":{\r\n                \"start\":{\r\n                    \"dateTime\":\"2017-04-17T18:00:00.0000000\",\r\n                    \"timeZone\":\"Pacific Standard Time\"\r\n                },\r\n                \"end\":{\r\n                    \"dateTime\":\"2017-04-17T20:00:00.0000000\",\r\n                    \"timeZone\":\"Pacific Standard Time\"\r\n                }\r\n            },\r\n            \"attendeeAvailability\":[\r\n                {\r\n                    \"availability\":\"free\",\r\n                    \"attendee\":{\r\n                        \"type\":\"required\",\r\n                        \"emailAddress\":{\r\n                            \"address\":\"samanthab@contoso.onmicrosoft.com\"\r\n                        }\r\n                    }\r\n                }\r\n            ],\r\n            \"locations\":[\r\n                {\r\n                    \"displayName\":\"Conf room Hood\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"confidence\":100.0,\r\n            \"organizerAvailability\":\"free\",\r\n            \"suggestionReason\":\"Suggested because it is one of the nearest times when all attendees are available.\",\r\n            \"meetingTimeSlot\":{\r\n                \"start\":{\r\n                    \"dateTime\":\"2017-04-17T20:00:00.0000000\",\r\n                    \"timeZone\":\"Pacific Standard Time\"\r\n                },\r\n                \"end\":{\r\n                    \"dateTime\":\"2017-04-17T22:00:00.0000000\",\r\n                    \"timeZone\":\"Pacific Standard Time\"\r\n                }\r\n            },\r\n            \"attendeeAvailability\":[\r\n                {\r\n                    \"availability\":\"free\",\r\n                    \"attendee\":{\r\n                        \"type\":\"required\",\r\n                        \"emailAddress\":{\r\n                            \"address\":\"samanthab@contoso.onmicrosoft.com\"\r\n                        }\r\n                    }\r\n                }\r\n            ],\r\n            \"locations\":[\r\n                {\r\n                    \"displayName\":\"Conf room Hood\"\r\n                }\r\n            ]\r\n        }\r\n   ]\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Calendars.Read.Shared",
              "Calendars.ReadWrite.Shared"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      }
    },
    "/me/getMailTips": {
      "post": {
        "tags": [
          "me.Actions"
        ],
        "summary": "Invoke action getMailTips",
        "operationId": "me.getMailTips",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "EmailAddresses": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "MailTipsOptions": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.mailTips"
                      }
                    ],
                    "nullable": true
                  }
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n    \"@odata.context\":\"https://graph.microsoft.com/v1.0/$metadata#Collection(microsoft.graph.mailTips)\",\r\n    \"value\":[\r\n        {\r\n            \"emailAddress\":{\r\n                \"name\":\"\",\r\n                \"address\":\"danas@contoso.onmicrosoft.com\"\r\n            },\r\n            \"automaticReplies\":{\r\n                \"message\":\"<style type=\\\"text/css\\\" style=\\\"\\\">\\r\\n<!--\\r\\np\\r\\n\\t{margin-top:0;\\r\\n\\tmargin-bottom:0}\\r\\n-->\\r\\n</style>\\r\\n<div dir=\\\"ltr\\\">\\r\\n<div id=\\\"x_divtagdefaultwrapper\\\" style=\\\"font-size:12pt; color:#000000; background-color:#FFFFFF; font-family:Calibri,Arial,Helvetica,sans-serif\\\">\\r\\n<p>Hi, I am on vacation right now. I'll get back to you after I return.<br>\\r\\n</p>\\r\\n</div>\\r\\n</div>\",\r\n                \"messageLanguage\":{\r\n                    \"locale\":\"en-US\",\r\n                    \"displayName\":\"English (United States)\"\r\n                },\r\n                \"scheduledStartTime\": {\r\n                    \"dateTime\": \"2018-08-07T02:00:00.0000000\",\r\n                    \"timeZone\": \"UTC\"\r\n                },\r\n                \"scheduledEndTime\": {\r\n                    \"dateTime\": \"2018-08-09T02:00:00.0000000\",\r\n                    \"timeZone\": \"UTC\"\r\n                }\r\n            },\r\n            \"mailboxFull\":false\r\n        },\r\n        {\r\n            \"emailAddress\":{\r\n                \"name\":\"\",\r\n                \"address\":\"fannyd@contoso.onmicrosoft.com\"\r\n            },\r\n            \"automaticReplies\":{\r\n                \"message\":\"\"\r\n            },\r\n            \"mailboxFull\":false\r\n        }\r\n    ]\r\n}\r\n\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Mail.Read",
              "Mail.Read.Shared"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Mail.Read"
            ]
          },
          {
            "Application": [
              "Mail.Read"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      }
    },
    "/me/reminderView(endDateTime={endDateTime},startDateTime={startDateTime})": {
      "get": {
        "tags": [
          "me.Functions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "me.reminderView.d02b",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Prefer",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDateTime",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "startDateTime",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.reminder"
                      }
                    ],
                    "nullable": true
                  }
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n    \"@odata.context\": \"https://graph.microsoft.com/v1.0/$metadata#Collection(microsoft.graph.reminder)\",\r\n    \"value\": [\r\n        {\r\n            \"eventId\": \"AAMkADNsvAAA=\",\r\n            \"changeKey\": \"SuFHwDRP1EeXJUopWbSLlgAAmBvk2g==\",\r\n            \"eventSubject\": \"Plan summer company picnic\",\r\n            \"eventWebLink\": \"https://outlook.office365.com/owa/?itemid=AAMkADNsvAAA%3D&exvsurl=1&path=/calendar/item\",\r\n            \"eventStartTime\": {\r\n                \"dateTime\": \"2017-06-09T18:00:00.0000000\",\r\n                \"timeZone\": \"UTC\"\r\n            },\r\n            \"eventEndTime\": {\r\n                \"dateTime\": \"2017-06-09T19:00:00.0000000\",\r\n                \"timeZone\": \"UTC\"\r\n            },\r\n            \"eventLocation\": {\r\n                \"displayName\": \"Conf Room 3\"\r\n            },\r\n            \"reminderFireTime\": {\r\n                \"dateTime\": \"2017-06-09T17:45:00.0000000\",\r\n                \"timeZone\": \"UTC\"\r\n            }\r\n        }\r\n    ]\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Calendars.Read",
              "Calendars.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Calendars.Read",
              "Calendars.ReadWrite"
            ]
          },
          {
            "Application": [
              "Calendars.Read",
              "Calendars.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/me/sendMail": {
      "post": {
        "tags": [
          "me.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "me.sendMail",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.message"
                      }
                    ],
                    "nullable": true
                  },
                  "saveToSentItems": {
                    "type": "boolean",
                    "default": false,
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Mail.Send"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Mail.Send"
            ]
          },
          {
            "Application": [
              "Mail.Send"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      }
    },
    "/me/onenote": {
      "get": {
        "tags": [
          "me.onenote"
        ],
        "summary": "Get onenote from me",
        "operationId": "me.GetOnenote",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "notebooks",
                  "operations",
                  "pages",
                  "resources",
                  "sectionGroups",
                  "sections"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "notebooks",
                  "operations",
                  "pages",
                  "resources",
                  "sectionGroups",
                  "sections"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.onenote"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/outlook": {
      "get": {
        "tags": [
          "me.outlookUser"
        ],
        "summary": "Get outlook from me",
        "operationId": "me.GetOutlook",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "masterCategories"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "masterCategories"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.outlookUser"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/outlook/supportedLanguages()": {
      "get": {
        "tags": [
          "me.Functions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "me.outlook.supportedLanguages.7d99",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.localeInfo"
                      }
                    ],
                    "nullable": true
                  }
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n  \"@odata.context\":\"https://graph.microsoft.com/v1.0/$metadata#Collection(microsoft.graph.localeInfo)\",\r\n  \"value\":[\r\n    {\r\n      \"locale\":\"af-ZA\",\r\n      \"displayName\":\"Afrikaans (Suid-Afrika)\"\r\n    },\r\n    {\r\n      \"locale\":\"en-US\",\r\n      \"displayName\":\"English (United States)\"\r\n    },\r\n    {\r\n       \"locale\":\"en-CA\",\r\n       \"displayName\":\"English (Canada)\"\r\n    }\r\n  ]\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "User.Read",
              "User.ReadBasic.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "User.Read"
            ]
          },
          {
            "Application": [
              "User.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/me/outlook/supportedTimeZones()": {
      "get": {
        "tags": [
          "me.Functions"
        ],
        "summary": "Invoke function supportedTimeZones",
        "operationId": "me.outlook.supportedTimeZones.4c5b",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.timeZoneInformation"
                      }
                    ],
                    "nullable": true
                  }
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n  \"@odata.context\":\"https://graph.microsoft.com/v1.0/$metadata#Collection(microsoft.graph.timeZoneInformation)\",\r\n  \"value\":[\r\n    {\r\n      \"alias\":\"Dateline Standard Time\",\r\n      \"displayName\":\"(UTC-12:00) International Date Line West\"\r\n    },\r\n    {\r\n      \"alias\":\"Samoa Standard Time\",\r\n      \"displayName\":\"(UTC+13:00) Samoa\"\r\n    },\r\n    {\r\n       \"alias\":\"UTC-11\",\r\n       \"displayName\":\"(UTC-11:00) Coordinated Universal Time-11\"\r\n    },\r\n    {\r\n      \"alias\":\"Aleutian Standard Time\",\r\n      \"displayName\":\"(UTC-10:00) Aleutian Islands\"\r\n    }\r\n  ]\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "User.Read",
              "User.ReadBasic.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "User.Read"
            ]
          },
          {
            "Application": [
              "User.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/me/outlook/supportedTimeZones(TimeZoneStandard={TimeZoneStandard})"
      ]
    },
    "/me/outlook/supportedTimeZones(TimeZoneStandard={TimeZoneStandard})": {
      "get": {
        "tags": [
          "me.Functions"
        ],
        "summary": "Invoke function supportedTimeZones",
        "operationId": "me.outlook.supportedTimeZones.cfd8",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TimeZoneStandard",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.timeZoneStandard"
                }
              ],
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.timeZoneInformation"
                      }
                    ],
                    "nullable": true
                  }
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n  \"@odata.context\":\"https://graph.microsoft.com/v1.0/$metadata#Collection(microsoft.graph.timeZoneInformation)\",\r\n  \"value\":[\r\n    {\r\n      \"alias\":\"Etc/GMT+12\",\r\n      \"displayName\":\"Etc/GMT+12\"\r\n    },\r\n    {\r\n      \"alias\":\"US/Samoa\",\r\n      \"displayName\":\"US/Samoa\"\r\n    },\r\n    {\r\n      \"alias\":\"Etc/GMT+11\",\r\n      \"displayName\":\"Etc/GMT+11\"\r\n    },\r\n    {\r\n      \"alias\":\"US/Aleutian\",\r\n      \"displayName\":\"US/Aleutian\"\r\n    }\r\n  ]\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "User.Read",
              "User.ReadBasic.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "User.Read"
            ]
          },
          {
            "Application": [
              "User.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/me/outlook/supportedTimeZones()"
      ]
    },
    "/me/ownedDevices": {
      "get": {
        "tags": [
          "me.directoryObject"
        ],
        "summary": "Get ownedDevices from me",
        "operationId": "me.ListOwnedDevices",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/ownedDevices/{directoryObject-id}": {
      "get": {
        "tags": [
          "me.directoryObject"
        ],
        "summary": "Get ownedDevices from me",
        "operationId": "me.GetOwnedDevices",
        "parameters": [
          {
            "name": "directoryObject-id",
            "in": "path",
            "description": "key: directoryObject-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "directoryObject"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/ownedObjects": {
      "get": {
        "tags": [
          "me.directoryObject"
        ],
        "summary": "Get ownedObjects from me",
        "operationId": "me.ListOwnedObjects",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/ownedObjects/{directoryObject-id}": {
      "get": {
        "tags": [
          "me.directoryObject"
        ],
        "summary": "Get ownedObjects from me",
        "operationId": "me.GetOwnedObjects",
        "parameters": [
          {
            "name": "directoryObject-id",
            "in": "path",
            "description": "key: directoryObject-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "directoryObject"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/people": {
      "get": {
        "tags": [
          "me.person"
        ],
        "summary": "Get people from me",
        "operationId": "me.ListPeople",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "birthday",
                  "birthday desc",
                  "companyName",
                  "companyName desc",
                  "department",
                  "department desc",
                  "displayName",
                  "displayName desc",
                  "scoredEmailAddresses",
                  "scoredEmailAddresses desc",
                  "givenName",
                  "givenName desc",
                  "imAddress",
                  "imAddress desc",
                  "isFavorite",
                  "isFavorite desc",
                  "jobTitle",
                  "jobTitle desc",
                  "officeLocation",
                  "officeLocation desc",
                  "personNotes",
                  "personNotes desc",
                  "personType",
                  "personType desc",
                  "phones",
                  "phones desc",
                  "postalAddresses",
                  "postalAddresses desc",
                  "profession",
                  "profession desc",
                  "surname",
                  "surname desc",
                  "userPrincipalName",
                  "userPrincipalName desc",
                  "websites",
                  "websites desc",
                  "yomiCompany",
                  "yomiCompany desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "birthday",
                  "companyName",
                  "department",
                  "displayName",
                  "scoredEmailAddresses",
                  "givenName",
                  "imAddress",
                  "isFavorite",
                  "jobTitle",
                  "officeLocation",
                  "personNotes",
                  "personType",
                  "phones",
                  "postalAddresses",
                  "profession",
                  "surname",
                  "userPrincipalName",
                  "websites",
                  "yomiCompany"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.person"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/people/{person-id}": {
      "get": {
        "tags": [
          "me.person"
        ],
        "summary": "Get people from me",
        "operationId": "me.GetPeople",
        "parameters": [
          {
            "name": "person-id",
            "in": "path",
            "description": "key: person-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "person"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "birthday",
                  "companyName",
                  "department",
                  "displayName",
                  "scoredEmailAddresses",
                  "givenName",
                  "imAddress",
                  "isFavorite",
                  "jobTitle",
                  "officeLocation",
                  "personNotes",
                  "personType",
                  "phones",
                  "postalAddresses",
                  "profession",
                  "surname",
                  "userPrincipalName",
                  "websites",
                  "yomiCompany"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.person"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/photo": {
      "get": {
        "tags": [
          "me.profilePhoto"
        ],
        "summary": "Get photo from me",
        "operationId": "me.GetPhoto",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "height",
                  "width"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.profilePhoto"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/planner": {
      "get": {
        "tags": [
          "me.plannerUser"
        ],
        "summary": "Get planner from me",
        "operationId": "me.GetPlanner",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "plans",
                  "tasks"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "plans",
                  "tasks"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.plannerUser"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/registeredDevices": {
      "get": {
        "tags": [
          "me.directoryObject"
        ],
        "summary": "Get registeredDevices from me",
        "operationId": "me.ListRegisteredDevices",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/registeredDevices/{directoryObject-id}": {
      "get": {
        "tags": [
          "me.directoryObject"
        ],
        "summary": "Get registeredDevices from me",
        "operationId": "me.GetRegisteredDevices",
        "parameters": [
          {
            "name": "directoryObject-id",
            "in": "path",
            "description": "key: directoryObject-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "directoryObject"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/organization": {
      "get": {
        "tags": [
          "organization.organization"
        ],
        "summary": "Get organization",
        "operationId": "organization.organization.GetOrganization",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "mobileDeviceManagementAuthority",
                  "assignedPlans",
                  "businessPhones",
                  "city",
                  "companyLastDirSyncTime",
                  "country",
                  "countryLetterCode",
                  "deletionTimestamp",
                  "dirSyncEnabled",
                  "displayName",
                  "marketingNotificationEmails",
                  "objectType",
                  "onPremisesLastSyncDateTime",
                  "onPremisesSyncEnabled",
                  "postalCode",
                  "preferredLanguage",
                  "privacyProfile",
                  "provisionedPlans",
                  "securityComplianceNotificationMails",
                  "securityComplianceNotificationPhones",
                  "state",
                  "street",
                  "technicalNotificationMails",
                  "telephoneNumber",
                  "verifiedDomains",
                  "extensions"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "extensions"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.organization"
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n  \"assignedPlans\": [\r\n    {\r\n      \"assignedDateTime\": \"datetime-value\",\r\n      \"capabilityStatus\": \"capabilityStatus-value\",\r\n      \"service\": \"service-value\",\r\n      \"servicePlanId\": \"servicePlanId-value\"\r\n    }\r\n  ],\r\n  \"businessPhones\": [\r\n    \"businessPhones-value\"\r\n  ],\r\n  \"city\": \"city-value\",\r\n  \"country\": \"country-value\",\r\n  \"countryLetterCode\": \"countryLetterCode-value\",\r\n  \"displayName\": \"displayName-value\"\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "User.Read",
              "Directory.Read.All",
              "Directory.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Directory.Read.All",
              "Directory.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "organization.organization"
        ],
        "summary": "Update organization",
        "operationId": "organization.organization.UpdateOrganization",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.organization"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Directory.AccessAsUser.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/organization/extensions": {
      "get": {
        "tags": [
          "organization.extension"
        ],
        "summary": "Get extensions from organization",
        "operationId": "organization.ListExtensions",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/organization/extensions/{extension-id}": {
      "get": {
        "tags": [
          "organization.extension"
        ],
        "summary": "Get extensions from organization",
        "operationId": "organization.GetExtensions",
        "parameters": [
          {
            "name": "extension-id",
            "in": "path",
            "description": "key: extension-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "extension"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/planner": {
      "get": {
        "tags": [
          "planner.planner"
        ],
        "summary": "The **planner** resource is available at the root of the graph.",
        "operationId": "planner.planner.GetPlanner",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "buckets",
                  "plans",
                  "tasks"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "buckets",
                  "plans",
                  "tasks"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.planner"
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "planner.planner"
        ],
        "summary": "Update planner",
        "operationId": "planner.planner.UpdatePlanner",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.planner"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/planner/buckets": {
      "get": {
        "tags": [
          "planner.plannerBucket"
        ],
        "summary": "Get buckets from planner",
        "operationId": "planner.ListBuckets",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "name",
                  "name desc",
                  "orderHint",
                  "orderHint desc",
                  "planId",
                  "planId desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "name",
                  "orderHint",
                  "planId",
                  "tasks"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "tasks"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.plannerBucket"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/planner/buckets/{plannerBucket-id}": {
      "get": {
        "tags": [
          "planner.plannerBucket"
        ],
        "summary": "Get buckets from planner",
        "operationId": "planner.GetBuckets",
        "parameters": [
          {
            "name": "plannerBucket-id",
            "in": "path",
            "description": "key: plannerBucket-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "plannerBucket"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "name",
                  "orderHint",
                  "planId",
                  "tasks"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "tasks"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.plannerBucket"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/planner/plans": {
      "get": {
        "tags": [
          "planner.plannerPlan"
        ],
        "summary": "Get plans from planner",
        "operationId": "planner.ListPlans",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "createdBy",
                  "createdBy desc",
                  "createdDateTime",
                  "createdDateTime desc",
                  "owner",
                  "owner desc",
                  "title",
                  "title desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "owner",
                  "title",
                  "buckets",
                  "details",
                  "tasks"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "buckets",
                  "details",
                  "tasks"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.plannerPlan"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/planner/plans/{plannerPlan-id}": {
      "get": {
        "tags": [
          "planner.plannerPlan"
        ],
        "summary": "Get plans from planner",
        "operationId": "planner.GetPlans",
        "parameters": [
          {
            "name": "plannerPlan-id",
            "in": "path",
            "description": "key: plannerPlan-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "plannerPlan"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "owner",
                  "title",
                  "buckets",
                  "details",
                  "tasks"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "buckets",
                  "details",
                  "tasks"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.plannerPlan"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/planner/tasks": {
      "get": {
        "tags": [
          "planner.plannerTask"
        ],
        "summary": "Get tasks from planner",
        "operationId": "planner.ListTasks",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "activeChecklistItemCount",
                  "activeChecklistItemCount desc",
                  "appliedCategories",
                  "appliedCategories desc",
                  "assigneePriority",
                  "assigneePriority desc",
                  "assignments",
                  "assignments desc",
                  "bucketId",
                  "bucketId desc",
                  "checklistItemCount",
                  "checklistItemCount desc",
                  "completedBy",
                  "completedBy desc",
                  "completedDateTime",
                  "completedDateTime desc",
                  "conversationThreadId",
                  "conversationThreadId desc",
                  "createdBy",
                  "createdBy desc",
                  "createdDateTime",
                  "createdDateTime desc",
                  "dueDateTime",
                  "dueDateTime desc",
                  "hasDescription",
                  "hasDescription desc",
                  "orderHint",
                  "orderHint desc",
                  "percentComplete",
                  "percentComplete desc",
                  "planId",
                  "planId desc",
                  "previewType",
                  "previewType desc",
                  "referenceCount",
                  "referenceCount desc",
                  "startDateTime",
                  "startDateTime desc",
                  "title",
                  "title desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "activeChecklistItemCount",
                  "appliedCategories",
                  "assigneePriority",
                  "assignments",
                  "bucketId",
                  "checklistItemCount",
                  "completedBy",
                  "completedDateTime",
                  "conversationThreadId",
                  "createdBy",
                  "createdDateTime",
                  "dueDateTime",
                  "hasDescription",
                  "orderHint",
                  "percentComplete",
                  "planId",
                  "previewType",
                  "referenceCount",
                  "startDateTime",
                  "title",
                  "assignedToTaskBoardFormat",
                  "bucketTaskBoardFormat",
                  "details",
                  "progressTaskBoardFormat"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "assignedToTaskBoardFormat",
                  "bucketTaskBoardFormat",
                  "details",
                  "progressTaskBoardFormat"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.plannerTask"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/planner/tasks/{plannerTask-id}": {
      "get": {
        "tags": [
          "planner.plannerTask"
        ],
        "summary": "Get tasks from planner",
        "operationId": "planner.GetTasks",
        "parameters": [
          {
            "name": "plannerTask-id",
            "in": "path",
            "description": "key: plannerTask-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "plannerTask"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "activeChecklistItemCount",
                  "appliedCategories",
                  "assigneePriority",
                  "assignments",
                  "bucketId",
                  "checklistItemCount",
                  "completedBy",
                  "completedDateTime",
                  "conversationThreadId",
                  "createdBy",
                  "createdDateTime",
                  "dueDateTime",
                  "hasDescription",
                  "orderHint",
                  "percentComplete",
                  "planId",
                  "previewType",
                  "referenceCount",
                  "startDateTime",
                  "title",
                  "assignedToTaskBoardFormat",
                  "bucketTaskBoardFormat",
                  "details",
                  "progressTaskBoardFormat"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "assignedToTaskBoardFormat",
                  "bucketTaskBoardFormat",
                  "details",
                  "progressTaskBoardFormat"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.plannerTask"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/reports": {
      "get": {
        "tags": [
          "reports.reportRoot"
        ],
        "summary": "Get reports",
        "operationId": "reports.reportRoot.GetReportRoot",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.reportRoot"
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "reports.reportRoot"
        ],
        "summary": "Update reports",
        "operationId": "reports.reportRoot.UpdateReportRoot",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.reportRoot"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/reports/getEmailActivityCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getEmailActivityCounts",
        "operationId": "reports.getEmailActivityCounts.d2c9",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getEmailActivityUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getEmailActivityUserCounts",
        "operationId": "reports.getEmailActivityUserCounts.67ae",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getEmailActivityUserDetail(date={date})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getEmailActivityUserDetail",
        "operationId": "reports.getEmailActivityUserDetail.35e0",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string",
              "format": "date",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/reports/getEmailActivityUserDetail(period={period})"
      ]
    },
    "/reports/getEmailActivityUserDetail(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getEmailActivityUserDetail",
        "operationId": "reports.getEmailActivityUserDetail.ae84",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/reports/getEmailActivityUserDetail(date={date})"
      ]
    },
    "/reports/getEmailAppUsageAppsUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getEmailAppUsageAppsUserCounts",
        "operationId": "reports.getEmailAppUsageAppsUserCounts.807c",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getEmailAppUsageUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getEmailAppUsageUserCounts",
        "operationId": "reports.getEmailAppUsageUserCounts.6fd2",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getEmailAppUsageUserDetail(date={date})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getEmailAppUsageUserDetail",
        "operationId": "reports.getEmailAppUsageUserDetail.8c90",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string",
              "format": "date",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/reports/getEmailAppUsageUserDetail(period={period})"
      ]
    },
    "/reports/getEmailAppUsageUserDetail(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getEmailAppUsageUserDetail",
        "operationId": "reports.getEmailAppUsageUserDetail.a73d",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/reports/getEmailAppUsageUserDetail(date={date})"
      ]
    },
    "/reports/getEmailAppUsageVersionsUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getEmailAppUsageVersionsUserCounts",
        "operationId": "reports.getEmailAppUsageVersionsUserCounts.f73b",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getMailboxUsageDetail(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getMailboxUsageDetail",
        "operationId": "reports.getMailboxUsageDetail.6ef8",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getMailboxUsageMailboxCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getMailboxUsageMailboxCounts",
        "operationId": "reports.getMailboxUsageMailboxCounts.1ae9",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getMailboxUsageQuotaStatusMailboxCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getMailboxUsageQuotaStatusMailboxCounts",
        "operationId": "reports.getMailboxUsageQuotaStatusMailboxCounts.b080",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getMailboxUsageStorage(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getMailboxUsageStorage",
        "operationId": "reports.getMailboxUsageStorage.fdb0",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getOffice365ActivationCounts()": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getOffice365ActivationCounts",
        "operationId": "reports.getOffice365ActivationCounts.dd57",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getOffice365ActivationsUserCounts()": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getOffice365ActivationsUserCounts",
        "operationId": "reports.getOffice365ActivationsUserCounts.21b3",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getOffice365ActivationsUserDetail()": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getOffice365ActivationsUserDetail",
        "operationId": "reports.getOffice365ActivationsUserDetail.1156",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getOffice365ActiveUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getOffice365ActiveUserCounts",
        "operationId": "reports.getOffice365ActiveUserCounts.c3b0",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getOffice365ActiveUserDetail(date={date})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getOffice365ActiveUserDetail",
        "operationId": "reports.getOffice365ActiveUserDetail.3621",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string",
              "format": "date",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/reports/getOffice365ActiveUserDetail(period={period})"
      ]
    },
    "/reports/getOffice365ActiveUserDetail(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getOffice365ActiveUserDetail",
        "operationId": "reports.getOffice365ActiveUserDetail.7f57",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/reports/getOffice365ActiveUserDetail(date={date})"
      ]
    },
    "/reports/getOffice365GroupsActivityCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getOffice365GroupsActivityCounts",
        "operationId": "reports.getOffice365GroupsActivityCounts.9333",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getOffice365GroupsActivityDetail(date={date})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getOffice365GroupsActivityDetail",
        "operationId": "reports.getOffice365GroupsActivityDetail.d699",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string",
              "format": "date",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/reports/getOffice365GroupsActivityDetail(period={period})"
      ]
    },
    "/reports/getOffice365GroupsActivityDetail(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getOffice365GroupsActivityDetail",
        "operationId": "reports.getOffice365GroupsActivityDetail.1b51",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/reports/getOffice365GroupsActivityDetail(date={date})"
      ]
    },
    "/reports/getOffice365GroupsActivityFileCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getOffice365GroupsActivityFileCounts",
        "operationId": "reports.getOffice365GroupsActivityFileCounts.7206",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getOffice365GroupsActivityGroupCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getOffice365GroupsActivityGroupCounts",
        "operationId": "reports.getOffice365GroupsActivityGroupCounts.f5de",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getOffice365GroupsActivityStorage(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getOffice365GroupsActivityStorage",
        "operationId": "reports.getOffice365GroupsActivityStorage.a4d3",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getOffice365ServicesUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getOffice365ServicesUserCounts",
        "operationId": "reports.getOffice365ServicesUserCounts.0d23",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getOneDriveActivityFileCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getOneDriveActivityFileCounts",
        "operationId": "reports.getOneDriveActivityFileCounts.c2dc",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getOneDriveActivityUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getOneDriveActivityUserCounts",
        "operationId": "reports.getOneDriveActivityUserCounts.442b",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getOneDriveActivityUserDetail(date={date})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getOneDriveActivityUserDetail",
        "operationId": "reports.getOneDriveActivityUserDetail.57de",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string",
              "format": "date",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/reports/getOneDriveActivityUserDetail(period={period})"
      ]
    },
    "/reports/getOneDriveActivityUserDetail(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getOneDriveActivityUserDetail",
        "operationId": "reports.getOneDriveActivityUserDetail.20ae",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/reports/getOneDriveActivityUserDetail(date={date})"
      ]
    },
    "/reports/getOneDriveUsageAccountCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getOneDriveUsageAccountCounts",
        "operationId": "reports.getOneDriveUsageAccountCounts.801b",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getOneDriveUsageAccountDetail(date={date})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getOneDriveUsageAccountDetail",
        "operationId": "reports.getOneDriveUsageAccountDetail.b461",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string",
              "format": "date",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/reports/getOneDriveUsageAccountDetail(period={period})"
      ]
    },
    "/reports/getOneDriveUsageAccountDetail(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getOneDriveUsageAccountDetail",
        "operationId": "reports.getOneDriveUsageAccountDetail.3f04",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/reports/getOneDriveUsageAccountDetail(date={date})"
      ]
    },
    "/reports/getOneDriveUsageFileCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getOneDriveUsageFileCounts",
        "operationId": "reports.getOneDriveUsageFileCounts.8444",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getOneDriveUsageStorage(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getOneDriveUsageStorage",
        "operationId": "reports.getOneDriveUsageStorage.c292",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getSharePointActivityFileCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getSharePointActivityFileCounts",
        "operationId": "reports.getSharePointActivityFileCounts.b044",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getSharePointActivityPages(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getSharePointActivityPages",
        "operationId": "reports.getSharePointActivityPages.73a2",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getSharePointActivityUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getSharePointActivityUserCounts",
        "operationId": "reports.getSharePointActivityUserCounts.a723",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getSharePointActivityUserDetail(date={date})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getSharePointActivityUserDetail",
        "operationId": "reports.getSharePointActivityUserDetail.c908",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string",
              "format": "date",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/reports/getSharePointActivityUserDetail(period={period})"
      ]
    },
    "/reports/getSharePointActivityUserDetail(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getSharePointActivityUserDetail",
        "operationId": "reports.getSharePointActivityUserDetail.9d39",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/reports/getSharePointActivityUserDetail(date={date})"
      ]
    },
    "/reports/getSharePointSiteUsageDetail(date={date})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getSharePointSiteUsageDetail",
        "operationId": "reports.getSharePointSiteUsageDetail.9a98",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string",
              "format": "date",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/reports/getSharePointSiteUsageDetail(period={period})"
      ]
    },
    "/reports/getSharePointSiteUsageDetail(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getSharePointSiteUsageDetail",
        "operationId": "reports.getSharePointSiteUsageDetail.bec0",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/reports/getSharePointSiteUsageDetail(date={date})"
      ]
    },
    "/reports/getSharePointSiteUsageFileCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getSharePointSiteUsageFileCounts",
        "operationId": "reports.getSharePointSiteUsageFileCounts.b2bd",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getSharePointSiteUsagePages(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getSharePointSiteUsagePages",
        "operationId": "reports.getSharePointSiteUsagePages.ef52",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getSharePointSiteUsageSiteCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getSharePointSiteUsageSiteCounts",
        "operationId": "reports.getSharePointSiteUsageSiteCounts.1b68",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getSharePointSiteUsageStorage(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getSharePointSiteUsageStorage",
        "operationId": "reports.getSharePointSiteUsageStorage.4100",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getSkypeForBusinessActivityCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getSkypeForBusinessActivityCounts",
        "operationId": "reports.getSkypeForBusinessActivityCounts.1cd1",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getSkypeForBusinessActivityUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getSkypeForBusinessActivityUserCounts",
        "operationId": "reports.getSkypeForBusinessActivityUserCounts.502a",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getSkypeForBusinessActivityUserDetail(date={date})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getSkypeForBusinessActivityUserDetail",
        "operationId": "reports.getSkypeForBusinessActivityUserDetail.de4b",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string",
              "format": "date",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/reports/getSkypeForBusinessActivityUserDetail(period={period})"
      ]
    },
    "/reports/getSkypeForBusinessActivityUserDetail(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getSkypeForBusinessActivityUserDetail",
        "operationId": "reports.getSkypeForBusinessActivityUserDetail.2a24",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/reports/getSkypeForBusinessActivityUserDetail(date={date})"
      ]
    },
    "/reports/getSkypeForBusinessDeviceUsageDistributionUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getSkypeForBusinessDeviceUsageDistributionUserCounts",
        "operationId": "reports.getSkypeForBusinessDeviceUsageDistributionUserCounts.b288",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getSkypeForBusinessDeviceUsageUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getSkypeForBusinessDeviceUsageUserCounts",
        "operationId": "reports.getSkypeForBusinessDeviceUsageUserCounts.afec",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getSkypeForBusinessDeviceUsageUserDetail(date={date})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getSkypeForBusinessDeviceUsageUserDetail",
        "operationId": "reports.getSkypeForBusinessDeviceUsageUserDetail.c31f",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string",
              "format": "date",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/reports/getSkypeForBusinessDeviceUsageUserDetail(period={period})"
      ]
    },
    "/reports/getSkypeForBusinessDeviceUsageUserDetail(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getSkypeForBusinessDeviceUsageUserDetail",
        "operationId": "reports.getSkypeForBusinessDeviceUsageUserDetail.e139",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/reports/getSkypeForBusinessDeviceUsageUserDetail(date={date})"
      ]
    },
    "/reports/getSkypeForBusinessOrganizerActivityCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getSkypeForBusinessOrganizerActivityCounts",
        "operationId": "reports.getSkypeForBusinessOrganizerActivityCounts.337a",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getSkypeForBusinessOrganizerActivityMinuteCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getSkypeForBusinessOrganizerActivityMinuteCounts",
        "operationId": "reports.getSkypeForBusinessOrganizerActivityMinuteCounts.a6f3",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getSkypeForBusinessOrganizerActivityUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getSkypeForBusinessOrganizerActivityUserCounts",
        "operationId": "reports.getSkypeForBusinessOrganizerActivityUserCounts.61cb",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getSkypeForBusinessParticipantActivityCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getSkypeForBusinessParticipantActivityCounts",
        "operationId": "reports.getSkypeForBusinessParticipantActivityCounts.3f25",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getSkypeForBusinessParticipantActivityMinuteCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getSkypeForBusinessParticipantActivityMinuteCounts",
        "operationId": "reports.getSkypeForBusinessParticipantActivityMinuteCounts.19f1",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getSkypeForBusinessParticipantActivityUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getSkypeForBusinessParticipantActivityUserCounts",
        "operationId": "reports.getSkypeForBusinessParticipantActivityUserCounts.2fb8",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getSkypeForBusinessPeerToPeerActivityCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getSkypeForBusinessPeerToPeerActivityCounts",
        "operationId": "reports.getSkypeForBusinessPeerToPeerActivityCounts.4ba6",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getSkypeForBusinessPeerToPeerActivityMinuteCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getSkypeForBusinessPeerToPeerActivityMinuteCounts",
        "operationId": "reports.getSkypeForBusinessPeerToPeerActivityMinuteCounts.de62",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getSkypeForBusinessPeerToPeerActivityUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getSkypeForBusinessPeerToPeerActivityUserCounts",
        "operationId": "reports.getSkypeForBusinessPeerToPeerActivityUserCounts.5fbc",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getTeamsDeviceUsageDistributionUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getTeamsDeviceUsageDistributionUserCounts",
        "operationId": "reports.getTeamsDeviceUsageDistributionUserCounts.91e1",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getTeamsDeviceUsageUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getTeamsDeviceUsageUserCounts",
        "operationId": "reports.getTeamsDeviceUsageUserCounts.c715",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getTeamsDeviceUsageUserDetail(date={date})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getTeamsDeviceUsageUserDetail",
        "operationId": "reports.getTeamsDeviceUsageUserDetail.43be",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string",
              "format": "date",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/reports/getTeamsDeviceUsageUserDetail(period={period})"
      ]
    },
    "/reports/getTeamsDeviceUsageUserDetail(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getTeamsDeviceUsageUserDetail",
        "operationId": "reports.getTeamsDeviceUsageUserDetail.aab9",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/reports/getTeamsDeviceUsageUserDetail(date={date})"
      ]
    },
    "/reports/getTeamsUserActivityCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getTeamsUserActivityCounts",
        "operationId": "reports.getTeamsUserActivityCounts.0201",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getTeamsUserActivityUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getTeamsUserActivityUserCounts",
        "operationId": "reports.getTeamsUserActivityUserCounts.fd77",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getTeamsUserActivityUserDetail(date={date})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getTeamsUserActivityUserDetail",
        "operationId": "reports.getTeamsUserActivityUserDetail.3a37",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string",
              "format": "date",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/reports/getTeamsUserActivityUserDetail(period={period})"
      ]
    },
    "/reports/getTeamsUserActivityUserDetail(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getTeamsUserActivityUserDetail",
        "operationId": "reports.getTeamsUserActivityUserDetail.dd45",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/reports/getTeamsUserActivityUserDetail(date={date})"
      ]
    },
    "/reports/getYammerActivityCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getYammerActivityCounts",
        "operationId": "reports.getYammerActivityCounts.31c4",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getYammerActivityUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getYammerActivityUserCounts",
        "operationId": "reports.getYammerActivityUserCounts.5f59",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getYammerActivityUserDetail(date={date})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getYammerActivityUserDetail",
        "operationId": "reports.getYammerActivityUserDetail.7d9d",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string",
              "format": "date",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/reports/getYammerActivityUserDetail(period={period})"
      ]
    },
    "/reports/getYammerActivityUserDetail(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getYammerActivityUserDetail",
        "operationId": "reports.getYammerActivityUserDetail.ca58",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/reports/getYammerActivityUserDetail(date={date})"
      ]
    },
    "/reports/getYammerDeviceUsageDistributionUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getYammerDeviceUsageDistributionUserCounts",
        "operationId": "reports.getYammerDeviceUsageDistributionUserCounts.9d71",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getYammerDeviceUsageUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getYammerDeviceUsageUserCounts",
        "operationId": "reports.getYammerDeviceUsageUserCounts.0624",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getYammerDeviceUsageUserDetail(date={date})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getYammerDeviceUsageUserDetail",
        "operationId": "reports.getYammerDeviceUsageUserDetail.c8b5",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string",
              "format": "date",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/reports/getYammerDeviceUsageUserDetail(period={period})"
      ]
    },
    "/reports/getYammerDeviceUsageUserDetail(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getYammerDeviceUsageUserDetail",
        "operationId": "reports.getYammerDeviceUsageUserDetail.1955",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/reports/getYammerDeviceUsageUserDetail(date={date})"
      ]
    },
    "/reports/getYammerGroupsActivityCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getYammerGroupsActivityCounts",
        "operationId": "reports.getYammerGroupsActivityCounts.3fdb",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getYammerGroupsActivityDetail(date={date})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getYammerGroupsActivityDetail",
        "operationId": "reports.getYammerGroupsActivityDetail.3ad3",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
              "type": "string",
              "format": "date",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/reports/getYammerGroupsActivityDetail(period={period})"
      ]
    },
    "/reports/getYammerGroupsActivityDetail(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getYammerGroupsActivityDetail",
        "operationId": "reports.getYammerGroupsActivityDetail.1de3",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/reports/getYammerGroupsActivityDetail(date={date})"
      ]
    },
    "/reports/getYammerGroupsActivityGroupCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getYammerGroupsActivityGroupCounts",
        "operationId": "reports.getYammerGroupsActivityGroupCounts.61cb",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.report"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/schemaExtensions": {
      "get": {
        "tags": [
          "schemaExtensions.schemaExtension"
        ],
        "summary": "Get entities from schemaExtensions",
        "operationId": "schemaExtensions.schemaExtension.ListSchemaExtension",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "description",
                  "description desc",
                  "owner",
                  "owner desc",
                  "properties",
                  "properties desc",
                  "status",
                  "status desc",
                  "targetTypes",
                  "targetTypes desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "description",
                  "owner",
                  "properties",
                  "status",
                  "targetTypes"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of schemaExtension",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.schemaExtension"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "schemaExtensions.schemaExtension"
        ],
        "summary": "Add new entity to schemaExtensions",
        "operationId": "schemaExtensions.schemaExtension.CreateSchemaExtension",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.schemaExtension"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.schemaExtension"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/schemaExtensions/{schemaExtension-id}": {
      "get": {
        "tags": [
          "schemaExtensions.schemaExtension"
        ],
        "summary": "Get entity from schemaExtensions by key",
        "operationId": "schemaExtensions.schemaExtension.GetSchemaExtension",
        "parameters": [
          {
            "name": "schemaExtension-id",
            "in": "path",
            "description": "key: schemaExtension-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "schemaExtension"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "description",
                  "owner",
                  "properties",
                  "status",
                  "targetTypes"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.schemaExtension"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "schemaExtensions.schemaExtension"
        ],
        "summary": "Update entity in schemaExtensions",
        "operationId": "schemaExtensions.schemaExtension.UpdateSchemaExtension",
        "parameters": [
          {
            "name": "schemaExtension-id",
            "in": "path",
            "description": "key: schemaExtension-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "schemaExtension"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.schemaExtension"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Directory.AccessAsUser.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "schemaExtensions.schemaExtension"
        ],
        "summary": "Delete entity from schemaExtensions",
        "operationId": "schemaExtensions.schemaExtension.DeleteSchemaExtension",
        "parameters": [
          {
            "name": "schemaExtension-id",
            "in": "path",
            "description": "key: schemaExtension-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "schemaExtension"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Directory.AccessAsUser.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/security": {
      "get": {
        "tags": [
          "security.security"
        ],
        "summary": "The **security** resource is available at the root of the graph.",
        "operationId": "security.security.GetSecurity",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "alerts"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "alerts"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.security"
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "security.security"
        ],
        "summary": "Update security",
        "operationId": "security.security.UpdateSecurity",
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.security"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/security/alerts": {
      "get": {
        "tags": [
          "security.alert"
        ],
        "summary": "Get alerts from security",
        "operationId": "security.ListAlerts",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.alert"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/security/alerts/": {
      "get": {
        "tags": [
          "security.alert"
        ],
        "summary": "Get alerts from security",
        "operationId": "security.GetAlerts",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.alert"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/shares": {
      "get": {
        "tags": [
          "shares.sharedDriveItem"
        ],
        "summary": "Get entities from shares",
        "operationId": "shares.sharedDriveItem.ListSharedDriveItem",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "createdBy",
                  "createdBy desc",
                  "createdDateTime",
                  "createdDateTime desc",
                  "description",
                  "description desc",
                  "eTag",
                  "eTag desc",
                  "lastModifiedBy",
                  "lastModifiedBy desc",
                  "lastModifiedDateTime",
                  "lastModifiedDateTime desc",
                  "name",
                  "name desc",
                  "parentReference",
                  "parentReference desc",
                  "webUrl",
                  "webUrl desc",
                  "owner",
                  "owner desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "owner",
                  "createdByUser",
                  "lastModifiedByUser",
                  "driveItem",
                  "items",
                  "list",
                  "listItem",
                  "root",
                  "site"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "driveItem",
                  "items",
                  "list",
                  "listItem",
                  "root",
                  "site"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of sharedDriveItem",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.sharedDriveItem"
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n  \"id\": \"B64397C8-07AE-43E4-920E-32BFB4331A5B\",\r\n  \"name\": \"contoso project.docx\",\r\n  \"owner\": {\r\n    \"user\": {\r\n      \"id\": \"98E88F1C-F8DC-47CC-A406-C090248B30E5\",\r\n      \"displayName\": \"Ryan Gregg\"\r\n    }\r\n  }\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "shares.sharedDriveItem"
        ],
        "summary": "Add new entity to shares",
        "operationId": "shares.sharedDriveItem.CreateSharedDriveItem",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.sharedDriveItem"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.sharedDriveItem"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/shares/{sharedDriveItem-id}": {
      "get": {
        "tags": [
          "shares.sharedDriveItem"
        ],
        "summary": "Get entity from shares by key",
        "operationId": "shares.sharedDriveItem.GetSharedDriveItem",
        "parameters": [
          {
            "name": "sharedDriveItem-id",
            "in": "path",
            "description": "key: sharedDriveItem-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "sharedDriveItem"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "owner",
                  "createdByUser",
                  "lastModifiedByUser",
                  "driveItem",
                  "items",
                  "list",
                  "listItem",
                  "root",
                  "site"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "driveItem",
                  "items",
                  "list",
                  "listItem",
                  "root",
                  "site"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.sharedDriveItem"
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n  \"id\": \"B64397C8-07AE-43E4-920E-32BFB4331A5B\",\r\n  \"name\": \"contoso project.docx\",\r\n  \"owner\": {\r\n    \"user\": {\r\n      \"id\": \"98E88F1C-F8DC-47CC-A406-C090248B30E5\",\r\n      \"displayName\": \"Ryan Gregg\"\r\n    }\r\n  }\r\n}\n"
                  }
                }
              }
            },
            "links": {
              "driveItem": {
                "operationId": "shares.sharedDriveItem.GetSharedDriveItem",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "items": {
                "operationId": "shares.sharedDriveItem.GetSharedDriveItem",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "list": {
                "operationId": "shares.sharedDriveItem.GetSharedDriveItem",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "listItem": {
                "operationId": "shares.sharedDriveItem.GetSharedDriveItem",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "root": {
                "operationId": "shares.sharedDriveItem.GetSharedDriveItem",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "site": {
                "operationId": "shares.sharedDriveItem.GetSharedDriveItem",
                "parameters": {
                  "id": "$request.path.id"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "shares.sharedDriveItem"
        ],
        "summary": "Update entity in shares",
        "operationId": "shares.sharedDriveItem.UpdateSharedDriveItem",
        "parameters": [
          {
            "name": "sharedDriveItem-id",
            "in": "path",
            "description": "key: sharedDriveItem-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "sharedDriveItem"
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.sharedDriveItem"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "shares.sharedDriveItem"
        ],
        "summary": "Delete entity from shares",
        "operationId": "shares.sharedDriveItem.DeleteSharedDriveItem",
        "parameters": [
          {
            "name": "sharedDriveItem-id",
            "in": "path",
            "description": "key: sharedDriveItem-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "sharedDriveItem"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/shares/{sharedDriveItem-id}/driveItem": {
      "get": {
        "tags": [
          "shares.driveItem"
        ],
        "summary": "Get driveItem from shares",
        "operationId": "shares.GetDriveItem",
        "parameters": [
          {
            "name": "sharedDriveItem-id",
            "in": "path",
            "description": "key: sharedDriveItem-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "sharedDriveItem"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "audio",
                  "content",
                  "cTag",
                  "deleted",
                  "file",
                  "fileSystemInfo",
                  "folder",
                  "image",
                  "location",
                  "package",
                  "photo",
                  "publication",
                  "remoteItem",
                  "root",
                  "searchResult",
                  "shared",
                  "sharepointIds",
                  "size",
                  "specialFolder",
                  "video",
                  "webDavUrl",
                  "createdByUser",
                  "lastModifiedByUser",
                  "children",
                  "permissions",
                  "thumbnails",
                  "versions",
                  "listItem",
                  "workbook"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "children",
                  "permissions",
                  "thumbnails",
                  "versions",
                  "listItem",
                  "workbook"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.driveItem"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/shares/{sharedDriveItem-id}/driveItem/copy": {
      "post": {
        "tags": [
          "shares.Actions"
        ],
        "summary": "Returns details about how to [monitor the progress](../../../concepts/long_running_actions_overview.md) of the copy, upon accepting the request.",
        "operationId": "shares.driveItem.copy",
        "parameters": [
          {
            "name": "sharedDriveItem-id",
            "in": "path",
            "description": "key: sharedDriveItem-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "sharedDriveItem"
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "parentReference": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.itemReference"
                      }
                    ],
                    "nullable": true
                  },
                  "name": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/shares/{sharedDriveItem-id}/items/{driveItem-id}/copy",
        "/shares/{sharedDriveItem-id}/root/copy"
      ]
    },
    "/shares/{sharedDriveItem-id}/driveItem/createLink": {
      "post": {
        "tags": [
          "shares.Actions"
        ],
        "summary": "The following example requests a sharing link to be created for the DriveItem specified by {itemId} in the user's OneDrive.\r\nThe sharing link is configured to be read-only and usable by anyone with the link.",
        "operationId": "shares.driveItem.createLink",
        "parameters": [
          {
            "name": "sharedDriveItem-id",
            "in": "path",
            "description": "key: sharedDriveItem-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "sharedDriveItem"
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "nullable": true
                  },
                  "scope": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.permission"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/shares/{sharedDriveItem-id}/items/{driveItem-id}/createLink",
        "/shares/{sharedDriveItem-id}/root/createLink"
      ]
    },
    "/shares/{sharedDriveItem-id}/driveItem/createUploadSession": {
      "post": {
        "tags": [
          "shares.Actions"
        ],
        "summary": "Invoke action createUploadSession",
        "operationId": "shares.driveItem.createUploadSession",
        "parameters": [
          {
            "name": "sharedDriveItem-id",
            "in": "path",
            "description": "key: sharedDriveItem-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "sharedDriveItem"
          },
          {
            "name": "if-match",
            "in": "header",
            "description": "If this request header is included and the eTag (or cTag) provided does not match the current etag on the item, a 412 Precondition Failed error response is returned.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "item": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.driveItemUploadableProperties"
                      }
                    ],
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.uploadSession"
                    }
                  ],
                  "nullable": true
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n  \"uploadUrl\": \"https://sn3302.up.1drv.com/up/fe6987415ace7X4e1eF866337\",\r\n  \"expirationDateTime\": \"2015-01-29T09:21:55.523Z\"\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/shares/{sharedDriveItem-id}/items/{driveItem-id}/createUploadSession",
        "/shares/{sharedDriveItem-id}/root/createUploadSession"
      ]
    },
    "/shares/{sharedDriveItem-id}/driveItem/delta()": {
      "get": {
        "tags": [
          "shares.Functions"
        ],
        "summary": "Here is an example of how to call this API to establish your local state.",
        "operationId": "shares.driveItem.delta.2209",
        "parameters": [
          {
            "name": "sharedDriveItem-id",
            "in": "path",
            "description": "key: sharedDriveItem-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "sharedDriveItem"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.driveItem"
                      }
                    ],
                    "nullable": true
                  }
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n    \"value\": [\r\n        {\r\n            \"id\": \"0123456789abc\",\r\n            \"name\": \"folder2\",\r\n            \"folder\": { }\r\n        },\r\n        {\r\n            \"id\": \"123010204abac\",\r\n            \"name\": \"file.txt\",\r\n            \"file\": { }\r\n        },\r\n        {\r\n            \"id\": \"2353010204ddgg\",\r\n            \"name\": \"file5.txt\",\r\n            \"deleted\": { }\r\n        }\r\n    ],\r\n    \"@odata.nextLink\": \"https://graph.microsoft.com/v1.0/me/drive/delta(token=1230919asd190410jlka)\"\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.Read",
              "Files.ReadWrite",
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.Read",
              "Files.ReadWrite",
              "Files.Read.All",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/shares/{sharedDriveItem-id}/driveItem/delta(token={token})",
        "/shares/{sharedDriveItem-id}/items/{driveItem-id}/delta()",
        "/shares/{sharedDriveItem-id}/items/{driveItem-id}/delta(token={token})",
        "/shares/{sharedDriveItem-id}/root/delta()",
        "/shares/{sharedDriveItem-id}/root/delta(token={token})"
      ]
    },
    "/shares/{sharedDriveItem-id}/driveItem/delta(token={token})": {
      "get": {
        "tags": [
          "shares.Functions"
        ],
        "summary": "Here is an example of how to call this API to update your local state.",
        "operationId": "shares.driveItem.delta.cf70",
        "parameters": [
          {
            "name": "sharedDriveItem-id",
            "in": "path",
            "description": "key: sharedDriveItem-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "sharedDriveItem"
          },
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.driveItem"
                      }
                    ],
                    "nullable": true
                  }
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n    \"value\": [\r\n        {\r\n            \"id\": \"0123456789abc\",\r\n            \"name\": \"folder2\",\r\n            \"folder\": { },\r\n            \"deleted\": { }\r\n        },\r\n        {\r\n            \"id\": \"123010204abac\",\r\n            \"name\": \"file.txt\",\r\n            \"file\": { }\r\n        }\r\n    ],\r\n    \"@odata.deltaLink\": \"https://graph.microsoft.com/v1.0/me/drive/root/delta?(token='1230919asd190410jlka')\"\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.Read",
              "Files.ReadWrite",
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.Read",
              "Files.ReadWrite",
              "Files.Read.All",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/shares/{sharedDriveItem-id}/driveItem/delta()",
        "/shares/{sharedDriveItem-id}/items/{driveItem-id}/delta()",
        "/shares/{sharedDriveItem-id}/items/{driveItem-id}/delta(token={token})",
        "/shares/{sharedDriveItem-id}/root/delta()",
        "/shares/{sharedDriveItem-id}/root/delta(token={token})"
      ]
    },
    "/shares/{sharedDriveItem-id}/driveItem/invite": {
      "post": {
        "tags": [
          "shares.Actions"
        ],
        "summary": "This example sends a sharing invitation to a user with email address 'ryan@contoso.com' with a message about a file being collaborated on.\r\nThe invitation grants Ryan read-write access to the file.",
        "operationId": "shares.driveItem.invite",
        "parameters": [
          {
            "name": "sharedDriveItem-id",
            "in": "path",
            "description": "key: sharedDriveItem-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "sharedDriveItem"
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "recipients": {
                    "type": "array",
                    "items": {
                      "anyOf": [
                        {
                          "$ref": "#/components/schemas/microsoft.graph.driveRecipient"
                        }
                      ],
                      "nullable": true
                    }
                  },
                  "message": {
                    "type": "string",
                    "nullable": true
                  },
                  "requireSignIn": {
                    "type": "boolean",
                    "default": false,
                    "nullable": true
                  },
                  "sendInvitation": {
                    "type": "boolean",
                    "default": false,
                    "nullable": true
                  },
                  "roles": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.permission"
                      }
                    ],
                    "nullable": true
                  }
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n  \"value\": [\r\n    {\r\n      \"grantedTo\": {\r\n        \"user\": {\r\n          \"displayName\": \"Ryan Gregg\",\r\n          \"id\": \"42F177F1-22C0-4BE3-900D-4507125C5C20\"\r\n        }\r\n      },\r\n      \"id\": \"CCFC7CA3-7A19-4D57-8CEF-149DB9DDFA62\",\r\n      \"invitation\": {\r\n        \"email\": \"ryan@contoso.com\",\r\n        \"signInRequired\": true\r\n      },\r\n      \"roles\": [ \"write\" ]\r\n    }\r\n  ]\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/shares/{sharedDriveItem-id}/items/{driveItem-id}/invite",
        "/shares/{sharedDriveItem-id}/root/invite"
      ]
    },
    "/shares/{sharedDriveItem-id}/driveItem/search(q={q})": {
      "get": {
        "tags": [
          "shares.Functions"
        ],
        "summary": "Invoke function search",
        "operationId": "shares.driveItem.search.f2b1",
        "parameters": [
          {
            "name": "sharedDriveItem-id",
            "in": "path",
            "description": "key: sharedDriveItem-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "sharedDriveItem"
          },
          {
            "name": "q",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.driveItem"
                      }
                    ],
                    "nullable": true
                  }
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n    \"value\": [\r\n      {\r\n        \"id\": \"0123456789abc!123\",\r\n        \"name\": \"Contoso Project\",\r\n        \"folder\": {},\r\n        \"searchResult\": { \"onClickTelemetryUrl\": \"https://bing.com/0123456789abc!123\" }\r\n      },\r\n      {\r\n        \"id\": \"0123456789abc!456\",\r\n        \"name\": \"Contoso Project 2016\",\r\n        \"folder\": {},\r\n        \"searchResult\": { \"onClickTelemetryUrl\": \"https://bing.com/0123456789abc!456\" }\r\n      }\r\n    ],\r\n    \"@odata.nextLink\": \"https://graph.microsoft.com/v1.0/me/drive/root/search(query='contoso project')&skipToken=1asdlnjnkj1nalkm!asd\"\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.Read",
              "Files.ReadWrite",
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.Read",
              "Files.ReadWrite",
              "Files.Read.All",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/shares/{sharedDriveItem-id}/items/{driveItem-id}/search(q={q})",
        "/shares/{sharedDriveItem-id}/root/search(q={q})"
      ]
    },
    "/shares/{sharedDriveItem-id}/items": {
      "get": {
        "tags": [
          "shares.driveItem"
        ],
        "summary": "Get items from shares",
        "operationId": "shares.ListItems",
        "parameters": [
          {
            "name": "sharedDriveItem-id",
            "in": "path",
            "description": "key: sharedDriveItem-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "sharedDriveItem"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "createdBy",
                  "createdBy desc",
                  "createdDateTime",
                  "createdDateTime desc",
                  "description",
                  "description desc",
                  "eTag",
                  "eTag desc",
                  "lastModifiedBy",
                  "lastModifiedBy desc",
                  "lastModifiedDateTime",
                  "lastModifiedDateTime desc",
                  "name",
                  "name desc",
                  "parentReference",
                  "parentReference desc",
                  "webUrl",
                  "webUrl desc",
                  "audio",
                  "audio desc",
                  "content",
                  "content desc",
                  "cTag",
                  "cTag desc",
                  "deleted",
                  "deleted desc",
                  "file",
                  "file desc",
                  "fileSystemInfo",
                  "fileSystemInfo desc",
                  "folder",
                  "folder desc",
                  "image",
                  "image desc",
                  "location",
                  "location desc",
                  "package",
                  "package desc",
                  "photo",
                  "photo desc",
                  "publication",
                  "publication desc",
                  "remoteItem",
                  "remoteItem desc",
                  "root",
                  "root desc",
                  "searchResult",
                  "searchResult desc",
                  "shared",
                  "shared desc",
                  "sharepointIds",
                  "sharepointIds desc",
                  "size",
                  "size desc",
                  "specialFolder",
                  "specialFolder desc",
                  "video",
                  "video desc",
                  "webDavUrl",
                  "webDavUrl desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "audio",
                  "content",
                  "cTag",
                  "deleted",
                  "file",
                  "fileSystemInfo",
                  "folder",
                  "image",
                  "location",
                  "package",
                  "photo",
                  "publication",
                  "remoteItem",
                  "root",
                  "searchResult",
                  "shared",
                  "sharepointIds",
                  "size",
                  "specialFolder",
                  "video",
                  "webDavUrl",
                  "createdByUser",
                  "lastModifiedByUser",
                  "children",
                  "permissions",
                  "thumbnails",
                  "versions",
                  "listItem",
                  "workbook"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "children",
                  "permissions",
                  "thumbnails",
                  "versions",
                  "listItem",
                  "workbook"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.driveItem"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/shares/{sharedDriveItem-id}/items/{driveItem-id}": {
      "get": {
        "tags": [
          "shares.driveItem"
        ],
        "summary": "Get items from shares",
        "operationId": "shares.GetItems",
        "parameters": [
          {
            "name": "sharedDriveItem-id",
            "in": "path",
            "description": "key: sharedDriveItem-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "sharedDriveItem"
          },
          {
            "name": "driveItem-id",
            "in": "path",
            "description": "key: driveItem-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "driveItem"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "audio",
                  "content",
                  "cTag",
                  "deleted",
                  "file",
                  "fileSystemInfo",
                  "folder",
                  "image",
                  "location",
                  "package",
                  "photo",
                  "publication",
                  "remoteItem",
                  "root",
                  "searchResult",
                  "shared",
                  "sharepointIds",
                  "size",
                  "specialFolder",
                  "video",
                  "webDavUrl",
                  "createdByUser",
                  "lastModifiedByUser",
                  "children",
                  "permissions",
                  "thumbnails",
                  "versions",
                  "listItem",
                  "workbook"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "children",
                  "permissions",
                  "thumbnails",
                  "versions",
                  "listItem",
                  "workbook"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.driveItem"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/shares/{sharedDriveItem-id}/items/{driveItem-id}/copy": {
      "post": {
        "tags": [
          "shares.Actions"
        ],
        "summary": "Returns details about how to [monitor the progress](../../../concepts/long_running_actions_overview.md) of the copy, upon accepting the request.",
        "operationId": "shares.items.copy",
        "parameters": [
          {
            "name": "sharedDriveItem-id",
            "in": "path",
            "description": "key: sharedDriveItem-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "sharedDriveItem"
          },
          {
            "name": "driveItem-id",
            "in": "path",
            "description": "key: driveItem-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "driveItem"
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "parentReference": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.itemReference"
                      }
                    ],
                    "nullable": true
                  },
                  "name": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/shares/{sharedDriveItem-id}/driveItem/copy",
        "/shares/{sharedDriveItem-id}/root/copy"
      ]
    },
    "/shares/{sharedDriveItem-id}/items/{driveItem-id}/createLink": {
      "post": {
        "tags": [
          "shares.Actions"
        ],
        "summary": "The following example requests a sharing link to be created for the DriveItem specified by {itemId} in the user's OneDrive.\r\nThe sharing link is configured to be read-only and usable by anyone with the link.",
        "operationId": "shares.items.createLink",
        "parameters": [
          {
            "name": "sharedDriveItem-id",
            "in": "path",
            "description": "key: sharedDriveItem-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "sharedDriveItem"
          },
          {
            "name": "driveItem-id",
            "in": "path",
            "description": "key: driveItem-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "driveItem"
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "nullable": true
                  },
                  "scope": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.permission"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/shares/{sharedDriveItem-id}/driveItem/createLink",
        "/shares/{sharedDriveItem-id}/root/createLink"
      ]
    },
    "/shares/{sharedDriveItem-id}/items/{driveItem-id}/createUploadSession": {
      "post": {
        "tags": [
          "shares.Actions"
        ],
        "summary": "Invoke action createUploadSession",
        "operationId": "shares.items.createUploadSession",
        "parameters": [
          {
            "name": "sharedDriveItem-id",
            "in": "path",
            "description": "key: sharedDriveItem-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "sharedDriveItem"
          },
          {
            "name": "driveItem-id",
            "in": "path",
            "description": "key: driveItem-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "driveItem"
          },
          {
            "name": "if-match",
            "in": "header",
            "description": "If this request header is included and the eTag (or cTag) provided does not match the current etag on the item, a 412 Precondition Failed error response is returned.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "item": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.driveItemUploadableProperties"
                      }
                    ],
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.uploadSession"
                    }
                  ],
                  "nullable": true
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n  \"uploadUrl\": \"https://sn3302.up.1drv.com/up/fe6987415ace7X4e1eF866337\",\r\n  \"expirationDateTime\": \"2015-01-29T09:21:55.523Z\"\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/shares/{sharedDriveItem-id}/driveItem/createUploadSession",
        "/shares/{sharedDriveItem-id}/root/createUploadSession"
      ]
    },
    "/shares/{sharedDriveItem-id}/items/{driveItem-id}/delta()": {
      "get": {
        "tags": [
          "shares.Functions"
        ],
        "summary": "Here is an example of how to call this API to establish your local state.",
        "operationId": "shares.items.delta.2209",
        "parameters": [
          {
            "name": "sharedDriveItem-id",
            "in": "path",
            "description": "key: sharedDriveItem-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "sharedDriveItem"
          },
          {
            "name": "driveItem-id",
            "in": "path",
            "description": "key: driveItem-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "driveItem"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.driveItem"
                      }
                    ],
                    "nullable": true
                  }
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n    \"value\": [\r\n        {\r\n            \"id\": \"0123456789abc\",\r\n            \"name\": \"folder2\",\r\n            \"folder\": { }\r\n        },\r\n        {\r\n            \"id\": \"123010204abac\",\r\n            \"name\": \"file.txt\",\r\n            \"file\": { }\r\n        },\r\n        {\r\n            \"id\": \"2353010204ddgg\",\r\n            \"name\": \"file5.txt\",\r\n            \"deleted\": { }\r\n        }\r\n    ],\r\n    \"@odata.nextLink\": \"https://graph.microsoft.com/v1.0/me/drive/delta(token=1230919asd190410jlka)\"\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.Read",
              "Files.ReadWrite",
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.Read",
              "Files.ReadWrite",
              "Files.Read.All",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/shares/{sharedDriveItem-id}/driveItem/delta()",
        "/shares/{sharedDriveItem-id}/driveItem/delta(token={token})",
        "/shares/{sharedDriveItem-id}/items/{driveItem-id}/delta(token={token})",
        "/shares/{sharedDriveItem-id}/root/delta()",
        "/shares/{sharedDriveItem-id}/root/delta(token={token})"
      ]
    },
    "/shares/{sharedDriveItem-id}/items/{driveItem-id}/delta(token={token})": {
      "get": {
        "tags": [
          "shares.Functions"
        ],
        "summary": "Here is an example of how to call this API to update your local state.",
        "operationId": "shares.items.delta.cf70",
        "parameters": [
          {
            "name": "sharedDriveItem-id",
            "in": "path",
            "description": "key: sharedDriveItem-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "sharedDriveItem"
          },
          {
            "name": "driveItem-id",
            "in": "path",
            "description": "key: driveItem-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "driveItem"
          },
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.driveItem"
                      }
                    ],
                    "nullable": true
                  }
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n    \"value\": [\r\n        {\r\n            \"id\": \"0123456789abc\",\r\n            \"name\": \"folder2\",\r\n            \"folder\": { },\r\n            \"deleted\": { }\r\n        },\r\n        {\r\n            \"id\": \"123010204abac\",\r\n            \"name\": \"file.txt\",\r\n            \"file\": { }\r\n        }\r\n    ],\r\n    \"@odata.deltaLink\": \"https://graph.microsoft.com/v1.0/me/drive/root/delta?(token='1230919asd190410jlka')\"\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.Read",
              "Files.ReadWrite",
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.Read",
              "Files.ReadWrite",
              "Files.Read.All",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/shares/{sharedDriveItem-id}/driveItem/delta()",
        "/shares/{sharedDriveItem-id}/driveItem/delta(token={token})",
        "/shares/{sharedDriveItem-id}/items/{driveItem-id}/delta()",
        "/shares/{sharedDriveItem-id}/root/delta()",
        "/shares/{sharedDriveItem-id}/root/delta(token={token})"
      ]
    },
    "/shares/{sharedDriveItem-id}/items/{driveItem-id}/invite": {
      "post": {
        "tags": [
          "shares.Actions"
        ],
        "summary": "This example sends a sharing invitation to a user with email address 'ryan@contoso.com' with a message about a file being collaborated on.\r\nThe invitation grants Ryan read-write access to the file.",
        "operationId": "shares.items.invite",
        "parameters": [
          {
            "name": "sharedDriveItem-id",
            "in": "path",
            "description": "key: sharedDriveItem-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "sharedDriveItem"
          },
          {
            "name": "driveItem-id",
            "in": "path",
            "description": "key: driveItem-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "driveItem"
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "recipients": {
                    "type": "array",
                    "items": {
                      "anyOf": [
                        {
                          "$ref": "#/components/schemas/microsoft.graph.driveRecipient"
                        }
                      ],
                      "nullable": true
                    }
                  },
                  "message": {
                    "type": "string",
                    "nullable": true
                  },
                  "requireSignIn": {
                    "type": "boolean",
                    "default": false,
                    "nullable": true
                  },
                  "sendInvitation": {
                    "type": "boolean",
                    "default": false,
                    "nullable": true
                  },
                  "roles": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.permission"
                      }
                    ],
                    "nullable": true
                  }
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n  \"value\": [\r\n    {\r\n      \"grantedTo\": {\r\n        \"user\": {\r\n          \"displayName\": \"Ryan Gregg\",\r\n          \"id\": \"42F177F1-22C0-4BE3-900D-4507125C5C20\"\r\n        }\r\n      },\r\n      \"id\": \"CCFC7CA3-7A19-4D57-8CEF-149DB9DDFA62\",\r\n      \"invitation\": {\r\n        \"email\": \"ryan@contoso.com\",\r\n        \"signInRequired\": true\r\n      },\r\n      \"roles\": [ \"write\" ]\r\n    }\r\n  ]\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/shares/{sharedDriveItem-id}/driveItem/invite",
        "/shares/{sharedDriveItem-id}/root/invite"
      ]
    },
    "/shares/{sharedDriveItem-id}/items/{driveItem-id}/search(q={q})": {
      "get": {
        "tags": [
          "shares.Functions"
        ],
        "summary": "Invoke function search",
        "operationId": "shares.items.search.f2b1",
        "parameters": [
          {
            "name": "sharedDriveItem-id",
            "in": "path",
            "description": "key: sharedDriveItem-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "sharedDriveItem"
          },
          {
            "name": "driveItem-id",
            "in": "path",
            "description": "key: driveItem-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "driveItem"
          },
          {
            "name": "q",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.driveItem"
                      }
                    ],
                    "nullable": true
                  }
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n    \"value\": [\r\n      {\r\n        \"id\": \"0123456789abc!123\",\r\n        \"name\": \"Contoso Project\",\r\n        \"folder\": {},\r\n        \"searchResult\": { \"onClickTelemetryUrl\": \"https://bing.com/0123456789abc!123\" }\r\n      },\r\n      {\r\n        \"id\": \"0123456789abc!456\",\r\n        \"name\": \"Contoso Project 2016\",\r\n        \"folder\": {},\r\n        \"searchResult\": { \"onClickTelemetryUrl\": \"https://bing.com/0123456789abc!456\" }\r\n      }\r\n    ],\r\n    \"@odata.nextLink\": \"https://graph.microsoft.com/v1.0/me/drive/root/search(query='contoso project')&skipToken=1asdlnjnkj1nalkm!asd\"\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.Read",
              "Files.ReadWrite",
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.Read",
              "Files.ReadWrite",
              "Files.Read.All",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/shares/{sharedDriveItem-id}/driveItem/search(q={q})",
        "/shares/{sharedDriveItem-id}/root/search(q={q})"
      ]
    },
    "/shares/{sharedDriveItem-id}/list": {
      "get": {
        "tags": [
          "shares.list"
        ],
        "summary": "Get list from shares",
        "operationId": "shares.GetList",
        "parameters": [
          {
            "name": "sharedDriveItem-id",
            "in": "path",
            "description": "key: sharedDriveItem-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "sharedDriveItem"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "displayName",
                  "list",
                  "system",
                  "sharepointIds",
                  "createdByUser",
                  "lastModifiedByUser",
                  "columns",
                  "contentTypes",
                  "drive",
                  "items"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "columns",
                  "contentTypes",
                  "drive",
                  "items"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.list"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/shares/{sharedDriveItem-id}/listItem": {
      "get": {
        "tags": [
          "shares.listItem"
        ],
        "summary": "Get listItem from shares",
        "operationId": "shares.GetListItem",
        "parameters": [
          {
            "name": "sharedDriveItem-id",
            "in": "path",
            "description": "key: sharedDriveItem-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "sharedDriveItem"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "contentType",
                  "sharepointIds",
                  "createdByUser",
                  "lastModifiedByUser",
                  "fields",
                  "driveItem",
                  "versions"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "fields",
                  "driveItem",
                  "versions"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.listItem"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/shares/{sharedDriveItem-id}/root": {
      "get": {
        "tags": [
          "shares.driveItem"
        ],
        "summary": "Get root from shares",
        "operationId": "shares.GetRoot",
        "parameters": [
          {
            "name": "sharedDriveItem-id",
            "in": "path",
            "description": "key: sharedDriveItem-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "sharedDriveItem"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "audio",
                  "content",
                  "cTag",
                  "deleted",
                  "file",
                  "fileSystemInfo",
                  "folder",
                  "image",
                  "location",
                  "package",
                  "photo",
                  "publication",
                  "remoteItem",
                  "root",
                  "searchResult",
                  "shared",
                  "sharepointIds",
                  "size",
                  "specialFolder",
                  "video",
                  "webDavUrl",
                  "createdByUser",
                  "lastModifiedByUser",
                  "children",
                  "permissions",
                  "thumbnails",
                  "versions",
                  "listItem",
                  "workbook"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "children",
                  "permissions",
                  "thumbnails",
                  "versions",
                  "listItem",
                  "workbook"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.driveItem"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/shares/{sharedDriveItem-id}/root/copy": {
      "post": {
        "tags": [
          "shares.Actions"
        ],
        "summary": "Returns details about how to [monitor the progress](../../../concepts/long_running_actions_overview.md) of the copy, upon accepting the request.",
        "operationId": "shares.root.copy",
        "parameters": [
          {
            "name": "sharedDriveItem-id",
            "in": "path",
            "description": "key: sharedDriveItem-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "sharedDriveItem"
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "parentReference": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.itemReference"
                      }
                    ],
                    "nullable": true
                  },
                  "name": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/shares/{sharedDriveItem-id}/driveItem/copy",
        "/shares/{sharedDriveItem-id}/items/{driveItem-id}/copy"
      ]
    },
    "/shares/{sharedDriveItem-id}/root/createLink": {
      "post": {
        "tags": [
          "shares.Actions"
        ],
        "summary": "The following example requests a sharing link to be created for the DriveItem specified by {itemId} in the user's OneDrive.\r\nThe sharing link is configured to be read-only and usable by anyone with the link.",
        "operationId": "shares.root.createLink",
        "parameters": [
          {
            "name": "sharedDriveItem-id",
            "in": "path",
            "description": "key: sharedDriveItem-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "sharedDriveItem"
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "nullable": true
                  },
                  "scope": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.permission"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/shares/{sharedDriveItem-id}/driveItem/createLink",
        "/shares/{sharedDriveItem-id}/items/{driveItem-id}/createLink"
      ]
    },
    "/shares/{sharedDriveItem-id}/root/createUploadSession": {
      "post": {
        "tags": [
          "shares.Actions"
        ],
        "summary": "Invoke action createUploadSession",
        "operationId": "shares.root.createUploadSession",
        "parameters": [
          {
            "name": "sharedDriveItem-id",
            "in": "path",
            "description": "key: sharedDriveItem-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "sharedDriveItem"
          },
          {
            "name": "if-match",
            "in": "header",
            "description": "If this request header is included and the eTag (or cTag) provided does not match the current etag on the item, a 412 Precondition Failed error response is returned.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "item": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.driveItemUploadableProperties"
                      }
                    ],
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.uploadSession"
                    }
                  ],
                  "nullable": true
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n  \"uploadUrl\": \"https://sn3302.up.1drv.com/up/fe6987415ace7X4e1eF866337\",\r\n  \"expirationDateTime\": \"2015-01-29T09:21:55.523Z\"\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/shares/{sharedDriveItem-id}/driveItem/createUploadSession",
        "/shares/{sharedDriveItem-id}/items/{driveItem-id}/createUploadSession"
      ]
    },
    "/shares/{sharedDriveItem-id}/root/delta()": {
      "get": {
        "tags": [
          "shares.Functions"
        ],
        "summary": "Here is an example of how to call this API to establish your local state.",
        "operationId": "shares.root.delta.2209",
        "parameters": [
          {
            "name": "sharedDriveItem-id",
            "in": "path",
            "description": "key: sharedDriveItem-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "sharedDriveItem"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.driveItem"
                      }
                    ],
                    "nullable": true
                  }
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n    \"value\": [\r\n        {\r\n            \"id\": \"0123456789abc\",\r\n            \"name\": \"folder2\",\r\n            \"folder\": { }\r\n        },\r\n        {\r\n            \"id\": \"123010204abac\",\r\n            \"name\": \"file.txt\",\r\n            \"file\": { }\r\n        },\r\n        {\r\n            \"id\": \"2353010204ddgg\",\r\n            \"name\": \"file5.txt\",\r\n            \"deleted\": { }\r\n        }\r\n    ],\r\n    \"@odata.nextLink\": \"https://graph.microsoft.com/v1.0/me/drive/delta(token=1230919asd190410jlka)\"\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.Read",
              "Files.ReadWrite",
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.Read",
              "Files.ReadWrite",
              "Files.Read.All",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/shares/{sharedDriveItem-id}/driveItem/delta()",
        "/shares/{sharedDriveItem-id}/driveItem/delta(token={token})",
        "/shares/{sharedDriveItem-id}/items/{driveItem-id}/delta()",
        "/shares/{sharedDriveItem-id}/items/{driveItem-id}/delta(token={token})",
        "/shares/{sharedDriveItem-id}/root/delta(token={token})"
      ]
    },
    "/shares/{sharedDriveItem-id}/root/delta(token={token})": {
      "get": {
        "tags": [
          "shares.Functions"
        ],
        "summary": "Here is an example of how to call this API to update your local state.",
        "operationId": "shares.root.delta.cf70",
        "parameters": [
          {
            "name": "sharedDriveItem-id",
            "in": "path",
            "description": "key: sharedDriveItem-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "sharedDriveItem"
          },
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.driveItem"
                      }
                    ],
                    "nullable": true
                  }
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n    \"value\": [\r\n        {\r\n            \"id\": \"0123456789abc\",\r\n            \"name\": \"folder2\",\r\n            \"folder\": { },\r\n            \"deleted\": { }\r\n        },\r\n        {\r\n            \"id\": \"123010204abac\",\r\n            \"name\": \"file.txt\",\r\n            \"file\": { }\r\n        }\r\n    ],\r\n    \"@odata.deltaLink\": \"https://graph.microsoft.com/v1.0/me/drive/root/delta?(token='1230919asd190410jlka')\"\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.Read",
              "Files.ReadWrite",
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.Read",
              "Files.ReadWrite",
              "Files.Read.All",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/shares/{sharedDriveItem-id}/driveItem/delta()",
        "/shares/{sharedDriveItem-id}/driveItem/delta(token={token})",
        "/shares/{sharedDriveItem-id}/items/{driveItem-id}/delta()",
        "/shares/{sharedDriveItem-id}/items/{driveItem-id}/delta(token={token})",
        "/shares/{sharedDriveItem-id}/root/delta()"
      ]
    },
    "/shares/{sharedDriveItem-id}/root/invite": {
      "post": {
        "tags": [
          "shares.Actions"
        ],
        "summary": "This example sends a sharing invitation to a user with email address 'ryan@contoso.com' with a message about a file being collaborated on.\r\nThe invitation grants Ryan read-write access to the file.",
        "operationId": "shares.root.invite",
        "parameters": [
          {
            "name": "sharedDriveItem-id",
            "in": "path",
            "description": "key: sharedDriveItem-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "sharedDriveItem"
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "recipients": {
                    "type": "array",
                    "items": {
                      "anyOf": [
                        {
                          "$ref": "#/components/schemas/microsoft.graph.driveRecipient"
                        }
                      ],
                      "nullable": true
                    }
                  },
                  "message": {
                    "type": "string",
                    "nullable": true
                  },
                  "requireSignIn": {
                    "type": "boolean",
                    "default": false,
                    "nullable": true
                  },
                  "sendInvitation": {
                    "type": "boolean",
                    "default": false,
                    "nullable": true
                  },
                  "roles": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.permission"
                      }
                    ],
                    "nullable": true
                  }
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n  \"value\": [\r\n    {\r\n      \"grantedTo\": {\r\n        \"user\": {\r\n          \"displayName\": \"Ryan Gregg\",\r\n          \"id\": \"42F177F1-22C0-4BE3-900D-4507125C5C20\"\r\n        }\r\n      },\r\n      \"id\": \"CCFC7CA3-7A19-4D57-8CEF-149DB9DDFA62\",\r\n      \"invitation\": {\r\n        \"email\": \"ryan@contoso.com\",\r\n        \"signInRequired\": true\r\n      },\r\n      \"roles\": [ \"write\" ]\r\n    }\r\n  ]\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/shares/{sharedDriveItem-id}/driveItem/invite",
        "/shares/{sharedDriveItem-id}/items/{driveItem-id}/invite"
      ]
    },
    "/shares/{sharedDriveItem-id}/root/search(q={q})": {
      "get": {
        "tags": [
          "shares.Functions"
        ],
        "summary": "Invoke function search",
        "operationId": "shares.root.search.f2b1",
        "parameters": [
          {
            "name": "sharedDriveItem-id",
            "in": "path",
            "description": "key: sharedDriveItem-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "sharedDriveItem"
          },
          {
            "name": "q",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.driveItem"
                      }
                    ],
                    "nullable": true
                  }
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n    \"value\": [\r\n      {\r\n        \"id\": \"0123456789abc!123\",\r\n        \"name\": \"Contoso Project\",\r\n        \"folder\": {},\r\n        \"searchResult\": { \"onClickTelemetryUrl\": \"https://bing.com/0123456789abc!123\" }\r\n      },\r\n      {\r\n        \"id\": \"0123456789abc!456\",\r\n        \"name\": \"Contoso Project 2016\",\r\n        \"folder\": {},\r\n        \"searchResult\": { \"onClickTelemetryUrl\": \"https://bing.com/0123456789abc!456\" }\r\n      }\r\n    ],\r\n    \"@odata.nextLink\": \"https://graph.microsoft.com/v1.0/me/drive/root/search(query='contoso project')&skipToken=1asdlnjnkj1nalkm!asd\"\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.Read",
              "Files.ReadWrite",
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.Read",
              "Files.ReadWrite",
              "Files.Read.All",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/shares/{sharedDriveItem-id}/driveItem/search(q={q})",
        "/shares/{sharedDriveItem-id}/items/{driveItem-id}/search(q={q})"
      ]
    },
    "/shares/{sharedDriveItem-id}/site": {
      "get": {
        "tags": [
          "shares.site"
        ],
        "summary": "Get site from shares",
        "operationId": "shares.GetSite",
        "parameters": [
          {
            "name": "sharedDriveItem-id",
            "in": "path",
            "description": "key: sharedDriveItem-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "sharedDriveItem"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "root",
                  "sharepointIds",
                  "siteCollection",
                  "displayName",
                  "createdByUser",
                  "lastModifiedByUser",
                  "contentTypes",
                  "drive",
                  "drives",
                  "items",
                  "lists",
                  "sites",
                  "columns",
                  "onenote"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "contentTypes",
                  "drive",
                  "drives",
                  "items",
                  "lists",
                  "sites",
                  "columns",
                  "onenote"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.site"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/sites": {
      "get": {
        "tags": [
          "sites.site"
        ],
        "summary": "Get entities from sites",
        "operationId": "sites.site.ListSite",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "createdBy",
                  "createdBy desc",
                  "createdDateTime",
                  "createdDateTime desc",
                  "description",
                  "description desc",
                  "eTag",
                  "eTag desc",
                  "lastModifiedBy",
                  "lastModifiedBy desc",
                  "lastModifiedDateTime",
                  "lastModifiedDateTime desc",
                  "name",
                  "name desc",
                  "parentReference",
                  "parentReference desc",
                  "webUrl",
                  "webUrl desc",
                  "root",
                  "root desc",
                  "sharepointIds",
                  "sharepointIds desc",
                  "siteCollection",
                  "siteCollection desc",
                  "displayName",
                  "displayName desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "root",
                  "sharepointIds",
                  "siteCollection",
                  "displayName",
                  "createdByUser",
                  "lastModifiedByUser",
                  "contentTypes",
                  "drive",
                  "drives",
                  "items",
                  "lists",
                  "sites",
                  "columns",
                  "onenote"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "contentTypes",
                  "drive",
                  "drives",
                  "items",
                  "lists",
                  "sites",
                  "columns",
                  "onenote"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of site",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.site"
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n  \"id\": \"contoso.sharepoint.com,2C712604-1370-44E7-A1F5-426573FDA80A,2D2244C3-251A-49EA-93A8-39E1C3A060FE\",\r\n  \"displayName\": \"OneDrive Team Site\",\r\n  \"name\": \"1drvteam\",\r\n  \"createdDateTime\": \"2017-05-09T20:56:00Z\",\r\n  \"lastModifiedDateTime\": \"2017-05-09T20:56:01Z\",\r\n  \"webUrl\": \"https://contoso.sharepoint.com/teams/1drvteam\"\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "sites.site"
        ],
        "summary": "Add new entity to sites",
        "operationId": "sites.site.CreateSite",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.site"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.site"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/sites/{site-id}": {
      "get": {
        "tags": [
          "sites.site"
        ],
        "summary": "Get entity from sites by key",
        "operationId": "sites.site.GetSite",
        "parameters": [
          {
            "name": "site-id",
            "in": "path",
            "description": "key: site-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "site"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "root",
                  "sharepointIds",
                  "siteCollection",
                  "displayName",
                  "createdByUser",
                  "lastModifiedByUser",
                  "contentTypes",
                  "drive",
                  "drives",
                  "items",
                  "lists",
                  "sites",
                  "columns",
                  "onenote"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "contentTypes",
                  "drive",
                  "drives",
                  "items",
                  "lists",
                  "sites",
                  "columns",
                  "onenote"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.site"
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n  \"id\": \"contoso.sharepoint.com,2C712604-1370-44E7-A1F5-426573FDA80A,2D2244C3-251A-49EA-93A8-39E1C3A060FE\",\r\n  \"displayName\": \"OneDrive Team Site\",\r\n  \"name\": \"1drvteam\",\r\n  \"createdDateTime\": \"2017-05-09T20:56:00Z\",\r\n  \"lastModifiedDateTime\": \"2017-05-09T20:56:01Z\",\r\n  \"webUrl\": \"https://contoso.sharepoint.com/teams/1drvteam\"\r\n}\n"
                  }
                }
              }
            },
            "links": {
              "contentTypes": {
                "operationId": "sites.site.GetSite",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "drive": {
                "operationId": "sites.site.GetSite",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "drives": {
                "operationId": "sites.site.GetSite",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "items": {
                "operationId": "sites.site.GetSite",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "lists": {
                "operationId": "sites.site.GetSite",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "sites": {
                "operationId": "sites.site.GetSite",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "columns": {
                "operationId": "sites.site.GetSite",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "onenote": {
                "operationId": "sites.site.GetSite",
                "parameters": {
                  "id": "$request.path.id"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "sites.site"
        ],
        "summary": "Update entity in sites",
        "operationId": "sites.site.UpdateSite",
        "parameters": [
          {
            "name": "site-id",
            "in": "path",
            "description": "key: site-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "site"
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.site"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "sites.site"
        ],
        "summary": "Delete entity from sites",
        "operationId": "sites.site.DeleteSite",
        "parameters": [
          {
            "name": "site-id",
            "in": "path",
            "description": "key: site-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "site"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/sites/{site-id}/columns": {
      "get": {
        "tags": [
          "sites.columnDefinition"
        ],
        "summary": "Get columns from sites",
        "operationId": "sites.ListColumns",
        "parameters": [
          {
            "name": "site-id",
            "in": "path",
            "description": "key: site-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "site"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "columnGroup",
                  "columnGroup desc",
                  "description",
                  "description desc",
                  "displayName",
                  "displayName desc",
                  "enforceUniqueValues",
                  "enforceUniqueValues desc",
                  "hidden",
                  "hidden desc",
                  "indexed",
                  "indexed desc",
                  "name",
                  "name desc",
                  "readOnly",
                  "readOnly desc",
                  "required",
                  "required desc",
                  "boolean",
                  "boolean desc",
                  "calculated",
                  "calculated desc",
                  "choice",
                  "choice desc",
                  "currency",
                  "currency desc",
                  "dateTime",
                  "dateTime desc",
                  "defaultValue",
                  "defaultValue desc",
                  "lookup",
                  "lookup desc",
                  "number",
                  "number desc",
                  "personOrGroup",
                  "personOrGroup desc",
                  "text",
                  "text desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "columnGroup",
                  "description",
                  "displayName",
                  "enforceUniqueValues",
                  "hidden",
                  "indexed",
                  "name",
                  "readOnly",
                  "required",
                  "boolean",
                  "calculated",
                  "choice",
                  "currency",
                  "dateTime",
                  "defaultValue",
                  "lookup",
                  "number",
                  "personOrGroup",
                  "text"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.columnDefinition"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/sites/{site-id}/columns/{columnDefinition-id}": {
      "get": {
        "tags": [
          "sites.columnDefinition"
        ],
        "summary": "Get columns from sites",
        "operationId": "sites.GetColumns",
        "parameters": [
          {
            "name": "site-id",
            "in": "path",
            "description": "key: site-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "site"
          },
          {
            "name": "columnDefinition-id",
            "in": "path",
            "description": "key: columnDefinition-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "columnDefinition"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "columnGroup",
                  "description",
                  "displayName",
                  "enforceUniqueValues",
                  "hidden",
                  "indexed",
                  "name",
                  "readOnly",
                  "required",
                  "boolean",
                  "calculated",
                  "choice",
                  "currency",
                  "dateTime",
                  "defaultValue",
                  "lookup",
                  "number",
                  "personOrGroup",
                  "text"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.columnDefinition"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/sites/{site-id}/contentTypes": {
      "get": {
        "tags": [
          "sites.contentType"
        ],
        "summary": "Get contentTypes from sites",
        "operationId": "sites.ListContentTypes",
        "parameters": [
          {
            "name": "site-id",
            "in": "path",
            "description": "key: site-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "site"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "description",
                  "description desc",
                  "group",
                  "group desc",
                  "hidden",
                  "hidden desc",
                  "inheritedFrom",
                  "inheritedFrom desc",
                  "name",
                  "name desc",
                  "order",
                  "order desc",
                  "parentId",
                  "parentId desc",
                  "readOnly",
                  "readOnly desc",
                  "sealed",
                  "sealed desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "description",
                  "group",
                  "hidden",
                  "inheritedFrom",
                  "name",
                  "order",
                  "parentId",
                  "readOnly",
                  "sealed",
                  "columnLinks"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "columnLinks"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.contentType"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/sites/{site-id}/contentTypes/{contentType-id}": {
      "get": {
        "tags": [
          "sites.contentType"
        ],
        "summary": "Get contentTypes from sites",
        "operationId": "sites.GetContentTypes",
        "parameters": [
          {
            "name": "site-id",
            "in": "path",
            "description": "key: site-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "site"
          },
          {
            "name": "contentType-id",
            "in": "path",
            "description": "key: contentType-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "contentType"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "description",
                  "group",
                  "hidden",
                  "inheritedFrom",
                  "name",
                  "order",
                  "parentId",
                  "readOnly",
                  "sealed",
                  "columnLinks"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "columnLinks"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.contentType"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/sites/{site-id}/drive": {
      "get": {
        "tags": [
          "sites.drive"
        ],
        "summary": "Get drive from sites",
        "operationId": "sites.GetDrive",
        "parameters": [
          {
            "name": "site-id",
            "in": "path",
            "description": "key: site-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "site"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "driveType",
                  "owner",
                  "quota",
                  "sharepointIds",
                  "system",
                  "createdByUser",
                  "lastModifiedByUser",
                  "items",
                  "root",
                  "special",
                  "list"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "items",
                  "root",
                  "special",
                  "list"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.drive"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/sites/{site-id}/drives": {
      "get": {
        "tags": [
          "sites.drive"
        ],
        "summary": "Get drives from sites",
        "operationId": "sites.ListDrives",
        "parameters": [
          {
            "name": "site-id",
            "in": "path",
            "description": "key: site-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "site"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "createdBy",
                  "createdBy desc",
                  "createdDateTime",
                  "createdDateTime desc",
                  "description",
                  "description desc",
                  "eTag",
                  "eTag desc",
                  "lastModifiedBy",
                  "lastModifiedBy desc",
                  "lastModifiedDateTime",
                  "lastModifiedDateTime desc",
                  "name",
                  "name desc",
                  "parentReference",
                  "parentReference desc",
                  "webUrl",
                  "webUrl desc",
                  "driveType",
                  "driveType desc",
                  "owner",
                  "owner desc",
                  "quota",
                  "quota desc",
                  "sharepointIds",
                  "sharepointIds desc",
                  "system",
                  "system desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "driveType",
                  "owner",
                  "quota",
                  "sharepointIds",
                  "system",
                  "createdByUser",
                  "lastModifiedByUser",
                  "items",
                  "root",
                  "special",
                  "list"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "items",
                  "root",
                  "special",
                  "list"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.drive"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/sites/{site-id}/drives/{drive-id}": {
      "get": {
        "tags": [
          "sites.drive"
        ],
        "summary": "Get drives from sites",
        "operationId": "sites.GetDrives",
        "parameters": [
          {
            "name": "site-id",
            "in": "path",
            "description": "key: site-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "site"
          },
          {
            "name": "drive-id",
            "in": "path",
            "description": "key: drive-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "drive"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "driveType",
                  "owner",
                  "quota",
                  "sharepointIds",
                  "system",
                  "createdByUser",
                  "lastModifiedByUser",
                  "items",
                  "root",
                  "special",
                  "list"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "items",
                  "root",
                  "special",
                  "list"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.drive"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/sites/{site-id}/items": {
      "get": {
        "tags": [
          "sites.baseItem"
        ],
        "summary": "Get items from sites",
        "operationId": "sites.ListItems",
        "parameters": [
          {
            "name": "site-id",
            "in": "path",
            "description": "key: site-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "site"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "createdBy",
                  "createdBy desc",
                  "createdDateTime",
                  "createdDateTime desc",
                  "description",
                  "description desc",
                  "eTag",
                  "eTag desc",
                  "lastModifiedBy",
                  "lastModifiedBy desc",
                  "lastModifiedDateTime",
                  "lastModifiedDateTime desc",
                  "name",
                  "name desc",
                  "parentReference",
                  "parentReference desc",
                  "webUrl",
                  "webUrl desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "createdByUser",
                  "lastModifiedByUser"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.baseItem"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/sites/{site-id}/items/{baseItem-id}": {
      "get": {
        "tags": [
          "sites.baseItem"
        ],
        "summary": "Get items from sites",
        "operationId": "sites.GetItems",
        "parameters": [
          {
            "name": "site-id",
            "in": "path",
            "description": "key: site-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "site"
          },
          {
            "name": "baseItem-id",
            "in": "path",
            "description": "key: baseItem-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "baseItem"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "createdByUser",
                  "lastModifiedByUser"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.baseItem"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/sites/{site-id}/lists": {
      "get": {
        "tags": [
          "sites.list"
        ],
        "summary": "Get lists from sites",
        "operationId": "sites.ListLists",
        "parameters": [
          {
            "name": "site-id",
            "in": "path",
            "description": "key: site-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "site"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "createdBy",
                  "createdBy desc",
                  "createdDateTime",
                  "createdDateTime desc",
                  "description",
                  "description desc",
                  "eTag",
                  "eTag desc",
                  "lastModifiedBy",
                  "lastModifiedBy desc",
                  "lastModifiedDateTime",
                  "lastModifiedDateTime desc",
                  "name",
                  "name desc",
                  "parentReference",
                  "parentReference desc",
                  "webUrl",
                  "webUrl desc",
                  "displayName",
                  "displayName desc",
                  "list",
                  "list desc",
                  "system",
                  "system desc",
                  "sharepointIds",
                  "sharepointIds desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "displayName",
                  "list",
                  "system",
                  "sharepointIds",
                  "createdByUser",
                  "lastModifiedByUser",
                  "columns",
                  "contentTypes",
                  "drive",
                  "items"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "columns",
                  "contentTypes",
                  "drive",
                  "items"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.list"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/sites/{site-id}/lists/{list-id}": {
      "get": {
        "tags": [
          "sites.list"
        ],
        "summary": "Get lists from sites",
        "operationId": "sites.GetLists",
        "parameters": [
          {
            "name": "site-id",
            "in": "path",
            "description": "key: site-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "site"
          },
          {
            "name": "list-id",
            "in": "path",
            "description": "key: list-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "list"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "displayName",
                  "list",
                  "system",
                  "sharepointIds",
                  "createdByUser",
                  "lastModifiedByUser",
                  "columns",
                  "contentTypes",
                  "drive",
                  "items"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "columns",
                  "contentTypes",
                  "drive",
                  "items"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.list"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/sites/{site-id}/onenote": {
      "get": {
        "tags": [
          "sites.onenote"
        ],
        "summary": "Get onenote from sites",
        "operationId": "sites.GetOnenote",
        "parameters": [
          {
            "name": "site-id",
            "in": "path",
            "description": "key: site-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "site"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "notebooks",
                  "operations",
                  "pages",
                  "resources",
                  "sectionGroups",
                  "sections"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "notebooks",
                  "operations",
                  "pages",
                  "resources",
                  "sectionGroups",
                  "sections"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.onenote"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/sites/{site-id}/sites": {
      "get": {
        "tags": [
          "sites.site"
        ],
        "summary": "Get sites from sites",
        "operationId": "sites.ListSites",
        "parameters": [
          {
            "name": "site-id",
            "in": "path",
            "description": "key: site-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "site"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "createdBy",
                  "createdBy desc",
                  "createdDateTime",
                  "createdDateTime desc",
                  "description",
                  "description desc",
                  "eTag",
                  "eTag desc",
                  "lastModifiedBy",
                  "lastModifiedBy desc",
                  "lastModifiedDateTime",
                  "lastModifiedDateTime desc",
                  "name",
                  "name desc",
                  "parentReference",
                  "parentReference desc",
                  "webUrl",
                  "webUrl desc",
                  "root",
                  "root desc",
                  "sharepointIds",
                  "sharepointIds desc",
                  "siteCollection",
                  "siteCollection desc",
                  "displayName",
                  "displayName desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "root",
                  "sharepointIds",
                  "siteCollection",
                  "displayName",
                  "createdByUser",
                  "lastModifiedByUser",
                  "contentTypes",
                  "drive",
                  "drives",
                  "items",
                  "lists",
                  "sites",
                  "columns",
                  "onenote"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "contentTypes",
                  "drive",
                  "drives",
                  "items",
                  "lists",
                  "sites",
                  "columns",
                  "onenote"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.site"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/sites/{site-id}/sites/{site-id}": {
      "get": {
        "tags": [
          "sites.site"
        ],
        "summary": "Get sites from sites",
        "operationId": "sites.GetSites",
        "parameters": [
          {
            "name": "site-id",
            "in": "path",
            "description": "key: site-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "site"
          },
          {
            "name": "site-id",
            "in": "path",
            "description": "key: site-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "site"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "root",
                  "sharepointIds",
                  "siteCollection",
                  "displayName",
                  "createdByUser",
                  "lastModifiedByUser",
                  "contentTypes",
                  "drive",
                  "drives",
                  "items",
                  "lists",
                  "sites",
                  "columns",
                  "onenote"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "contentTypes",
                  "drive",
                  "drives",
                  "items",
                  "lists",
                  "sites",
                  "columns",
                  "onenote"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.site"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/subscribedSkus": {
      "get": {
        "tags": [
          "subscribedSkus.subscribedSku"
        ],
        "summary": "Get entities from subscribedSkus",
        "operationId": "subscribedSkus.subscribedSku.ListSubscribedSku",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token. Required",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "appliesTo",
                  "appliesTo desc",
                  "capabilityStatus",
                  "capabilityStatus desc",
                  "consumedUnits",
                  "consumedUnits desc",
                  "prepaidUnits",
                  "prepaidUnits desc",
                  "servicePlans",
                  "servicePlans desc",
                  "skuId",
                  "skuId desc",
                  "skuPartNumber",
                  "skuPartNumber desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "appliesTo",
                  "capabilityStatus",
                  "consumedUnits",
                  "prepaidUnits",
                  "servicePlans",
                  "skuId",
                  "skuPartNumber"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of subscribedSku",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.subscribedSku"
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n    \"@odata.context\": \"https://graph.microsoft.com/v1.0/$metadata#subscribedSkus/$entity\",\r\n    \"capabilityStatus\": \"Enabled\",\r\n    \"consumedUnits\": 14,\r\n    \"id\": \"48a80680-7326-48cd-9935-b556b81d3a4e_c7df2760-2c81-4ef7-b578-5b5392b571df\",\r\n    \"prepaidUnits\": {\r\n        \"enabled\": 25,\r\n        \"suspended\": 0,\r\n        \"warning\": 0\r\n    },\r\n    \"servicePlans\": [\r\n        {\r\n            \"servicePlanId\": \"8c098270-9dd4-4350-9b30-ba4703f3b36b\",\r\n            \"servicePlanName\": \"ADALLOM_S_O365\",\r\n            \"provisioningStatus\": \"Success\",\r\n            \"appliesTo\": \"User\"\r\n        },\r\n        {\r\n            \"servicePlanId\": \"9f431833-0334-42de-a7dc-70aa40db46db\",\r\n            \"servicePlanName\": \"LOCKBOX_ENTERPRISE\",\r\n            \"provisioningStatus\": \"Success\",\r\n            \"appliesTo\": \"User\"\r\n        }\r\n    ],\r\n    \"skuId\": \"c7df2760-2c81-4ef7-b578-5b5392b571df\",\r\n    \"skuPartNumber\": \"ENTERPRISEPREMIUM\",\r\n    \"appliesTo\": \"User\"\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Directory.Read.All",
              "Directory.ReadWrite.All",
              "Directory.AccessAsUser.All"
            ]
          },
          {
            "Application": [
              "Directory.Read.All",
              "Directory.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "subscribedSkus.subscribedSku"
        ],
        "summary": "Add new entity to subscribedSkus",
        "operationId": "subscribedSkus.subscribedSku.CreateSubscribedSku",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.subscribedSku"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.subscribedSku"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/subscribedSkus/{subscribedSku-id}": {
      "get": {
        "tags": [
          "subscribedSkus.subscribedSku"
        ],
        "summary": "Get entity from subscribedSkus by key",
        "operationId": "subscribedSkus.subscribedSku.GetSubscribedSku",
        "parameters": [
          {
            "name": "subscribedSku-id",
            "in": "path",
            "description": "key: subscribedSku-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "subscribedSku"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token. Required",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "appliesTo",
                  "capabilityStatus",
                  "consumedUnits",
                  "prepaidUnits",
                  "servicePlans",
                  "skuId",
                  "skuPartNumber"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.subscribedSku"
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n    \"@odata.context\": \"https://graph.microsoft.com/v1.0/$metadata#subscribedSkus/$entity\",\r\n    \"capabilityStatus\": \"Enabled\",\r\n    \"consumedUnits\": 14,\r\n    \"id\": \"48a80680-7326-48cd-9935-b556b81d3a4e_c7df2760-2c81-4ef7-b578-5b5392b571df\",\r\n    \"prepaidUnits\": {\r\n        \"enabled\": 25,\r\n        \"suspended\": 0,\r\n        \"warning\": 0\r\n    },\r\n    \"servicePlans\": [\r\n        {\r\n            \"servicePlanId\": \"8c098270-9dd4-4350-9b30-ba4703f3b36b\",\r\n            \"servicePlanName\": \"ADALLOM_S_O365\",\r\n            \"provisioningStatus\": \"Success\",\r\n            \"appliesTo\": \"User\"\r\n        },\r\n        {\r\n            \"servicePlanId\": \"9f431833-0334-42de-a7dc-70aa40db46db\",\r\n            \"servicePlanName\": \"LOCKBOX_ENTERPRISE\",\r\n            \"provisioningStatus\": \"Success\",\r\n            \"appliesTo\": \"User\"\r\n        }\r\n    ],\r\n    \"skuId\": \"c7df2760-2c81-4ef7-b578-5b5392b571df\",\r\n    \"skuPartNumber\": \"ENTERPRISEPREMIUM\",\r\n    \"appliesTo\": \"User\"\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Directory.Read.All",
              "Directory.ReadWrite.All",
              "Directory.AccessAsUser.All"
            ]
          },
          {
            "Application": [
              "Directory.Read.All",
              "Directory.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "subscribedSkus.subscribedSku"
        ],
        "summary": "Update entity in subscribedSkus",
        "operationId": "subscribedSkus.subscribedSku.UpdateSubscribedSku",
        "parameters": [
          {
            "name": "subscribedSku-id",
            "in": "path",
            "description": "key: subscribedSku-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "subscribedSku"
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.subscribedSku"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "subscribedSkus.subscribedSku"
        ],
        "summary": "Delete entity from subscribedSkus",
        "operationId": "subscribedSkus.subscribedSku.DeleteSubscribedSku",
        "parameters": [
          {
            "name": "subscribedSku-id",
            "in": "path",
            "description": "key: subscribedSku-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "subscribedSku"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/subscriptions": {
      "get": {
        "tags": [
          "subscriptions.subscription"
        ],
        "summary": "Get entities from subscriptions",
        "operationId": "subscriptions.subscription.ListSubscription",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "changeType",
                  "changeType desc",
                  "notificationUrl",
                  "notificationUrl desc",
                  "resource",
                  "resource desc",
                  "applicationId",
                  "applicationId desc",
                  "expirationDateTime",
                  "expirationDateTime desc",
                  "clientState",
                  "clientState desc",
                  "creatorId",
                  "creatorId desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "changeType",
                  "notificationUrl",
                  "resource",
                  "applicationId",
                  "expirationDateTime",
                  "clientState",
                  "creatorId"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of subscription",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.subscription"
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n  \"id\":\"7f105c7d-2dc5-4530-97cd-4e7ae6534c07\",\r\n  \"resource\":\"me/messages\",\r\n  \"applicationId\" : \"string\",\r\n  \"changeType\":\"created,updated\",\r\n  \"clientState\":\"secretClientValue\",\r\n  \"notificationUrl\":\"https://webhook.azurewebsites.net/api/send/myNotifyClient\",\r\n  \"expirationDateTime\":\"2016-11-20T18:23:45.9356913Z\",\r\n  \"creatorId\": \"string\"\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "subscriptions.subscription"
        ],
        "summary": "Add new entity to subscriptions",
        "operationId": "subscriptions.subscription.CreateSubscription",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.subscription"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.subscription"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/subscriptions/{subscription-id}": {
      "get": {
        "tags": [
          "subscriptions.subscription"
        ],
        "summary": "Get entity from subscriptions by key",
        "operationId": "subscriptions.subscription.GetSubscription",
        "parameters": [
          {
            "name": "subscription-id",
            "in": "path",
            "description": "key: subscription-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "subscription"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "changeType",
                  "notificationUrl",
                  "resource",
                  "applicationId",
                  "expirationDateTime",
                  "clientState",
                  "creatorId"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.subscription"
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n  \"id\":\"7f105c7d-2dc5-4530-97cd-4e7ae6534c07\",\r\n  \"resource\":\"me/messages\",\r\n  \"applicationId\" : \"string\",\r\n  \"changeType\":\"created,updated\",\r\n  \"clientState\":\"secretClientValue\",\r\n  \"notificationUrl\":\"https://webhook.azurewebsites.net/api/send/myNotifyClient\",\r\n  \"expirationDateTime\":\"2016-11-20T18:23:45.9356913Z\",\r\n  \"creatorId\": \"string\"\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "subscriptions.subscription"
        ],
        "summary": "Update entity in subscriptions",
        "operationId": "subscriptions.subscription.UpdateSubscription",
        "parameters": [
          {
            "name": "subscription-id",
            "in": "path",
            "description": "key: subscription-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "subscription"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.subscription"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "subscriptions.subscription"
        ],
        "summary": "Delete entity from subscriptions",
        "operationId": "subscriptions.subscription.DeleteSubscription",
        "parameters": [
          {
            "name": "subscription-id",
            "in": "path",
            "description": "key: subscription-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "subscription"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users": {
      "get": {
        "tags": [
          "users.user"
        ],
        "summary": "Get entities from users",
        "operationId": "users.user.ListUser",
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "deviceEnrollmentLimit",
                  "deviceEnrollmentLimit desc",
                  "aboutMe",
                  "aboutMe desc",
                  "accountEnabled",
                  "accountEnabled desc",
                  "ageGroup",
                  "ageGroup desc",
                  "assignedLicenses",
                  "assignedLicenses desc",
                  "assignedPlans",
                  "assignedPlans desc",
                  "birthday",
                  "birthday desc",
                  "businessPhones",
                  "businessPhones desc",
                  "city",
                  "city desc",
                  "companyName",
                  "companyName desc",
                  "consentProvidedForMinor",
                  "consentProvidedForMinor desc",
                  "country",
                  "country desc",
                  "department",
                  "department desc",
                  "displayName",
                  "displayName desc",
                  "givenName",
                  "givenName desc",
                  "hireDate",
                  "hireDate desc",
                  "imAddresses",
                  "imAddresses desc",
                  "interests",
                  "interests desc",
                  "jobTitle",
                  "jobTitle desc",
                  "legalAgeGroupClassification",
                  "legalAgeGroupClassification desc",
                  "mail",
                  "mail desc",
                  "mailboxSettings",
                  "mailboxSettings desc",
                  "mailNickname",
                  "mailNickname desc",
                  "mobilePhone",
                  "mobilePhone desc",
                  "mySite",
                  "mySite desc",
                  "officeLocation",
                  "officeLocation desc",
                  "onPremisesDomainName",
                  "onPremisesDomainName desc",
                  "onPremisesExtensionAttributes",
                  "onPremisesExtensionAttributes desc",
                  "onPremisesImmutableId",
                  "onPremisesImmutableId desc",
                  "onPremisesLastSyncDateTime",
                  "onPremisesLastSyncDateTime desc",
                  "onPremisesProvisioningErrors",
                  "onPremisesProvisioningErrors desc",
                  "onPremisesSamAccountName",
                  "onPremisesSamAccountName desc",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSecurityIdentifier desc",
                  "onPremisesSyncEnabled",
                  "onPremisesSyncEnabled desc",
                  "onPremisesUserPrincipalName",
                  "onPremisesUserPrincipalName desc",
                  "passwordPolicies",
                  "passwordPolicies desc",
                  "passwordProfile",
                  "passwordProfile desc",
                  "pastProjects",
                  "pastProjects desc",
                  "postalCode",
                  "postalCode desc",
                  "preferredLanguage",
                  "preferredLanguage desc",
                  "preferredName",
                  "preferredName desc",
                  "provisionedPlans",
                  "provisionedPlans desc",
                  "proxyAddresses",
                  "proxyAddresses desc",
                  "responsibilities",
                  "responsibilities desc",
                  "schools",
                  "schools desc",
                  "skills",
                  "skills desc",
                  "state",
                  "state desc",
                  "streetAddress",
                  "streetAddress desc",
                  "surname",
                  "surname desc",
                  "usageLocation",
                  "usageLocation desc",
                  "userPrincipalName",
                  "userPrincipalName desc",
                  "userType",
                  "userType desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "deviceEnrollmentLimit",
                  "aboutMe",
                  "accountEnabled",
                  "ageGroup",
                  "assignedLicenses",
                  "assignedPlans",
                  "birthday",
                  "businessPhones",
                  "city",
                  "companyName",
                  "consentProvidedForMinor",
                  "country",
                  "department",
                  "displayName",
                  "givenName",
                  "hireDate",
                  "imAddresses",
                  "interests",
                  "jobTitle",
                  "legalAgeGroupClassification",
                  "mail",
                  "mailboxSettings",
                  "mailNickname",
                  "mobilePhone",
                  "mySite",
                  "officeLocation",
                  "onPremisesDomainName",
                  "onPremisesExtensionAttributes",
                  "onPremisesImmutableId",
                  "onPremisesLastSyncDateTime",
                  "onPremisesProvisioningErrors",
                  "onPremisesSamAccountName",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSyncEnabled",
                  "onPremisesUserPrincipalName",
                  "passwordPolicies",
                  "passwordProfile",
                  "pastProjects",
                  "postalCode",
                  "preferredLanguage",
                  "preferredName",
                  "provisionedPlans",
                  "proxyAddresses",
                  "responsibilities",
                  "schools",
                  "skills",
                  "state",
                  "streetAddress",
                  "surname",
                  "usageLocation",
                  "userPrincipalName",
                  "userType",
                  "managedDevices",
                  "managedAppRegistrations",
                  "deviceManagementTroubleshootingEvents",
                  "calendar",
                  "calendarGroups",
                  "calendarView",
                  "calendars",
                  "contacts",
                  "contactFolders",
                  "createdObjects",
                  "directReports",
                  "drive",
                  "drives",
                  "events",
                  "inferenceClassification",
                  "mailFolders",
                  "manager",
                  "memberOf",
                  "messages",
                  "outlook",
                  "ownedDevices",
                  "ownedObjects",
                  "photo",
                  "registeredDevices",
                  "activities",
                  "extensions",
                  "licenseDetails",
                  "onenote",
                  "people",
                  "planner"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "managedDevices",
                  "managedAppRegistrations",
                  "deviceManagementTroubleshootingEvents",
                  "calendar",
                  "calendarGroups",
                  "calendarView",
                  "calendars",
                  "contacts",
                  "contactFolders",
                  "createdObjects",
                  "directReports",
                  "drive",
                  "drives",
                  "events",
                  "inferenceClassification",
                  "mailFolders",
                  "manager",
                  "memberOf",
                  "messages",
                  "outlook",
                  "ownedDevices",
                  "ownedObjects",
                  "photo",
                  "registeredDevices",
                  "activities",
                  "extensions",
                  "licenseDetails",
                  "onenote",
                  "people",
                  "planner"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Collection of user",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/microsoft.graph.user"
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "users.user"
        ],
        "summary": "Add new entity to users",
        "operationId": "users.user.CreateUser",
        "requestBody": {
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.user"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.user"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}": {
      "get": {
        "tags": [
          "users.user"
        ],
        "summary": "Get entity from users by key",
        "operationId": "users.user.GetUser",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "deviceEnrollmentLimit",
                  "aboutMe",
                  "accountEnabled",
                  "ageGroup",
                  "assignedLicenses",
                  "assignedPlans",
                  "birthday",
                  "businessPhones",
                  "city",
                  "companyName",
                  "consentProvidedForMinor",
                  "country",
                  "department",
                  "displayName",
                  "givenName",
                  "hireDate",
                  "imAddresses",
                  "interests",
                  "jobTitle",
                  "legalAgeGroupClassification",
                  "mail",
                  "mailboxSettings",
                  "mailNickname",
                  "mobilePhone",
                  "mySite",
                  "officeLocation",
                  "onPremisesDomainName",
                  "onPremisesExtensionAttributes",
                  "onPremisesImmutableId",
                  "onPremisesLastSyncDateTime",
                  "onPremisesProvisioningErrors",
                  "onPremisesSamAccountName",
                  "onPremisesSecurityIdentifier",
                  "onPremisesSyncEnabled",
                  "onPremisesUserPrincipalName",
                  "passwordPolicies",
                  "passwordProfile",
                  "pastProjects",
                  "postalCode",
                  "preferredLanguage",
                  "preferredName",
                  "provisionedPlans",
                  "proxyAddresses",
                  "responsibilities",
                  "schools",
                  "skills",
                  "state",
                  "streetAddress",
                  "surname",
                  "usageLocation",
                  "userPrincipalName",
                  "userType",
                  "managedDevices",
                  "managedAppRegistrations",
                  "deviceManagementTroubleshootingEvents",
                  "calendar",
                  "calendarGroups",
                  "calendarView",
                  "calendars",
                  "contacts",
                  "contactFolders",
                  "createdObjects",
                  "directReports",
                  "drive",
                  "drives",
                  "events",
                  "inferenceClassification",
                  "mailFolders",
                  "manager",
                  "memberOf",
                  "messages",
                  "outlook",
                  "ownedDevices",
                  "ownedObjects",
                  "photo",
                  "registeredDevices",
                  "activities",
                  "extensions",
                  "licenseDetails",
                  "onenote",
                  "people",
                  "planner"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "managedDevices",
                  "managedAppRegistrations",
                  "deviceManagementTroubleshootingEvents",
                  "calendar",
                  "calendarGroups",
                  "calendarView",
                  "calendars",
                  "contacts",
                  "contactFolders",
                  "createdObjects",
                  "directReports",
                  "drive",
                  "drives",
                  "events",
                  "inferenceClassification",
                  "mailFolders",
                  "manager",
                  "memberOf",
                  "messages",
                  "outlook",
                  "ownedDevices",
                  "ownedObjects",
                  "photo",
                  "registeredDevices",
                  "activities",
                  "extensions",
                  "licenseDetails",
                  "onenote",
                  "people",
                  "planner"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.user"
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n}\n"
                  }
                }
              }
            },
            "links": {
              "managedDevices": {
                "operationId": "users.user.GetUser",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "managedAppRegistrations": {
                "operationId": "users.user.GetUser",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "deviceManagementTroubleshootingEvents": {
                "operationId": "users.user.GetUser",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "calendar": {
                "operationId": "users.user.GetUser",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "calendarGroups": {
                "operationId": "users.user.GetUser",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "calendarView": {
                "operationId": "users.user.GetUser",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "calendars": {
                "operationId": "users.user.GetUser",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "contacts": {
                "operationId": "users.user.GetUser",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "contactFolders": {
                "operationId": "users.user.GetUser",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "createdObjects": {
                "operationId": "users.user.GetUser",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "directReports": {
                "operationId": "users.user.GetUser",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "drive": {
                "operationId": "users.user.GetUser",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "drives": {
                "operationId": "users.user.GetUser",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "events": {
                "operationId": "users.user.GetUser",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "inferenceClassification": {
                "operationId": "users.user.GetUser",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "mailFolders": {
                "operationId": "users.user.GetUser",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "manager": {
                "operationId": "users.user.GetUser",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "memberOf": {
                "operationId": "users.user.GetUser",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "messages": {
                "operationId": "users.user.GetUser",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "outlook": {
                "operationId": "users.user.GetUser",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "ownedDevices": {
                "operationId": "users.user.GetUser",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "ownedObjects": {
                "operationId": "users.user.GetUser",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "photo": {
                "operationId": "users.user.GetUser",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "registeredDevices": {
                "operationId": "users.user.GetUser",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "activities": {
                "operationId": "users.user.GetUser",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "extensions": {
                "operationId": "users.user.GetUser",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "licenseDetails": {
                "operationId": "users.user.GetUser",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "onenote": {
                "operationId": "users.user.GetUser",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "people": {
                "operationId": "users.user.GetUser",
                "parameters": {
                  "id": "$request.path.id"
                }
              },
              "planner": {
                "operationId": "users.user.GetUser",
                "parameters": {
                  "id": "$request.path.id"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "users.user"
        ],
        "summary": "Update entity in users",
        "operationId": "users.user.UpdateUser",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          }
        ],
        "requestBody": {
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/microsoft.graph.user"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "users.user"
        ],
        "summary": "Delete entity from users",
        "operationId": "users.user.DeleteUser",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Directory.AccessAsUser.All"
            ]
          },
          {
            "Application": [
              "User.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/activities": {
      "get": {
        "tags": [
          "users.userActivity"
        ],
        "summary": "Get activities from users",
        "operationId": "users.ListActivities",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "appActivityId",
                  "appActivityId desc",
                  "activitySourceHost",
                  "activitySourceHost desc",
                  "userTimezone",
                  "userTimezone desc",
                  "appDisplayName",
                  "appDisplayName desc",
                  "activationUrl",
                  "activationUrl desc",
                  "contentUrl",
                  "contentUrl desc",
                  "fallbackUrl",
                  "fallbackUrl desc",
                  "createdDateTime",
                  "createdDateTime desc",
                  "lastModifiedDateTime",
                  "lastModifiedDateTime desc",
                  "expirationDateTime",
                  "expirationDateTime desc",
                  "status",
                  "status desc",
                  "contentInfo",
                  "contentInfo desc",
                  "visualElements",
                  "visualElements desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "appActivityId",
                  "activitySourceHost",
                  "userTimezone",
                  "appDisplayName",
                  "activationUrl",
                  "contentUrl",
                  "fallbackUrl",
                  "createdDateTime",
                  "lastModifiedDateTime",
                  "expirationDateTime",
                  "status",
                  "contentInfo",
                  "visualElements",
                  "historyItems"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "historyItems"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.userActivity"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/activities/{userActivity-id}": {
      "get": {
        "tags": [
          "users.userActivity"
        ],
        "summary": "Get activities from users",
        "operationId": "users.GetActivities",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "name": "userActivity-id",
            "in": "path",
            "description": "key: userActivity-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "userActivity"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "appActivityId",
                  "activitySourceHost",
                  "userTimezone",
                  "appDisplayName",
                  "activationUrl",
                  "contentUrl",
                  "fallbackUrl",
                  "createdDateTime",
                  "lastModifiedDateTime",
                  "expirationDateTime",
                  "status",
                  "contentInfo",
                  "visualElements",
                  "historyItems"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "historyItems"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.userActivity"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/activities/recent()": {
      "get": {
        "tags": [
          "users.Functions"
        ],
        "summary": "Invoke function recent",
        "operationId": "users.activities.recent.f75f",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.userActivity"
                      }
                    ],
                    "nullable": true
                  }
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n    \"@odata.context\": \"https://graph.microsoft.com/v1.0/$metadata#Collection(userActivity)\",\r\n    \"@odata.nextLink\": \"https://graph.microsoft.com/v1.0/me/activities/recent?$skiptoken=%24filter%3dlastModifiedDateTime+lt+2018-02-26T18%3a06%3a19.365Z\",\r\n    \"value\": [{\r\n        \"@odata.type\": \"#microsoft.graph.userActivity\",\r\n        \"activitySourceHost\": \"https://www.contoso.com\",\r\n        \"createdDateTime\": \"2018-02-26T18:34:29.592Z\",\r\n        \"lastModifiedDateTime\": \"2018-02-26T18:34:29.607Z\",\r\n        \"id\": \"5347642601316252694\",\r\n        \"appActivityId\": \"/article?12345\",\r\n        \"visualElements\": {\r\n            \"attribution\": {\r\n              \"iconUrl\": \"http://www.contoso.com/icon\",\r\n              \"alternateText\": \"Contoso, Ltd.\",\r\n              \"addImageQuery\": false,\r\n              },\r\n            \"displayText\": \"Contoso How-To: How to Tie a Reef Knot\",\r\n            \"description\": \"How to Tie a Reef Knot. A step-by-step visual guide to the art of nautical knot-tying.\",\r\n            \"backgroundColor\": \"#ff0000\",\r\n            \"content\": {\r\n              \"$schema\": \"http://adaptivecards.io/schemas/adaptive-card.json\",\r\n              \"type\": \"AdaptiveCard\",\r\n              \"body\":\r\n              [{\r\n                  \"type\": \"TextBlock\",\r\n                  \"text\": \"Contoso MainPage\"\r\n              }]\r\n            }\r\n        },\r\n        \"activationUrl\": \"http://www.contoso.com/article?id=12345\",\r\n        \"appDisplayName\": \"Contoso, Ltd.\",\r\n        \"userTimezone\": \"Africa/Casablanca\",\r\n        \"fallbackUrl\": \"http://www.contoso.com/article?id=12345\",\r\n        \"contentUrl\": \"http://www.contoso.com/article?id=12345\",\r\n        \"contentInfo\": {\r\n            \"@context\": \"http://schema.org\",\r\n            \"@type\": \"Article\",\r\n            \"author\": \"John Doe\",\r\n            \"name\": \"How to Tie a Reef Knot\"\r\n        },\r\n        \"expirationDateTime\": \"2018-03-28T18:34:29.607Z\",\r\n        \"status\": \"updated\"\r\n    }]\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "UserActivity.ReadWrite.CreatedByApp"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "UserActivity.ReadWrite.CreatedByApp"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/users/{user-id}/calendar": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "Get calendar from users",
        "operationId": "users.GetCalendar",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "canEdit",
                  "canShare",
                  "canViewPrivateItems",
                  "changeKey",
                  "color",
                  "name",
                  "owner",
                  "calendarView",
                  "events",
                  "multiValueExtendedProperties",
                  "singleValueExtendedProperties"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "calendarView",
                  "events",
                  "multiValueExtendedProperties",
                  "singleValueExtendedProperties"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.calendar"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/calendarGroups": {
      "get": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "Get calendarGroups from users",
        "operationId": "users.ListCalendarGroups",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "changeKey",
                  "changeKey desc",
                  "classId",
                  "classId desc",
                  "name",
                  "name desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "changeKey",
                  "classId",
                  "name",
                  "calendars"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "calendars"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.calendarGroup"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}": {
      "get": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "Get calendarGroups from users",
        "operationId": "users.GetCalendarGroups",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "name": "calendarGroup-id",
            "in": "path",
            "description": "key: calendarGroup-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "calendarGroup"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "changeKey",
                  "classId",
                  "name",
                  "calendars"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "calendars"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.calendarGroup"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/calendars": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "Get calendars from users",
        "operationId": "users.ListCalendars",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "canEdit",
                  "canEdit desc",
                  "canShare",
                  "canShare desc",
                  "canViewPrivateItems",
                  "canViewPrivateItems desc",
                  "changeKey",
                  "changeKey desc",
                  "color",
                  "color desc",
                  "name",
                  "name desc",
                  "owner",
                  "owner desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "canEdit",
                  "canShare",
                  "canViewPrivateItems",
                  "changeKey",
                  "color",
                  "name",
                  "owner",
                  "calendarView",
                  "events",
                  "multiValueExtendedProperties",
                  "singleValueExtendedProperties"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "calendarView",
                  "events",
                  "multiValueExtendedProperties",
                  "singleValueExtendedProperties"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.calendar"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/calendars/{calendar-id}": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "Get calendars from users",
        "operationId": "users.GetCalendars",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "name": "calendar-id",
            "in": "path",
            "description": "key: calendar-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "calendar"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "canEdit",
                  "canShare",
                  "canViewPrivateItems",
                  "changeKey",
                  "color",
                  "name",
                  "owner",
                  "calendarView",
                  "events",
                  "multiValueExtendedProperties",
                  "singleValueExtendedProperties"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "calendarView",
                  "events",
                  "multiValueExtendedProperties",
                  "singleValueExtendedProperties"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.calendar"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/calendarView": {
      "get": {
        "tags": [
          "users.event"
        ],
        "summary": "Get calendarView from users",
        "operationId": "users.ListCalendarView",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "categories",
                  "categories desc",
                  "changeKey",
                  "changeKey desc",
                  "createdDateTime",
                  "createdDateTime desc",
                  "lastModifiedDateTime",
                  "lastModifiedDateTime desc",
                  "attendees",
                  "attendees desc",
                  "body",
                  "body desc",
                  "bodyPreview",
                  "bodyPreview desc",
                  "end",
                  "end desc",
                  "hasAttachments",
                  "hasAttachments desc",
                  "iCalUId",
                  "iCalUId desc",
                  "importance",
                  "importance desc",
                  "isAllDay",
                  "isAllDay desc",
                  "isCancelled",
                  "isCancelled desc",
                  "isOrganizer",
                  "isOrganizer desc",
                  "isReminderOn",
                  "isReminderOn desc",
                  "location",
                  "location desc",
                  "locations",
                  "locations desc",
                  "onlineMeetingUrl",
                  "onlineMeetingUrl desc",
                  "organizer",
                  "organizer desc",
                  "originalEndTimeZone",
                  "originalEndTimeZone desc",
                  "originalStart",
                  "originalStart desc",
                  "originalStartTimeZone",
                  "originalStartTimeZone desc",
                  "recurrence",
                  "recurrence desc",
                  "reminderMinutesBeforeStart",
                  "reminderMinutesBeforeStart desc",
                  "responseRequested",
                  "responseRequested desc",
                  "responseStatus",
                  "responseStatus desc",
                  "sensitivity",
                  "sensitivity desc",
                  "seriesMasterId",
                  "seriesMasterId desc",
                  "showAs",
                  "showAs desc",
                  "start",
                  "start desc",
                  "subject",
                  "subject desc",
                  "type",
                  "type desc",
                  "webLink",
                  "webLink desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "categories",
                  "changeKey",
                  "createdDateTime",
                  "lastModifiedDateTime",
                  "attendees",
                  "body",
                  "bodyPreview",
                  "end",
                  "hasAttachments",
                  "iCalUId",
                  "importance",
                  "isAllDay",
                  "isCancelled",
                  "isOrganizer",
                  "isReminderOn",
                  "location",
                  "locations",
                  "onlineMeetingUrl",
                  "organizer",
                  "originalEndTimeZone",
                  "originalStart",
                  "originalStartTimeZone",
                  "recurrence",
                  "reminderMinutesBeforeStart",
                  "responseRequested",
                  "responseStatus",
                  "sensitivity",
                  "seriesMasterId",
                  "showAs",
                  "start",
                  "subject",
                  "type",
                  "webLink",
                  "attachments",
                  "calendar",
                  "extensions",
                  "instances",
                  "multiValueExtendedProperties",
                  "singleValueExtendedProperties"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "attachments",
                  "calendar",
                  "extensions",
                  "instances",
                  "multiValueExtendedProperties",
                  "singleValueExtendedProperties"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.event"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/calendarView/{event-id}": {
      "get": {
        "tags": [
          "users.event"
        ],
        "summary": "Get calendarView from users",
        "operationId": "users.GetCalendarView",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "key: event-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "event"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "categories",
                  "changeKey",
                  "createdDateTime",
                  "lastModifiedDateTime",
                  "attendees",
                  "body",
                  "bodyPreview",
                  "end",
                  "hasAttachments",
                  "iCalUId",
                  "importance",
                  "isAllDay",
                  "isCancelled",
                  "isOrganizer",
                  "isReminderOn",
                  "location",
                  "locations",
                  "onlineMeetingUrl",
                  "organizer",
                  "originalEndTimeZone",
                  "originalStart",
                  "originalStartTimeZone",
                  "recurrence",
                  "reminderMinutesBeforeStart",
                  "responseRequested",
                  "responseStatus",
                  "sensitivity",
                  "seriesMasterId",
                  "showAs",
                  "start",
                  "subject",
                  "type",
                  "webLink",
                  "attachments",
                  "calendar",
                  "extensions",
                  "instances",
                  "multiValueExtendedProperties",
                  "singleValueExtendedProperties"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "attachments",
                  "calendar",
                  "extensions",
                  "instances",
                  "multiValueExtendedProperties",
                  "singleValueExtendedProperties"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.event"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/calendarView/{event-id}/accept": {
      "post": {
        "tags": [
          "users.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "users.calendarView.accept",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "key: event-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "event"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Nature of the data in the body of an entity. Required.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string",
                    "nullable": true
                  },
                  "sendResponse": {
                    "type": "boolean",
                    "default": false,
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Application": [
              "Calendars.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/users/{user-id}/events/{event-id}/accept"
      ]
    },
    "/users/{user-id}/calendarView/{event-id}/decline": {
      "post": {
        "tags": [
          "users.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "users.calendarView.decline",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "key: event-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "event"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Nature of the data in the body of an entity. Required.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string",
                    "nullable": true
                  },
                  "sendResponse": {
                    "type": "boolean",
                    "default": false,
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Application": [
              "Calendars.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/users/{user-id}/events/{event-id}/decline"
      ]
    },
    "/users/{user-id}/calendarView/{event-id}/dismissReminder": {
      "post": {
        "tags": [
          "users.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "users.calendarView.dismissReminder",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "key: event-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "event"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Application": [
              "Calendars.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/users/{user-id}/events/{event-id}/dismissReminder"
      ]
    },
    "/users/{user-id}/calendarView/{event-id}/snoozeReminder": {
      "post": {
        "tags": [
          "users.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "users.calendarView.snoozeReminder",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "key: event-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "event"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Nature of the data in the body of an entity. Required.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "newReminderTime": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.dateTimeTimeZone"
                      }
                    ],
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Application": [
              "Calendars.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/users/{user-id}/events/{event-id}/snoozeReminder"
      ]
    },
    "/users/{user-id}/calendarView/{event-id}/tentativelyAccept": {
      "post": {
        "tags": [
          "users.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "users.calendarView.tentativelyAccept",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "key: event-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "event"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Nature of the data in the body of an entity. Required.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string",
                    "nullable": true
                  },
                  "sendResponse": {
                    "type": "boolean",
                    "default": false,
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Application": [
              "Calendars.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/users/{user-id}/events/{event-id}/tentativelyAccept"
      ]
    },
    "/users/{user-id}/calendarView/delta()": {
      "get": {
        "tags": [
          "users.Functions"
        ],
        "summary": "Invoke function delta",
        "operationId": "users.calendarView.delta.2209",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "name": "startDateTime",
            "in": "query",
            "description": "String",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDateTime",
            "in": "query",
            "description": "String",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$deltatoken",
            "in": "query",
            "description": "String",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skiptoken",
            "in": "query",
            "description": "String",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "application/json. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Prefer",
            "in": "header",
            "description": "odata.maxpagesize={x}. Optional.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Prefer",
            "in": "header",
            "description": "{Time zone}. Optional, UTC assumed if absent.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.event"
                      }
                    ],
                    "nullable": true
                  }
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n  \"@odata.nextLink\":\"https://graph.microsoft.com/v1.0/me/calendarView/delta?$skiptoken={_skipToken_}\",\r\n  \"value\": [\r\n    {\r\n      \"originalStartTimeZone\": \"originalStartTimeZone-value\",\r\n      \"originalEndTimeZone\": \"originalEndTimeZone-value\",\r\n      \"responseStatus\": {\r\n        \"response\": \"response-value\",\r\n        \"time\": \"datetime-value\"\r\n      },\r\n      \"iCalUId\": \"iCalUId-value\",\r\n      \"reminderMinutesBeforeStart\": 99,\r\n      \"isReminderOn\": true\r\n    }\r\n  ]\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Calendars.Read"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Calendars.Read"
            ]
          },
          {
            "Application": [
              "Calendars.Read"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/users/{user-id}/contactFolders/delta()",
        "/users/{user-id}/contacts/delta()",
        "/users/{user-id}/events/delta()",
        "/users/{user-id}/mailFolders/delta()",
        "/users/{user-id}/messages/delta()",
        "/users/delta()"
      ]
    },
    "/users/{user-id}/contactFolders": {
      "get": {
        "tags": [
          "users.contactFolder"
        ],
        "summary": "Get contactFolders from users",
        "operationId": "users.ListContactFolders",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "displayName",
                  "displayName desc",
                  "parentFolderId",
                  "parentFolderId desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "displayName",
                  "parentFolderId",
                  "childFolders",
                  "contacts",
                  "multiValueExtendedProperties",
                  "singleValueExtendedProperties"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "childFolders",
                  "contacts",
                  "multiValueExtendedProperties",
                  "singleValueExtendedProperties"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.contactFolder"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/contactFolders/{contactFolder-id}": {
      "get": {
        "tags": [
          "users.contactFolder"
        ],
        "summary": "Get contactFolders from users",
        "operationId": "users.GetContactFolders",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "name": "contactFolder-id",
            "in": "path",
            "description": "key: contactFolder-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "contactFolder"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "displayName",
                  "parentFolderId",
                  "childFolders",
                  "contacts",
                  "multiValueExtendedProperties",
                  "singleValueExtendedProperties"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "childFolders",
                  "contacts",
                  "multiValueExtendedProperties",
                  "singleValueExtendedProperties"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.contactFolder"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/contactFolders/delta()": {
      "get": {
        "tags": [
          "users.Functions"
        ],
        "summary": "Invoke function delta",
        "operationId": "users.contactFolders.delta.2209",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "name": "$deltatoken",
            "in": "query",
            "description": "String",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skiptoken",
            "in": "query",
            "description": "String",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "application/json. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Prefer",
            "in": "header",
            "description": "odata.maxpagesize={x}. Optional.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.contactFolder"
                      }
                    ],
                    "nullable": true
                  }
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n  \"@odata.nextLink\":\"https://graph.microsoft.com/v1.0/me/contactfolders/delta?$skiptoken={_skipToken_}\",\r\n  \"value\": [\r\n    {\r\n     \"parentFolderId\": \"parentFolderId-value\",\r\n      \"displayName\": \"displayName-value\",\r\n      \"id\": \"id-value\"\r\n    }\r\n  ]\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Contacts.Read",
              "Contacts.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Contacts.Read",
              "Contacts.ReadWrite"
            ]
          },
          {
            "Application": [
              "Contacts.Read",
              "Contacts.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/users/{user-id}/calendarView/delta()",
        "/users/{user-id}/contacts/delta()",
        "/users/{user-id}/events/delta()",
        "/users/{user-id}/mailFolders/delta()",
        "/users/{user-id}/messages/delta()",
        "/users/delta()"
      ]
    },
    "/users/{user-id}/contacts": {
      "get": {
        "tags": [
          "users.contact"
        ],
        "summary": "Get contacts from users",
        "operationId": "users.ListContacts",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "categories",
                  "categories desc",
                  "changeKey",
                  "changeKey desc",
                  "createdDateTime",
                  "createdDateTime desc",
                  "lastModifiedDateTime",
                  "lastModifiedDateTime desc",
                  "assistantName",
                  "assistantName desc",
                  "birthday",
                  "birthday desc",
                  "businessAddress",
                  "businessAddress desc",
                  "businessHomePage",
                  "businessHomePage desc",
                  "businessPhones",
                  "businessPhones desc",
                  "children",
                  "children desc",
                  "companyName",
                  "companyName desc",
                  "department",
                  "department desc",
                  "displayName",
                  "displayName desc",
                  "emailAddresses",
                  "emailAddresses desc",
                  "flag",
                  "flag desc",
                  "fileAs",
                  "fileAs desc",
                  "generation",
                  "generation desc",
                  "givenName",
                  "givenName desc",
                  "homeAddress",
                  "homeAddress desc",
                  "homePhones",
                  "homePhones desc",
                  "imAddresses",
                  "imAddresses desc",
                  "initials",
                  "initials desc",
                  "jobTitle",
                  "jobTitle desc",
                  "manager",
                  "manager desc",
                  "middleName",
                  "middleName desc",
                  "mobilePhone",
                  "mobilePhone desc",
                  "nickName",
                  "nickName desc",
                  "officeLocation",
                  "officeLocation desc",
                  "otherAddress",
                  "otherAddress desc",
                  "parentFolderId",
                  "parentFolderId desc",
                  "personalNotes",
                  "personalNotes desc",
                  "profession",
                  "profession desc",
                  "spouseName",
                  "spouseName desc",
                  "surname",
                  "surname desc",
                  "title",
                  "title desc",
                  "yomiCompanyName",
                  "yomiCompanyName desc",
                  "yomiGivenName",
                  "yomiGivenName desc",
                  "yomiSurname",
                  "yomiSurname desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "categories",
                  "changeKey",
                  "createdDateTime",
                  "lastModifiedDateTime",
                  "assistantName",
                  "birthday",
                  "businessAddress",
                  "businessHomePage",
                  "businessPhones",
                  "children",
                  "companyName",
                  "department",
                  "displayName",
                  "emailAddresses",
                  "flag",
                  "fileAs",
                  "generation",
                  "givenName",
                  "homeAddress",
                  "homePhones",
                  "imAddresses",
                  "initials",
                  "jobTitle",
                  "manager",
                  "middleName",
                  "mobilePhone",
                  "nickName",
                  "officeLocation",
                  "otherAddress",
                  "parentFolderId",
                  "personalNotes",
                  "profession",
                  "spouseName",
                  "surname",
                  "title",
                  "yomiCompanyName",
                  "yomiGivenName",
                  "yomiSurname",
                  "photo",
                  "extensions",
                  "multiValueExtendedProperties",
                  "singleValueExtendedProperties"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "photo",
                  "extensions",
                  "multiValueExtendedProperties",
                  "singleValueExtendedProperties"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.contact"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/contacts/{contact-id}": {
      "get": {
        "tags": [
          "users.contact"
        ],
        "summary": "Get contacts from users",
        "operationId": "users.GetContacts",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "name": "contact-id",
            "in": "path",
            "description": "key: contact-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "contact"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "categories",
                  "changeKey",
                  "createdDateTime",
                  "lastModifiedDateTime",
                  "assistantName",
                  "birthday",
                  "businessAddress",
                  "businessHomePage",
                  "businessPhones",
                  "children",
                  "companyName",
                  "department",
                  "displayName",
                  "emailAddresses",
                  "flag",
                  "fileAs",
                  "generation",
                  "givenName",
                  "homeAddress",
                  "homePhones",
                  "imAddresses",
                  "initials",
                  "jobTitle",
                  "manager",
                  "middleName",
                  "mobilePhone",
                  "nickName",
                  "officeLocation",
                  "otherAddress",
                  "parentFolderId",
                  "personalNotes",
                  "profession",
                  "spouseName",
                  "surname",
                  "title",
                  "yomiCompanyName",
                  "yomiGivenName",
                  "yomiSurname",
                  "photo",
                  "extensions",
                  "multiValueExtendedProperties",
                  "singleValueExtendedProperties"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "photo",
                  "extensions",
                  "multiValueExtendedProperties",
                  "singleValueExtendedProperties"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.contact"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/contacts/delta()": {
      "get": {
        "tags": [
          "users.Functions"
        ],
        "summary": "Invoke function delta",
        "operationId": "users.contacts.delta.2209",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "name": "$deltatoken",
            "in": "query",
            "description": "String",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skiptoken",
            "in": "query",
            "description": "String",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "application/json. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Prefer",
            "in": "header",
            "description": "odata.maxpagesize={x}. Optional.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.contact"
                      }
                    ],
                    "nullable": true
                  }
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n  \"@odata.nextLink\":\"https://graph.microsoft.com/v1.0/me/contactfolders('{id}')/contacts/delta?$skiptoken={_skipToken_}\",\r\n  \"value\": [\r\n    {\r\n      \"parentFolderId\": \"parentFolderId-value\",\r\n      \"birthday\": \"2016-10-19T10:37:00Z\",\r\n      \"fileAs\": \"fileAs-value\",\r\n      \"displayName\": \"displayName-value\",\r\n      \"givenName\": \"givenName-value\",\r\n      \"initials\": \"initials-value\"\r\n    }\r\n  ]\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Contacts.Read",
              "Contacts.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Contacts.Read",
              "Contacts.ReadWrite"
            ]
          },
          {
            "Application": [
              "Contacts.Read",
              "Contacts.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/users/{user-id}/calendarView/delta()",
        "/users/{user-id}/contactFolders/delta()",
        "/users/{user-id}/events/delta()",
        "/users/{user-id}/mailFolders/delta()",
        "/users/{user-id}/messages/delta()",
        "/users/delta()"
      ]
    },
    "/users/{user-id}/createdObjects": {
      "get": {
        "tags": [
          "users.directoryObject"
        ],
        "summary": "Get createdObjects from users",
        "operationId": "users.ListCreatedObjects",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/createdObjects/{directoryObject-id}": {
      "get": {
        "tags": [
          "users.directoryObject"
        ],
        "summary": "Get createdObjects from users",
        "operationId": "users.GetCreatedObjects",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "name": "directoryObject-id",
            "in": "path",
            "description": "key: directoryObject-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "directoryObject"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/deviceManagementTroubleshootingEvents": {
      "get": {
        "tags": [
          "users.deviceManagementTroubleshootingEvent"
        ],
        "summary": "Get deviceManagementTroubleshootingEvents from users",
        "operationId": "users.ListDeviceManagementTroubleshootingEvents",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "eventDateTime",
                  "eventDateTime desc",
                  "correlationId",
                  "correlationId desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "eventDateTime",
                  "correlationId"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.deviceManagementTroubleshootingEvent"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/deviceManagementTroubleshootingEvents/{deviceManagementTroubleshootingEvent-id}": {
      "get": {
        "tags": [
          "users.deviceManagementTroubleshootingEvent"
        ],
        "summary": "Get deviceManagementTroubleshootingEvents from users",
        "operationId": "users.GetDeviceManagementTroubleshootingEvents",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "name": "deviceManagementTroubleshootingEvent-id",
            "in": "path",
            "description": "key: deviceManagementTroubleshootingEvent-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "deviceManagementTroubleshootingEvent"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "eventDateTime",
                  "correlationId"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.deviceManagementTroubleshootingEvent"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/directReports": {
      "get": {
        "tags": [
          "users.directoryObject"
        ],
        "summary": "Get directReports from users",
        "operationId": "users.ListDirectReports",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/directReports/{directoryObject-id}": {
      "get": {
        "tags": [
          "users.directoryObject"
        ],
        "summary": "Get directReports from users",
        "operationId": "users.GetDirectReports",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "name": "directoryObject-id",
            "in": "path",
            "description": "key: directoryObject-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "directoryObject"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/drive": {
      "get": {
        "tags": [
          "users.drive"
        ],
        "summary": "Get drive from users",
        "operationId": "users.GetDrive",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "driveType",
                  "owner",
                  "quota",
                  "sharepointIds",
                  "system",
                  "createdByUser",
                  "lastModifiedByUser",
                  "items",
                  "root",
                  "special",
                  "list"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "items",
                  "root",
                  "special",
                  "list"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.drive"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/drives": {
      "get": {
        "tags": [
          "users.drive"
        ],
        "summary": "Get drives from users",
        "operationId": "users.ListDrives",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "createdBy",
                  "createdBy desc",
                  "createdDateTime",
                  "createdDateTime desc",
                  "description",
                  "description desc",
                  "eTag",
                  "eTag desc",
                  "lastModifiedBy",
                  "lastModifiedBy desc",
                  "lastModifiedDateTime",
                  "lastModifiedDateTime desc",
                  "name",
                  "name desc",
                  "parentReference",
                  "parentReference desc",
                  "webUrl",
                  "webUrl desc",
                  "driveType",
                  "driveType desc",
                  "owner",
                  "owner desc",
                  "quota",
                  "quota desc",
                  "sharepointIds",
                  "sharepointIds desc",
                  "system",
                  "system desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "driveType",
                  "owner",
                  "quota",
                  "sharepointIds",
                  "system",
                  "createdByUser",
                  "lastModifiedByUser",
                  "items",
                  "root",
                  "special",
                  "list"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "items",
                  "root",
                  "special",
                  "list"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.drive"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/drives/{drive-id}": {
      "get": {
        "tags": [
          "users.drive"
        ],
        "summary": "Get drives from users",
        "operationId": "users.GetDrives",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "name": "drive-id",
            "in": "path",
            "description": "key: drive-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "drive"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdBy",
                  "createdDateTime",
                  "description",
                  "eTag",
                  "lastModifiedBy",
                  "lastModifiedDateTime",
                  "name",
                  "parentReference",
                  "webUrl",
                  "driveType",
                  "owner",
                  "quota",
                  "sharepointIds",
                  "system",
                  "createdByUser",
                  "lastModifiedByUser",
                  "items",
                  "root",
                  "special",
                  "list"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "createdByUser",
                  "lastModifiedByUser",
                  "items",
                  "root",
                  "special",
                  "list"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.drive"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/events": {
      "get": {
        "tags": [
          "users.event"
        ],
        "summary": "Get events from users",
        "operationId": "users.ListEvents",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "categories",
                  "categories desc",
                  "changeKey",
                  "changeKey desc",
                  "createdDateTime",
                  "createdDateTime desc",
                  "lastModifiedDateTime",
                  "lastModifiedDateTime desc",
                  "attendees",
                  "attendees desc",
                  "body",
                  "body desc",
                  "bodyPreview",
                  "bodyPreview desc",
                  "end",
                  "end desc",
                  "hasAttachments",
                  "hasAttachments desc",
                  "iCalUId",
                  "iCalUId desc",
                  "importance",
                  "importance desc",
                  "isAllDay",
                  "isAllDay desc",
                  "isCancelled",
                  "isCancelled desc",
                  "isOrganizer",
                  "isOrganizer desc",
                  "isReminderOn",
                  "isReminderOn desc",
                  "location",
                  "location desc",
                  "locations",
                  "locations desc",
                  "onlineMeetingUrl",
                  "onlineMeetingUrl desc",
                  "organizer",
                  "organizer desc",
                  "originalEndTimeZone",
                  "originalEndTimeZone desc",
                  "originalStart",
                  "originalStart desc",
                  "originalStartTimeZone",
                  "originalStartTimeZone desc",
                  "recurrence",
                  "recurrence desc",
                  "reminderMinutesBeforeStart",
                  "reminderMinutesBeforeStart desc",
                  "responseRequested",
                  "responseRequested desc",
                  "responseStatus",
                  "responseStatus desc",
                  "sensitivity",
                  "sensitivity desc",
                  "seriesMasterId",
                  "seriesMasterId desc",
                  "showAs",
                  "showAs desc",
                  "start",
                  "start desc",
                  "subject",
                  "subject desc",
                  "type",
                  "type desc",
                  "webLink",
                  "webLink desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "categories",
                  "changeKey",
                  "createdDateTime",
                  "lastModifiedDateTime",
                  "attendees",
                  "body",
                  "bodyPreview",
                  "end",
                  "hasAttachments",
                  "iCalUId",
                  "importance",
                  "isAllDay",
                  "isCancelled",
                  "isOrganizer",
                  "isReminderOn",
                  "location",
                  "locations",
                  "onlineMeetingUrl",
                  "organizer",
                  "originalEndTimeZone",
                  "originalStart",
                  "originalStartTimeZone",
                  "recurrence",
                  "reminderMinutesBeforeStart",
                  "responseRequested",
                  "responseStatus",
                  "sensitivity",
                  "seriesMasterId",
                  "showAs",
                  "start",
                  "subject",
                  "type",
                  "webLink",
                  "attachments",
                  "calendar",
                  "extensions",
                  "instances",
                  "multiValueExtendedProperties",
                  "singleValueExtendedProperties"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "attachments",
                  "calendar",
                  "extensions",
                  "instances",
                  "multiValueExtendedProperties",
                  "singleValueExtendedProperties"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.event"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/events/{event-id}": {
      "get": {
        "tags": [
          "users.event"
        ],
        "summary": "Get events from users",
        "operationId": "users.GetEvents",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "key: event-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "event"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "categories",
                  "changeKey",
                  "createdDateTime",
                  "lastModifiedDateTime",
                  "attendees",
                  "body",
                  "bodyPreview",
                  "end",
                  "hasAttachments",
                  "iCalUId",
                  "importance",
                  "isAllDay",
                  "isCancelled",
                  "isOrganizer",
                  "isReminderOn",
                  "location",
                  "locations",
                  "onlineMeetingUrl",
                  "organizer",
                  "originalEndTimeZone",
                  "originalStart",
                  "originalStartTimeZone",
                  "recurrence",
                  "reminderMinutesBeforeStart",
                  "responseRequested",
                  "responseStatus",
                  "sensitivity",
                  "seriesMasterId",
                  "showAs",
                  "start",
                  "subject",
                  "type",
                  "webLink",
                  "attachments",
                  "calendar",
                  "extensions",
                  "instances",
                  "multiValueExtendedProperties",
                  "singleValueExtendedProperties"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "attachments",
                  "calendar",
                  "extensions",
                  "instances",
                  "multiValueExtendedProperties",
                  "singleValueExtendedProperties"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.event"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/events/{event-id}/accept": {
      "post": {
        "tags": [
          "users.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "users.events.accept",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "key: event-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "event"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Nature of the data in the body of an entity. Required.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string",
                    "nullable": true
                  },
                  "sendResponse": {
                    "type": "boolean",
                    "default": false,
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Application": [
              "Calendars.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/users/{user-id}/calendarView/{event-id}/accept"
      ]
    },
    "/users/{user-id}/events/{event-id}/decline": {
      "post": {
        "tags": [
          "users.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "users.events.decline",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "key: event-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "event"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Nature of the data in the body of an entity. Required.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string",
                    "nullable": true
                  },
                  "sendResponse": {
                    "type": "boolean",
                    "default": false,
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Application": [
              "Calendars.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/users/{user-id}/calendarView/{event-id}/decline"
      ]
    },
    "/users/{user-id}/events/{event-id}/dismissReminder": {
      "post": {
        "tags": [
          "users.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "users.events.dismissReminder",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "key: event-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "event"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Application": [
              "Calendars.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/users/{user-id}/calendarView/{event-id}/dismissReminder"
      ]
    },
    "/users/{user-id}/events/{event-id}/snoozeReminder": {
      "post": {
        "tags": [
          "users.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "users.events.snoozeReminder",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "key: event-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "event"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Nature of the data in the body of an entity. Required.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "newReminderTime": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.dateTimeTimeZone"
                      }
                    ],
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Application": [
              "Calendars.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/users/{user-id}/calendarView/{event-id}/snoozeReminder"
      ]
    },
    "/users/{user-id}/events/{event-id}/tentativelyAccept": {
      "post": {
        "tags": [
          "users.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "users.events.tentativelyAccept",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "name": "event-id",
            "in": "path",
            "description": "key: event-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "event"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Nature of the data in the body of an entity. Required.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string",
                    "nullable": true
                  },
                  "sendResponse": {
                    "type": "boolean",
                    "default": false,
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Application": [
              "Calendars.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/users/{user-id}/calendarView/{event-id}/tentativelyAccept"
      ]
    },
    "/users/{user-id}/events/delta()": {
      "get": {
        "tags": [
          "users.Functions"
        ],
        "summary": "Invoke function delta",
        "operationId": "users.events.delta.2209",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "name": "startDateTime",
            "in": "query",
            "description": "String",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDateTime",
            "in": "query",
            "description": "String",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$deltatoken",
            "in": "query",
            "description": "String",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skiptoken",
            "in": "query",
            "description": "String",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "application/json. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Prefer",
            "in": "header",
            "description": "odata.maxpagesize={x}. Optional.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Prefer",
            "in": "header",
            "description": "{Time zone}. Optional, UTC assumed if absent.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.event"
                      }
                    ],
                    "nullable": true
                  }
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n  \"@odata.nextLink\":\"https://graph.microsoft.com/v1.0/me/calendarView/delta?$skiptoken={_skipToken_}\",\r\n  \"value\": [\r\n    {\r\n      \"originalStartTimeZone\": \"originalStartTimeZone-value\",\r\n      \"originalEndTimeZone\": \"originalEndTimeZone-value\",\r\n      \"responseStatus\": {\r\n        \"response\": \"response-value\",\r\n        \"time\": \"datetime-value\"\r\n      },\r\n      \"iCalUId\": \"iCalUId-value\",\r\n      \"reminderMinutesBeforeStart\": 99,\r\n      \"isReminderOn\": true\r\n    }\r\n  ]\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Calendars.Read"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Calendars.Read"
            ]
          },
          {
            "Application": [
              "Calendars.Read"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/users/{user-id}/calendarView/delta()",
        "/users/{user-id}/contactFolders/delta()",
        "/users/{user-id}/contacts/delta()",
        "/users/{user-id}/mailFolders/delta()",
        "/users/{user-id}/messages/delta()",
        "/users/delta()"
      ]
    },
    "/users/{user-id}/extensions": {
      "get": {
        "tags": [
          "users.extension"
        ],
        "summary": "Get extensions from users",
        "operationId": "users.ListExtensions",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/extensions/{extension-id}": {
      "get": {
        "tags": [
          "users.extension"
        ],
        "summary": "Get extensions from users",
        "operationId": "users.GetExtensions",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "name": "extension-id",
            "in": "path",
            "description": "key: extension-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "extension"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/inferenceClassification": {
      "get": {
        "tags": [
          "users.inferenceClassification"
        ],
        "summary": "Get inferenceClassification from users",
        "operationId": "users.GetInferenceClassification",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "overrides"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "overrides"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.inferenceClassification"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/licenseDetails": {
      "get": {
        "tags": [
          "users.licenseDetails"
        ],
        "summary": "Get licenseDetails from users",
        "operationId": "users.ListLicenseDetails",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "servicePlans",
                  "servicePlans desc",
                  "skuId",
                  "skuId desc",
                  "skuPartNumber",
                  "skuPartNumber desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "servicePlans",
                  "skuId",
                  "skuPartNumber"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.licenseDetails"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/licenseDetails/{licenseDetails-id}": {
      "get": {
        "tags": [
          "users.licenseDetails"
        ],
        "summary": "Get licenseDetails from users",
        "operationId": "users.GetLicenseDetails",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "name": "licenseDetails-id",
            "in": "path",
            "description": "key: licenseDetails-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "licenseDetails"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "servicePlans",
                  "skuId",
                  "skuPartNumber"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.licenseDetails"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/mailFolders": {
      "get": {
        "tags": [
          "users.mailFolder"
        ],
        "summary": "Get mailFolders from users",
        "operationId": "users.ListMailFolders",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "childFolderCount",
                  "childFolderCount desc",
                  "displayName",
                  "displayName desc",
                  "parentFolderId",
                  "parentFolderId desc",
                  "totalItemCount",
                  "totalItemCount desc",
                  "unreadItemCount",
                  "unreadItemCount desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "childFolderCount",
                  "displayName",
                  "parentFolderId",
                  "totalItemCount",
                  "unreadItemCount",
                  "childFolders",
                  "messageRules",
                  "messages",
                  "multiValueExtendedProperties",
                  "singleValueExtendedProperties"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "childFolders",
                  "messageRules",
                  "messages",
                  "multiValueExtendedProperties",
                  "singleValueExtendedProperties"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.mailFolder"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/mailFolders/{mailFolder-id}": {
      "get": {
        "tags": [
          "users.mailFolder"
        ],
        "summary": "Get mailFolders from users",
        "operationId": "users.GetMailFolders",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "name": "mailFolder-id",
            "in": "path",
            "description": "key: mailFolder-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "mailFolder"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "childFolderCount",
                  "displayName",
                  "parentFolderId",
                  "totalItemCount",
                  "unreadItemCount",
                  "childFolders",
                  "messageRules",
                  "messages",
                  "multiValueExtendedProperties",
                  "singleValueExtendedProperties"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "childFolders",
                  "messageRules",
                  "messages",
                  "multiValueExtendedProperties",
                  "singleValueExtendedProperties"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.mailFolder"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/mailFolders/{mailFolder-id}/copy": {
      "post": {
        "tags": [
          "users.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "users.mailFolders.copy",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "name": "mailFolder-id",
            "in": "path",
            "description": "key: mailFolder-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "mailFolder"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "destinationId": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.mailFolder"
                    }
                  ],
                  "nullable": true
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n  \"displayName\": \"displayName-value\",\r\n  \"parentFolderId\": \"parentFolderId-value\",\r\n  \"childFolderCount\": 99,\r\n  \"unreadItemCount\": 99,\r\n  \"totalItemCount\": 99,\r\n  \"id\": \"id-value\"\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Mail.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Mail.ReadWrite"
            ]
          },
          {
            "Application": [
              "Mail.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/users/{user-id}/messages/{message-id}/copy"
      ]
    },
    "/users/{user-id}/mailFolders/{mailFolder-id}/move": {
      "post": {
        "tags": [
          "users.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "users.mailFolders.move",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "name": "mailFolder-id",
            "in": "path",
            "description": "key: mailFolder-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "mailFolder"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "destinationId": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.mailFolder"
                    }
                  ],
                  "nullable": true
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n  \"displayName\": \"displayName-value\",\r\n  \"parentFolderId\": \"parentFolderId-value\",\r\n  \"childFolderCount\": 99,\r\n  \"unreadItemCount\": 99,\r\n  \"totalItemCount\": 99,\r\n  \"id\": \"id-value\"\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Mail.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Mail.ReadWrite"
            ]
          },
          {
            "Application": [
              "Mail.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/users/{user-id}/messages/{message-id}/move"
      ]
    },
    "/users/{user-id}/mailFolders/delta()": {
      "get": {
        "tags": [
          "users.Functions"
        ],
        "summary": "Invoke function delta",
        "operationId": "users.mailFolders.delta.2209",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "name": "$deltatoken",
            "in": "query",
            "description": "String",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skiptoken",
            "in": "query",
            "description": "String",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "application/json. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Prefer",
            "in": "header",
            "description": "odata.maxpagesize={x}. Optional.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.mailFolder"
                      }
                    ],
                    "nullable": true
                  }
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n  \"@odata.nextLink\":\"https://graph.microsoft.com/v1.0/me/mailfolders/delta?$skiptoken={_skipToken_}\",\r\n  \"value\": [\r\n    {\r\n      \"displayName\": \"displayName-value\",\r\n      \"parentFolderId\": \"parentFolderId-value\",\r\n      \"childFolderCount\": 99,\r\n      \"unreadItemCount\": 99,\r\n      \"totalItemCount\": 99\r\n    }\r\n  ]\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Mail.Read",
              "Mail.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Mail.Read",
              "Mail.ReadWrite"
            ]
          },
          {
            "Application": [
              "Mail.Read",
              "Mail.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/users/{user-id}/calendarView/delta()",
        "/users/{user-id}/contactFolders/delta()",
        "/users/{user-id}/contacts/delta()",
        "/users/{user-id}/events/delta()",
        "/users/{user-id}/messages/delta()",
        "/users/delta()"
      ]
    },
    "/users/{user-id}/managedAppRegistrations": {
      "get": {
        "tags": [
          "users.managedAppRegistration"
        ],
        "summary": "Get managedAppRegistrations from users",
        "operationId": "users.ListManagedAppRegistrations",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "createdDateTime",
                  "createdDateTime desc",
                  "lastSyncDateTime",
                  "lastSyncDateTime desc",
                  "applicationVersion",
                  "applicationVersion desc",
                  "managementSdkVersion",
                  "managementSdkVersion desc",
                  "platformVersion",
                  "platformVersion desc",
                  "deviceType",
                  "deviceType desc",
                  "deviceTag",
                  "deviceTag desc",
                  "deviceName",
                  "deviceName desc",
                  "flaggedReasons",
                  "flaggedReasons desc",
                  "userId",
                  "userId desc",
                  "appIdentifier",
                  "appIdentifier desc",
                  "version",
                  "version desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdDateTime",
                  "lastSyncDateTime",
                  "applicationVersion",
                  "managementSdkVersion",
                  "platformVersion",
                  "deviceType",
                  "deviceTag",
                  "deviceName",
                  "flaggedReasons",
                  "userId",
                  "appIdentifier",
                  "version",
                  "appliedPolicies",
                  "intendedPolicies",
                  "operations"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "appliedPolicies",
                  "intendedPolicies",
                  "operations"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.managedAppRegistration"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/managedAppRegistrations/{managedAppRegistration-id}": {
      "get": {
        "tags": [
          "users.managedAppRegistration"
        ],
        "summary": "Get managedAppRegistrations from users",
        "operationId": "users.GetManagedAppRegistrations",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "name": "managedAppRegistration-id",
            "in": "path",
            "description": "key: managedAppRegistration-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "managedAppRegistration"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "createdDateTime",
                  "lastSyncDateTime",
                  "applicationVersion",
                  "managementSdkVersion",
                  "platformVersion",
                  "deviceType",
                  "deviceTag",
                  "deviceName",
                  "flaggedReasons",
                  "userId",
                  "appIdentifier",
                  "version",
                  "appliedPolicies",
                  "intendedPolicies",
                  "operations"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "appliedPolicies",
                  "intendedPolicies",
                  "operations"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.managedAppRegistration"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/managedDevices": {
      "get": {
        "tags": [
          "users.managedDevice"
        ],
        "summary": "Get managedDevices from users",
        "operationId": "users.ListManagedDevices",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "userId",
                  "userId desc",
                  "deviceName",
                  "deviceName desc",
                  "managedDeviceOwnerType",
                  "managedDeviceOwnerType desc",
                  "deviceActionResults",
                  "deviceActionResults desc",
                  "enrolledDateTime",
                  "enrolledDateTime desc",
                  "lastSyncDateTime",
                  "lastSyncDateTime desc",
                  "operatingSystem",
                  "operatingSystem desc",
                  "complianceState",
                  "complianceState desc",
                  "jailBroken",
                  "jailBroken desc",
                  "managementAgent",
                  "managementAgent desc",
                  "osVersion",
                  "osVersion desc",
                  "easActivated",
                  "easActivated desc",
                  "easDeviceId",
                  "easDeviceId desc",
                  "easActivationDateTime",
                  "easActivationDateTime desc",
                  "azureADRegistered",
                  "azureADRegistered desc",
                  "deviceEnrollmentType",
                  "deviceEnrollmentType desc",
                  "activationLockBypassCode",
                  "activationLockBypassCode desc",
                  "emailAddress",
                  "emailAddress desc",
                  "azureADDeviceId",
                  "azureADDeviceId desc",
                  "deviceRegistrationState",
                  "deviceRegistrationState desc",
                  "deviceCategoryDisplayName",
                  "deviceCategoryDisplayName desc",
                  "isSupervised",
                  "isSupervised desc",
                  "exchangeLastSuccessfulSyncDateTime",
                  "exchangeLastSuccessfulSyncDateTime desc",
                  "exchangeAccessState",
                  "exchangeAccessState desc",
                  "exchangeAccessStateReason",
                  "exchangeAccessStateReason desc",
                  "remoteAssistanceSessionUrl",
                  "remoteAssistanceSessionUrl desc",
                  "remoteAssistanceSessionErrorDetails",
                  "remoteAssistanceSessionErrorDetails desc",
                  "isEncrypted",
                  "isEncrypted desc",
                  "userPrincipalName",
                  "userPrincipalName desc",
                  "model",
                  "model desc",
                  "manufacturer",
                  "manufacturer desc",
                  "imei",
                  "imei desc",
                  "complianceGracePeriodExpirationDateTime",
                  "complianceGracePeriodExpirationDateTime desc",
                  "serialNumber",
                  "serialNumber desc",
                  "phoneNumber",
                  "phoneNumber desc",
                  "androidSecurityPatchLevel",
                  "androidSecurityPatchLevel desc",
                  "userDisplayName",
                  "userDisplayName desc",
                  "configurationManagerClientEnabledFeatures",
                  "configurationManagerClientEnabledFeatures desc",
                  "wiFiMacAddress",
                  "wiFiMacAddress desc",
                  "deviceHealthAttestationState",
                  "deviceHealthAttestationState desc",
                  "subscriberCarrier",
                  "subscriberCarrier desc",
                  "meid",
                  "meid desc",
                  "totalStorageSpaceInBytes",
                  "totalStorageSpaceInBytes desc",
                  "freeStorageSpaceInBytes",
                  "freeStorageSpaceInBytes desc",
                  "managedDeviceName",
                  "managedDeviceName desc",
                  "partnerReportedThreatState",
                  "partnerReportedThreatState desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "userId",
                  "deviceName",
                  "managedDeviceOwnerType",
                  "deviceActionResults",
                  "enrolledDateTime",
                  "lastSyncDateTime",
                  "operatingSystem",
                  "complianceState",
                  "jailBroken",
                  "managementAgent",
                  "osVersion",
                  "easActivated",
                  "easDeviceId",
                  "easActivationDateTime",
                  "azureADRegistered",
                  "deviceEnrollmentType",
                  "activationLockBypassCode",
                  "emailAddress",
                  "azureADDeviceId",
                  "deviceRegistrationState",
                  "deviceCategoryDisplayName",
                  "isSupervised",
                  "exchangeLastSuccessfulSyncDateTime",
                  "exchangeAccessState",
                  "exchangeAccessStateReason",
                  "remoteAssistanceSessionUrl",
                  "remoteAssistanceSessionErrorDetails",
                  "isEncrypted",
                  "userPrincipalName",
                  "model",
                  "manufacturer",
                  "imei",
                  "complianceGracePeriodExpirationDateTime",
                  "serialNumber",
                  "phoneNumber",
                  "androidSecurityPatchLevel",
                  "userDisplayName",
                  "configurationManagerClientEnabledFeatures",
                  "wiFiMacAddress",
                  "deviceHealthAttestationState",
                  "subscriberCarrier",
                  "meid",
                  "totalStorageSpaceInBytes",
                  "freeStorageSpaceInBytes",
                  "managedDeviceName",
                  "partnerReportedThreatState",
                  "deviceCategory"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "deviceCategory"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.managedDevice"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/managedDevices/{managedDevice-id}": {
      "get": {
        "tags": [
          "users.managedDevice"
        ],
        "summary": "Get managedDevices from users",
        "operationId": "users.GetManagedDevices",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "name": "managedDevice-id",
            "in": "path",
            "description": "key: managedDevice-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "managedDevice"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "userId",
                  "deviceName",
                  "managedDeviceOwnerType",
                  "deviceActionResults",
                  "enrolledDateTime",
                  "lastSyncDateTime",
                  "operatingSystem",
                  "complianceState",
                  "jailBroken",
                  "managementAgent",
                  "osVersion",
                  "easActivated",
                  "easDeviceId",
                  "easActivationDateTime",
                  "azureADRegistered",
                  "deviceEnrollmentType",
                  "activationLockBypassCode",
                  "emailAddress",
                  "azureADDeviceId",
                  "deviceRegistrationState",
                  "deviceCategoryDisplayName",
                  "isSupervised",
                  "exchangeLastSuccessfulSyncDateTime",
                  "exchangeAccessState",
                  "exchangeAccessStateReason",
                  "remoteAssistanceSessionUrl",
                  "remoteAssistanceSessionErrorDetails",
                  "isEncrypted",
                  "userPrincipalName",
                  "model",
                  "manufacturer",
                  "imei",
                  "complianceGracePeriodExpirationDateTime",
                  "serialNumber",
                  "phoneNumber",
                  "androidSecurityPatchLevel",
                  "userDisplayName",
                  "configurationManagerClientEnabledFeatures",
                  "wiFiMacAddress",
                  "deviceHealthAttestationState",
                  "subscriberCarrier",
                  "meid",
                  "totalStorageSpaceInBytes",
                  "freeStorageSpaceInBytes",
                  "managedDeviceName",
                  "partnerReportedThreatState",
                  "deviceCategory"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "deviceCategory"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.managedDevice"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/manager": {
      "get": {
        "tags": [
          "users.directoryObject"
        ],
        "summary": "Get manager from users",
        "operationId": "users.GetManager",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/memberOf": {
      "get": {
        "tags": [
          "users.directoryObject"
        ],
        "summary": "Get memberOf from users",
        "operationId": "users.ListMemberOf",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/memberOf/{directoryObject-id}": {
      "get": {
        "tags": [
          "users.directoryObject"
        ],
        "summary": "Get memberOf from users",
        "operationId": "users.GetMemberOf",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "name": "directoryObject-id",
            "in": "path",
            "description": "key: directoryObject-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "directoryObject"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/messages": {
      "get": {
        "tags": [
          "users.message"
        ],
        "summary": "Get messages from users",
        "operationId": "users.ListMessages",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "categories",
                  "categories desc",
                  "changeKey",
                  "changeKey desc",
                  "createdDateTime",
                  "createdDateTime desc",
                  "lastModifiedDateTime",
                  "lastModifiedDateTime desc",
                  "bccRecipients",
                  "bccRecipients desc",
                  "body",
                  "body desc",
                  "bodyPreview",
                  "bodyPreview desc",
                  "ccRecipients",
                  "ccRecipients desc",
                  "conversationId",
                  "conversationId desc",
                  "flag",
                  "flag desc",
                  "from",
                  "from desc",
                  "hasAttachments",
                  "hasAttachments desc",
                  "importance",
                  "importance desc",
                  "inferenceClassification",
                  "inferenceClassification desc",
                  "internetMessageHeaders",
                  "internetMessageHeaders desc",
                  "internetMessageId",
                  "internetMessageId desc",
                  "isDeliveryReceiptRequested",
                  "isDeliveryReceiptRequested desc",
                  "isDraft",
                  "isDraft desc",
                  "isRead",
                  "isRead desc",
                  "isReadReceiptRequested",
                  "isReadReceiptRequested desc",
                  "parentFolderId",
                  "parentFolderId desc",
                  "receivedDateTime",
                  "receivedDateTime desc",
                  "replyTo",
                  "replyTo desc",
                  "sender",
                  "sender desc",
                  "sentDateTime",
                  "sentDateTime desc",
                  "subject",
                  "subject desc",
                  "toRecipients",
                  "toRecipients desc",
                  "uniqueBody",
                  "uniqueBody desc",
                  "webLink",
                  "webLink desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "categories",
                  "changeKey",
                  "createdDateTime",
                  "lastModifiedDateTime",
                  "bccRecipients",
                  "body",
                  "bodyPreview",
                  "ccRecipients",
                  "conversationId",
                  "flag",
                  "from",
                  "hasAttachments",
                  "importance",
                  "inferenceClassification",
                  "internetMessageHeaders",
                  "internetMessageId",
                  "isDeliveryReceiptRequested",
                  "isDraft",
                  "isRead",
                  "isReadReceiptRequested",
                  "parentFolderId",
                  "receivedDateTime",
                  "replyTo",
                  "sender",
                  "sentDateTime",
                  "subject",
                  "toRecipients",
                  "uniqueBody",
                  "webLink",
                  "attachments",
                  "extensions",
                  "multiValueExtendedProperties",
                  "singleValueExtendedProperties"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "attachments",
                  "extensions",
                  "multiValueExtendedProperties",
                  "singleValueExtendedProperties"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.message"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/messages/{message-id}": {
      "get": {
        "tags": [
          "users.message"
        ],
        "summary": "Get messages from users",
        "operationId": "users.GetMessages",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "name": "message-id",
            "in": "path",
            "description": "key: message-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "message"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "categories",
                  "changeKey",
                  "createdDateTime",
                  "lastModifiedDateTime",
                  "bccRecipients",
                  "body",
                  "bodyPreview",
                  "ccRecipients",
                  "conversationId",
                  "flag",
                  "from",
                  "hasAttachments",
                  "importance",
                  "inferenceClassification",
                  "internetMessageHeaders",
                  "internetMessageId",
                  "isDeliveryReceiptRequested",
                  "isDraft",
                  "isRead",
                  "isReadReceiptRequested",
                  "parentFolderId",
                  "receivedDateTime",
                  "replyTo",
                  "sender",
                  "sentDateTime",
                  "subject",
                  "toRecipients",
                  "uniqueBody",
                  "webLink",
                  "attachments",
                  "extensions",
                  "multiValueExtendedProperties",
                  "singleValueExtendedProperties"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "attachments",
                  "extensions",
                  "multiValueExtendedProperties",
                  "singleValueExtendedProperties"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.message"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/messages/{message-id}/copy": {
      "post": {
        "tags": [
          "users.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "users.messages.copy",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "name": "message-id",
            "in": "path",
            "description": "key: message-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "message"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "destinationId": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.message"
                    }
                  ],
                  "nullable": true
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n  \"receivedDateTime\": \"datetime-value\",\r\n  \"sentDateTime\": \"datetime-value\",\r\n  \"hasAttachments\": true,\r\n  \"subject\": \"subject-value\",\r\n  \"body\": {\r\n    \"contentType\": \"\",\r\n    \"content\": \"content-value\"\r\n  },\r\n  \"bodyPreview\": \"bodyPreview-value\"\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Mail.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Mail.ReadWrite"
            ]
          },
          {
            "Application": [
              "Mail.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/users/{user-id}/mailFolders/{mailFolder-id}/copy"
      ]
    },
    "/users/{user-id}/messages/{message-id}/createForward": {
      "post": {
        "tags": [
          "users.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "users.messages.createForward",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "name": "message-id",
            "in": "path",
            "description": "key: message-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "message"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.message"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Mail.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Mail.ReadWrite"
            ]
          },
          {
            "Application": [
              "Mail.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      }
    },
    "/users/{user-id}/messages/{message-id}/createReply": {
      "post": {
        "tags": [
          "users.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "users.messages.createReply",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "name": "message-id",
            "in": "path",
            "description": "key: message-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "message"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.message"
                    }
                  ],
                  "nullable": true
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n  \"receivedDateTime\": \"datetime-value\",\r\n  \"sentDateTime\": \"datetime-value\",\r\n  \"hasAttachments\": true,\r\n  \"subject\": \"subject-value\",\r\n  \"body\": {\r\n    \"contentType\": \"\",\r\n    \"content\": \"content-value\"\r\n  },\r\n  \"bodyPreview\": \"bodyPreview-value\"\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Mail.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Mail.ReadWrite"
            ]
          },
          {
            "Application": [
              "Mail.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      }
    },
    "/users/{user-id}/messages/{message-id}/createReplyAll": {
      "post": {
        "tags": [
          "users.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "users.messages.createReplyAll",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "name": "message-id",
            "in": "path",
            "description": "key: message-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "message"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.message"
                    }
                  ],
                  "nullable": true
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n  \"receivedDateTime\": \"datetime-value\",\r\n  \"sentDateTime\": \"datetime-value\",\r\n  \"hasAttachments\": true,\r\n  \"subject\": \"subject-value\",\r\n  \"body\": {\r\n    \"contentType\": \"\",\r\n    \"content\": \"content-value\"\r\n  },\r\n  \"bodyPreview\": \"bodyPreview-value\"\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Mail.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Mail.ReadWrite"
            ]
          },
          {
            "Application": [
              "Mail.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      }
    },
    "/users/{user-id}/messages/{message-id}/forward": {
      "post": {
        "tags": [
          "users.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "users.messages.forward",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "name": "message-id",
            "in": "path",
            "description": "key: message-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "message"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Nature of the data in the body of an entity. Required.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string",
                    "nullable": true
                  },
                  "toRecipients": {
                    "type": "array",
                    "items": {
                      "anyOf": [
                        {
                          "$ref": "#/components/schemas/microsoft.graph.recipient"
                        }
                      ],
                      "nullable": true
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Mail.Send"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Mail.Send"
            ]
          },
          {
            "Application": [
              "Mail.Send"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      }
    },
    "/users/{user-id}/messages/{message-id}/move": {
      "post": {
        "tags": [
          "users.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "users.messages.move",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "name": "message-id",
            "in": "path",
            "description": "key: message-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "message"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "destinationId": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.message"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Mail.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Mail.ReadWrite"
            ]
          },
          {
            "Application": [
              "Mail.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/users/{user-id}/mailFolders/{mailFolder-id}/move"
      ]
    },
    "/users/{user-id}/messages/{message-id}/reply": {
      "post": {
        "tags": [
          "users.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "users.messages.reply",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "name": "message-id",
            "in": "path",
            "description": "key: message-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "message"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Nature of the data in the body of an entity. Required.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Mail.Send"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Mail.Send"
            ]
          },
          {
            "Application": [
              "Mail.Send"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      }
    },
    "/users/{user-id}/messages/{message-id}/replyAll": {
      "post": {
        "tags": [
          "users.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "users.messages.replyAll",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "name": "message-id",
            "in": "path",
            "description": "key: message-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "message"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Nature of the data in the body of an entity. Required.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Mail.Send"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Mail.Send"
            ]
          },
          {
            "Application": [
              "Mail.Send"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      }
    },
    "/users/{user-id}/messages/{message-id}/send": {
      "post": {
        "tags": [
          "users.Actions"
        ],
        "summary": "The following example shows how to call this API.",
        "operationId": "users.messages.send",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "name": "message-id",
            "in": "path",
            "description": "key: message-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "message"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Length",
            "in": "header",
            "description": "* Required.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Mail.Send"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Mail.Send"
            ]
          },
          {
            "Application": [
              "Mail.Send"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      }
    },
    "/users/{user-id}/messages/delta()": {
      "get": {
        "tags": [
          "users.Functions"
        ],
        "summary": "Invoke function delta",
        "operationId": "users.messages.delta.2209",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "name": "$deltatoken",
            "in": "query",
            "description": "String",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skiptoken",
            "in": "query",
            "description": "String",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "application/json. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Prefer",
            "in": "header",
            "description": "odata.maxpagesize={x}. Optional.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.message"
                      }
                    ],
                    "nullable": true
                  }
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n  \"@odata.nextLink\":\"https://graph.microsoft.com/v1.0/me/mailfolders('{id}')/messages/delta?$skiptoken={_skipToken_}\",\r\n  \"value\": [\r\n    {\r\n      \"receivedDateTime\": \"datetime-value\",\r\n      \"sentDateTime\": \"datetime-value\",\r\n      \"hasAttachments\": true,\r\n      \"internetMessageId\": \"internetMessageId-value\",\r\n      \"subject\": \"subject-value\",\r\n      \"body\": {\r\n        \"contentType\": \"contentType-value\",\r\n        \"content\": \"content-value\"\r\n      }\r\n    }\r\n  ]\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Mail.Read",
              "Mail.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Mail.Read",
              "Mail.ReadWrite"
            ]
          },
          {
            "Application": [
              "Mail.Read",
              "Mail.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/users/{user-id}/calendarView/delta()",
        "/users/{user-id}/contactFolders/delta()",
        "/users/{user-id}/contacts/delta()",
        "/users/{user-id}/events/delta()",
        "/users/{user-id}/mailFolders/delta()",
        "/users/delta()"
      ]
    },
    "/users/{user-id}/assignLicense": {
      "post": {
        "tags": [
          "users.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "users.assignLicense",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "addLicenses": {
                    "type": "array",
                    "items": {
                      "anyOf": [
                        {
                          "$ref": "#/components/schemas/microsoft.graph.assignedLicense"
                        }
                      ],
                      "nullable": true
                    }
                  },
                  "removeLicenses": {
                    "type": "array",
                    "items": {
                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                      "type": "string",
                      "format": "uuid",
                      "nullable": true
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.user"
                    }
                  ],
                  "nullable": true
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n  \"accountEnabled\": true,\r\n  \"assignedLicenses\": [\r\n    {\r\n      \"disabledPlans\": [ \"11b0131d-43c8-4bbb-b2c8-e80f9a50834a\" ],\r\n      \"skuId\": \"0118A350-71FC-4EC3-8F0C-6A1CB8867561\"\r\n    }\r\n  ],\r\n  \"assignedPlans\": [\r\n    {\r\n      \"assignedDateTime\": \"2016-10-02T12:13:14Z\",\r\n      \"capabilityStatus\": \"capabilityStatus-value\",\r\n      \"service\": \"service-value\",\r\n      \"servicePlanId\": \"bea13e0c-3828-4daa-a392-28af7ff61a0f\"\r\n    }\r\n  ],\r\n  \"businessPhones\": [\r\n    \"businessPhones-value\"\r\n  ],\r\n  \"city\": \"city-value\",\r\n  \"companyName\": \"companyName-value\"\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "User.ReadWrite.All",
              "Directory.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "User.ReadWrite.All",
              "Directory.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      }
    },
    "/users/{user-id}/findMeetingTimes": {
      "post": {
        "tags": [
          "users.Actions"
        ],
        "summary": "Notice that the request specifies time in the PST time zone, and the response returns meeting time suggestions in UTC, by default. You can use the `Prefer: outlook.timezone` request \r\nheader to specify PST as well for the time values in the response.",
        "operationId": "users.findMeetingTimes",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Prefer: outlook.timezone",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "attendees": {
                    "type": "array",
                    "items": {
                      "anyOf": [
                        {
                          "$ref": "#/components/schemas/microsoft.graph.attendeeBase"
                        }
                      ],
                      "nullable": true
                    }
                  },
                  "locationConstraint": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.locationConstraint"
                      }
                    ],
                    "nullable": true
                  },
                  "timeConstraint": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.timeConstraint"
                      }
                    ],
                    "nullable": true
                  },
                  "meetingDuration": {
                    "pattern": "^-?P([0-9]+D)?(T([0-9]+H)?([0-9]+M)?([0-9]+([.][0-9]+)?S)?)?$",
                    "type": "string",
                    "format": "duration",
                    "nullable": true
                  },
                  "returnSuggestionReasons": {
                    "type": "boolean",
                    "default": false,
                    "nullable": true
                  },
                  "minimumAttendeePercentage": {
                    "anyOf": [
                      {
                        "type": "number"
                      },
                      {
                        "type": "string"
                      },
                      {
                        "enum": [
                          "-INF",
                          "INF",
                          "NaN"
                        ]
                      }
                    ],
                    "format": "double",
                    "nullable": true
                  },
                  "isOrganizerOptional": {
                    "type": "boolean",
                    "default": false,
                    "nullable": true
                  },
                  "maxCandidates": {
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.meetingTimeSuggestionsResult"
                    }
                  ],
                  "nullable": true
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n    \"@odata.context\":\"https://graph.microsoft.com/v1.0/$metadata#microsoft.graph.meetingTimeSuggestionsResult\",\r\n    \"emptySuggestionsReason\":\"\",\r\n    \"meetingTimeSuggestions\":[\r\n        {\r\n            \"confidence\":100.0,\r\n            \"organizerAvailability\":\"free\",\r\n            \"suggestionReason\":\"Suggested because it is one of the nearest times when all attendees are available.\",\r\n            \"meetingTimeSlot\":{\r\n                \"start\":{\r\n                    \"dateTime\":\"2017-04-17T18:00:00.0000000\",\r\n                    \"timeZone\":\"Pacific Standard Time\"\r\n                },\r\n                \"end\":{\r\n                    \"dateTime\":\"2017-04-17T20:00:00.0000000\",\r\n                    \"timeZone\":\"Pacific Standard Time\"\r\n                }\r\n            },\r\n            \"attendeeAvailability\":[\r\n                {\r\n                    \"availability\":\"free\",\r\n                    \"attendee\":{\r\n                        \"type\":\"required\",\r\n                        \"emailAddress\":{\r\n                            \"address\":\"samanthab@contoso.onmicrosoft.com\"\r\n                        }\r\n                    }\r\n                }\r\n            ],\r\n            \"locations\":[\r\n                {\r\n                    \"displayName\":\"Conf room Hood\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"confidence\":100.0,\r\n            \"organizerAvailability\":\"free\",\r\n            \"suggestionReason\":\"Suggested because it is one of the nearest times when all attendees are available.\",\r\n            \"meetingTimeSlot\":{\r\n                \"start\":{\r\n                    \"dateTime\":\"2017-04-17T20:00:00.0000000\",\r\n                    \"timeZone\":\"Pacific Standard Time\"\r\n                },\r\n                \"end\":{\r\n                    \"dateTime\":\"2017-04-17T22:00:00.0000000\",\r\n                    \"timeZone\":\"Pacific Standard Time\"\r\n                }\r\n            },\r\n            \"attendeeAvailability\":[\r\n                {\r\n                    \"availability\":\"free\",\r\n                    \"attendee\":{\r\n                        \"type\":\"required\",\r\n                        \"emailAddress\":{\r\n                            \"address\":\"samanthab@contoso.onmicrosoft.com\"\r\n                        }\r\n                    }\r\n                }\r\n            ],\r\n            \"locations\":[\r\n                {\r\n                    \"displayName\":\"Conf room Hood\"\r\n                }\r\n            ]\r\n        }\r\n   ]\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Calendars.Read.Shared",
              "Calendars.ReadWrite.Shared"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      }
    },
    "/users/{user-id}/getMailTips": {
      "post": {
        "tags": [
          "users.Actions"
        ],
        "summary": "Invoke action getMailTips",
        "operationId": "users.getMailTips",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "EmailAddresses": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "MailTipsOptions": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.mailTips"
                      }
                    ],
                    "nullable": true
                  }
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n    \"@odata.context\":\"https://graph.microsoft.com/v1.0/$metadata#Collection(microsoft.graph.mailTips)\",\r\n    \"value\":[\r\n        {\r\n            \"emailAddress\":{\r\n                \"name\":\"\",\r\n                \"address\":\"danas@contoso.onmicrosoft.com\"\r\n            },\r\n            \"automaticReplies\":{\r\n                \"message\":\"<style type=\\\"text/css\\\" style=\\\"\\\">\\r\\n<!--\\r\\np\\r\\n\\t{margin-top:0;\\r\\n\\tmargin-bottom:0}\\r\\n-->\\r\\n</style>\\r\\n<div dir=\\\"ltr\\\">\\r\\n<div id=\\\"x_divtagdefaultwrapper\\\" style=\\\"font-size:12pt; color:#000000; background-color:#FFFFFF; font-family:Calibri,Arial,Helvetica,sans-serif\\\">\\r\\n<p>Hi, I am on vacation right now. I'll get back to you after I return.<br>\\r\\n</p>\\r\\n</div>\\r\\n</div>\",\r\n                \"messageLanguage\":{\r\n                    \"locale\":\"en-US\",\r\n                    \"displayName\":\"English (United States)\"\r\n                },\r\n                \"scheduledStartTime\": {\r\n                    \"dateTime\": \"2018-08-07T02:00:00.0000000\",\r\n                    \"timeZone\": \"UTC\"\r\n                },\r\n                \"scheduledEndTime\": {\r\n                    \"dateTime\": \"2018-08-09T02:00:00.0000000\",\r\n                    \"timeZone\": \"UTC\"\r\n                }\r\n            },\r\n            \"mailboxFull\":false\r\n        },\r\n        {\r\n            \"emailAddress\":{\r\n                \"name\":\"\",\r\n                \"address\":\"fannyd@contoso.onmicrosoft.com\"\r\n            },\r\n            \"automaticReplies\":{\r\n                \"message\":\"\"\r\n            },\r\n            \"mailboxFull\":false\r\n        }\r\n    ]\r\n}\r\n\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Mail.Read",
              "Mail.Read.Shared"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Mail.Read"
            ]
          },
          {
            "Application": [
              "Mail.Read"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      }
    },
    "/users/{user-id}/reminderView(endDateTime={endDateTime},startDateTime={startDateTime})": {
      "get": {
        "tags": [
          "users.Functions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "users.reminderView.d02b",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Prefer",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDateTime",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "startDateTime",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.reminder"
                      }
                    ],
                    "nullable": true
                  }
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n    \"@odata.context\": \"https://graph.microsoft.com/v1.0/$metadata#Collection(microsoft.graph.reminder)\",\r\n    \"value\": [\r\n        {\r\n            \"eventId\": \"AAMkADNsvAAA=\",\r\n            \"changeKey\": \"SuFHwDRP1EeXJUopWbSLlgAAmBvk2g==\",\r\n            \"eventSubject\": \"Plan summer company picnic\",\r\n            \"eventWebLink\": \"https://outlook.office365.com/owa/?itemid=AAMkADNsvAAA%3D&exvsurl=1&path=/calendar/item\",\r\n            \"eventStartTime\": {\r\n                \"dateTime\": \"2017-06-09T18:00:00.0000000\",\r\n                \"timeZone\": \"UTC\"\r\n            },\r\n            \"eventEndTime\": {\r\n                \"dateTime\": \"2017-06-09T19:00:00.0000000\",\r\n                \"timeZone\": \"UTC\"\r\n            },\r\n            \"eventLocation\": {\r\n                \"displayName\": \"Conf Room 3\"\r\n            },\r\n            \"reminderFireTime\": {\r\n                \"dateTime\": \"2017-06-09T17:45:00.0000000\",\r\n                \"timeZone\": \"UTC\"\r\n            }\r\n        }\r\n    ]\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Calendars.Read",
              "Calendars.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Calendars.Read",
              "Calendars.ReadWrite"
            ]
          },
          {
            "Application": [
              "Calendars.Read",
              "Calendars.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/users/{user-id}/sendMail": {
      "post": {
        "tags": [
          "users.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "users.sendMail",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.message"
                      }
                    ],
                    "nullable": true
                  },
                  "saveToSentItems": {
                    "type": "boolean",
                    "default": false,
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Mail.Send"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Mail.Send"
            ]
          },
          {
            "Application": [
              "Mail.Send"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      }
    },
    "/users/{user-id}/onenote": {
      "get": {
        "tags": [
          "users.onenote"
        ],
        "summary": "Get onenote from users",
        "operationId": "users.GetOnenote",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "notebooks",
                  "operations",
                  "pages",
                  "resources",
                  "sectionGroups",
                  "sections"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "notebooks",
                  "operations",
                  "pages",
                  "resources",
                  "sectionGroups",
                  "sections"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.onenote"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/outlook": {
      "get": {
        "tags": [
          "users.outlookUser"
        ],
        "summary": "Get outlook from users",
        "operationId": "users.GetOutlook",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "masterCategories"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "masterCategories"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.outlookUser"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/outlook/supportedLanguages()": {
      "get": {
        "tags": [
          "users.Functions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "users.outlook.supportedLanguages.7d99",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.localeInfo"
                      }
                    ],
                    "nullable": true
                  }
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n  \"@odata.context\":\"https://graph.microsoft.com/v1.0/$metadata#Collection(microsoft.graph.localeInfo)\",\r\n  \"value\":[\r\n    {\r\n      \"locale\":\"af-ZA\",\r\n      \"displayName\":\"Afrikaans (Suid-Afrika)\"\r\n    },\r\n    {\r\n      \"locale\":\"en-US\",\r\n      \"displayName\":\"English (United States)\"\r\n    },\r\n    {\r\n       \"locale\":\"en-CA\",\r\n       \"displayName\":\"English (Canada)\"\r\n    }\r\n  ]\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "User.Read",
              "User.ReadBasic.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "User.Read"
            ]
          },
          {
            "Application": [
              "User.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/users/{user-id}/outlook/supportedTimeZones()": {
      "get": {
        "tags": [
          "users.Functions"
        ],
        "summary": "Invoke function supportedTimeZones",
        "operationId": "users.outlook.supportedTimeZones.4c5b",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.timeZoneInformation"
                      }
                    ],
                    "nullable": true
                  }
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n  \"@odata.context\":\"https://graph.microsoft.com/v1.0/$metadata#Collection(microsoft.graph.timeZoneInformation)\",\r\n  \"value\":[\r\n    {\r\n      \"alias\":\"Dateline Standard Time\",\r\n      \"displayName\":\"(UTC-12:00) International Date Line West\"\r\n    },\r\n    {\r\n      \"alias\":\"Samoa Standard Time\",\r\n      \"displayName\":\"(UTC+13:00) Samoa\"\r\n    },\r\n    {\r\n       \"alias\":\"UTC-11\",\r\n       \"displayName\":\"(UTC-11:00) Coordinated Universal Time-11\"\r\n    },\r\n    {\r\n      \"alias\":\"Aleutian Standard Time\",\r\n      \"displayName\":\"(UTC-10:00) Aleutian Islands\"\r\n    }\r\n  ]\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "User.Read",
              "User.ReadBasic.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "User.Read"
            ]
          },
          {
            "Application": [
              "User.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/users/{user-id}/outlook/supportedTimeZones(TimeZoneStandard={TimeZoneStandard})"
      ]
    },
    "/users/{user-id}/outlook/supportedTimeZones(TimeZoneStandard={TimeZoneStandard})": {
      "get": {
        "tags": [
          "users.Functions"
        ],
        "summary": "Invoke function supportedTimeZones",
        "operationId": "users.outlook.supportedTimeZones.cfd8",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer {token}. Required.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TimeZoneStandard",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.timeZoneStandard"
                }
              ],
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.timeZoneInformation"
                      }
                    ],
                    "nullable": true
                  }
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n  \"@odata.context\":\"https://graph.microsoft.com/v1.0/$metadata#Collection(microsoft.graph.timeZoneInformation)\",\r\n  \"value\":[\r\n    {\r\n      \"alias\":\"Etc/GMT+12\",\r\n      \"displayName\":\"Etc/GMT+12\"\r\n    },\r\n    {\r\n      \"alias\":\"US/Samoa\",\r\n      \"displayName\":\"US/Samoa\"\r\n    },\r\n    {\r\n      \"alias\":\"Etc/GMT+11\",\r\n      \"displayName\":\"Etc/GMT+11\"\r\n    },\r\n    {\r\n      \"alias\":\"US/Aleutian\",\r\n      \"displayName\":\"US/Aleutian\"\r\n    }\r\n  ]\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "User.Read",
              "User.ReadBasic.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "User.Read"
            ]
          },
          {
            "Application": [
              "User.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/users/{user-id}/outlook/supportedTimeZones()"
      ]
    },
    "/users/{user-id}/ownedDevices": {
      "get": {
        "tags": [
          "users.directoryObject"
        ],
        "summary": "Get ownedDevices from users",
        "operationId": "users.ListOwnedDevices",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/ownedDevices/{directoryObject-id}": {
      "get": {
        "tags": [
          "users.directoryObject"
        ],
        "summary": "Get ownedDevices from users",
        "operationId": "users.GetOwnedDevices",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "name": "directoryObject-id",
            "in": "path",
            "description": "key: directoryObject-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "directoryObject"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/ownedObjects": {
      "get": {
        "tags": [
          "users.directoryObject"
        ],
        "summary": "Get ownedObjects from users",
        "operationId": "users.ListOwnedObjects",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/ownedObjects/{directoryObject-id}": {
      "get": {
        "tags": [
          "users.directoryObject"
        ],
        "summary": "Get ownedObjects from users",
        "operationId": "users.GetOwnedObjects",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "name": "directoryObject-id",
            "in": "path",
            "description": "key: directoryObject-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "directoryObject"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/people": {
      "get": {
        "tags": [
          "users.person"
        ],
        "summary": "Get people from users",
        "operationId": "users.ListPeople",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc",
                  "birthday",
                  "birthday desc",
                  "companyName",
                  "companyName desc",
                  "department",
                  "department desc",
                  "displayName",
                  "displayName desc",
                  "scoredEmailAddresses",
                  "scoredEmailAddresses desc",
                  "givenName",
                  "givenName desc",
                  "imAddress",
                  "imAddress desc",
                  "isFavorite",
                  "isFavorite desc",
                  "jobTitle",
                  "jobTitle desc",
                  "officeLocation",
                  "officeLocation desc",
                  "personNotes",
                  "personNotes desc",
                  "personType",
                  "personType desc",
                  "phones",
                  "phones desc",
                  "postalAddresses",
                  "postalAddresses desc",
                  "profession",
                  "profession desc",
                  "surname",
                  "surname desc",
                  "userPrincipalName",
                  "userPrincipalName desc",
                  "websites",
                  "websites desc",
                  "yomiCompany",
                  "yomiCompany desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "birthday",
                  "companyName",
                  "department",
                  "displayName",
                  "scoredEmailAddresses",
                  "givenName",
                  "imAddress",
                  "isFavorite",
                  "jobTitle",
                  "officeLocation",
                  "personNotes",
                  "personType",
                  "phones",
                  "postalAddresses",
                  "profession",
                  "surname",
                  "userPrincipalName",
                  "websites",
                  "yomiCompany"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.person"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/people/{person-id}": {
      "get": {
        "tags": [
          "users.person"
        ],
        "summary": "Get people from users",
        "operationId": "users.GetPeople",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "name": "person-id",
            "in": "path",
            "description": "key: person-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "person"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "birthday",
                  "companyName",
                  "department",
                  "displayName",
                  "scoredEmailAddresses",
                  "givenName",
                  "imAddress",
                  "isFavorite",
                  "jobTitle",
                  "officeLocation",
                  "personNotes",
                  "personType",
                  "phones",
                  "postalAddresses",
                  "profession",
                  "surname",
                  "userPrincipalName",
                  "websites",
                  "yomiCompany"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.person"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/photo": {
      "get": {
        "tags": [
          "users.profilePhoto"
        ],
        "summary": "Get photo from users",
        "operationId": "users.GetPhoto",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "height",
                  "width"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.profilePhoto"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/planner": {
      "get": {
        "tags": [
          "users.plannerUser"
        ],
        "summary": "Get planner from users",
        "operationId": "users.GetPlanner",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "plans",
                  "tasks"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*",
                  "plans",
                  "tasks"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.plannerUser"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/registeredDevices": {
      "get": {
        "tags": [
          "users.directoryObject"
        ],
        "summary": "Get registeredDevices from users",
        "operationId": "users.ListRegisteredDevices",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id",
                  "id desc"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/registeredDevices/{directoryObject-id}": {
      "get": {
        "tags": [
          "users.directoryObject"
        ],
        "summary": "Get registeredDevices from users",
        "operationId": "users.GetRegisteredDevices",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "key: user-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "user"
          },
          {
            "name": "directoryObject-id",
            "in": "path",
            "description": "key: directoryObject-id",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-ms-docs-key-type": "directoryObject"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "id"
                ],
                "type": "string"
              }
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand related entities",
            "style": "simple",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "enum": [
                  "*"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/delta()": {
      "get": {
        "tags": [
          "users.Functions"
        ],
        "summary": "Invoke function delta",
        "operationId": "users.delta.2209",
        "parameters": [
          {
            "name": "$deltatoken",
            "in": "query",
            "description": "String",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skiptoken",
            "in": "query",
            "description": "String",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/microsoft.graph.user"
                      }
                    ],
                    "nullable": true
                  }
                },
                "examples": {
                  "example-1": {
                    "description": "application/json",
                    "value": "{\r\n  \"@odata.context\":\"https://graph.microsoft.com/v1.0/$metadata#users\",\r\n  \"@odata.nextLink\":\"https://graph.microsoft.com/v1.0/users/delta?$skiptoken=pqwSUjGYvb3jQpbwVAwEL7yuI3dU1LecfkkfLPtnIjsXoYQp_dpA3cNJWc\",\r\n  \"value\": [\r\n    {\r\n      \"businessPhones\": [\r\n          \"businessPhones-value\"\r\n      ],\r\n      \"displayName\": \"displayName-value\",\r\n      \"givenName\": \"givenName-value\",\r\n      \"jobTitle\": \"jobTitle-value\",\r\n      \"mail\": \"mail-value\",\r\n      \"mobilePhone\": \"mobilePhone-value\",\r\n      \"officeLocation\": \"officeLocation-value\",\r\n      \"preferredLanguage\": \"preferredLanguage-value\",\r\n      \"surname\": \"surname-value\",\r\n      \"userPrincipalName\": \"userPrincipalName-value\",\r\n      \"id\": \"id-value\"\r\n    }\r\n  ]\r\n}\n"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "User.Read",
              "User.ReadWrite",
              "User.ReadBasic.All",
              "User.Read.All",
              "User.ReadWrite.All",
              "Directory.Read.All",
              "Directory.ReadWrite.All",
              "Directory.AccessAsUser.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "User.Read",
              "User.ReadWrite"
            ]
          },
          {
            "Application": [
              "User.Read.All",
              "User.ReadWrite.All",
              "Directory.Read.All",
              "Directory.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/users/{user-id}/calendarView/delta()",
        "/users/{user-id}/contactFolders/delta()",
        "/users/{user-id}/contacts/delta()",
        "/users/{user-id}/events/delta()",
        "/users/{user-id}/mailFolders/delta()",
        "/users/{user-id}/messages/delta()"
      ]
    }
  },
  "components": {
    "schemas": {
      "microsoft.graph.entity": {
        "title": "entity",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Read-only.",
            "nullable": true
          }
        },
        "example": {
          "id": "string (identifier)"
        }
      },
      "microsoft.graph.attachment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "attachment",
            "type": "object",
            "properties": {
              "contentType": {
                "type": "string",
                "description": "The MIME type.",
                "nullable": true
              },
              "isInline": {
                "type": "boolean",
                "description": "true if the attachment is an inline attachment; otherwise, false.",
                "nullable": true
              },
              "lastModifiedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'",
                "format": "date-time",
                "nullable": true
              },
              "name": {
                "type": "string",
                "description": "The attachment's file name.",
                "nullable": true
              },
              "size": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The length of the attachment in bytes.",
                "format": "int32",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "contentType": "string",
          "isInline": true,
          "lastModifiedDateTime": "string (timestamp)",
          "name": "string",
          "size": "integer"
        }
      },
      "microsoft.graph.baseItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "baseItem",
            "type": "object",
            "properties": {
              "createdBy": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.identitySet"
                  }
                ],
                "description": "Identity of the user, device, or application which created the item. Read-only.",
                "nullable": true
              },
              "createdDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Date and time of item creation. Read-only.",
                "format": "date-time",
                "nullable": true
              },
              "description": {
                "type": "string",
                "description": "Provides a user-visible description of the item. Optional.",
                "nullable": true
              },
              "eTag": {
                "type": "string",
                "description": "ETag for the item. Read-only.",
                "nullable": true
              },
              "lastModifiedBy": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.identitySet"
                  }
                ],
                "description": "Identity of the user, device, and application which last modified the item. Read-only.",
                "nullable": true
              },
              "lastModifiedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Date and time the item was last modified. Read-only.",
                "format": "date-time",
                "nullable": true
              },
              "name": {
                "type": "string",
                "description": "The name of the item. Read-write.",
                "nullable": true
              },
              "parentReference": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.itemReference"
                  }
                ],
                "description": "Parent information, if the item has a parent. Read-write.",
                "nullable": true
              },
              "webUrl": {
                "type": "string",
                "description": "URL that displays the resource in the browser. Read-only.",
                "nullable": true
              },
              "createdByUser": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.user"
                  }
                ],
                "nullable": true
              },
              "lastModifiedByUser": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.user"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "createdBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "createdDateTime": "string (timestamp)",
          "description": "string",
          "eTag": "string",
          "lastModifiedBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "lastModifiedDateTime": "string (timestamp)",
          "name": "string",
          "parentReference": {
            "@odata.type": "microsoft.graph.itemReference"
          },
          "webUrl": "string",
          "createdByUser": {
            "@odata.type": "microsoft.graph.user"
          },
          "lastModifiedByUser": {
            "@odata.type": "microsoft.graph.user"
          }
        }
      },
      "microsoft.graph.baseItemVersion": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "baseItemVersion",
            "type": "object",
            "properties": {
              "lastModifiedBy": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.identitySet"
                  }
                ],
                "description": "Identity of the user which last modified the version. Read-only.",
                "nullable": true
              },
              "lastModifiedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Date and time the version was last modified. Read-only.",
                "format": "date-time",
                "nullable": true
              },
              "publication": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.publicationFacet"
                  }
                ],
                "description": "Indicates the publication status of this particular version. Read-only.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "lastModifiedBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "lastModifiedDateTime": "string (timestamp)",
          "publication": {
            "@odata.type": "microsoft.graph.publicationFacet"
          }
        }
      },
      "microsoft.graph.calendar": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "calendar",
            "type": "object",
            "properties": {
              "canEdit": {
                "type": "boolean",
                "description": "True if the user can write to the calendar, false otherwise. This property is true for the user who created the calendar. This property is also true for a user who has been shared a calendar and granted write access.",
                "nullable": true
              },
              "canShare": {
                "type": "boolean",
                "description": "True if the user has the permission to share the calendar, false otherwise. Only the user who created the calendar can share it.",
                "nullable": true
              },
              "canViewPrivateItems": {
                "type": "boolean",
                "description": "True if the user can read calendar items that have been marked private, false otherwise.",
                "nullable": true
              },
              "changeKey": {
                "type": "string",
                "description": "Identifies the version of the calendar object. Every time the calendar is changed, changeKey changes as well. This allows Exchange to apply changes to the correct version of the object. Read-only.",
                "nullable": true
              },
              "color": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.calendarColor"
                  }
                ],
                "description": "Specifies the color theme to distinguish the calendar from other calendars in a UI. The property values are: LightBlue=0, LightGreen=1, LightOrange=2, LightGray=3, LightYellow=4, LightTeal=5, LightPink=6, LightBrown=7, LightRed=8, MaxColor=9, Auto=-1",
                "nullable": true
              },
              "name": {
                "type": "string",
                "description": "The calendar name.",
                "nullable": true
              },
              "owner": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.emailAddress"
                  }
                ],
                "description": "If set, this represents the user who created or added the calendar. For a calendar that the user created or added, the owner property is set to the user. For a calendar shared with the user, the owner property is set to the person who shared that calendar with the user.",
                "nullable": true
              },
              "calendarView": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.event"
                }
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.event"
                }
              },
              "multiValueExtendedProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.multiValueLegacyExtendedProperty"
                }
              },
              "singleValueExtendedProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.singleValueLegacyExtendedProperty"
                }
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "canEdit": true,
          "canShare": true,
          "canViewPrivateItems": true,
          "changeKey": "string",
          "color": {
            "@odata.type": "microsoft.graph.calendarColor"
          },
          "name": "string",
          "owner": {
            "@odata.type": "microsoft.graph.emailAddress"
          },
          "calendarView": [
            {
              "@odata.type": "microsoft.graph.event"
            }
          ],
          "events": [
            {
              "@odata.type": "microsoft.graph.event"
            }
          ],
          "multiValueExtendedProperties": [
            {
              "@odata.type": "microsoft.graph.multiValueLegacyExtendedProperty"
            }
          ],
          "singleValueExtendedProperties": [
            {
              "@odata.type": "microsoft.graph.singleValueLegacyExtendedProperty"
            }
          ]
        }
      },
      "microsoft.graph.calendarGroup": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "calendarGroup",
            "type": "object",
            "properties": {
              "changeKey": {
                "type": "string",
                "description": "Identifies the version of the calendar group. Every time the calendar group is changed, ChangeKey changes as well. This allows Exchange to apply changes to the correct version of the object. Read-only.",
                "nullable": true
              },
              "classId": {
                "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                "type": "string",
                "description": "The class identifier. Read-only.",
                "format": "uuid",
                "nullable": true
              },
              "name": {
                "type": "string",
                "description": "The group name.",
                "nullable": true
              },
              "calendars": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.calendar"
                }
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "changeKey": "string",
          "classId": "string",
          "name": "string",
          "calendars": [
            {
              "@odata.type": "microsoft.graph.calendar"
            }
          ]
        }
      },
      "microsoft.graph.workbookChart": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookChart",
            "type": "object",
            "properties": {
              "height": {
                "anyOf": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "string"
                  },
                  {
                    "enum": [
                      "-INF",
                      "INF",
                      "NaN"
                    ]
                  }
                ],
                "description": "Represents the height, in points, of the chart object.",
                "format": "double",
                "nullable": true
              },
              "left": {
                "anyOf": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "string"
                  },
                  {
                    "enum": [
                      "-INF",
                      "INF",
                      "NaN"
                    ]
                  }
                ],
                "description": "The distance, in points, from the left side of the chart to the worksheet origin.",
                "format": "double",
                "nullable": true
              },
              "name": {
                "type": "string",
                "description": "Represents the name of a chart object.",
                "nullable": true
              },
              "top": {
                "anyOf": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "string"
                  },
                  {
                    "enum": [
                      "-INF",
                      "INF",
                      "NaN"
                    ]
                  }
                ],
                "description": "Represents the distance, in points, from the top edge of the object to the top of row 1 (on a worksheet) or the top of the chart area (on a chart).",
                "format": "double",
                "nullable": true
              },
              "width": {
                "anyOf": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "string"
                  },
                  {
                    "enum": [
                      "-INF",
                      "INF",
                      "NaN"
                    ]
                  }
                ],
                "description": "Represents the width, in points, of the chart object.",
                "format": "double",
                "nullable": true
              },
              "axes": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartAxes"
                  }
                ],
                "nullable": true
              },
              "dataLabels": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartDataLabels"
                  }
                ],
                "nullable": true
              },
              "format": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartAreaFormat"
                  }
                ],
                "nullable": true
              },
              "legend": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartLegend"
                  }
                ],
                "nullable": true
              },
              "series": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.workbookChartSeries"
                }
              },
              "title": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartTitle"
                  }
                ],
                "nullable": true
              },
              "worksheet": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookWorksheet"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "height": "double",
          "left": "double",
          "name": "string",
          "top": "double",
          "width": "double",
          "axes": {
            "@odata.type": "microsoft.graph.workbookChartAxes"
          },
          "dataLabels": {
            "@odata.type": "microsoft.graph.workbookChartDataLabels"
          },
          "format": {
            "@odata.type": "microsoft.graph.workbookChartAreaFormat"
          },
          "legend": {
            "@odata.type": "microsoft.graph.workbookChartLegend"
          },
          "series": [
            {
              "@odata.type": "microsoft.graph.workbookChartSeries"
            }
          ],
          "title": {
            "@odata.type": "microsoft.graph.workbookChartTitle"
          },
          "worksheet": {
            "@odata.type": "microsoft.graph.workbookWorksheet"
          }
        }
      },
      "microsoft.graph.workbookChartAreaFormat": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookChartAreaFormat",
            "type": "object",
            "properties": {
              "fill": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartFill"
                  }
                ],
                "nullable": true
              },
              "font": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartFont"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "fill": {
            "@odata.type": "microsoft.graph.workbookChartFill"
          },
          "font": {
            "@odata.type": "microsoft.graph.workbookChartFont"
          }
        }
      },
      "microsoft.graph.workbookChartAxes": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookChartAxes",
            "type": "object",
            "properties": {
              "categoryAxis": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartAxis"
                  }
                ],
                "nullable": true
              },
              "seriesAxis": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartAxis"
                  }
                ],
                "nullable": true
              },
              "valueAxis": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartAxis"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "categoryAxis": {
            "@odata.type": "microsoft.graph.workbookChartAxis"
          },
          "seriesAxis": {
            "@odata.type": "microsoft.graph.workbookChartAxis"
          },
          "valueAxis": {
            "@odata.type": "microsoft.graph.workbookChartAxis"
          }
        }
      },
      "microsoft.graph.workbookChartAxis": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookChartAxis",
            "type": "object",
            "properties": {
              "majorUnit": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.Json"
                  }
                ],
                "description": "Represents the interval between two major tick marks. Can be set to a numeric value or an empty string.  The returned value is always a number.",
                "nullable": true
              },
              "maximum": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.Json"
                  }
                ],
                "description": "Represents the maximum value on the value axis.  Can be set to a numeric value or an empty string (for automatic axis values).  The returned value is always a number.",
                "nullable": true
              },
              "minimum": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.Json"
                  }
                ],
                "description": "Represents the minimum value on the value axis. Can be set to a numeric value or an empty string (for automatic axis values).  The returned value is always a number.",
                "nullable": true
              },
              "minorUnit": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.Json"
                  }
                ],
                "description": "Represents the interval between two minor tick marks. 'Can be set to a numeric value or an empty string (for automatic axis values). The returned value is always a number.",
                "nullable": true
              },
              "format": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartAxisFormat"
                  }
                ],
                "nullable": true
              },
              "majorGridlines": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartGridlines"
                  }
                ],
                "nullable": true
              },
              "minorGridlines": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartGridlines"
                  }
                ],
                "nullable": true
              },
              "title": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartAxisTitle"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "majorUnit": {
            "@odata.type": "microsoft.graph.Json"
          },
          "maximum": {
            "@odata.type": "microsoft.graph.Json"
          },
          "minimum": {
            "@odata.type": "microsoft.graph.Json"
          },
          "minorUnit": {
            "@odata.type": "microsoft.graph.Json"
          },
          "format": {
            "@odata.type": "microsoft.graph.workbookChartAxisFormat"
          },
          "majorGridlines": {
            "@odata.type": "microsoft.graph.workbookChartGridlines"
          },
          "minorGridlines": {
            "@odata.type": "microsoft.graph.workbookChartGridlines"
          },
          "title": {
            "@odata.type": "microsoft.graph.workbookChartAxisTitle"
          }
        }
      },
      "microsoft.graph.workbookChartAxisFormat": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookChartAxisFormat",
            "type": "object",
            "properties": {
              "font": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartFont"
                  }
                ],
                "nullable": true
              },
              "line": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartLineFormat"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "font": {
            "@odata.type": "microsoft.graph.workbookChartFont"
          },
          "line": {
            "@odata.type": "microsoft.graph.workbookChartLineFormat"
          }
        }
      },
      "microsoft.graph.workbookChartAxisTitle": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookChartAxisTitle",
            "type": "object",
            "properties": {
              "text": {
                "type": "string",
                "description": "Represents the axis title.",
                "nullable": true
              },
              "visible": {
                "type": "boolean",
                "description": "A boolean that specifies the visibility of an axis title.",
                "nullable": true
              },
              "format": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartAxisTitleFormat"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "text": "string",
          "visible": true,
          "format": {
            "@odata.type": "microsoft.graph.workbookChartAxisTitleFormat"
          }
        }
      },
      "microsoft.graph.workbookChartAxisTitleFormat": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookChartAxisTitleFormat",
            "type": "object",
            "properties": {
              "font": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartFont"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "font": {
            "@odata.type": "microsoft.graph.workbookChartFont"
          }
        }
      },
      "microsoft.graph.workbookChartDataLabelFormat": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookChartDataLabelFormat",
            "type": "object",
            "properties": {
              "fill": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartFill"
                  }
                ],
                "nullable": true
              },
              "font": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartFont"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "fill": {
            "@odata.type": "microsoft.graph.workbookChartFill"
          },
          "font": {
            "@odata.type": "microsoft.graph.workbookChartFont"
          }
        }
      },
      "microsoft.graph.workbookChartDataLabels": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookChartDataLabels",
            "type": "object",
            "properties": {
              "position": {
                "type": "string",
                "description": "DataLabelPosition value that represents the position of the data label. The possible values are: None, Center, InsideEnd, InsideBase, OutsideEnd, Left, Right, Top, Bottom, BestFit, Callout.",
                "nullable": true
              },
              "separator": {
                "type": "string",
                "description": "String representing the separator used for the data labels on a chart.",
                "nullable": true
              },
              "showBubbleSize": {
                "type": "boolean",
                "description": "Boolean value representing if the data label bubble size is visible or not.",
                "nullable": true
              },
              "showCategoryName": {
                "type": "boolean",
                "description": "Boolean value representing if the data label category name is visible or not.",
                "nullable": true
              },
              "showLegendKey": {
                "type": "boolean",
                "description": "Boolean value representing if the data label legend key is visible or not.",
                "nullable": true
              },
              "showPercentage": {
                "type": "boolean",
                "description": "Boolean value representing if the data label percentage is visible or not.",
                "nullable": true
              },
              "showSeriesName": {
                "type": "boolean",
                "description": "Boolean value representing if the data label series name is visible or not.",
                "nullable": true
              },
              "showValue": {
                "type": "boolean",
                "description": "Boolean value representing if the data label value is visible or not.",
                "nullable": true
              },
              "format": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartDataLabelFormat"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "position": "string",
          "separator": "string",
          "showBubbleSize": true,
          "showCategoryName": true,
          "showLegendKey": true,
          "showPercentage": true,
          "showSeriesName": true,
          "showValue": true,
          "format": {
            "@odata.type": "microsoft.graph.workbookChartDataLabelFormat"
          }
        }
      },
      "microsoft.graph.workbookChartFill": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookChartFill",
            "type": "object"
          }
        ],
        "example": {
          "id": "string (identifier)"
        }
      },
      "microsoft.graph.workbookChartFont": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookChartFont",
            "type": "object",
            "properties": {
              "bold": {
                "type": "boolean",
                "description": "Represents the bold status of font.",
                "nullable": true
              },
              "color": {
                "type": "string",
                "description": "HTML color code representation of the text color. E.g. #FF0000 represents Red.",
                "nullable": true
              },
              "italic": {
                "type": "boolean",
                "description": "Represents the italic status of the font.",
                "nullable": true
              },
              "name": {
                "type": "string",
                "description": "Font name (e.g. 'Calibri')",
                "nullable": true
              },
              "size": {
                "anyOf": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "string"
                  },
                  {
                    "enum": [
                      "-INF",
                      "INF",
                      "NaN"
                    ]
                  }
                ],
                "description": "Size of the font (e.g. 11)",
                "format": "double",
                "nullable": true
              },
              "underline": {
                "type": "string",
                "description": "Type of underline applied to the font. The possible values are: None, Single.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "bold": true,
          "color": "string",
          "italic": true,
          "name": "string",
          "size": "double",
          "underline": "string"
        }
      },
      "microsoft.graph.workbookChartGridlines": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookChartGridlines",
            "type": "object",
            "properties": {
              "visible": {
                "type": "boolean",
                "description": "Boolean value representing if the axis gridlines are visible or not.",
                "nullable": true
              },
              "format": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartGridlinesFormat"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "visible": true,
          "format": {
            "@odata.type": "microsoft.graph.workbookChartGridlinesFormat"
          }
        }
      },
      "microsoft.graph.workbookChartGridlinesFormat": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookChartGridlinesFormat",
            "type": "object",
            "properties": {
              "line": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartLineFormat"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "line": {
            "@odata.type": "microsoft.graph.workbookChartLineFormat"
          }
        }
      },
      "microsoft.graph.workbookChartLegend": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookChartLegend",
            "type": "object",
            "properties": {
              "overlay": {
                "type": "boolean",
                "description": "Boolean value for whether the chart legend should overlap with the main body of the chart.",
                "nullable": true
              },
              "position": {
                "type": "string",
                "description": "Represents the position of the legend on the chart. The possible values are: Top, Bottom, Left, Right, Corner, Custom.",
                "nullable": true
              },
              "visible": {
                "type": "boolean",
                "description": "A boolean value the represents the visibility of a ChartLegend object.",
                "nullable": true
              },
              "format": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartLegendFormat"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "overlay": true,
          "position": "string",
          "visible": true,
          "format": {
            "@odata.type": "microsoft.graph.workbookChartLegendFormat"
          }
        }
      },
      "microsoft.graph.workbookChartLegendFormat": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookChartLegendFormat",
            "type": "object",
            "properties": {
              "fill": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartFill"
                  }
                ],
                "nullable": true
              },
              "font": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartFont"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "fill": {
            "@odata.type": "microsoft.graph.workbookChartFill"
          },
          "font": {
            "@odata.type": "microsoft.graph.workbookChartFont"
          }
        }
      },
      "microsoft.graph.workbookChartLineFormat": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookChartLineFormat",
            "type": "object",
            "properties": {
              "color": {
                "type": "string",
                "description": "HTML color code representing the color of lines in the chart.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "color": "string"
        }
      },
      "microsoft.graph.workbookChartPoint": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookChartPoint",
            "type": "object",
            "properties": {
              "value": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.Json"
                  }
                ],
                "description": "Returns the value of a chart point. Read-only.",
                "nullable": true
              },
              "format": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartPointFormat"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "value": {
            "@odata.type": "microsoft.graph.Json"
          },
          "format": {
            "@odata.type": "microsoft.graph.workbookChartPointFormat"
          }
        }
      },
      "microsoft.graph.workbookChartPointFormat": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookChartPointFormat",
            "type": "object",
            "properties": {
              "fill": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartFill"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "fill": {
            "@odata.type": "microsoft.graph.workbookChartFill"
          }
        }
      },
      "microsoft.graph.workbookChartSeries": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookChartSeries",
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Represents the name of a series in a chart.",
                "nullable": true
              },
              "format": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartSeriesFormat"
                  }
                ],
                "nullable": true
              },
              "points": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.workbookChartPoint"
                }
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "name": "string",
          "format": {
            "@odata.type": "microsoft.graph.workbookChartSeriesFormat"
          },
          "points": [
            {
              "@odata.type": "microsoft.graph.workbookChartPoint"
            }
          ]
        }
      },
      "microsoft.graph.workbookChartSeriesFormat": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookChartSeriesFormat",
            "type": "object",
            "properties": {
              "fill": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartFill"
                  }
                ],
                "nullable": true
              },
              "line": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartLineFormat"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "fill": {
            "@odata.type": "microsoft.graph.workbookChartFill"
          },
          "line": {
            "@odata.type": "microsoft.graph.workbookChartLineFormat"
          }
        }
      },
      "microsoft.graph.workbookChartTitle": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookChartTitle",
            "type": "object",
            "properties": {
              "overlay": {
                "type": "boolean",
                "description": "Boolean value representing if the chart title will overlay the chart or not.",
                "nullable": true
              },
              "text": {
                "type": "string",
                "description": "Represents the title text of a chart.",
                "nullable": true
              },
              "visible": {
                "type": "boolean",
                "description": "A boolean value the represents the visibility of a chart title object.",
                "nullable": true
              },
              "format": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartTitleFormat"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "overlay": true,
          "text": "string",
          "visible": true,
          "format": {
            "@odata.type": "microsoft.graph.workbookChartTitleFormat"
          }
        }
      },
      "microsoft.graph.workbookChartTitleFormat": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookChartTitleFormat",
            "type": "object",
            "properties": {
              "fill": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartFill"
                  }
                ],
                "nullable": true
              },
              "font": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookChartFont"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "fill": {
            "@odata.type": "microsoft.graph.workbookChartFill"
          },
          "font": {
            "@odata.type": "microsoft.graph.workbookChartFont"
          }
        }
      },
      "microsoft.graph.columnDefinition": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "columnDefinition",
            "type": "object",
            "properties": {
              "columnGroup": {
                "type": "string",
                "description": "For site columns, the name of the group this column belongs to. Helps organize related columns.",
                "nullable": true
              },
              "description": {
                "type": "string",
                "description": "The user-facing description of the column.",
                "nullable": true
              },
              "displayName": {
                "type": "string",
                "description": "The user-facing name of the column.",
                "nullable": true
              },
              "enforceUniqueValues": {
                "type": "boolean",
                "description": "If true, no two list items may have the same value for this column.",
                "nullable": true
              },
              "hidden": {
                "type": "boolean",
                "description": "Specifies whether the column is displayed in the user interface.",
                "nullable": true
              },
              "indexed": {
                "type": "boolean",
                "description": "Specifies whether the column values can used for sorting and searching.",
                "nullable": true
              },
              "name": {
                "type": "string",
                "description": "The API-facing name of the column as it appears in the [fields][] on a [listItem][]. For the user-facing name, see displayName.",
                "nullable": true
              },
              "readOnly": {
                "type": "boolean",
                "description": "Specifies whether the column values can be modified.",
                "nullable": true
              },
              "required": {
                "type": "boolean",
                "description": "Specifies whether the column value is not optional.",
                "nullable": true
              },
              "boolean": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.booleanColumn"
                  }
                ],
                "description": "This column stores boolean values.",
                "nullable": true
              },
              "calculated": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.calculatedColumn"
                  }
                ],
                "description": "This column's data is calculated based on other columns.",
                "nullable": true
              },
              "choice": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.choiceColumn"
                  }
                ],
                "description": "This column stores data from a list of choices.",
                "nullable": true
              },
              "currency": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.currencyColumn"
                  }
                ],
                "description": "This column stores currency values.",
                "nullable": true
              },
              "dateTime": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.dateTimeColumn"
                  }
                ],
                "description": "This column stores DateTime values.",
                "nullable": true
              },
              "defaultValue": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.defaultColumnValue"
                  }
                ],
                "description": "The default value for this column.",
                "nullable": true
              },
              "lookup": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.lookupColumn"
                  }
                ],
                "description": "This column's data is looked up from another source in the site.",
                "nullable": true
              },
              "number": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.numberColumn"
                  }
                ],
                "description": "This column stores number values.",
                "nullable": true
              },
              "personOrGroup": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.personOrGroupColumn"
                  }
                ],
                "description": "This column stores Person or Group values.",
                "nullable": true
              },
              "text": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.textColumn"
                  }
                ],
                "description": "This column stores text values.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "columnGroup": "string",
          "description": "string",
          "displayName": "string",
          "enforceUniqueValues": true,
          "hidden": true,
          "indexed": true,
          "name": "string",
          "readOnly": true,
          "required": true,
          "boolean": {
            "@odata.type": "microsoft.graph.booleanColumn"
          },
          "calculated": {
            "@odata.type": "microsoft.graph.calculatedColumn"
          },
          "choice": {
            "@odata.type": "microsoft.graph.choiceColumn"
          },
          "currency": {
            "@odata.type": "microsoft.graph.currencyColumn"
          },
          "dateTime": {
            "@odata.type": "microsoft.graph.dateTimeColumn"
          },
          "defaultValue": {
            "@odata.type": "microsoft.graph.defaultColumnValue"
          },
          "lookup": {
            "@odata.type": "microsoft.graph.lookupColumn"
          },
          "number": {
            "@odata.type": "microsoft.graph.numberColumn"
          },
          "personOrGroup": {
            "@odata.type": "microsoft.graph.personOrGroupColumn"
          },
          "text": {
            "@odata.type": "microsoft.graph.textColumn"
          }
        }
      },
      "microsoft.graph.columnLink": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "columnLink",
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The name of the column  in this content type.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "name": "string"
        }
      },
      "microsoft.graph.outlookItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "outlookItem",
            "type": "object",
            "properties": {
              "categories": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "The categories associated with the item"
              },
              "changeKey": {
                "type": "string",
                "description": "Identifies the version of the item. Every time the item is changed, changeKey changes as well. This allows Exchange to apply changes to the correct version of the object. Read-only.",
                "nullable": true
              },
              "createdDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'",
                "format": "date-time",
                "nullable": true
              },
              "lastModifiedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'",
                "format": "date-time",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "categories": [
            "string"
          ],
          "changeKey": "string",
          "createdDateTime": "string (timestamp)",
          "lastModifiedDateTime": "string (timestamp)"
        }
      },
      "microsoft.graph.contact": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.outlookItem"
          },
          {
            "title": "contact",
            "type": "object",
            "properties": {
              "assistantName": {
                "type": "string",
                "description": "The name of the contact's assistant.",
                "nullable": true
              },
              "birthday": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The contact's birthday. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'",
                "format": "date-time",
                "nullable": true
              },
              "businessAddress": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.physicalAddress"
                  }
                ],
                "description": "The contact's business address.",
                "nullable": true
              },
              "businessHomePage": {
                "type": "string",
                "description": "The business home page of the contact.",
                "nullable": true
              },
              "businessPhones": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "The contact's business phone numbers."
              },
              "children": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "The names of the contact's children."
              },
              "companyName": {
                "type": "string",
                "description": "The name of the contact's company.",
                "nullable": true
              },
              "department": {
                "type": "string",
                "description": "The contact's department.",
                "nullable": true
              },
              "displayName": {
                "type": "string",
                "description": "The contact's display name.",
                "nullable": true
              },
              "emailAddresses": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.emailAddress"
                    }
                  ],
                  "nullable": true
                },
                "description": "The contact's email addresses."
              },
              "flag": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.followupFlag"
                  }
                ],
                "description": "The flag value that indicates the status, start date, due date, or completion date for the message.",
                "nullable": true
              },
              "fileAs": {
                "type": "string",
                "description": "The name the contact is filed under.",
                "nullable": true
              },
              "generation": {
                "type": "string",
                "description": "The contact's generation.",
                "nullable": true
              },
              "givenName": {
                "type": "string",
                "description": "The contact's given name.",
                "nullable": true
              },
              "homeAddress": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.physicalAddress"
                  }
                ],
                "description": "The contact's home address.",
                "nullable": true
              },
              "homePhones": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "The contact's home phone numbers."
              },
              "imAddresses": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "The contact's instant messaging (IM) addresses."
              },
              "initials": {
                "type": "string",
                "description": "The contact's initials.",
                "nullable": true
              },
              "jobTitle": {
                "type": "string",
                "description": "The contact’s job title.",
                "nullable": true
              },
              "manager": {
                "type": "string",
                "description": "The name of the contact's manager.",
                "nullable": true
              },
              "middleName": {
                "type": "string",
                "description": "The contact's middle name.",
                "nullable": true
              },
              "mobilePhone": {
                "type": "string",
                "description": "The contact's mobile phone number.",
                "nullable": true
              },
              "nickName": {
                "type": "string",
                "description": "The contact's nickname.",
                "nullable": true
              },
              "officeLocation": {
                "type": "string",
                "description": "The location of the contact's office.",
                "nullable": true
              },
              "otherAddress": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.physicalAddress"
                  }
                ],
                "description": "Other addresses for the contact.",
                "nullable": true
              },
              "parentFolderId": {
                "type": "string",
                "description": "The ID of the contact's parent folder.",
                "nullable": true
              },
              "personalNotes": {
                "type": "string",
                "description": "The user's notes about the contact.",
                "nullable": true
              },
              "profession": {
                "type": "string",
                "description": "The contact's profession.",
                "nullable": true
              },
              "spouseName": {
                "type": "string",
                "description": "The name of the contact's spouse/partner.",
                "nullable": true
              },
              "surname": {
                "type": "string",
                "description": "The contact's surname.",
                "nullable": true
              },
              "title": {
                "type": "string",
                "description": "The contact's title.",
                "nullable": true
              },
              "yomiCompanyName": {
                "type": "string",
                "description": "The phonetic Japanese company name of the contact.",
                "nullable": true
              },
              "yomiGivenName": {
                "type": "string",
                "description": "The phonetic Japanese given name (first name) of the contact.",
                "nullable": true
              },
              "yomiSurname": {
                "type": "string",
                "description": "The phonetic Japanese surname (last name)  of the contact.",
                "nullable": true
              },
              "photo": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.profilePhoto"
                  }
                ],
                "nullable": true
              },
              "extensions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              },
              "multiValueExtendedProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.multiValueLegacyExtendedProperty"
                }
              },
              "singleValueExtendedProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.singleValueLegacyExtendedProperty"
                }
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "categories": [
            "string"
          ],
          "changeKey": "string",
          "createdDateTime": "string (timestamp)",
          "lastModifiedDateTime": "string (timestamp)",
          "assistantName": "string",
          "birthday": "string (timestamp)",
          "businessAddress": {
            "@odata.type": "microsoft.graph.physicalAddress"
          },
          "businessHomePage": "string",
          "businessPhones": [
            "string"
          ],
          "children": [
            "string"
          ],
          "companyName": "string",
          "department": "string",
          "displayName": "string",
          "emailAddresses": [
            {
              "@odata.type": "microsoft.graph.emailAddress"
            }
          ],
          "flag": {
            "@odata.type": "microsoft.graph.followupFlag"
          },
          "fileAs": "string",
          "generation": "string",
          "givenName": "string",
          "homeAddress": {
            "@odata.type": "microsoft.graph.physicalAddress"
          },
          "homePhones": [
            "string"
          ],
          "imAddresses": [
            "string"
          ],
          "initials": "string",
          "jobTitle": "string",
          "manager": "string",
          "middleName": "string",
          "mobilePhone": "string",
          "nickName": "string",
          "officeLocation": "string",
          "otherAddress": {
            "@odata.type": "microsoft.graph.physicalAddress"
          },
          "parentFolderId": "string",
          "personalNotes": "string",
          "profession": "string",
          "spouseName": "string",
          "surname": "string",
          "title": "string",
          "yomiCompanyName": "string",
          "yomiGivenName": "string",
          "yomiSurname": "string",
          "photo": {
            "@odata.type": "microsoft.graph.profilePhoto"
          },
          "extensions": [
            {
              "@odata.type": "microsoft.graph.extension"
            }
          ],
          "multiValueExtendedProperties": [
            {
              "@odata.type": "microsoft.graph.multiValueLegacyExtendedProperty"
            }
          ],
          "singleValueExtendedProperties": [
            {
              "@odata.type": "microsoft.graph.singleValueLegacyExtendedProperty"
            }
          ]
        }
      },
      "microsoft.graph.contactFolder": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "contactFolder",
            "type": "object",
            "properties": {
              "displayName": {
                "type": "string",
                "description": "The folder's display name.",
                "nullable": true
              },
              "parentFolderId": {
                "type": "string",
                "description": "The ID of the folder's parent folder.",
                "nullable": true
              },
              "childFolders": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.contactFolder"
                }
              },
              "contacts": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.contact"
                }
              },
              "multiValueExtendedProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.multiValueLegacyExtendedProperty"
                }
              },
              "singleValueExtendedProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.singleValueLegacyExtendedProperty"
                }
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "displayName": "string",
          "parentFolderId": "string",
          "childFolders": [
            {
              "@odata.type": "microsoft.graph.contactFolder"
            }
          ],
          "contacts": [
            {
              "@odata.type": "microsoft.graph.contact"
            }
          ],
          "multiValueExtendedProperties": [
            {
              "@odata.type": "microsoft.graph.multiValueLegacyExtendedProperty"
            }
          ],
          "singleValueExtendedProperties": [
            {
              "@odata.type": "microsoft.graph.singleValueLegacyExtendedProperty"
            }
          ]
        }
      },
      "microsoft.graph.contentType": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "contentType",
            "type": "object",
            "properties": {
              "description": {
                "type": "string",
                "description": "The descriptive text for the item.",
                "nullable": true
              },
              "group": {
                "type": "string",
                "description": "The name of the group this content type belongs to. Helps organize related content types.",
                "nullable": true
              },
              "hidden": {
                "type": "boolean",
                "description": "Indicates whether the content type is hidden in the list's 'New' menu.",
                "nullable": true
              },
              "inheritedFrom": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.itemReference"
                  }
                ],
                "description": "If this content type is inherited from another scope (like a site), provides a reference to the item where the content type is defined.",
                "nullable": true
              },
              "name": {
                "type": "string",
                "description": "The name of the content type.",
                "nullable": true
              },
              "order": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.contentTypeOrder"
                  }
                ],
                "description": "Specifies the order in which the content type appears in the selection UI.",
                "nullable": true
              },
              "parentId": {
                "type": "string",
                "description": "The unique identifier of the content type.",
                "nullable": true
              },
              "readOnly": {
                "type": "boolean",
                "description": "If true, the content type cannot be modified unless this value is first set to false.",
                "nullable": true
              },
              "sealed": {
                "type": "boolean",
                "description": "If true, the content type cannot be modified by users or through push-down operations. Only site collection administrators can seal or unseal content types.",
                "nullable": true
              },
              "columnLinks": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.columnLink"
                }
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "description": "string",
          "group": "string",
          "hidden": true,
          "inheritedFrom": {
            "@odata.type": "microsoft.graph.itemReference"
          },
          "name": "string",
          "order": {
            "@odata.type": "microsoft.graph.contentTypeOrder"
          },
          "parentId": "string",
          "readOnly": true,
          "sealed": true,
          "columnLinks": [
            {
              "@odata.type": "microsoft.graph.columnLink"
            }
          ]
        }
      },
      "microsoft.graph.directoryObject": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "directoryObject",
            "type": "object"
          }
        ],
        "example": {
          "id": "string (identifier)"
        }
      },
      "microsoft.graph.contract": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.directoryObject"
          },
          {
            "title": "contract",
            "type": "object",
            "properties": {
              "contractType": {
                "type": "string",
                "description": "Type of contract.Possible values are: SyndicationPartner - Partner that exclusively resells and manages O365 and Intune for this customer. They resell and support their customers. BreadthPartner - Partner has the ability to provide administrative support for this customer. However, the partner is not allowed to resell to the customer.ResellerPartner - Partner that is similar to a syndication partner, except that the partner doesn’t have exclusive access to a tenant. In the syndication case, the customer cannot buy additional direct subscriptions from Microsoft or from other partners.",
                "nullable": true
              },
              "customerId": {
                "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                "type": "string",
                "description": "The unique identifier for the customer tenant referenced by this partnership. Corresponds to the id property of the customer tenant's organization resource.",
                "format": "uuid",
                "nullable": true
              },
              "defaultDomainName": {
                "type": "string",
                "description": "A copy of the customer tenant's default domain name. The copy is made when the partnership with the customer is established. It is not automatically updated if the customer tenant's default domain name changes.",
                "nullable": true
              },
              "displayName": {
                "type": "string",
                "description": "A copy of the customer tenant's display name. The copy is made when the partnership with the customer is established. It is not automatically updated if the customer tenant's display name changes.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "contractType": "string",
          "customerId": "string",
          "defaultDomainName": "string",
          "displayName": "string"
        }
      },
      "microsoft.graph.conversation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "conversation",
            "type": "object",
            "properties": {
              "hasAttachments": {
                "type": "boolean",
                "description": "Indicates whether any of the posts within this Conversation has at least one attachment.",
                "nullable": true
              },
              "lastDeliveredDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'",
                "format": "date-time",
                "nullable": true
              },
              "preview": {
                "type": "string",
                "description": "A short summary from the body of the latest post in this converstaion.",
                "nullable": true
              },
              "topic": {
                "type": "string",
                "description": "The topic of the conversation. This property can be set when the conversation is created, but it cannot be updated.",
                "nullable": true
              },
              "uniqueSenders": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "All the users that sent a message to this Conversation."
              },
              "threads": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.conversationThread"
                }
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "hasAttachments": true,
          "lastDeliveredDateTime": "string (timestamp)",
          "preview": "string",
          "topic": "string",
          "uniqueSenders": [
            "string"
          ],
          "threads": [
            {
              "@odata.type": "microsoft.graph.conversationThread"
            }
          ]
        }
      },
      "microsoft.graph.conversationThread": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "conversationThread",
            "type": "object",
            "properties": {
              "ccRecipients": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.recipient"
                    }
                  ],
                  "nullable": true
                },
                "description": "The Cc: recipients for the thread."
              },
              "hasAttachments": {
                "type": "boolean",
                "description": "Indicates whether any of the posts within this thread has at least one attachment.",
                "nullable": true
              },
              "isLocked": {
                "type": "boolean",
                "description": "Indicates if the thread is locked.",
                "nullable": true
              },
              "lastDeliveredDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'",
                "format": "date-time",
                "nullable": true
              },
              "preview": {
                "type": "string",
                "description": "A short summary from the body of the latest post in this converstaion.",
                "nullable": true
              },
              "toRecipients": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.recipient"
                    }
                  ],
                  "nullable": true
                },
                "description": "The To: recipients for the thread."
              },
              "topic": {
                "type": "string",
                "description": "The topic of the conversation. This property can be set when the conversation is created, but it cannot be updated.",
                "nullable": true
              },
              "uniqueSenders": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "All the users that sent a message to this thread."
              },
              "posts": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.post"
                }
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "ccRecipients": [
            {
              "@odata.type": "microsoft.graph.recipient"
            }
          ],
          "hasAttachments": true,
          "isLocked": true,
          "lastDeliveredDateTime": "string (timestamp)",
          "preview": "string",
          "toRecipients": [
            {
              "@odata.type": "microsoft.graph.recipient"
            }
          ],
          "topic": "string",
          "uniqueSenders": [
            "string"
          ],
          "posts": [
            {
              "@odata.type": "microsoft.graph.post"
            }
          ]
        }
      },
      "microsoft.graph.device": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.directoryObject"
          },
          {
            "title": "device",
            "type": "object",
            "properties": {
              "accountEnabled": {
                "type": "boolean",
                "description": "true if the account is enabled; otherwise, false. Required.",
                "nullable": true
              },
              "alternativeSecurityIds": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.alternativeSecurityId"
                    }
                  ],
                  "nullable": true
                },
                "description": "For internal use only. Not nullable."
              },
              "approximateLastSignInDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z' Read-only.",
                "format": "date-time",
                "nullable": true
              },
              "deviceId": {
                "type": "string",
                "description": "Unique identifier set by Azure Device Registration Service at the time of registration.",
                "nullable": true
              },
              "deviceMetadata": {
                "type": "string",
                "description": "For interal use only. Set to null.",
                "nullable": true
              },
              "deviceVersion": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "For interal use only.",
                "format": "int32",
                "nullable": true
              },
              "displayName": {
                "type": "string",
                "description": "The display name for the device. Required.",
                "nullable": true
              },
              "isCompliant": {
                "type": "boolean",
                "description": "true if the device complies with Mobile Device Management (MDM) policies; otherwise, false. Read-only. This can only be updated by Intune for any device OS type or by an approved MDM app for Windows OS devices.",
                "nullable": true
              },
              "isManaged": {
                "type": "boolean",
                "description": "true if the device is managed by a Mobile Device Management (MDM) app; otherwise, false. This can only be updated by Intune for any device OS type or by an approved MDM app for Windows OS devices.",
                "nullable": true
              },
              "onPremisesLastSyncDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The last time at which the object was synced with the on-premises directory.The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z' Read-only.",
                "format": "date-time",
                "nullable": true
              },
              "onPremisesSyncEnabled": {
                "type": "boolean",
                "description": "true if this object is synced from an on-premises directory; false if this object was originally synced from an on-premises directory but is no longer synced; null if this object has never been synced from an on-premises directory (default). Read-only.",
                "nullable": true
              },
              "operatingSystem": {
                "type": "string",
                "description": "The type of operating system on the device. Required.",
                "nullable": true
              },
              "operatingSystemVersion": {
                "type": "string",
                "description": "The version of the operating system on the device. Required.",
                "nullable": true
              },
              "physicalIds": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "For interal use only. Not nullable."
              },
              "trustType": {
                "type": "string",
                "description": "Type of trust for the joined device. Read-only. Possible values: Workplace - indicates bring your own personal devicesAzureAd - Cloud only joined devicesServerAd - on-premises domain joined devices joined to Azure AD. For more details, see Introduction to device management in Azure Active Directory",
                "nullable": true
              },
              "extensions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              },
              "registeredOwners": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              },
              "registeredUsers": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "accountEnabled": true,
          "alternativeSecurityIds": [
            {
              "@odata.type": "microsoft.graph.alternativeSecurityId"
            }
          ],
          "approximateLastSignInDateTime": "string (timestamp)",
          "deviceId": "string",
          "deviceMetadata": "string",
          "deviceVersion": "integer",
          "displayName": "string",
          "isCompliant": true,
          "isManaged": true,
          "onPremisesLastSyncDateTime": "string (timestamp)",
          "onPremisesSyncEnabled": true,
          "operatingSystem": "string",
          "operatingSystemVersion": "string",
          "physicalIds": [
            "string"
          ],
          "trustType": "string",
          "extensions": [
            {
              "@odata.type": "microsoft.graph.extension"
            }
          ],
          "registeredOwners": [
            {
              "@odata.type": "microsoft.graph.directoryObject"
            }
          ],
          "registeredUsers": [
            {
              "@odata.type": "microsoft.graph.directoryObject"
            }
          ]
        }
      },
      "microsoft.graph.directory": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "directory",
            "type": "object",
            "properties": {
              "deletedItems": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "deletedItems": [
            {
              "@odata.type": "microsoft.graph.directoryObject"
            }
          ]
        }
      },
      "microsoft.graph.directoryRole": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.directoryObject"
          },
          {
            "title": "directoryRole",
            "type": "object",
            "properties": {
              "description": {
                "type": "string",
                "description": "The description for the directory role. Read-only.",
                "nullable": true
              },
              "displayName": {
                "type": "string",
                "description": "The display name for the directory role. Read-only.",
                "nullable": true
              },
              "roleTemplateId": {
                "type": "string",
                "description": "The id of the directoryRoleTemplate that this role is based on. The property must be specified when activating a directory role in a tenant with a POST operation. After the directory role has been activated, the property is read only.",
                "nullable": true
              },
              "members": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "description": "string",
          "displayName": "string",
          "roleTemplateId": "string",
          "members": [
            {
              "@odata.type": "microsoft.graph.directoryObject"
            }
          ]
        }
      },
      "microsoft.graph.directoryRoleTemplate": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.directoryObject"
          },
          {
            "title": "directoryRoleTemplate",
            "type": "object",
            "properties": {
              "description": {
                "type": "string",
                "description": "The description to set for the directory role. Read-only.",
                "nullable": true
              },
              "displayName": {
                "type": "string",
                "description": "The display name to set for the directory role. Read-only.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "description": "string",
          "displayName": "string"
        }
      },
      "microsoft.graph.domain": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "domain",
            "type": "object",
            "properties": {
              "authenticationType": {
                "type": "string",
                "description": "Indicates the configured authentication type for the domain. The value is either Managed or Federated. Managed indicates a cloud managed domain where Azure AD performs user authentication.Federated indicates authentication is federated with an identity provider such as the tenant's on-premises Active Directory via Active Directory Federation Services. Not nullable",
                "nullable": true
              },
              "availabilityStatus": {
                "type": "string",
                "description": "This property is always null except when the verify action is used. When the verify action is used, a domain entity is returned in the response. The availabilityStatus property of the domain entity in the response is either AvailableImmediately or EmailVerifiedDomainTakeoverScheduled.",
                "nullable": true
              },
              "isAdminManaged": {
                "type": "boolean",
                "description": "The value of the property is false if the DNS record management of the domain has been delegated to Office 365. Otherwise, the value is true. Not nullable",
                "nullable": true
              },
              "isDefault": {
                "type": "boolean",
                "description": "True if this is the default domain that is used for user creation. There is only one default domain per company. Not nullable",
                "nullable": true
              },
              "isInitial": {
                "type": "boolean",
                "description": "True if this is the initial domain created by Microsoft Online Services (companyname.onmicrosoft.com). There is only one initial domain per company. Not nullable",
                "nullable": true
              },
              "isRoot": {
                "type": "boolean",
                "description": "True if the domain is a verified root domain. Otherwise, false if the domain is a subdomain or unverified. Not nullable",
                "nullable": true
              },
              "isVerified": {
                "type": "boolean",
                "description": "True if the domain has completed domain ownership verification. Not nullable",
                "nullable": true
              },
              "state": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.domainState"
                  }
                ],
                "description": "Status of asynchronous operations scheduled for the domain.",
                "nullable": true
              },
              "supportedServices": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "The capabilities assigned to the domain.Can include 0, 1 or more of following values: Email, Sharepoint, EmailInternalRelayOnly, OfficeCommunicationsOnline, SharePointDefaultDomain, FullRedelegation, SharePointPublic, OrgIdAuthentication, Yammer, Intune The values which you can add/remove using Graph API include: Email, OfficeCommunicationsOnline, YammerNot nullable"
              },
              "domainNameReferences": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              },
              "serviceConfigurationRecords": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.domainDnsRecord"
                }
              },
              "verificationDnsRecords": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.domainDnsRecord"
                }
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "authenticationType": "string",
          "availabilityStatus": "string",
          "isAdminManaged": true,
          "isDefault": true,
          "isInitial": true,
          "isRoot": true,
          "isVerified": true,
          "state": {
            "@odata.type": "microsoft.graph.domainState"
          },
          "supportedServices": [
            "string"
          ],
          "domainNameReferences": [
            {
              "@odata.type": "microsoft.graph.directoryObject"
            }
          ],
          "serviceConfigurationRecords": [
            {
              "@odata.type": "microsoft.graph.domainDnsRecord"
            }
          ],
          "verificationDnsRecords": [
            {
              "@odata.type": "microsoft.graph.domainDnsRecord"
            }
          ]
        }
      },
      "microsoft.graph.domainDnsRecord": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "domainDnsRecord",
            "type": "object",
            "properties": {
              "isOptional": {
                "type": "boolean",
                "description": "If false, this record must be configured by the customer at the DNS host for Microsoft Online Services to operate correctly with the domain.",
                "nullable": true
              },
              "label": {
                "type": "string",
                "description": "Value used when configuring the name of the DNS record at the DNS host.",
                "nullable": true
              },
              "recordType": {
                "type": "string",
                "description": "Indicates what type of DNS record this entity represents.The value can be one of the following: CName, Mx, Srv, TxtKey",
                "nullable": true
              },
              "supportedService": {
                "type": "string",
                "description": "Microsoft Online Service or feature that has a dependency on this DNS record.Can be one of the following values: null, Email, Sharepoint, EmailInternalRelayOnly, OfficeCommunicationsOnline, SharePointDefaultDomain, FullRedelegation, SharePointPublic, OrgIdAuthentication, Yammer, Intune",
                "nullable": true
              },
              "ttl": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Value to use when configuring the time-to-live (ttl) property of the DNS record at the DNS host. Not nullable",
                "format": "int32",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "isOptional": true,
          "label": "string",
          "recordType": "string",
          "supportedService": "string",
          "ttl": "integer"
        }
      },
      "microsoft.graph.domainDnsCnameRecord": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.domainDnsRecord"
          },
          {
            "title": "domainDnsCnameRecord",
            "type": "object",
            "properties": {
              "canonicalName": {
                "type": "string",
                "description": "The canonical name of the CNAME record. Used to configure the CNAME record at the DNS host.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "isOptional": true,
          "label": "string",
          "recordType": "string",
          "supportedService": "string",
          "ttl": "integer",
          "canonicalName": "string"
        }
      },
      "microsoft.graph.domainDnsMxRecord": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.domainDnsRecord"
          },
          {
            "title": "domainDnsMxRecord",
            "type": "object",
            "properties": {
              "mailExchange": {
                "type": "string",
                "description": "Value used when configuring the answer/destination/value of the MX record at the DNS host.",
                "nullable": true
              },
              "preference": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Value used when configuring the Preference/Priority property of the MX record at the DNS host.",
                "format": "int32",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "isOptional": true,
          "label": "string",
          "recordType": "string",
          "supportedService": "string",
          "ttl": "integer",
          "mailExchange": "string",
          "preference": "integer"
        }
      },
      "microsoft.graph.domainDnsSrvRecord": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.domainDnsRecord"
          },
          {
            "title": "domainDnsSrvRecord",
            "type": "object",
            "properties": {
              "nameTarget": {
                "type": "string",
                "description": "Value to use when configuring the Target property of the SRV record at the DNS host.",
                "nullable": true
              },
              "port": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Value to use when configuring the port property of the SRV record at the DNS host.",
                "format": "int32",
                "nullable": true
              },
              "priority": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Value to use when configuring the priority property of the SRV record at the DNS host.",
                "format": "int32",
                "nullable": true
              },
              "protocol": {
                "type": "string",
                "description": "Value to use when configuring the protocol property of the SRV record at the DNS host.",
                "nullable": true
              },
              "service": {
                "type": "string",
                "description": "Value to use when configuring the service property of the SRV record at the DNS host.",
                "nullable": true
              },
              "weight": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Value to use when configuring the weight property of the SRV record at the DNS host.",
                "format": "int32",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "isOptional": true,
          "label": "string",
          "recordType": "string",
          "supportedService": "string",
          "ttl": "integer",
          "nameTarget": "string",
          "port": "integer",
          "priority": "integer",
          "protocol": "string",
          "service": "string",
          "weight": "integer"
        }
      },
      "microsoft.graph.domainDnsTxtRecord": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.domainDnsRecord"
          },
          {
            "title": "domainDnsTxtRecord",
            "type": "object",
            "properties": {
              "text": {
                "type": "string",
                "description": "Value used when configuring the text property at the DNS host.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "isOptional": true,
          "label": "string",
          "recordType": "string",
          "supportedService": "string",
          "ttl": "integer",
          "text": "string"
        }
      },
      "microsoft.graph.domainDnsUnavailableRecord": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.domainDnsRecord"
          },
          {
            "title": "domainDnsUnavailableRecord",
            "type": "object",
            "properties": {
              "description": {
                "type": "string",
                "description": "Provides the reason why the DomainDnsUnavailableRecord entity is returned.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "isOptional": true,
          "label": "string",
          "recordType": "string",
          "supportedService": "string",
          "ttl": "integer",
          "description": "string"
        }
      },
      "microsoft.graph.drive": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.baseItem"
          },
          {
            "title": "drive",
            "type": "object",
            "properties": {
              "driveType": {
                "type": "string",
                "description": "Describes the type of drive represented by this resource. OneDrive personal drives will return personal. OneDrive for Business will return business. SharePoint document libraries will return documentLibrary. Read-only.",
                "nullable": true
              },
              "owner": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.identitySet"
                  }
                ],
                "description": "Optional. The user account that owns the drive. Read-only.",
                "nullable": true
              },
              "quota": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.quota"
                  }
                ],
                "description": "Optional. Information about the drive's storage space quota. Read-only.",
                "nullable": true
              },
              "sharepointIds": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.sharepointIds"
                  }
                ],
                "description": "Returns identifiers useful for SharePoint REST compatibility. Read-only.",
                "nullable": true
              },
              "system": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.systemFacet"
                  }
                ],
                "description": "If present, indicates that this is a system-managed drive. Read-only.",
                "nullable": true
              },
              "items": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.driveItem"
                }
              },
              "root": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.driveItem"
                  }
                ],
                "nullable": true
              },
              "special": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.driveItem"
                }
              },
              "list": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.list"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "createdBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "createdDateTime": "string (timestamp)",
          "description": "string",
          "eTag": "string",
          "lastModifiedBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "lastModifiedDateTime": "string (timestamp)",
          "name": "string",
          "parentReference": {
            "@odata.type": "microsoft.graph.itemReference"
          },
          "webUrl": "string",
          "createdByUser": {
            "@odata.type": "microsoft.graph.user"
          },
          "lastModifiedByUser": {
            "@odata.type": "microsoft.graph.user"
          },
          "driveType": "string",
          "owner": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "quota": {
            "@odata.type": "microsoft.graph.quota"
          },
          "sharepointIds": {
            "@odata.type": "microsoft.graph.sharepointIds"
          },
          "system": {
            "@odata.type": "microsoft.graph.systemFacet"
          },
          "items": [
            {
              "@odata.type": "microsoft.graph.driveItem"
            }
          ],
          "root": {
            "@odata.type": "microsoft.graph.driveItem"
          },
          "special": [
            {
              "@odata.type": "microsoft.graph.driveItem"
            }
          ],
          "list": {
            "@odata.type": "microsoft.graph.list"
          }
        }
      },
      "microsoft.graph.driveItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.baseItem"
          },
          {
            "title": "driveItem",
            "type": "object",
            "properties": {
              "audio": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.audio"
                  }
                ],
                "description": "Audio metadata, if the item is an audio file. Read-only.",
                "nullable": true
              },
              "content": {
                "type": "string",
                "description": "The content stream, if the item represents a file.",
                "format": "base64url",
                "nullable": true
              },
              "cTag": {
                "type": "string",
                "description": "An eTag for the content of the item. This eTag is not changed if only the metadata is changed. Note This property is not returned if the item is a folder. Read-only.",
                "nullable": true
              },
              "deleted": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deleted"
                  }
                ],
                "description": "Information about the deleted state of the item. Read-only.",
                "nullable": true
              },
              "file": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.file"
                  }
                ],
                "description": "File metadata, if the item is a file. Read-only.",
                "nullable": true
              },
              "fileSystemInfo": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.fileSystemInfo"
                  }
                ],
                "description": "File system information on client. Read-write.",
                "nullable": true
              },
              "folder": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.folder"
                  }
                ],
                "description": "Folder metadata, if the item is a folder. Read-only.",
                "nullable": true
              },
              "image": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.image"
                  }
                ],
                "description": "Image metadata, if the item is an image. Read-only.",
                "nullable": true
              },
              "location": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.geoCoordinates"
                  }
                ],
                "description": "Location metadata, if the item has location data. Read-only.",
                "nullable": true
              },
              "package": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.package"
                  }
                ],
                "description": "If present, indicates that this item is a package instead of a folder or file. Packages are treated like files in some contexts and folders in others. Read-only.",
                "nullable": true
              },
              "photo": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.photo"
                  }
                ],
                "description": "Photo metadata, if the item is a photo. Read-only.",
                "nullable": true
              },
              "publication": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.publicationFacet"
                  }
                ],
                "description": "Provides information about the published or checked-out state of an item, in locations that support such actions. This property is not returned by default. Read-only.",
                "nullable": true
              },
              "remoteItem": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.remoteItem"
                  }
                ],
                "description": "Remote item data, if the item is shared from a drive other than the one being accessed. Read-only.",
                "nullable": true
              },
              "root": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.root"
                  }
                ],
                "description": "If this property is non-null, it indicates that the driveItem is the top-most driveItem in the drive.",
                "nullable": true
              },
              "searchResult": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.searchResult"
                  }
                ],
                "description": "Search metadata, if the item is from a search result. Read-only.",
                "nullable": true
              },
              "shared": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.shared"
                  }
                ],
                "description": "Indicates that the item has been shared with others and provides information about the shared state of the item. Read-only.",
                "nullable": true
              },
              "sharepointIds": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.sharepointIds"
                  }
                ],
                "description": "Returns identifiers useful for SharePoint REST compatibility. Read-only.",
                "nullable": true
              },
              "size": {
                "type": "integer",
                "description": "Size of the item in bytes. Read-only.",
                "format": "int64",
                "nullable": true
              },
              "specialFolder": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.specialFolder"
                  }
                ],
                "description": "If the current item is also available as a special folder, this facet is returned. Read-only.",
                "nullable": true
              },
              "video": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.video"
                  }
                ],
                "description": "Video metadata, if the item is a video. Read-only.",
                "nullable": true
              },
              "webDavUrl": {
                "type": "string",
                "description": "WebDAV compatible URL for the item.",
                "nullable": true
              },
              "children": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.driveItem"
                }
              },
              "permissions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.permission"
                }
              },
              "thumbnails": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.thumbnailSet"
                }
              },
              "versions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.driveItemVersion"
                }
              },
              "listItem": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.listItem"
                  }
                ],
                "nullable": true
              },
              "workbook": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbook"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "createdBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "createdDateTime": "string (timestamp)",
          "description": "string",
          "eTag": "string",
          "lastModifiedBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "lastModifiedDateTime": "string (timestamp)",
          "name": "string",
          "parentReference": {
            "@odata.type": "microsoft.graph.itemReference"
          },
          "webUrl": "string",
          "createdByUser": {
            "@odata.type": "microsoft.graph.user"
          },
          "lastModifiedByUser": {
            "@odata.type": "microsoft.graph.user"
          },
          "audio": {
            "@odata.type": "microsoft.graph.audio"
          },
          "content": "string",
          "cTag": "string",
          "deleted": {
            "@odata.type": "microsoft.graph.deleted"
          },
          "file": {
            "@odata.type": "microsoft.graph.file"
          },
          "fileSystemInfo": {
            "@odata.type": "microsoft.graph.fileSystemInfo"
          },
          "folder": {
            "@odata.type": "microsoft.graph.folder"
          },
          "image": {
            "@odata.type": "microsoft.graph.image"
          },
          "location": {
            "@odata.type": "microsoft.graph.geoCoordinates"
          },
          "package": {
            "@odata.type": "microsoft.graph.package"
          },
          "photo": {
            "@odata.type": "microsoft.graph.photo"
          },
          "publication": {
            "@odata.type": "microsoft.graph.publicationFacet"
          },
          "remoteItem": {
            "@odata.type": "microsoft.graph.remoteItem"
          },
          "root": {
            "@odata.type": "microsoft.graph.root"
          },
          "searchResult": {
            "@odata.type": "microsoft.graph.searchResult"
          },
          "shared": {
            "@odata.type": "microsoft.graph.shared"
          },
          "sharepointIds": {
            "@odata.type": "microsoft.graph.sharepointIds"
          },
          "size": "integer",
          "specialFolder": {
            "@odata.type": "microsoft.graph.specialFolder"
          },
          "video": {
            "@odata.type": "microsoft.graph.video"
          },
          "webDavUrl": "string",
          "children": [
            {
              "@odata.type": "microsoft.graph.driveItem"
            }
          ],
          "permissions": [
            {
              "@odata.type": "microsoft.graph.permission"
            }
          ],
          "thumbnails": [
            {
              "@odata.type": "microsoft.graph.thumbnailSet"
            }
          ],
          "versions": [
            {
              "@odata.type": "microsoft.graph.driveItemVersion"
            }
          ],
          "listItem": {
            "@odata.type": "microsoft.graph.listItem"
          },
          "workbook": {
            "@odata.type": "microsoft.graph.workbook"
          }
        }
      },
      "microsoft.graph.driveItemVersion": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.baseItemVersion"
          },
          {
            "title": "driveItemVersion",
            "type": "object",
            "properties": {
              "content": {
                "type": "string",
                "description": "The content stream for this version of the item.",
                "format": "base64url",
                "nullable": true
              },
              "size": {
                "type": "integer",
                "description": "Indicates the size of the content stream for this version of the item.",
                "format": "int64",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "lastModifiedBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "lastModifiedDateTime": "string (timestamp)",
          "publication": {
            "@odata.type": "microsoft.graph.publicationFacet"
          },
          "content": "string",
          "size": "integer"
        }
      },
      "microsoft.graph.educationClass": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "educationClass",
            "type": "object",
            "properties": {
              "description": {
                "type": "string",
                "description": "Description of the class.",
                "nullable": true
              },
              "classCode": {
                "type": "string",
                "description": "Class code used by the school to identify the class.",
                "nullable": true
              },
              "createdBy": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.identitySet"
                  }
                ],
                "description": "Entity who created the class",
                "nullable": true
              },
              "displayName": {
                "type": "string",
                "description": "Name of the class.",
                "nullable": true
              },
              "externalId": {
                "type": "string",
                "description": "ID of the class from the syncing system.",
                "nullable": true
              },
              "externalName": {
                "type": "string",
                "description": "Name of the class in the syncing system.",
                "nullable": true
              },
              "externalSource": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.educationExternalSource"
                  }
                ],
                "description": "How this class was created. The possible values are: sis, manual, unknownFutureValue.",
                "nullable": true
              },
              "mailNickname": {
                "type": "string",
                "description": "Mail name for sending email to all members, if this is enabled.",
                "nullable": true
              },
              "term": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.educationTerm"
                  }
                ],
                "description": "Term for this class.",
                "nullable": true
              },
              "members": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.educationUser"
                }
              },
              "schools": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.educationSchool"
                }
              },
              "teachers": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.educationUser"
                }
              },
              "group": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.group"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "description": "string",
          "classCode": "string",
          "createdBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "displayName": "string",
          "externalId": "string",
          "externalName": "string",
          "externalSource": {
            "@odata.type": "microsoft.graph.educationExternalSource"
          },
          "mailNickname": "string",
          "term": {
            "@odata.type": "microsoft.graph.educationTerm"
          },
          "members": [
            {
              "@odata.type": "microsoft.graph.educationUser"
            }
          ],
          "schools": [
            {
              "@odata.type": "microsoft.graph.educationSchool"
            }
          ],
          "teachers": [
            {
              "@odata.type": "microsoft.graph.educationUser"
            }
          ],
          "group": {
            "@odata.type": "microsoft.graph.group"
          }
        }
      },
      "microsoft.graph.educationOrganization": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "educationOrganization",
            "type": "object",
            "properties": {
              "description": {
                "type": "string",
                "description": "Organization description.",
                "nullable": true
              },
              "displayName": {
                "type": "string",
                "description": "Organization display name.",
                "nullable": true
              },
              "externalSource": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.educationExternalSource"
                  }
                ],
                "description": "Source where this organization was created from. The possible values are: sis, manual, unknownFutureValue.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "description": "string",
          "displayName": "string",
          "externalSource": {
            "@odata.type": "microsoft.graph.educationExternalSource"
          }
        }
      },
      "microsoft.graph.educationRoot": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "educationRoot",
            "type": "object",
            "properties": {
              "classes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.educationClass"
                }
              },
              "me": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.educationUser"
                  }
                ],
                "nullable": true
              },
              "schools": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.educationSchool"
                }
              },
              "users": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.educationUser"
                }
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "classes": [
            {
              "@odata.type": "microsoft.graph.educationClass"
            }
          ],
          "me": {
            "@odata.type": "microsoft.graph.educationUser"
          },
          "schools": [
            {
              "@odata.type": "microsoft.graph.educationSchool"
            }
          ],
          "users": [
            {
              "@odata.type": "microsoft.graph.educationUser"
            }
          ]
        }
      },
      "microsoft.graph.educationSchool": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.educationOrganization"
          },
          {
            "title": "educationSchool",
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "description": "Read-Only. The possible values are: inactive, active, expired, deleteable.",
                "nullable": true
              },
              "principalEmail": {
                "type": "string",
                "description": "Email address of the principal.",
                "nullable": true
              },
              "principalName": {
                "type": "string",
                "description": "Name of the principal.",
                "nullable": true
              },
              "externalPrincipalId": {
                "type": "string",
                "description": "ID of principal in syncing system.",
                "nullable": true
              },
              "highestGrade": {
                "type": "string",
                "description": "Highest grade taught.",
                "nullable": true
              },
              "lowestGrade": {
                "type": "string",
                "description": "Lowest grade taught.",
                "nullable": true
              },
              "schoolNumber": {
                "type": "string",
                "description": "School Number.",
                "nullable": true
              },
              "address": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.physicalAddress"
                  }
                ],
                "description": "Address of the school.",
                "nullable": true
              },
              "createdBy": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.identitySet"
                  }
                ],
                "description": "Entity who created the school.",
                "nullable": true
              },
              "externalId": {
                "type": "string",
                "description": "ID of school in syncing system.",
                "nullable": true
              },
              "fax": {
                "type": "string",
                "description": "Fax number of school.",
                "nullable": true
              },
              "phone": {
                "type": "string",
                "description": "Phone number of school.",
                "nullable": true
              },
              "classes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.educationClass"
                }
              },
              "users": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.educationUser"
                }
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "description": "string",
          "displayName": "string",
          "externalSource": {
            "@odata.type": "microsoft.graph.educationExternalSource"
          },
          "status": "string",
          "principalEmail": "string",
          "principalName": "string",
          "externalPrincipalId": "string",
          "highestGrade": "string",
          "lowestGrade": "string",
          "schoolNumber": "string",
          "address": {
            "@odata.type": "microsoft.graph.physicalAddress"
          },
          "createdBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "externalId": "string",
          "fax": "string",
          "phone": "string",
          "classes": [
            {
              "@odata.type": "microsoft.graph.educationClass"
            }
          ],
          "users": [
            {
              "@odata.type": "microsoft.graph.educationUser"
            }
          ]
        }
      },
      "microsoft.graph.educationUser": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "educationUser",
            "type": "object",
            "properties": {
              "accountEnabled": {
                "type": "boolean",
                "description": "True if the account is enabled; otherwise, false. This property is required when a user is created. Supports $filter.",
                "nullable": true
              },
              "assignedLicenses": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.assignedLicense"
                    }
                  ],
                  "nullable": true
                },
                "description": "The licenses that are assigned to the user. Not nullable."
              },
              "assignedPlans": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.assignedPlan"
                    }
                  ],
                  "nullable": true
                },
                "description": "The plans that are assigned to the user. Read-only. Not nullable."
              },
              "businessPhones": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "The telephone numbers for the user. Note: Although this is a string collection, only one number can be set for this property."
              },
              "department": {
                "type": "string",
                "description": "The name for the department in which the user works. Supports $filter.",
                "nullable": true
              },
              "displayName": {
                "type": "string",
                "description": "The name displayed in the address book for the user. This is usually the combination of the user's first name, middle initial, and last name. This property is required when a user is created and it cannot be cleared during updates. Supports $filter and $orderby.",
                "nullable": true
              },
              "givenName": {
                "type": "string",
                "description": "The given name (first name) of the user. Supports $filter.",
                "nullable": true
              },
              "middleName": {
                "type": "string",
                "description": "The middle name of user.",
                "nullable": true
              },
              "surname": {
                "type": "string",
                "description": "The user's surname (family name or last name). Supports $filter.",
                "nullable": true
              },
              "mail": {
                "type": "string",
                "description": "The SMTP address for the user; for example, 'jeff@contoso.onmicrosoft.com'. Read-Only. Supports $filter.",
                "nullable": true
              },
              "mailNickname": {
                "type": "string",
                "description": "The mail alias for the user. This property must be specified when a user is created. Supports $filter.",
                "nullable": true
              },
              "mobilePhone": {
                "type": "string",
                "description": "The primary cellular telephone number for the user.",
                "nullable": true
              },
              "createdBy": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.identitySet"
                  }
                ],
                "description": "Entity who created the user.",
                "nullable": true
              },
              "externalSource": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.educationExternalSource"
                  }
                ],
                "description": "Where this user was created from. The possible values are: sis, manual, unkownFutureValue.",
                "nullable": true
              },
              "mailingAddress": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.physicalAddress"
                  }
                ],
                "description": "Mail address of user.",
                "nullable": true
              },
              "passwordPolicies": {
                "type": "string",
                "description": "Specifies password policies for the user. This value is an enumeration with one possible value being 'DisableStrongPassword', which allows weaker passwords than the default policy to be specified. 'DisablePasswordExpiration' can also be specified. The two can be specified together; for example: 'DisablePasswordExpiration, DisableStrongPassword'.",
                "nullable": true
              },
              "passwordProfile": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.passwordProfile"
                  }
                ],
                "description": "Specifies the password profile for the user. The profile contains the user’s password. This property is required when a user is created. The password in the profile must satisfy minimum requirements as specified by the passwordPolicies property. By default, a strong password is required.",
                "nullable": true
              },
              "preferredLanguage": {
                "type": "string",
                "description": "The preferred language for the user. Should follow ISO 639-1 Code; for example, 'en-US'.",
                "nullable": true
              },
              "primaryRole": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.educationUserRole"
                  }
                ],
                "description": "Default role for a user. The user's role might be different in an individual class. The possible values are: student, teacher, unknownFutureValue. Supports $filter.",
                "nullable": true
              },
              "provisionedPlans": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.provisionedPlan"
                    }
                  ],
                  "nullable": true
                },
                "description": "The plans that are provisioned for the user. Read-only. Not nullable."
              },
              "residenceAddress": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.physicalAddress"
                  }
                ],
                "description": "Address where user lives.",
                "nullable": true
              },
              "student": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.educationStudent"
                  }
                ],
                "description": "If the primary role is student, this block will contain student specific data.",
                "nullable": true
              },
              "teacher": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.educationTeacher"
                  }
                ],
                "description": "If the primary role is teacher, this block will conatin teacher specific data.",
                "nullable": true
              },
              "usageLocation": {
                "type": "string",
                "description": "A two-letter country code (ISO standard 3166). Required for users who will be assigned licenses due to a legal requirement to check for availability of services in countries or regions. Examples include: 'US', 'JP', and 'GB'. Not nullable. Supports $filter.",
                "nullable": true
              },
              "userPrincipalName": {
                "type": "string",
                "description": "The user principal name (UPN) of the user. The UPN is an Internet-style login name for the user based on the Internet standard RFC 822. By convention, this should map to the user's email name. The general format is alias@domain, where domain must be present in the tenant’s collection of verified domains. This property is required when a user is created. The verified domains for the tenant can be accessed from the verifiedDomains property of organization. Supports $filter and $orderby.",
                "nullable": true
              },
              "userType": {
                "type": "string",
                "description": "A string value that can be used to classify user types in your directory, such as 'Member' and 'Guest'. Supports $filter.",
                "nullable": true
              },
              "classes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.educationClass"
                }
              },
              "schools": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.educationSchool"
                }
              },
              "assignments": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.educationAssignment"
                  }
                ],
                "nullable": true
              },
              "user": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.user"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "accountEnabled": true,
          "assignedLicenses": [
            {
              "@odata.type": "microsoft.graph.assignedLicense"
            }
          ],
          "assignedPlans": [
            {
              "@odata.type": "microsoft.graph.assignedPlan"
            }
          ],
          "businessPhones": [
            "string"
          ],
          "department": "string",
          "displayName": "string",
          "givenName": "string",
          "middleName": "string",
          "surname": "string",
          "mail": "string",
          "mailNickname": "string",
          "mobilePhone": "string",
          "createdBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "externalSource": {
            "@odata.type": "microsoft.graph.educationExternalSource"
          },
          "mailingAddress": {
            "@odata.type": "microsoft.graph.physicalAddress"
          },
          "passwordPolicies": "string",
          "passwordProfile": {
            "@odata.type": "microsoft.graph.passwordProfile"
          },
          "preferredLanguage": "string",
          "primaryRole": {
            "@odata.type": "microsoft.graph.educationUserRole"
          },
          "provisionedPlans": [
            {
              "@odata.type": "microsoft.graph.provisionedPlan"
            }
          ],
          "residenceAddress": {
            "@odata.type": "microsoft.graph.physicalAddress"
          },
          "student": {
            "@odata.type": "microsoft.graph.educationStudent"
          },
          "teacher": {
            "@odata.type": "microsoft.graph.educationTeacher"
          },
          "usageLocation": "string",
          "userPrincipalName": "string",
          "userType": "string",
          "classes": [
            {
              "@odata.type": "microsoft.graph.educationClass"
            }
          ],
          "schools": [
            {
              "@odata.type": "microsoft.graph.educationSchool"
            }
          ],
          "assignments": {
            "@odata.type": "microsoft.graph.educationAssignment"
          },
          "user": {
            "@odata.type": "microsoft.graph.user"
          }
        }
      },
      "microsoft.graph.event": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.outlookItem"
          },
          {
            "title": "event",
            "type": "object",
            "properties": {
              "attendees": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.attendee"
                    }
                  ],
                  "nullable": true
                },
                "description": "The collection of attendees for the event."
              },
              "body": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.itemBody"
                  }
                ],
                "description": "The body of the message associated with the event. It can be in HTML or text format.",
                "nullable": true
              },
              "bodyPreview": {
                "type": "string",
                "description": "The preview of the message associated with the event. It is in text format.",
                "nullable": true
              },
              "end": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.dateTimeTimeZone"
                  }
                ],
                "description": "The date, time, and time zone that the event ends.",
                "nullable": true
              },
              "hasAttachments": {
                "type": "boolean",
                "description": "Set to true if the event has attachments.",
                "nullable": true
              },
              "iCalUId": {
                "type": "string",
                "description": "A unique identifier that is shared by all instances of an event across different calendars.",
                "nullable": true
              },
              "importance": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.importance"
                  }
                ],
                "description": "The importance of the event. The possible values are: low, normal, high.",
                "nullable": true
              },
              "isAllDay": {
                "type": "boolean",
                "description": "Set to true if the event lasts all day.",
                "nullable": true
              },
              "isCancelled": {
                "type": "boolean",
                "description": "Set to true if the event has been canceled.",
                "nullable": true
              },
              "isOrganizer": {
                "type": "boolean",
                "description": "Set to true if the message sender is also the organizer.",
                "nullable": true
              },
              "isReminderOn": {
                "type": "boolean",
                "description": "Set to true if an alert is set to remind the user of the event.",
                "nullable": true
              },
              "location": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.location"
                  }
                ],
                "description": "The location of the event.",
                "nullable": true
              },
              "locations": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.location"
                    }
                  ],
                  "nullable": true
                },
                "description": "The locations where the event is held or attended from. The location and locations properties always correspond with each other. If you update the location property, any prior locations in the locations collection would be removed and replaced by the new location value."
              },
              "onlineMeetingUrl": {
                "type": "string",
                "description": "A URL for an online meeting. The property is set only when an organizer specifies an event as an online meeting such as a Skype meeting. Read-only.",
                "nullable": true
              },
              "organizer": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.recipient"
                  }
                ],
                "description": "The organizer of the event.",
                "nullable": true
              },
              "originalEndTimeZone": {
                "type": "string",
                "description": "The end time zone that was set when the event was created. A value of tzone://Microsoft/Custom indicates that a legacy custom time zone was set in desktop Outlook.",
                "nullable": true
              },
              "originalStart": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'",
                "format": "date-time",
                "nullable": true
              },
              "originalStartTimeZone": {
                "type": "string",
                "description": "The start time zone that was set when the event was created. A value of tzone://Microsoft/Custom indicates that a legacy custom time zone was set in desktop Outlook.",
                "nullable": true
              },
              "recurrence": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.patternedRecurrence"
                  }
                ],
                "description": "The recurrence pattern for the event.",
                "nullable": true
              },
              "reminderMinutesBeforeStart": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The number of minutes before the event start time that the reminder alert occurs.",
                "format": "int32",
                "nullable": true
              },
              "responseRequested": {
                "type": "boolean",
                "description": "Set to true if the sender would like a response when the event is accepted or declined.",
                "nullable": true
              },
              "responseStatus": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.responseStatus"
                  }
                ],
                "description": "Indicates the type of response sent in response to an event message.",
                "nullable": true
              },
              "sensitivity": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.sensitivity"
                  }
                ],
                "description": "The possible values are: normal, personal, private, confidential.",
                "nullable": true
              },
              "seriesMasterId": {
                "type": "string",
                "description": "The ID for the recurring series master item, if this event is part of a recurring series.",
                "nullable": true
              },
              "showAs": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.freeBusyStatus"
                  }
                ],
                "description": "The status to show. The possible values are: free, tentative, busy, oof, workingElsewhere, unknown.",
                "nullable": true
              },
              "start": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.dateTimeTimeZone"
                  }
                ],
                "description": "The date, time, and time zone that the event starts.",
                "nullable": true
              },
              "subject": {
                "type": "string",
                "description": "The text of the event's subject line.",
                "nullable": true
              },
              "type": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.eventType"
                  }
                ],
                "description": "The event type. The possible values are: singleInstance, occurrence, exception, seriesMaster. Read-only.",
                "nullable": true
              },
              "webLink": {
                "type": "string",
                "description": "The URL to open the event in Outlook Web App.The event will open in the browser if you are logged in to your mailbox via Outlook Web App. You will be prompted to login if you are not already logged in with the browser.This URL can be accessed from within an iFrame.",
                "nullable": true
              },
              "attachments": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.attachment"
                }
              },
              "calendar": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.calendar"
                  }
                ],
                "nullable": true
              },
              "extensions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              },
              "instances": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.event"
                }
              },
              "multiValueExtendedProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.multiValueLegacyExtendedProperty"
                }
              },
              "singleValueExtendedProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.singleValueLegacyExtendedProperty"
                }
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "categories": [
            "string"
          ],
          "changeKey": "string",
          "createdDateTime": "string (timestamp)",
          "lastModifiedDateTime": "string (timestamp)",
          "attendees": [
            {
              "@odata.type": "microsoft.graph.attendee"
            }
          ],
          "body": {
            "@odata.type": "microsoft.graph.itemBody"
          },
          "bodyPreview": "string",
          "end": {
            "@odata.type": "microsoft.graph.dateTimeTimeZone"
          },
          "hasAttachments": true,
          "iCalUId": "string",
          "importance": {
            "@odata.type": "microsoft.graph.importance"
          },
          "isAllDay": true,
          "isCancelled": true,
          "isOrganizer": true,
          "isReminderOn": true,
          "location": {
            "@odata.type": "microsoft.graph.location"
          },
          "locations": [
            {
              "@odata.type": "microsoft.graph.location"
            }
          ],
          "onlineMeetingUrl": "string",
          "organizer": {
            "@odata.type": "microsoft.graph.recipient"
          },
          "originalEndTimeZone": "string",
          "originalStart": "string (timestamp)",
          "originalStartTimeZone": "string",
          "recurrence": {
            "@odata.type": "microsoft.graph.patternedRecurrence"
          },
          "reminderMinutesBeforeStart": "integer",
          "responseRequested": true,
          "responseStatus": {
            "@odata.type": "microsoft.graph.responseStatus"
          },
          "sensitivity": {
            "@odata.type": "microsoft.graph.sensitivity"
          },
          "seriesMasterId": "string",
          "showAs": {
            "@odata.type": "microsoft.graph.freeBusyStatus"
          },
          "start": {
            "@odata.type": "microsoft.graph.dateTimeTimeZone"
          },
          "subject": "string",
          "type": {
            "@odata.type": "microsoft.graph.eventType"
          },
          "webLink": "string",
          "attachments": [
            {
              "@odata.type": "microsoft.graph.attachment"
            }
          ],
          "calendar": {
            "@odata.type": "microsoft.graph.calendar"
          },
          "extensions": [
            {
              "@odata.type": "microsoft.graph.extension"
            }
          ],
          "instances": [
            {
              "@odata.type": "microsoft.graph.event"
            }
          ],
          "multiValueExtendedProperties": [
            {
              "@odata.type": "microsoft.graph.multiValueLegacyExtendedProperty"
            }
          ],
          "singleValueExtendedProperties": [
            {
              "@odata.type": "microsoft.graph.singleValueLegacyExtendedProperty"
            }
          ]
        }
      },
      "microsoft.graph.message": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.outlookItem"
          },
          {
            "title": "message",
            "type": "object",
            "properties": {
              "bccRecipients": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.recipient"
                    }
                  ],
                  "nullable": true
                },
                "description": "The Bcc: recipients for the message."
              },
              "body": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.itemBody"
                  }
                ],
                "description": "The body of the message. It can be in HTML or text format.",
                "nullable": true
              },
              "bodyPreview": {
                "type": "string",
                "description": "The first 255 characters of the message body. It is in text format.",
                "nullable": true
              },
              "ccRecipients": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.recipient"
                    }
                  ],
                  "nullable": true
                },
                "description": "The Cc: recipients for the message."
              },
              "conversationId": {
                "type": "string",
                "description": "The ID of the conversation the email belongs to.",
                "nullable": true
              },
              "flag": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.followupFlag"
                  }
                ],
                "description": "The flag value that indicates the status, start date, due date, or completion date for the message.",
                "nullable": true
              },
              "from": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.recipient"
                  }
                ],
                "description": "The mailbox owner and sender of the message. The value must correspond to the actual mailbox used.",
                "nullable": true
              },
              "hasAttachments": {
                "type": "boolean",
                "description": "Indicates whether the message has attachments. This property doesn't include inline attachments, so if a message contains only inline attachments, this property is false. To verify the existence of inline attachments, parse the body property to look for a src attribute, such as <IMG src='cid:image001.jpg@01D26CD8.6C05F070'>.",
                "nullable": true
              },
              "importance": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.importance"
                  }
                ],
                "description": "The importance of the message: Low, Normal, High.",
                "nullable": true
              },
              "inferenceClassification": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.inferenceClassificationType"
                  }
                ],
                "description": "The classification of the message for the user, based on inferred relevance or importance, or on an explicit override. The possible values are: focused or other.",
                "nullable": true
              },
              "internetMessageHeaders": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.internetMessageHeader"
                    }
                  ],
                  "nullable": true
                },
                "description": "A collection of message headers defined by RFC5322. The set includes message headers indicating the network path taken by a message from the sender to the recipient. It can also contain custom message headers that hold app data for the message."
              },
              "internetMessageId": {
                "type": "string",
                "description": "The message ID in the format specified by RFC2822.",
                "nullable": true
              },
              "isDeliveryReceiptRequested": {
                "type": "boolean",
                "description": "Indicates whether a read receipt is requested for the message.",
                "nullable": true
              },
              "isDraft": {
                "type": "boolean",
                "description": "Indicates whether the message is a draft. A message is a draft if it hasn't been sent yet.",
                "nullable": true
              },
              "isRead": {
                "type": "boolean",
                "description": "Indicates whether the message has been read.",
                "nullable": true
              },
              "isReadReceiptRequested": {
                "type": "boolean",
                "description": "Indicates whether a read receipt is requested for the message.",
                "nullable": true
              },
              "parentFolderId": {
                "type": "string",
                "description": "The unique identifier for the message's parent mailFolder.",
                "nullable": true
              },
              "receivedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The date and time the message was received.",
                "format": "date-time",
                "nullable": true
              },
              "replyTo": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.recipient"
                    }
                  ],
                  "nullable": true
                },
                "description": "The email addresses to use when replying."
              },
              "sender": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.recipient"
                  }
                ],
                "description": "The account that is actually used to generate the message. In most cases, this value is the same as the from property. You can set this property to a different value when sending a message from a shared mailbox, or sending a message as a delegate. In any case, the value must correspond to the actual mailbox used.",
                "nullable": true
              },
              "sentDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The date and time the message was sent.",
                "format": "date-time",
                "nullable": true
              },
              "subject": {
                "type": "string",
                "description": "The subject of the message.",
                "nullable": true
              },
              "toRecipients": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.recipient"
                    }
                  ],
                  "nullable": true
                },
                "description": "The To: recipients for the message."
              },
              "uniqueBody": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.itemBody"
                  }
                ],
                "description": "The part of the body of the message that is unique to the current message. uniqueBody is not returned by default but can be retrieved for a given message by use of the ?$select=uniqueBody query. It can be in HTML or text format.",
                "nullable": true
              },
              "webLink": {
                "type": "string",
                "description": "The URL to open the message in Outlook Web App.You can append an ispopout argument to the end of the URL to change how the message is displayed. If ispopout is not present or if it is set to 1, then the message is shown in a popout window. If ispopout is set to 0, then the browser will show the message in the Outlook Web App review pane.The message will open in the browser if you are logged in to your mailbox via Outlook Web App. You will be prompted to login if you are not already logged in with the browser.This URL can be accessed from within an iFrame.",
                "nullable": true
              },
              "attachments": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.attachment"
                }
              },
              "extensions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              },
              "multiValueExtendedProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.multiValueLegacyExtendedProperty"
                }
              },
              "singleValueExtendedProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.singleValueLegacyExtendedProperty"
                }
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "categories": [
            "string"
          ],
          "changeKey": "string",
          "createdDateTime": "string (timestamp)",
          "lastModifiedDateTime": "string (timestamp)",
          "bccRecipients": [
            {
              "@odata.type": "microsoft.graph.recipient"
            }
          ],
          "body": {
            "@odata.type": "microsoft.graph.itemBody"
          },
          "bodyPreview": "string",
          "ccRecipients": [
            {
              "@odata.type": "microsoft.graph.recipient"
            }
          ],
          "conversationId": "string",
          "flag": {
            "@odata.type": "microsoft.graph.followupFlag"
          },
          "from": {
            "@odata.type": "microsoft.graph.recipient"
          },
          "hasAttachments": true,
          "importance": {
            "@odata.type": "microsoft.graph.importance"
          },
          "inferenceClassification": {
            "@odata.type": "microsoft.graph.inferenceClassificationType"
          },
          "internetMessageHeaders": [
            {
              "@odata.type": "microsoft.graph.internetMessageHeader"
            }
          ],
          "internetMessageId": "string",
          "isDeliveryReceiptRequested": true,
          "isDraft": true,
          "isRead": true,
          "isReadReceiptRequested": true,
          "parentFolderId": "string",
          "receivedDateTime": "string (timestamp)",
          "replyTo": [
            {
              "@odata.type": "microsoft.graph.recipient"
            }
          ],
          "sender": {
            "@odata.type": "microsoft.graph.recipient"
          },
          "sentDateTime": "string (timestamp)",
          "subject": "string",
          "toRecipients": [
            {
              "@odata.type": "microsoft.graph.recipient"
            }
          ],
          "uniqueBody": {
            "@odata.type": "microsoft.graph.itemBody"
          },
          "webLink": "string",
          "attachments": [
            {
              "@odata.type": "microsoft.graph.attachment"
            }
          ],
          "extensions": [
            {
              "@odata.type": "microsoft.graph.extension"
            }
          ],
          "multiValueExtendedProperties": [
            {
              "@odata.type": "microsoft.graph.multiValueLegacyExtendedProperty"
            }
          ],
          "singleValueExtendedProperties": [
            {
              "@odata.type": "microsoft.graph.singleValueLegacyExtendedProperty"
            }
          ]
        }
      },
      "microsoft.graph.eventMessage": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.message"
          },
          {
            "title": "eventMessage",
            "type": "object",
            "properties": {
              "meetingMessageType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.meetingMessageType"
                  }
                ],
                "description": "The type of event message: none, meetingRequest, meetingCancelled, meetingAccepted, meetingTenativelyAccepted, meetingDeclined.",
                "nullable": true
              },
              "event": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.event"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "categories": [
            "string"
          ],
          "changeKey": "string",
          "createdDateTime": "string (timestamp)",
          "lastModifiedDateTime": "string (timestamp)",
          "bccRecipients": [
            {
              "@odata.type": "microsoft.graph.recipient"
            }
          ],
          "body": {
            "@odata.type": "microsoft.graph.itemBody"
          },
          "bodyPreview": "string",
          "ccRecipients": [
            {
              "@odata.type": "microsoft.graph.recipient"
            }
          ],
          "conversationId": "string",
          "flag": {
            "@odata.type": "microsoft.graph.followupFlag"
          },
          "from": {
            "@odata.type": "microsoft.graph.recipient"
          },
          "hasAttachments": true,
          "importance": {
            "@odata.type": "microsoft.graph.importance"
          },
          "inferenceClassification": {
            "@odata.type": "microsoft.graph.inferenceClassificationType"
          },
          "internetMessageHeaders": [
            {
              "@odata.type": "microsoft.graph.internetMessageHeader"
            }
          ],
          "internetMessageId": "string",
          "isDeliveryReceiptRequested": true,
          "isDraft": true,
          "isRead": true,
          "isReadReceiptRequested": true,
          "parentFolderId": "string",
          "receivedDateTime": "string (timestamp)",
          "replyTo": [
            {
              "@odata.type": "microsoft.graph.recipient"
            }
          ],
          "sender": {
            "@odata.type": "microsoft.graph.recipient"
          },
          "sentDateTime": "string (timestamp)",
          "subject": "string",
          "toRecipients": [
            {
              "@odata.type": "microsoft.graph.recipient"
            }
          ],
          "uniqueBody": {
            "@odata.type": "microsoft.graph.itemBody"
          },
          "webLink": "string",
          "attachments": [
            {
              "@odata.type": "microsoft.graph.attachment"
            }
          ],
          "extensions": [
            {
              "@odata.type": "microsoft.graph.extension"
            }
          ],
          "multiValueExtendedProperties": [
            {
              "@odata.type": "microsoft.graph.multiValueLegacyExtendedProperty"
            }
          ],
          "singleValueExtendedProperties": [
            {
              "@odata.type": "microsoft.graph.singleValueLegacyExtendedProperty"
            }
          ],
          "meetingMessageType": {
            "@odata.type": "microsoft.graph.meetingMessageType"
          },
          "event": {
            "@odata.type": "microsoft.graph.event"
          }
        }
      },
      "microsoft.graph.extension": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "extension",
            "type": "object"
          }
        ],
        "example": {
          "id": "string (identifier)"
        }
      },
      "microsoft.graph.fieldValueSet": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "fieldValueSet",
            "type": "object"
          }
        ],
        "example": {
          "id": "string (identifier)"
        }
      },
      "microsoft.graph.fileAttachment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.attachment"
          },
          {
            "title": "fileAttachment",
            "type": "object",
            "properties": {
              "contentBytes": {
                "type": "string",
                "description": "The base64-encoded contents of the file.",
                "format": "base64url",
                "nullable": true
              },
              "contentId": {
                "type": "string",
                "description": "The ID of the attachment in the Exchange store.",
                "nullable": true
              },
              "contentLocation": {
                "type": "string",
                "description": "The Uniform Resource Identifier (URI) that corresponds to the location of the content of the attachment.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "contentType": "string",
          "isInline": true,
          "lastModifiedDateTime": "string (timestamp)",
          "name": "string",
          "size": "integer",
          "contentBytes": "string",
          "contentId": "string",
          "contentLocation": "string"
        }
      },
      "microsoft.graph.workbookFilter": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookFilter",
            "type": "object",
            "properties": {
              "criteria": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookFilterCriteria"
                  }
                ],
                "description": "The currently applied filter on the given column. Read-only.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "criteria": {
            "@odata.type": "microsoft.graph.workbookFilterCriteria"
          }
        }
      },
      "microsoft.graph.workbookFormatProtection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookFormatProtection",
            "type": "object",
            "properties": {
              "formulaHidden": {
                "type": "boolean",
                "description": "Indicates if Excel hides the formula for the cells in the range. A null value indicates that the entire range doesn't have uniform formula hidden setting.",
                "nullable": true
              },
              "locked": {
                "type": "boolean",
                "description": "Indicates if Excel locks the cells in the object. A null value indicates that the entire range doesn't have uniform lock setting.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "formulaHidden": true,
          "locked": true
        }
      },
      "microsoft.graph.group": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.directoryObject"
          },
          {
            "title": "group",
            "type": "object",
            "properties": {
              "allowExternalSenders": {
                "type": "boolean",
                "description": "Default is false. Indicates if people external to the organization can send messages to the group.",
                "nullable": true
              },
              "autoSubscribeNewMembers": {
                "type": "boolean",
                "description": "Default is false. Indicates if new members added to the group will be auto-subscribed to receive email notifications. You can set this property in a PATCH request for the group; do not set it in the initial POST request that creates the group.",
                "nullable": true
              },
              "classification": {
                "type": "string",
                "description": "Describes a classification for the group (such as low, medium or high business impact). Valid values for this property are defined by creating a ClassificationList setting value, based on the template definition.",
                "nullable": true
              },
              "createdDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Timestamp of when the group was created. The value cannot be modified and is automatically populated when the group is created. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'. Read-only.",
                "format": "date-time",
                "nullable": true
              },
              "description": {
                "type": "string",
                "description": "An optional description for the group.",
                "nullable": true
              },
              "displayName": {
                "type": "string",
                "description": "The display name for the group. This property is required when a group is created and it cannot be cleared during updates. Supports $filter and $orderby.",
                "nullable": true
              },
              "groupTypes": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "Specifies the type of group to create. Possible values are Unified to create an Office 365 group, or DynamicMembership for dynamic groups.  For all other group types, like security-enabled groups and email-enabled security groups, do not set this property. Supports $filter."
              },
              "isSubscribedByMail": {
                "type": "boolean",
                "description": "Default value is true. Indicates whether the current user is subscribed to receive email conversations.",
                "nullable": true
              },
              "mail": {
                "type": "string",
                "description": "The SMTP address for the group, for example, 'serviceadmins@contoso.onmicrosoft.com'. Read-only. Supports $filter.",
                "nullable": true
              },
              "mailEnabled": {
                "type": "boolean",
                "description": "Specifies whether the group is mail-enabled. If the securityEnabled property is also true, the group is a mail-enabled security group; otherwise, the group is a Microsoft Exchange distribution group.",
                "nullable": true
              },
              "mailNickname": {
                "type": "string",
                "description": "The mail alias for the group, unique in the organization. This property must be specified when a group is created. Supports $filter.",
                "nullable": true
              },
              "onPremisesLastSyncDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Indicates the last time at which the group was synced with the on-premises directory.The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'. Read-only. Supports $filter.",
                "format": "date-time",
                "nullable": true
              },
              "onPremisesProvisioningErrors": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.onPremisesProvisioningError"
                    }
                  ],
                  "nullable": true
                },
                "description": "Errors when using Microsoft synchronization product during provisioning."
              },
              "onPremisesSecurityIdentifier": {
                "type": "string",
                "description": "Contains the on-premises security identifier (SID) for the group that was synchronized from on-premises to the cloud. Read-only.",
                "nullable": true
              },
              "onPremisesSyncEnabled": {
                "type": "boolean",
                "description": "true if this group is synced from an on-premises directory; false if this group was originally synced from an on-premises directory but is no longer synced; null if this object has never been synced from an on-premises directory (default). Read-only. Supports $filter.",
                "nullable": true
              },
              "proxyAddresses": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "The any operator is required for filter expressions on multi-valued properties. Read-only. Not nullable. Supports $filter."
              },
              "renewedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Timestamp of when the group was last renewed. This cannot be modified directly and is only updated via the renew service action. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'. Read-only.",
                "format": "date-time",
                "nullable": true
              },
              "securityEnabled": {
                "type": "boolean",
                "description": "Specifies whether the group is a security group. If the mailEnabled property is also true, the group is a mail-enabled security group; otherwise it is a security group. Must be false for Office 365 groups. Supports $filter.",
                "nullable": true
              },
              "unseenCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Count of posts that the current  user has not seen since his last visit.",
                "format": "int32",
                "nullable": true
              },
              "visibility": {
                "type": "string",
                "description": "Specifies the visibility of an Office 365 group. The possible values are: Private, Public, HiddenMembership, or empty (which is interpreted as Public).",
                "nullable": true
              },
              "acceptedSenders": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              },
              "calendar": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.calendar"
                  }
                ],
                "nullable": true
              },
              "calendarView": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.event"
                }
              },
              "conversations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.conversation"
                }
              },
              "createdOnBehalfOf": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                  }
                ],
                "nullable": true
              },
              "drive": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.drive"
                  }
                ],
                "nullable": true
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.event"
                }
              },
              "memberOf": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              },
              "members": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              },
              "owners": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              },
              "photo": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.profilePhoto"
                  }
                ],
                "nullable": true
              },
              "rejectedSenders": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              },
              "sites": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.site"
                }
              },
              "threads": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.conversationThread"
                }
              },
              "drives": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.drive"
                }
              },
              "extensions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              },
              "groupLifecyclePolicies": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.groupLifecyclePolicy"
                }
              },
              "onenote": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.onenote"
                  }
                ],
                "nullable": true
              },
              "photos": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.profilePhoto"
                }
              },
              "planner": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.plannerGroup"
                  }
                ],
                "nullable": true
              },
              "settings": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.groupSetting"
                }
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "allowExternalSenders": true,
          "autoSubscribeNewMembers": true,
          "classification": "string",
          "createdDateTime": "string (timestamp)",
          "description": "string",
          "displayName": "string",
          "groupTypes": [
            "string"
          ],
          "isSubscribedByMail": true,
          "mail": "string",
          "mailEnabled": true,
          "mailNickname": "string",
          "onPremisesLastSyncDateTime": "string (timestamp)",
          "onPremisesProvisioningErrors": [
            {
              "@odata.type": "microsoft.graph.onPremisesProvisioningError"
            }
          ],
          "onPremisesSecurityIdentifier": "string",
          "onPremisesSyncEnabled": true,
          "proxyAddresses": [
            "string"
          ],
          "renewedDateTime": "string (timestamp)",
          "securityEnabled": true,
          "unseenCount": "integer",
          "visibility": "string",
          "acceptedSenders": [
            {
              "@odata.type": "microsoft.graph.directoryObject"
            }
          ],
          "calendar": {
            "@odata.type": "microsoft.graph.calendar"
          },
          "calendarView": [
            {
              "@odata.type": "microsoft.graph.event"
            }
          ],
          "conversations": [
            {
              "@odata.type": "microsoft.graph.conversation"
            }
          ],
          "createdOnBehalfOf": {
            "@odata.type": "microsoft.graph.directoryObject"
          },
          "drive": {
            "@odata.type": "microsoft.graph.drive"
          },
          "events": [
            {
              "@odata.type": "microsoft.graph.event"
            }
          ],
          "memberOf": [
            {
              "@odata.type": "microsoft.graph.directoryObject"
            }
          ],
          "members": [
            {
              "@odata.type": "microsoft.graph.directoryObject"
            }
          ],
          "owners": [
            {
              "@odata.type": "microsoft.graph.directoryObject"
            }
          ],
          "photo": {
            "@odata.type": "microsoft.graph.profilePhoto"
          },
          "rejectedSenders": [
            {
              "@odata.type": "microsoft.graph.directoryObject"
            }
          ],
          "sites": [
            {
              "@odata.type": "microsoft.graph.site"
            }
          ],
          "threads": [
            {
              "@odata.type": "microsoft.graph.conversationThread"
            }
          ],
          "drives": [
            {
              "@odata.type": "microsoft.graph.drive"
            }
          ],
          "extensions": [
            {
              "@odata.type": "microsoft.graph.extension"
            }
          ],
          "groupLifecyclePolicies": [
            {
              "@odata.type": "microsoft.graph.groupLifecyclePolicy"
            }
          ],
          "onenote": {
            "@odata.type": "microsoft.graph.onenote"
          },
          "photos": [
            {
              "@odata.type": "microsoft.graph.profilePhoto"
            }
          ],
          "planner": {
            "@odata.type": "microsoft.graph.plannerGroup"
          },
          "settings": [
            {
              "@odata.type": "microsoft.graph.groupSetting"
            }
          ]
        }
      },
      "microsoft.graph.groupLifecyclePolicy": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "groupLifecyclePolicy",
            "type": "object",
            "properties": {
              "alternateNotificationEmails": {
                "type": "string",
                "description": "List of email address to send notifications for groups without owners. Multiple email address can be defined by separating email address with a semicolon.",
                "nullable": true
              },
              "groupLifetimeInDays": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of days before a group expires and needs to be renewed. Once renewed, the group expiration is extended by the number of days defined.",
                "format": "int32",
                "nullable": true
              },
              "managedGroupTypes": {
                "type": "string",
                "description": "The group type for which the expiration policy applies. Possible values are All, Selected or None.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "alternateNotificationEmails": "string",
          "groupLifetimeInDays": "integer",
          "managedGroupTypes": "string"
        }
      },
      "microsoft.graph.groupSetting": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "groupSetting",
            "type": "object",
            "properties": {
              "displayName": {
                "type": "string",
                "description": "Display name of this group of settings, which comes from the associated template.",
                "nullable": true
              },
              "templateId": {
                "type": "string",
                "description": "Unique identifier for the template used to create this group of settings. Read-only.",
                "nullable": true
              },
              "values": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.settingValue"
                    }
                  ],
                  "nullable": true
                },
                "description": "Collection of name value pairs. Must contain and set all the settings defined in the template."
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "displayName": "string",
          "templateId": "string",
          "values": [
            {
              "@odata.type": "microsoft.graph.settingValue"
            }
          ]
        }
      },
      "microsoft.graph.groupSettingTemplate": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.directoryObject"
          },
          {
            "title": "groupSettingTemplate",
            "type": "object",
            "properties": {
              "description": {
                "type": "string",
                "description": "Description of the template.",
                "nullable": true
              },
              "displayName": {
                "type": "string",
                "description": "Display name of the template.",
                "nullable": true
              },
              "values": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.settingTemplateValue"
                    }
                  ],
                  "nullable": true
                },
                "description": "Collection of settingTemplateValues that list the set of available settings, defaults and types that make up this template."
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "description": "string",
          "displayName": "string",
          "values": [
            {
              "@odata.type": "microsoft.graph.settingTemplateValue"
            }
          ]
        }
      },
      "microsoft.graph.inferenceClassification": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "inferenceClassification",
            "type": "object",
            "properties": {
              "overrides": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.inferenceClassificationOverride"
                }
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "overrides": [
            {
              "@odata.type": "microsoft.graph.inferenceClassificationOverride"
            }
          ]
        }
      },
      "microsoft.graph.inferenceClassificationOverride": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "inferenceClassificationOverride",
            "type": "object",
            "properties": {
              "classifyAs": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.inferenceClassificationType"
                  }
                ],
                "description": "Specifies how incoming messages from a specific sender should always be classified as. The possible values are: focused, other.",
                "nullable": true
              },
              "senderEmailAddress": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.emailAddress"
                  }
                ],
                "description": "The email address information of the sender for whom the override is created.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "classifyAs": {
            "@odata.type": "microsoft.graph.inferenceClassificationType"
          },
          "senderEmailAddress": {
            "@odata.type": "microsoft.graph.emailAddress"
          }
        }
      },
      "microsoft.graph.mobileApp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "mobileApp",
            "type": "object",
            "properties": {
              "displayName": {
                "type": "string",
                "description": "The admin provided or imported title of the app.",
                "nullable": true
              },
              "description": {
                "type": "string",
                "description": "The description of the app.",
                "nullable": true
              },
              "publisher": {
                "type": "string",
                "description": "The publisher of the app.",
                "nullable": true
              },
              "largeIcon": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.mimeContent"
                  }
                ],
                "description": "The large icon, to be displayed in the app details and used for upload of the icon.",
                "nullable": true
              },
              "createdDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The date and time the app was created.",
                "format": "date-time",
                "nullable": true
              },
              "lastModifiedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The date and time the app was last modified.",
                "format": "date-time",
                "nullable": true
              },
              "isFeatured": {
                "type": "boolean",
                "description": "The value indicating whether the app is marked as featured by the admin.",
                "nullable": true
              },
              "privacyInformationUrl": {
                "type": "string",
                "description": "The privacy statement Url.",
                "nullable": true
              },
              "informationUrl": {
                "type": "string",
                "description": "The more information Url.",
                "nullable": true
              },
              "owner": {
                "type": "string",
                "description": "The owner of the app.",
                "nullable": true
              },
              "developer": {
                "type": "string",
                "description": "The developer of the app.",
                "nullable": true
              },
              "notes": {
                "type": "string",
                "description": "Notes for the app.",
                "nullable": true
              },
              "publishingState": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.mobileAppPublishingState"
                  }
                ],
                "description": "The publishing state for the app. The app cannot be assigned unless the app is published. Possible values are: notPublished, processing, published.",
                "nullable": true
              },
              "categories": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.mobileAppCategory"
                }
              },
              "assignments": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.mobileAppAssignment"
                }
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "displayName": "string",
          "description": "string",
          "publisher": "string",
          "largeIcon": {
            "@odata.type": "microsoft.graph.mimeContent"
          },
          "createdDateTime": "string (timestamp)",
          "lastModifiedDateTime": "string (timestamp)",
          "isFeatured": true,
          "privacyInformationUrl": "string",
          "informationUrl": "string",
          "owner": "string",
          "developer": "string",
          "notes": "string",
          "publishingState": {
            "@odata.type": "microsoft.graph.mobileAppPublishingState"
          },
          "categories": [
            {
              "@odata.type": "microsoft.graph.mobileAppCategory"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.mobileAppAssignment"
            }
          ]
        }
      },
      "microsoft.graph.mobileLobApp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.mobileApp"
          },
          {
            "title": "mobileLobApp",
            "type": "object",
            "properties": {
              "committedContentVersion": {
                "type": "string",
                "description": "The internal committed content version.",
                "nullable": true
              },
              "fileName": {
                "type": "string",
                "description": "The name of the main Lob application file.",
                "nullable": true
              },
              "size": {
                "type": "integer",
                "description": "The total size, including all uploaded files.",
                "format": "int64",
                "nullable": true
              },
              "contentVersions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.mobileAppContent"
                }
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "displayName": "string",
          "description": "string",
          "publisher": "string",
          "largeIcon": {
            "@odata.type": "microsoft.graph.mimeContent"
          },
          "createdDateTime": "string (timestamp)",
          "lastModifiedDateTime": "string (timestamp)",
          "isFeatured": true,
          "privacyInformationUrl": "string",
          "informationUrl": "string",
          "owner": "string",
          "developer": "string",
          "notes": "string",
          "publishingState": {
            "@odata.type": "microsoft.graph.mobileAppPublishingState"
          },
          "categories": [
            {
              "@odata.type": "microsoft.graph.mobileAppCategory"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.mobileAppAssignment"
            }
          ],
          "committedContentVersion": "string",
          "fileName": "string",
          "size": "integer",
          "contentVersions": [
            {
              "@odata.type": "microsoft.graph.mobileAppContent"
            }
          ]
        }
      },
      "microsoft.graph.androidLobApp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.mobileLobApp"
          },
          {
            "title": "androidLobApp",
            "type": "object",
            "properties": {
              "packageId": {
                "type": "string",
                "description": "The package identifier.",
                "nullable": true
              },
              "minimumSupportedOperatingSystem": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.androidMinimumOperatingSystem"
                  }
                ],
                "description": "The value for the minimum applicable operating system.",
                "nullable": true
              },
              "versionName": {
                "type": "string",
                "description": "The version name of Android Line of Business (LoB) app.",
                "nullable": true
              },
              "versionCode": {
                "type": "string",
                "description": "The version code of Android Line of Business (LoB) app.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "displayName": "string",
          "description": "string",
          "publisher": "string",
          "largeIcon": {
            "@odata.type": "microsoft.graph.mimeContent"
          },
          "createdDateTime": "string (timestamp)",
          "lastModifiedDateTime": "string (timestamp)",
          "isFeatured": true,
          "privacyInformationUrl": "string",
          "informationUrl": "string",
          "owner": "string",
          "developer": "string",
          "notes": "string",
          "publishingState": {
            "@odata.type": "microsoft.graph.mobileAppPublishingState"
          },
          "categories": [
            {
              "@odata.type": "microsoft.graph.mobileAppCategory"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.mobileAppAssignment"
            }
          ],
          "committedContentVersion": "string",
          "fileName": "string",
          "size": "integer",
          "contentVersions": [
            {
              "@odata.type": "microsoft.graph.mobileAppContent"
            }
          ],
          "packageId": "string",
          "minimumSupportedOperatingSystem": {
            "@odata.type": "microsoft.graph.androidMinimumOperatingSystem"
          },
          "versionName": "string",
          "versionCode": "string"
        }
      },
      "microsoft.graph.androidStoreApp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.mobileApp"
          },
          {
            "title": "androidStoreApp",
            "type": "object",
            "properties": {
              "packageId": {
                "type": "string",
                "description": "The package identifier.",
                "nullable": true
              },
              "appStoreUrl": {
                "type": "string",
                "description": "The Android app store URL.",
                "nullable": true
              },
              "minimumSupportedOperatingSystem": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.androidMinimumOperatingSystem"
                  }
                ],
                "description": "The value for the minimum applicable operating system.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "displayName": "string",
          "description": "string",
          "publisher": "string",
          "largeIcon": {
            "@odata.type": "microsoft.graph.mimeContent"
          },
          "createdDateTime": "string (timestamp)",
          "lastModifiedDateTime": "string (timestamp)",
          "isFeatured": true,
          "privacyInformationUrl": "string",
          "informationUrl": "string",
          "owner": "string",
          "developer": "string",
          "notes": "string",
          "publishingState": {
            "@odata.type": "microsoft.graph.mobileAppPublishingState"
          },
          "categories": [
            {
              "@odata.type": "microsoft.graph.mobileAppCategory"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.mobileAppAssignment"
            }
          ],
          "packageId": "string",
          "appStoreUrl": "string",
          "minimumSupportedOperatingSystem": {
            "@odata.type": "microsoft.graph.androidMinimumOperatingSystem"
          }
        }
      },
      "microsoft.graph.iosLobApp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.mobileLobApp"
          },
          {
            "title": "iosLobApp",
            "type": "object",
            "properties": {
              "bundleId": {
                "type": "string",
                "description": "The Identity Name.",
                "nullable": true
              },
              "applicableDeviceType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.iosDeviceType"
                  }
                ],
                "description": "The iOS architecture for which this app can run on.",
                "nullable": true
              },
              "minimumSupportedOperatingSystem": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.iosMinimumOperatingSystem"
                  }
                ],
                "description": "The value for the minimum applicable operating system.",
                "nullable": true
              },
              "expirationDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The expiration time.",
                "format": "date-time",
                "nullable": true
              },
              "versionNumber": {
                "type": "string",
                "description": "The version number of iOS Line of Business (LoB) app.",
                "nullable": true
              },
              "buildNumber": {
                "type": "string",
                "description": "The build number of iOS Line of Business (LoB) app.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "displayName": "string",
          "description": "string",
          "publisher": "string",
          "largeIcon": {
            "@odata.type": "microsoft.graph.mimeContent"
          },
          "createdDateTime": "string (timestamp)",
          "lastModifiedDateTime": "string (timestamp)",
          "isFeatured": true,
          "privacyInformationUrl": "string",
          "informationUrl": "string",
          "owner": "string",
          "developer": "string",
          "notes": "string",
          "publishingState": {
            "@odata.type": "microsoft.graph.mobileAppPublishingState"
          },
          "categories": [
            {
              "@odata.type": "microsoft.graph.mobileAppCategory"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.mobileAppAssignment"
            }
          ],
          "committedContentVersion": "string",
          "fileName": "string",
          "size": "integer",
          "contentVersions": [
            {
              "@odata.type": "microsoft.graph.mobileAppContent"
            }
          ],
          "bundleId": "string",
          "applicableDeviceType": {
            "@odata.type": "microsoft.graph.iosDeviceType"
          },
          "minimumSupportedOperatingSystem": {
            "@odata.type": "microsoft.graph.iosMinimumOperatingSystem"
          },
          "expirationDateTime": "string (timestamp)",
          "versionNumber": "string",
          "buildNumber": "string"
        }
      },
      "microsoft.graph.managedDeviceMobileAppConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "managedDeviceMobileAppConfiguration",
            "type": "object",
            "properties": {
              "targetedMobileApps": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "the associated app."
              },
              "createdDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "DateTime the object was created.",
                "format": "date-time",
                "nullable": true
              },
              "description": {
                "type": "string",
                "description": "Admin provided description of the Device Configuration.",
                "nullable": true
              },
              "lastModifiedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "DateTime the object was last modified.",
                "format": "date-time",
                "nullable": true
              },
              "displayName": {
                "type": "string",
                "description": "Admin provided name of the device configuration.",
                "nullable": true
              },
              "version": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Version of the device configuration.",
                "format": "int32",
                "nullable": true
              },
              "assignments": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.managedDeviceMobileAppConfigurationAssignment"
                }
              },
              "deviceStatuses": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.managedDeviceMobileAppConfigurationDeviceStatus"
                }
              },
              "userStatuses": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.managedDeviceMobileAppConfigurationUserStatus"
                }
              },
              "deviceStatusSummary": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.managedDeviceMobileAppConfigurationDeviceSummary"
                  }
                ],
                "nullable": true
              },
              "userStatusSummary": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.managedDeviceMobileAppConfigurationUserSummary"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "targetedMobileApps": [
            "string"
          ],
          "createdDateTime": "string (timestamp)",
          "description": "string",
          "lastModifiedDateTime": "string (timestamp)",
          "displayName": "string",
          "version": "integer",
          "assignments": [
            {
              "@odata.type": "microsoft.graph.managedDeviceMobileAppConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.managedDeviceMobileAppConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.managedDeviceMobileAppConfigurationUserStatus"
            }
          ],
          "deviceStatusSummary": {
            "@odata.type": "microsoft.graph.managedDeviceMobileAppConfigurationDeviceSummary"
          },
          "userStatusSummary": {
            "@odata.type": "microsoft.graph.managedDeviceMobileAppConfigurationUserSummary"
          }
        }
      },
      "microsoft.graph.iosMobileAppConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.managedDeviceMobileAppConfiguration"
          },
          {
            "title": "iosMobileAppConfiguration",
            "type": "object",
            "properties": {
              "encodedSettingXml": {
                "type": "string",
                "description": "mdm app configuration Base64 binary.",
                "format": "base64url",
                "nullable": true
              },
              "settings": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.appConfigurationSettingItem"
                    }
                  ],
                  "nullable": true
                },
                "description": "app configuration setting items."
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "targetedMobileApps": [
            "string"
          ],
          "createdDateTime": "string (timestamp)",
          "description": "string",
          "lastModifiedDateTime": "string (timestamp)",
          "displayName": "string",
          "version": "integer",
          "assignments": [
            {
              "@odata.type": "microsoft.graph.managedDeviceMobileAppConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.managedDeviceMobileAppConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.managedDeviceMobileAppConfigurationUserStatus"
            }
          ],
          "deviceStatusSummary": {
            "@odata.type": "microsoft.graph.managedDeviceMobileAppConfigurationDeviceSummary"
          },
          "userStatusSummary": {
            "@odata.type": "microsoft.graph.managedDeviceMobileAppConfigurationUserSummary"
          },
          "encodedSettingXml": "string",
          "settings": [
            {
              "@odata.type": "microsoft.graph.appConfigurationSettingItem"
            }
          ]
        }
      },
      "microsoft.graph.iosStoreApp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.mobileApp"
          },
          {
            "title": "iosStoreApp",
            "type": "object",
            "properties": {
              "bundleId": {
                "type": "string",
                "description": "The Identity Name.",
                "nullable": true
              },
              "appStoreUrl": {
                "type": "string",
                "description": "The Apple App Store URL",
                "nullable": true
              },
              "applicableDeviceType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.iosDeviceType"
                  }
                ],
                "description": "The iOS architecture for which this app can run on.",
                "nullable": true
              },
              "minimumSupportedOperatingSystem": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.iosMinimumOperatingSystem"
                  }
                ],
                "description": "The value for the minimum applicable operating system.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "displayName": "string",
          "description": "string",
          "publisher": "string",
          "largeIcon": {
            "@odata.type": "microsoft.graph.mimeContent"
          },
          "createdDateTime": "string (timestamp)",
          "lastModifiedDateTime": "string (timestamp)",
          "isFeatured": true,
          "privacyInformationUrl": "string",
          "informationUrl": "string",
          "owner": "string",
          "developer": "string",
          "notes": "string",
          "publishingState": {
            "@odata.type": "microsoft.graph.mobileAppPublishingState"
          },
          "categories": [
            {
              "@odata.type": "microsoft.graph.mobileAppCategory"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.mobileAppAssignment"
            }
          ],
          "bundleId": "string",
          "appStoreUrl": "string",
          "applicableDeviceType": {
            "@odata.type": "microsoft.graph.iosDeviceType"
          },
          "minimumSupportedOperatingSystem": {
            "@odata.type": "microsoft.graph.iosMinimumOperatingSystem"
          }
        }
      },
      "microsoft.graph.iosVppApp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.mobileApp"
          },
          {
            "title": "iosVppApp",
            "type": "object",
            "properties": {
              "usedLicenseCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The number of VPP licenses in use.",
                "format": "int32",
                "nullable": true
              },
              "totalLicenseCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The total number of VPP licenses.",
                "format": "int32",
                "nullable": true
              },
              "releaseDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The VPP application release date and time.",
                "format": "date-time",
                "nullable": true
              },
              "appStoreUrl": {
                "type": "string",
                "description": "The store URL.",
                "nullable": true
              },
              "licensingType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.vppLicensingType"
                  }
                ],
                "description": "The supported License Type.",
                "nullable": true
              },
              "applicableDeviceType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.iosDeviceType"
                  }
                ],
                "description": "The applicable iOS Device Type.",
                "nullable": true
              },
              "vppTokenOrganizationName": {
                "type": "string",
                "description": "The organization associated with the Apple Volume Purchase Program Token",
                "nullable": true
              },
              "vppTokenAccountType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.vppTokenAccountType"
                  }
                ],
                "description": "The type of volume purchase program which the given Apple Volume Purchase Program Token is associated with. Possible values are: business, education. Possible values are: business, education.",
                "nullable": true
              },
              "vppTokenAppleId": {
                "type": "string",
                "description": "The Apple Id associated with the given Apple Volume Purchase Program Token.",
                "nullable": true
              },
              "bundleId": {
                "type": "string",
                "description": "The Identity Name.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "displayName": "string",
          "description": "string",
          "publisher": "string",
          "largeIcon": {
            "@odata.type": "microsoft.graph.mimeContent"
          },
          "createdDateTime": "string (timestamp)",
          "lastModifiedDateTime": "string (timestamp)",
          "isFeatured": true,
          "privacyInformationUrl": "string",
          "informationUrl": "string",
          "owner": "string",
          "developer": "string",
          "notes": "string",
          "publishingState": {
            "@odata.type": "microsoft.graph.mobileAppPublishingState"
          },
          "categories": [
            {
              "@odata.type": "microsoft.graph.mobileAppCategory"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.mobileAppAssignment"
            }
          ],
          "usedLicenseCount": "integer",
          "totalLicenseCount": "integer",
          "releaseDateTime": "string (timestamp)",
          "appStoreUrl": "string",
          "licensingType": {
            "@odata.type": "microsoft.graph.vppLicensingType"
          },
          "applicableDeviceType": {
            "@odata.type": "microsoft.graph.iosDeviceType"
          },
          "vppTokenOrganizationName": "string",
          "vppTokenAccountType": {
            "@odata.type": "microsoft.graph.vppTokenAccountType"
          },
          "vppTokenAppleId": "string",
          "bundleId": "string"
        }
      },
      "microsoft.graph.macOSOfficeSuiteApp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.mobileApp"
          },
          {
            "title": "macOSOfficeSuiteApp",
            "type": "object"
          }
        ],
        "example": {
          "id": "string (identifier)",
          "displayName": "string",
          "description": "string",
          "publisher": "string",
          "largeIcon": {
            "@odata.type": "microsoft.graph.mimeContent"
          },
          "createdDateTime": "string (timestamp)",
          "lastModifiedDateTime": "string (timestamp)",
          "isFeatured": true,
          "privacyInformationUrl": "string",
          "informationUrl": "string",
          "owner": "string",
          "developer": "string",
          "notes": "string",
          "publishingState": {
            "@odata.type": "microsoft.graph.mobileAppPublishingState"
          },
          "categories": [
            {
              "@odata.type": "microsoft.graph.mobileAppCategory"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.mobileAppAssignment"
            }
          ]
        }
      },
      "microsoft.graph.managedApp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.mobileApp"
          },
          {
            "title": "managedApp",
            "type": "object",
            "properties": {
              "appAvailability": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.managedAppAvailability"
                  }
                ],
                "description": "The Application's availability. Possible values are: global, lineOfBusiness.",
                "nullable": true
              },
              "version": {
                "type": "string",
                "description": "The Application's version.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "displayName": "string",
          "description": "string",
          "publisher": "string",
          "largeIcon": {
            "@odata.type": "microsoft.graph.mimeContent"
          },
          "createdDateTime": "string (timestamp)",
          "lastModifiedDateTime": "string (timestamp)",
          "isFeatured": true,
          "privacyInformationUrl": "string",
          "informationUrl": "string",
          "owner": "string",
          "developer": "string",
          "notes": "string",
          "publishingState": {
            "@odata.type": "microsoft.graph.mobileAppPublishingState"
          },
          "categories": [
            {
              "@odata.type": "microsoft.graph.mobileAppCategory"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.mobileAppAssignment"
            }
          ],
          "appAvailability": {
            "@odata.type": "microsoft.graph.managedAppAvailability"
          },
          "version": "string"
        }
      },
      "microsoft.graph.managedMobileLobApp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.managedApp"
          },
          {
            "title": "managedMobileLobApp",
            "type": "object",
            "properties": {
              "committedContentVersion": {
                "type": "string",
                "description": "The internal committed content version.",
                "nullable": true
              },
              "fileName": {
                "type": "string",
                "description": "The name of the main Lob application file.",
                "nullable": true
              },
              "size": {
                "type": "integer",
                "description": "The total size, including all uploaded files.",
                "format": "int64",
                "nullable": true
              },
              "contentVersions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.mobileAppContent"
                }
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "displayName": "string",
          "description": "string",
          "publisher": "string",
          "largeIcon": {
            "@odata.type": "microsoft.graph.mimeContent"
          },
          "createdDateTime": "string (timestamp)",
          "lastModifiedDateTime": "string (timestamp)",
          "isFeatured": true,
          "privacyInformationUrl": "string",
          "informationUrl": "string",
          "owner": "string",
          "developer": "string",
          "notes": "string",
          "publishingState": {
            "@odata.type": "microsoft.graph.mobileAppPublishingState"
          },
          "categories": [
            {
              "@odata.type": "microsoft.graph.mobileAppCategory"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.mobileAppAssignment"
            }
          ],
          "appAvailability": {
            "@odata.type": "microsoft.graph.managedAppAvailability"
          },
          "version": "string",
          "committedContentVersion": "string",
          "fileName": "string",
          "size": "integer",
          "contentVersions": [
            {
              "@odata.type": "microsoft.graph.mobileAppContent"
            }
          ]
        }
      },
      "microsoft.graph.managedAndroidLobApp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.managedMobileLobApp"
          },
          {
            "title": "managedAndroidLobApp",
            "type": "object",
            "properties": {
              "packageId": {
                "type": "string",
                "description": "The package identifier.",
                "nullable": true
              },
              "minimumSupportedOperatingSystem": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.androidMinimumOperatingSystem"
                  }
                ],
                "description": "The value for the minimum applicable operating system.",
                "nullable": true
              },
              "versionName": {
                "type": "string",
                "description": "The version name of managed Android Line of Business (LoB) app.",
                "nullable": true
              },
              "versionCode": {
                "type": "string",
                "description": "The version code of managed Android Line of Business (LoB) app.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "displayName": "string",
          "description": "string",
          "publisher": "string",
          "largeIcon": {
            "@odata.type": "microsoft.graph.mimeContent"
          },
          "createdDateTime": "string (timestamp)",
          "lastModifiedDateTime": "string (timestamp)",
          "isFeatured": true,
          "privacyInformationUrl": "string",
          "informationUrl": "string",
          "owner": "string",
          "developer": "string",
          "notes": "string",
          "publishingState": {
            "@odata.type": "microsoft.graph.mobileAppPublishingState"
          },
          "categories": [
            {
              "@odata.type": "microsoft.graph.mobileAppCategory"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.mobileAppAssignment"
            }
          ],
          "appAvailability": {
            "@odata.type": "microsoft.graph.managedAppAvailability"
          },
          "version": "string",
          "committedContentVersion": "string",
          "fileName": "string",
          "size": "integer",
          "contentVersions": [
            {
              "@odata.type": "microsoft.graph.mobileAppContent"
            }
          ],
          "packageId": "string",
          "minimumSupportedOperatingSystem": {
            "@odata.type": "microsoft.graph.androidMinimumOperatingSystem"
          },
          "versionName": "string",
          "versionCode": "string"
        }
      },
      "microsoft.graph.managedAndroidStoreApp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.managedApp"
          },
          {
            "title": "managedAndroidStoreApp",
            "type": "object",
            "properties": {
              "packageId": {
                "type": "string",
                "description": "The app's package ID.",
                "nullable": true
              },
              "appStoreUrl": {
                "type": "string",
                "description": "The Android AppStoreUrl.",
                "nullable": true
              },
              "minimumSupportedOperatingSystem": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.androidMinimumOperatingSystem"
                  }
                ],
                "description": "The value for the minimum supported operating system.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "displayName": "string",
          "description": "string",
          "publisher": "string",
          "largeIcon": {
            "@odata.type": "microsoft.graph.mimeContent"
          },
          "createdDateTime": "string (timestamp)",
          "lastModifiedDateTime": "string (timestamp)",
          "isFeatured": true,
          "privacyInformationUrl": "string",
          "informationUrl": "string",
          "owner": "string",
          "developer": "string",
          "notes": "string",
          "publishingState": {
            "@odata.type": "microsoft.graph.mobileAppPublishingState"
          },
          "categories": [
            {
              "@odata.type": "microsoft.graph.mobileAppCategory"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.mobileAppAssignment"
            }
          ],
          "appAvailability": {
            "@odata.type": "microsoft.graph.managedAppAvailability"
          },
          "version": "string",
          "packageId": "string",
          "appStoreUrl": "string",
          "minimumSupportedOperatingSystem": {
            "@odata.type": "microsoft.graph.androidMinimumOperatingSystem"
          }
        }
      },
      "microsoft.graph.managedDeviceMobileAppConfigurationAssignment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "managedDeviceMobileAppConfigurationAssignment",
            "type": "object",
            "properties": {
              "target": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceAndAppManagementAssignmentTarget"
                  }
                ],
                "description": "Assignment target that the T&C policy is assigned to.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "target": {
            "@odata.type": "microsoft.graph.deviceAndAppManagementAssignmentTarget"
          }
        }
      },
      "microsoft.graph.managedDeviceMobileAppConfigurationDeviceStatus": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "managedDeviceMobileAppConfigurationDeviceStatus",
            "type": "object",
            "properties": {
              "deviceDisplayName": {
                "type": "string",
                "description": "Device name of the DevicePolicyStatus.",
                "nullable": true
              },
              "userName": {
                "type": "string",
                "description": "The User Name that is being reported",
                "nullable": true
              },
              "deviceModel": {
                "type": "string",
                "description": "The device model that is being reported",
                "nullable": true
              },
              "complianceGracePeriodExpirationDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The DateTime when device compliance grace period expires",
                "format": "date-time",
                "nullable": true
              },
              "status": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.complianceStatus"
                  }
                ],
                "description": "Compliance status of the policy report. Possible values are: unknown, notApplicable, compliant, remediated, nonCompliant, error, conflict, notAssigned.",
                "nullable": true
              },
              "lastReportedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Last modified date time of the policy report.",
                "format": "date-time",
                "nullable": true
              },
              "userPrincipalName": {
                "type": "string",
                "description": "UserPrincipalName.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "deviceDisplayName": "string",
          "userName": "string",
          "deviceModel": "string",
          "complianceGracePeriodExpirationDateTime": "string (timestamp)",
          "status": {
            "@odata.type": "microsoft.graph.complianceStatus"
          },
          "lastReportedDateTime": "string (timestamp)",
          "userPrincipalName": "string"
        }
      },
      "microsoft.graph.managedDeviceMobileAppConfigurationDeviceSummary": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "managedDeviceMobileAppConfigurationDeviceSummary",
            "type": "object",
            "properties": {
              "pendingCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of pending devices",
                "format": "int32",
                "nullable": true
              },
              "notApplicableCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of not applicable devices",
                "format": "int32",
                "nullable": true
              },
              "successCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of succeeded devices",
                "format": "int32",
                "nullable": true
              },
              "errorCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of error devices",
                "format": "int32",
                "nullable": true
              },
              "failedCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of failed devices",
                "format": "int32",
                "nullable": true
              },
              "lastUpdateDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Last update time",
                "format": "date-time",
                "nullable": true
              },
              "configurationVersion": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Version of the policy for that overview",
                "format": "int32",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "pendingCount": "integer",
          "notApplicableCount": "integer",
          "successCount": "integer",
          "errorCount": "integer",
          "failedCount": "integer",
          "lastUpdateDateTime": "string (timestamp)",
          "configurationVersion": "integer"
        }
      },
      "microsoft.graph.managedDeviceMobileAppConfigurationUserStatus": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "managedDeviceMobileAppConfigurationUserStatus",
            "type": "object",
            "properties": {
              "userDisplayName": {
                "type": "string",
                "description": "User name of the DevicePolicyStatus.",
                "nullable": true
              },
              "devicesCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Devices count for that user.",
                "format": "int32",
                "nullable": true
              },
              "status": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.complianceStatus"
                  }
                ],
                "description": "Compliance status of the policy report. Possible values are: unknown, notApplicable, compliant, remediated, nonCompliant, error, conflict, notAssigned.",
                "nullable": true
              },
              "lastReportedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Last modified date time of the policy report.",
                "format": "date-time",
                "nullable": true
              },
              "userPrincipalName": {
                "type": "string",
                "description": "UserPrincipalName.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "userDisplayName": "string",
          "devicesCount": "integer",
          "status": {
            "@odata.type": "microsoft.graph.complianceStatus"
          },
          "lastReportedDateTime": "string (timestamp)",
          "userPrincipalName": "string"
        }
      },
      "microsoft.graph.managedDeviceMobileAppConfigurationUserSummary": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "managedDeviceMobileAppConfigurationUserSummary",
            "type": "object",
            "properties": {
              "pendingCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of pending Users",
                "format": "int32",
                "nullable": true
              },
              "notApplicableCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of not applicable users",
                "format": "int32",
                "nullable": true
              },
              "successCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of succeeded Users",
                "format": "int32",
                "nullable": true
              },
              "errorCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of error Users",
                "format": "int32",
                "nullable": true
              },
              "failedCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of failed Users",
                "format": "int32",
                "nullable": true
              },
              "lastUpdateDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Last update time",
                "format": "date-time",
                "nullable": true
              },
              "configurationVersion": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Version of the policy for that overview",
                "format": "int32",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "pendingCount": "integer",
          "notApplicableCount": "integer",
          "successCount": "integer",
          "errorCount": "integer",
          "failedCount": "integer",
          "lastUpdateDateTime": "string (timestamp)",
          "configurationVersion": "integer"
        }
      },
      "microsoft.graph.managedIOSLobApp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.managedMobileLobApp"
          },
          {
            "title": "managedIOSLobApp",
            "type": "object",
            "properties": {
              "bundleId": {
                "type": "string",
                "description": "The Identity Name.",
                "nullable": true
              },
              "applicableDeviceType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.iosDeviceType"
                  }
                ],
                "description": "The iOS architecture for which this app can run on.",
                "nullable": true
              },
              "minimumSupportedOperatingSystem": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.iosMinimumOperatingSystem"
                  }
                ],
                "description": "The value for the minimum applicable operating system.",
                "nullable": true
              },
              "expirationDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The expiration time.",
                "format": "date-time",
                "nullable": true
              },
              "versionNumber": {
                "type": "string",
                "description": "The version number of managed iOS Line of Business (LoB) app.",
                "nullable": true
              },
              "buildNumber": {
                "type": "string",
                "description": "The build number of managed iOS Line of Business (LoB) app.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "displayName": "string",
          "description": "string",
          "publisher": "string",
          "largeIcon": {
            "@odata.type": "microsoft.graph.mimeContent"
          },
          "createdDateTime": "string (timestamp)",
          "lastModifiedDateTime": "string (timestamp)",
          "isFeatured": true,
          "privacyInformationUrl": "string",
          "informationUrl": "string",
          "owner": "string",
          "developer": "string",
          "notes": "string",
          "publishingState": {
            "@odata.type": "microsoft.graph.mobileAppPublishingState"
          },
          "categories": [
            {
              "@odata.type": "microsoft.graph.mobileAppCategory"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.mobileAppAssignment"
            }
          ],
          "appAvailability": {
            "@odata.type": "microsoft.graph.managedAppAvailability"
          },
          "version": "string",
          "committedContentVersion": "string",
          "fileName": "string",
          "size": "integer",
          "contentVersions": [
            {
              "@odata.type": "microsoft.graph.mobileAppContent"
            }
          ],
          "bundleId": "string",
          "applicableDeviceType": {
            "@odata.type": "microsoft.graph.iosDeviceType"
          },
          "minimumSupportedOperatingSystem": {
            "@odata.type": "microsoft.graph.iosMinimumOperatingSystem"
          },
          "expirationDateTime": "string (timestamp)",
          "versionNumber": "string",
          "buildNumber": "string"
        }
      },
      "microsoft.graph.managedIOSStoreApp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.managedApp"
          },
          {
            "title": "managedIOSStoreApp",
            "type": "object",
            "properties": {
              "bundleId": {
                "type": "string",
                "description": "The app's Bundle ID.",
                "nullable": true
              },
              "appStoreUrl": {
                "type": "string",
                "description": "The Apple AppStoreUrl.",
                "nullable": true
              },
              "applicableDeviceType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.iosDeviceType"
                  }
                ],
                "description": "The iOS architecture for which this app can run on.",
                "nullable": true
              },
              "minimumSupportedOperatingSystem": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.iosMinimumOperatingSystem"
                  }
                ],
                "description": "The value for the minimum supported operating system.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "displayName": "string",
          "description": "string",
          "publisher": "string",
          "largeIcon": {
            "@odata.type": "microsoft.graph.mimeContent"
          },
          "createdDateTime": "string (timestamp)",
          "lastModifiedDateTime": "string (timestamp)",
          "isFeatured": true,
          "privacyInformationUrl": "string",
          "informationUrl": "string",
          "owner": "string",
          "developer": "string",
          "notes": "string",
          "publishingState": {
            "@odata.type": "microsoft.graph.mobileAppPublishingState"
          },
          "categories": [
            {
              "@odata.type": "microsoft.graph.mobileAppCategory"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.mobileAppAssignment"
            }
          ],
          "appAvailability": {
            "@odata.type": "microsoft.graph.managedAppAvailability"
          },
          "version": "string",
          "bundleId": "string",
          "appStoreUrl": "string",
          "applicableDeviceType": {
            "@odata.type": "microsoft.graph.iosDeviceType"
          },
          "minimumSupportedOperatingSystem": {
            "@odata.type": "microsoft.graph.iosMinimumOperatingSystem"
          }
        }
      },
      "microsoft.graph.microsoftStoreForBusinessApp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.mobileApp"
          },
          {
            "title": "microsoftStoreForBusinessApp",
            "type": "object",
            "properties": {
              "usedLicenseCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The number of Microsoft Store for Business licenses in use.",
                "format": "int32",
                "nullable": true
              },
              "totalLicenseCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The total number of Microsoft Store for Business licenses.",
                "format": "int32",
                "nullable": true
              },
              "productKey": {
                "type": "string",
                "description": "The app product key",
                "nullable": true
              },
              "licenseType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.microsoftStoreForBusinessLicenseType"
                  }
                ],
                "description": "The app license type. Possible values are: offline, online.",
                "nullable": true
              },
              "packageIdentityName": {
                "type": "string",
                "description": "The app package identifier",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "displayName": "string",
          "description": "string",
          "publisher": "string",
          "largeIcon": {
            "@odata.type": "microsoft.graph.mimeContent"
          },
          "createdDateTime": "string (timestamp)",
          "lastModifiedDateTime": "string (timestamp)",
          "isFeatured": true,
          "privacyInformationUrl": "string",
          "informationUrl": "string",
          "owner": "string",
          "developer": "string",
          "notes": "string",
          "publishingState": {
            "@odata.type": "microsoft.graph.mobileAppPublishingState"
          },
          "categories": [
            {
              "@odata.type": "microsoft.graph.mobileAppCategory"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.mobileAppAssignment"
            }
          ],
          "usedLicenseCount": "integer",
          "totalLicenseCount": "integer",
          "productKey": "string",
          "licenseType": {
            "@odata.type": "microsoft.graph.microsoftStoreForBusinessLicenseType"
          },
          "packageIdentityName": "string"
        }
      },
      "microsoft.graph.mobileAppAssignment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "mobileAppAssignment",
            "type": "object",
            "properties": {
              "intent": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.installIntent"
                  }
                ],
                "description": "The install intent defined by the admin. Possible values are: available, required, uninstall, availableWithoutEnrollment.",
                "nullable": true
              },
              "target": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceAndAppManagementAssignmentTarget"
                  }
                ],
                "description": "The target group assignment defined by the admin.",
                "nullable": true
              },
              "settings": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.mobileAppAssignmentSettings"
                  }
                ],
                "description": "The settings for target assignment defined by the admin.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "intent": {
            "@odata.type": "microsoft.graph.installIntent"
          },
          "target": {
            "@odata.type": "microsoft.graph.deviceAndAppManagementAssignmentTarget"
          },
          "settings": {
            "@odata.type": "microsoft.graph.mobileAppAssignmentSettings"
          }
        }
      },
      "microsoft.graph.mobileAppCategory": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "mobileAppCategory",
            "type": "object",
            "properties": {
              "displayName": {
                "type": "string",
                "description": "The name of the app category.",
                "nullable": true
              },
              "lastModifiedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The date and time the mobileAppCategory was last modified.",
                "format": "date-time",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "displayName": "string",
          "lastModifiedDateTime": "string (timestamp)"
        }
      },
      "microsoft.graph.mobileAppContent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "mobileAppContent",
            "type": "object",
            "properties": {
              "files": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.mobileAppContentFile"
                }
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "files": [
            {
              "@odata.type": "microsoft.graph.mobileAppContentFile"
            }
          ]
        }
      },
      "microsoft.graph.mobileAppContentFile": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "mobileAppContentFile",
            "type": "object",
            "properties": {
              "azureStorageUri": {
                "type": "string",
                "description": "The Azure Storage URI.",
                "nullable": true
              },
              "isCommitted": {
                "type": "boolean",
                "description": "A value indicating whether the file is committed.",
                "nullable": true
              },
              "createdDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The time the file was created.",
                "format": "date-time",
                "nullable": true
              },
              "name": {
                "type": "string",
                "description": "the file name.",
                "nullable": true
              },
              "size": {
                "type": "integer",
                "description": "The size of the file prior to encryption.",
                "format": "int64",
                "nullable": true
              },
              "sizeEncrypted": {
                "type": "integer",
                "description": "The size of the file after encryption.",
                "format": "int64",
                "nullable": true
              },
              "azureStorageUriExpirationDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The time the Azure storage Uri expires.",
                "format": "date-time",
                "nullable": true
              },
              "manifest": {
                "type": "string",
                "description": "The manifest information.",
                "format": "base64url",
                "nullable": true
              },
              "uploadState": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.mobileAppContentFileUploadState"
                  }
                ],
                "description": "The state of the current upload request. Possible values are: success, transientError, error, unknown, azureStorageUriRequestSuccess, azureStorageUriRequestPending, azureStorageUriRequestFailed, azureStorageUriRequestTimedOut, azureStorageUriRenewalSuccess, azureStorageUriRenewalPending, azureStorageUriRenewalFailed, azureStorageUriRenewalTimedOut, commitFileSuccess, commitFilePending, commitFileFailed, commitFileTimedOut.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "azureStorageUri": "string",
          "isCommitted": true,
          "createdDateTime": "string (timestamp)",
          "name": "string",
          "size": "integer",
          "sizeEncrypted": "integer",
          "azureStorageUriExpirationDateTime": "string (timestamp)",
          "manifest": "string",
          "uploadState": {
            "@odata.type": "microsoft.graph.mobileAppContentFileUploadState"
          }
        }
      },
      "microsoft.graph.webApp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.mobileApp"
          },
          {
            "title": "webApp",
            "type": "object",
            "properties": {
              "appUrl": {
                "type": "string",
                "description": "The web app URL.",
                "nullable": true
              },
              "useManagedBrowser": {
                "type": "boolean",
                "description": "Whether or not to use managed browser. This property is only applicable for Android and IOS.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "displayName": "string",
          "description": "string",
          "publisher": "string",
          "largeIcon": {
            "@odata.type": "microsoft.graph.mimeContent"
          },
          "createdDateTime": "string (timestamp)",
          "lastModifiedDateTime": "string (timestamp)",
          "isFeatured": true,
          "privacyInformationUrl": "string",
          "informationUrl": "string",
          "owner": "string",
          "developer": "string",
          "notes": "string",
          "publishingState": {
            "@odata.type": "microsoft.graph.mobileAppPublishingState"
          },
          "categories": [
            {
              "@odata.type": "microsoft.graph.mobileAppCategory"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.mobileAppAssignment"
            }
          ],
          "appUrl": "string",
          "useManagedBrowser": true
        }
      },
      "microsoft.graph.windowsMobileMSI": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.mobileLobApp"
          },
          {
            "title": "windowsMobileMSI",
            "type": "object",
            "properties": {
              "commandLine": {
                "type": "string",
                "description": "The command line.",
                "nullable": true
              },
              "productCode": {
                "type": "string",
                "description": "The product code.",
                "nullable": true
              },
              "productVersion": {
                "type": "string",
                "description": "The product version of Windows Mobile MSI Line of Business (LoB) app.",
                "nullable": true
              },
              "ignoreVersionDetection": {
                "type": "boolean",
                "description": "A boolean to control whether the app's version will be used to detect the app after it is installed on a device. Set this to true for Windows Mobile MSI Line of Business (LoB) apps that use a self update feature.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "displayName": "string",
          "description": "string",
          "publisher": "string",
          "largeIcon": {
            "@odata.type": "microsoft.graph.mimeContent"
          },
          "createdDateTime": "string (timestamp)",
          "lastModifiedDateTime": "string (timestamp)",
          "isFeatured": true,
          "privacyInformationUrl": "string",
          "informationUrl": "string",
          "owner": "string",
          "developer": "string",
          "notes": "string",
          "publishingState": {
            "@odata.type": "microsoft.graph.mobileAppPublishingState"
          },
          "categories": [
            {
              "@odata.type": "microsoft.graph.mobileAppCategory"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.mobileAppAssignment"
            }
          ],
          "committedContentVersion": "string",
          "fileName": "string",
          "size": "integer",
          "contentVersions": [
            {
              "@odata.type": "microsoft.graph.mobileAppContent"
            }
          ],
          "commandLine": "string",
          "productCode": "string",
          "productVersion": "string",
          "ignoreVersionDetection": true
        }
      },
      "microsoft.graph.windowsUniversalAppX": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.mobileLobApp"
          },
          {
            "title": "windowsUniversalAppX",
            "type": "object",
            "properties": {
              "applicableArchitectures": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.windowsArchitecture"
                  }
                ],
                "description": "The Windows architecture(s) for which this app can run on. Possible values are: none, x86, x64, arm, neutral.",
                "nullable": true
              },
              "applicableDeviceTypes": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.windowsDeviceType"
                  }
                ],
                "description": "The Windows device type(s) for which this app can run on. Possible values are: none, desktop, mobile, holographic, team.",
                "nullable": true
              },
              "identityName": {
                "type": "string",
                "description": "The Identity Name.",
                "nullable": true
              },
              "identityPublisherHash": {
                "type": "string",
                "description": "The Identity Publisher Hash.",
                "nullable": true
              },
              "identityResourceIdentifier": {
                "type": "string",
                "description": "The Identity Resource Identifier.",
                "nullable": true
              },
              "isBundle": {
                "type": "boolean",
                "description": "Whether or not the app is a bundle.",
                "nullable": true
              },
              "minimumSupportedOperatingSystem": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.windowsMinimumOperatingSystem"
                  }
                ],
                "description": "The value for the minimum applicable operating system.",
                "nullable": true
              },
              "identityVersion": {
                "type": "string",
                "description": "The identity version.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "displayName": "string",
          "description": "string",
          "publisher": "string",
          "largeIcon": {
            "@odata.type": "microsoft.graph.mimeContent"
          },
          "createdDateTime": "string (timestamp)",
          "lastModifiedDateTime": "string (timestamp)",
          "isFeatured": true,
          "privacyInformationUrl": "string",
          "informationUrl": "string",
          "owner": "string",
          "developer": "string",
          "notes": "string",
          "publishingState": {
            "@odata.type": "microsoft.graph.mobileAppPublishingState"
          },
          "categories": [
            {
              "@odata.type": "microsoft.graph.mobileAppCategory"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.mobileAppAssignment"
            }
          ],
          "committedContentVersion": "string",
          "fileName": "string",
          "size": "integer",
          "contentVersions": [
            {
              "@odata.type": "microsoft.graph.mobileAppContent"
            }
          ],
          "applicableArchitectures": {
            "@odata.type": "microsoft.graph.windowsArchitecture"
          },
          "applicableDeviceTypes": {
            "@odata.type": "microsoft.graph.windowsDeviceType"
          },
          "identityName": "string",
          "identityPublisherHash": "string",
          "identityResourceIdentifier": "string",
          "isBundle": true,
          "minimumSupportedOperatingSystem": {
            "@odata.type": "microsoft.graph.windowsMinimumOperatingSystem"
          },
          "identityVersion": "string"
        }
      },
      "microsoft.graph.auditEvent": {
        "title": "auditEvent",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Key of the entity.",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "description": "Event display name.",
            "nullable": true
          },
          "componentName": {
            "type": "string",
            "description": "Component name.",
            "nullable": true
          },
          "actor": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.auditActor"
              }
            ],
            "description": "AAD user and application that are associated with the audit event.",
            "nullable": true
          },
          "activity": {
            "type": "string",
            "description": "Friendly name of the activity.",
            "nullable": true
          },
          "activityDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "description": "The date time in UTC when the activity was performed.",
            "format": "date-time",
            "nullable": true
          },
          "activityType": {
            "type": "string",
            "description": "The type of activity that was being performed.",
            "nullable": true
          },
          "activityOperationType": {
            "type": "string",
            "description": "The HTTP operation type of the activity.",
            "nullable": true
          },
          "activityResult": {
            "type": "string",
            "description": "The result of the activity.",
            "nullable": true
          },
          "correlationId": {
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "description": "The client request Id that is used to correlate activity within the system.",
            "format": "uuid",
            "nullable": true
          },
          "resources": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.auditResource"
                }
              ],
              "nullable": true
            },
            "description": "Resources being modified."
          },
          "category": {
            "type": "string",
            "description": "Audit category.",
            "nullable": true
          }
        },
        "example": {
          "id": "string (identifier)",
          "displayName": "string",
          "componentName": "string",
          "actor": {
            "@odata.type": "microsoft.graph.auditActor"
          },
          "activity": "string",
          "activityDateTime": "string (timestamp)",
          "activityType": "string",
          "activityOperationType": "string",
          "activityResult": "string",
          "correlationId": "string",
          "resources": [
            {
              "@odata.type": "microsoft.graph.auditResource"
            }
          ],
          "category": "string"
        }
      },
      "microsoft.graph.deviceInstallState": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "deviceInstallState",
            "type": "object",
            "properties": {
              "deviceName": {
                "type": "string",
                "description": "Device name.",
                "nullable": true
              },
              "deviceId": {
                "type": "string",
                "description": "Device Id.",
                "nullable": true
              },
              "lastSyncDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Last sync date and time.",
                "format": "date-time",
                "nullable": true
              },
              "installState": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.installState"
                  }
                ],
                "description": "The install state of the eBook. Possible values are: notApplicable, installed, failed, notInstalled, uninstallFailed, unknown.",
                "nullable": true
              },
              "errorCode": {
                "type": "string",
                "description": "The error code for install failures.",
                "nullable": true
              },
              "osVersion": {
                "type": "string",
                "description": "OS Version.",
                "nullable": true
              },
              "osDescription": {
                "type": "string",
                "description": "OS Description.",
                "nullable": true
              },
              "userName": {
                "type": "string",
                "description": "Device User Name.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "deviceName": "string",
          "deviceId": "string",
          "lastSyncDateTime": "string (timestamp)",
          "installState": {
            "@odata.type": "microsoft.graph.installState"
          },
          "errorCode": "string",
          "osVersion": "string",
          "osDescription": "string",
          "userName": "string"
        }
      },
      "microsoft.graph.eBookInstallSummary": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "eBookInstallSummary",
            "type": "object",
            "properties": {
              "installedDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of Devices that have successfully installed this book.",
                "format": "int32",
                "nullable": true
              },
              "failedDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of Devices that have failed to install this book.",
                "format": "int32",
                "nullable": true
              },
              "notInstalledDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of Devices that does not have this book installed.",
                "format": "int32",
                "nullable": true
              },
              "installedUserCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of Users whose devices have all succeeded to install this book.",
                "format": "int32",
                "nullable": true
              },
              "failedUserCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of Users that have 1 or more device that failed to install this book.",
                "format": "int32",
                "nullable": true
              },
              "notInstalledUserCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of Users that did not install this book.",
                "format": "int32",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "installedDeviceCount": "integer",
          "failedDeviceCount": "integer",
          "notInstalledDeviceCount": "integer",
          "installedUserCount": "integer",
          "failedUserCount": "integer",
          "notInstalledUserCount": "integer"
        }
      },
      "microsoft.graph.managedEBook": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "managedEBook",
            "type": "object",
            "properties": {
              "displayName": {
                "type": "string",
                "description": "Name of the eBook.",
                "nullable": true
              },
              "description": {
                "type": "string",
                "description": "Description.",
                "nullable": true
              },
              "publisher": {
                "type": "string",
                "description": "Publisher.",
                "nullable": true
              },
              "publishedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The date and time when the eBook was published.",
                "format": "date-time",
                "nullable": true
              },
              "largeCover": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.mimeContent"
                  }
                ],
                "description": "Book cover.",
                "nullable": true
              },
              "createdDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The date and time when the eBook file was created.",
                "format": "date-time",
                "nullable": true
              },
              "lastModifiedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The date and time when the eBook was last modified.",
                "format": "date-time",
                "nullable": true
              },
              "informationUrl": {
                "type": "string",
                "description": "The more information Url.",
                "nullable": true
              },
              "privacyInformationUrl": {
                "type": "string",
                "description": "The privacy statement Url.",
                "nullable": true
              },
              "assignments": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.managedEBookAssignment"
                }
              },
              "installSummary": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.eBookInstallSummary"
                  }
                ],
                "nullable": true
              },
              "deviceStates": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.deviceInstallState"
                }
              },
              "userStateSummary": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.userInstallStateSummary"
                }
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "displayName": "string",
          "description": "string",
          "publisher": "string",
          "publishedDateTime": "string (timestamp)",
          "largeCover": {
            "@odata.type": "microsoft.graph.mimeContent"
          },
          "createdDateTime": "string (timestamp)",
          "lastModifiedDateTime": "string (timestamp)",
          "informationUrl": "string",
          "privacyInformationUrl": "string",
          "assignments": [
            {
              "@odata.type": "microsoft.graph.managedEBookAssignment"
            }
          ],
          "installSummary": {
            "@odata.type": "microsoft.graph.eBookInstallSummary"
          },
          "deviceStates": [
            {
              "@odata.type": "microsoft.graph.deviceInstallState"
            }
          ],
          "userStateSummary": [
            {
              "@odata.type": "microsoft.graph.userInstallStateSummary"
            }
          ]
        }
      },
      "microsoft.graph.iosVppEBook": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.managedEBook"
          },
          {
            "title": "iosVppEBook",
            "type": "object",
            "properties": {
              "vppTokenId": {
                "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                "type": "string",
                "description": "The Vpp token ID.",
                "format": "uuid",
                "nullable": true
              },
              "appleId": {
                "type": "string",
                "description": "The Apple ID associated with Vpp token.",
                "nullable": true
              },
              "vppOrganizationName": {
                "type": "string",
                "description": "The Vpp token's organization name.",
                "nullable": true
              },
              "genres": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "Genres."
              },
              "language": {
                "type": "string",
                "description": "Language.",
                "nullable": true
              },
              "seller": {
                "type": "string",
                "description": "Seller.",
                "nullable": true
              },
              "totalLicenseCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Total license count.",
                "format": "int32",
                "nullable": true
              },
              "usedLicenseCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Used license count.",
                "format": "int32",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "displayName": "string",
          "description": "string",
          "publisher": "string",
          "publishedDateTime": "string (timestamp)",
          "largeCover": {
            "@odata.type": "microsoft.graph.mimeContent"
          },
          "createdDateTime": "string (timestamp)",
          "lastModifiedDateTime": "string (timestamp)",
          "informationUrl": "string",
          "privacyInformationUrl": "string",
          "assignments": [
            {
              "@odata.type": "microsoft.graph.managedEBookAssignment"
            }
          ],
          "installSummary": {
            "@odata.type": "microsoft.graph.eBookInstallSummary"
          },
          "deviceStates": [
            {
              "@odata.type": "microsoft.graph.deviceInstallState"
            }
          ],
          "userStateSummary": [
            {
              "@odata.type": "microsoft.graph.userInstallStateSummary"
            }
          ],
          "vppTokenId": "string",
          "appleId": "string",
          "vppOrganizationName": "string",
          "genres": [
            "string"
          ],
          "language": "string",
          "seller": "string",
          "totalLicenseCount": "integer",
          "usedLicenseCount": "integer"
        }
      },
      "microsoft.graph.managedEBookAssignment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "managedEBookAssignment",
            "type": "object",
            "properties": {
              "target": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceAndAppManagementAssignmentTarget"
                  }
                ],
                "description": "The assignment target for eBook.",
                "nullable": true
              },
              "installIntent": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.installIntent"
                  }
                ],
                "description": "The install intent for eBook. Possible values are: available, required, uninstall, availableWithoutEnrollment.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "target": {
            "@odata.type": "microsoft.graph.deviceAndAppManagementAssignmentTarget"
          },
          "installIntent": {
            "@odata.type": "microsoft.graph.installIntent"
          }
        }
      },
      "microsoft.graph.iosVppEBookAssignment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.managedEBookAssignment"
          },
          {
            "title": "iosVppEBookAssignment",
            "type": "object"
          }
        ],
        "example": {
          "id": "string (identifier)",
          "target": {
            "@odata.type": "microsoft.graph.deviceAndAppManagementAssignmentTarget"
          },
          "installIntent": {
            "@odata.type": "microsoft.graph.installIntent"
          }
        }
      },
      "microsoft.graph.userInstallStateSummary": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "userInstallStateSummary",
            "type": "object",
            "properties": {
              "userName": {
                "type": "string",
                "description": "User name.",
                "nullable": true
              },
              "installedDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Installed Device Count.",
                "format": "int32",
                "nullable": true
              },
              "failedDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Failed Device Count.",
                "format": "int32",
                "nullable": true
              },
              "notInstalledDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Not installed device count.",
                "format": "int32",
                "nullable": true
              },
              "deviceStates": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.deviceInstallState"
                }
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "userName": "string",
          "installedDeviceCount": "integer",
          "failedDeviceCount": "integer",
          "notInstalledDeviceCount": "integer",
          "deviceStates": [
            {
              "@odata.type": "microsoft.graph.deviceInstallState"
            }
          ]
        }
      },
      "microsoft.graph.termsAndConditions": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "termsAndConditions",
            "type": "object",
            "properties": {
              "createdDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "DateTime the object was created.",
                "format": "date-time",
                "nullable": true
              },
              "lastModifiedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "DateTime the object was last modified.",
                "format": "date-time",
                "nullable": true
              },
              "displayName": {
                "type": "string",
                "description": "Administrator-supplied name for the T&C policy.",
                "nullable": true
              },
              "description": {
                "type": "string",
                "description": "Administrator-supplied description of the T&C policy.",
                "nullable": true
              },
              "title": {
                "type": "string",
                "description": "Administrator-supplied title of the terms and conditions. This is shown to the user on prompts to accept the T&C policy.",
                "nullable": true
              },
              "bodyText": {
                "type": "string",
                "description": "Administrator-supplied body text of the terms and conditions, typically the terms themselves. This is shown to the user on prompts to accept the T&C policy.",
                "nullable": true
              },
              "acceptanceStatement": {
                "type": "string",
                "description": "Administrator-supplied explanation of the terms and conditions, typically describing what it means to accept the terms and conditions set out in the T&C policy. This is shown to the user on prompts to accept the T&C policy.",
                "nullable": true
              },
              "version": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Integer indicating the current version of the terms. Incremented when an administrator makes a change to the terms and wishes to require users to re-accept the modified T&C policy.",
                "format": "int32",
                "nullable": true
              },
              "assignments": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.termsAndConditionsAssignment"
                }
              },
              "acceptanceStatuses": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.termsAndConditionsAcceptanceStatus"
                }
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "createdDateTime": "string (timestamp)",
          "lastModifiedDateTime": "string (timestamp)",
          "displayName": "string",
          "description": "string",
          "title": "string",
          "bodyText": "string",
          "acceptanceStatement": "string",
          "version": "integer",
          "assignments": [
            {
              "@odata.type": "microsoft.graph.termsAndConditionsAssignment"
            }
          ],
          "acceptanceStatuses": [
            {
              "@odata.type": "microsoft.graph.termsAndConditionsAcceptanceStatus"
            }
          ]
        }
      },
      "microsoft.graph.termsAndConditionsAcceptanceStatus": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "termsAndConditionsAcceptanceStatus",
            "type": "object",
            "properties": {
              "userDisplayName": {
                "type": "string",
                "description": "Display name of the user whose acceptance the entity represents.",
                "nullable": true
              },
              "acceptedVersion": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Most recent version number of the T&C accepted by the user.",
                "format": "int32",
                "nullable": true
              },
              "acceptedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "DateTime when the terms were last accepted by the user.",
                "format": "date-time",
                "nullable": true
              },
              "termsAndConditions": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.termsAndConditions"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "userDisplayName": "string",
          "acceptedVersion": "integer",
          "acceptedDateTime": "string (timestamp)",
          "termsAndConditions": {
            "@odata.type": "microsoft.graph.termsAndConditions"
          }
        }
      },
      "microsoft.graph.termsAndConditionsAssignment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "termsAndConditionsAssignment",
            "type": "object",
            "properties": {
              "target": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceAndAppManagementAssignmentTarget"
                  }
                ],
                "description": "Assignment target that the T&C policy is assigned to.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "target": {
            "@odata.type": "microsoft.graph.deviceAndAppManagementAssignmentTarget"
          }
        }
      },
      "microsoft.graph.deviceCompliancePolicy": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "deviceCompliancePolicy",
            "type": "object",
            "properties": {
              "createdDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "DateTime the object was created.",
                "format": "date-time",
                "nullable": true
              },
              "description": {
                "type": "string",
                "description": "Admin provided description of the Device Configuration.",
                "nullable": true
              },
              "lastModifiedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "DateTime the object was last modified.",
                "format": "date-time",
                "nullable": true
              },
              "displayName": {
                "type": "string",
                "description": "Admin provided name of the device configuration.",
                "nullable": true
              },
              "version": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Version of the device configuration.",
                "format": "int32",
                "nullable": true
              },
              "scheduledActionsForRule": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.deviceComplianceScheduledActionForRule"
                }
              },
              "deviceStatuses": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.deviceComplianceDeviceStatus"
                }
              },
              "userStatuses": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.deviceComplianceUserStatus"
                }
              },
              "deviceStatusOverview": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceComplianceDeviceOverview"
                  }
                ],
                "nullable": true
              },
              "userStatusOverview": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceComplianceUserOverview"
                  }
                ],
                "nullable": true
              },
              "deviceSettingStateSummaries": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.settingStateDeviceSummary"
                }
              },
              "assignments": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.deviceCompliancePolicyAssignment"
                }
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "createdDateTime": "string (timestamp)",
          "description": "string",
          "lastModifiedDateTime": "string (timestamp)",
          "displayName": "string",
          "version": "integer",
          "scheduledActionsForRule": [
            {
              "@odata.type": "microsoft.graph.deviceComplianceScheduledActionForRule"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceComplianceDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceComplianceUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceComplianceDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceComplianceUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceCompliancePolicyAssignment"
            }
          ]
        }
      },
      "microsoft.graph.androidCompliancePolicy": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceCompliancePolicy"
          },
          {
            "title": "androidCompliancePolicy",
            "type": "object",
            "properties": {
              "passwordRequired": {
                "type": "boolean",
                "description": "Require a password to unlock device.",
                "nullable": true
              },
              "passwordMinimumLength": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Minimum password length. Valid values 4 to 16",
                "format": "int32",
                "nullable": true
              },
              "passwordRequiredType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.androidRequiredPasswordType"
                  }
                ],
                "description": "Type of characters in password. Possible values are: deviceDefault, alphabetic, alphanumeric, alphanumericWithSymbols, lowSecurityBiometric, numeric, numericComplex, any.",
                "nullable": true
              },
              "passwordMinutesOfInactivityBeforeLock": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Minutes of inactivity before a password is required.",
                "format": "int32",
                "nullable": true
              },
              "passwordExpirationDays": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of days before the password expires. Valid values 1 to 65535",
                "format": "int32",
                "nullable": true
              },
              "passwordPreviousPasswordBlockCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of previous passwords to block.",
                "format": "int32",
                "nullable": true
              },
              "securityPreventInstallAppsFromUnknownSources": {
                "type": "boolean",
                "description": "Require that devices disallow installation of apps from unknown sources.",
                "nullable": true
              },
              "securityDisableUsbDebugging": {
                "type": "boolean",
                "description": "Disable USB debugging on Android devices.",
                "nullable": true
              },
              "securityRequireVerifyApps": {
                "type": "boolean",
                "description": "Require the Android Verify apps feature is turned on.",
                "nullable": true
              },
              "deviceThreatProtectionEnabled": {
                "type": "boolean",
                "description": "Require that devices have enabled device threat protection.",
                "nullable": true
              },
              "deviceThreatProtectionRequiredSecurityLevel": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceThreatProtectionLevel"
                  }
                ],
                "description": "Require Mobile Threat Protection minimum risk level to report noncompliance. Possible values are: unavailable, secured, low, medium, high, notSet.",
                "nullable": true
              },
              "securityBlockJailbrokenDevices": {
                "type": "boolean",
                "description": "Devices must not be jailbroken or rooted.",
                "nullable": true
              },
              "osMinimumVersion": {
                "type": "string",
                "description": "Minimum Android version.",
                "nullable": true
              },
              "osMaximumVersion": {
                "type": "string",
                "description": "Maximum Android version.",
                "nullable": true
              },
              "minAndroidSecurityPatchLevel": {
                "type": "string",
                "description": "Minimum Android security patch level.",
                "nullable": true
              },
              "storageRequireEncryption": {
                "type": "boolean",
                "description": "Require encryption on Android devices.",
                "nullable": true
              },
              "securityRequireSafetyNetAttestationBasicIntegrity": {
                "type": "boolean",
                "description": "Require the device to pass the SafetyNet basic integrity check.",
                "nullable": true
              },
              "securityRequireSafetyNetAttestationCertifiedDevice": {
                "type": "boolean",
                "description": "Require the device to pass the SafetyNet certified device check.",
                "nullable": true
              },
              "securityRequireGooglePlayServices": {
                "type": "boolean",
                "description": "Require Google Play Services to be installed and enabled on the device.",
                "nullable": true
              },
              "securityRequireUpToDateSecurityProviders": {
                "type": "boolean",
                "description": "Require the device to have up to date security providers. The device will require Google Play Services to be enabled and up to date.",
                "nullable": true
              },
              "securityRequireCompanyPortalAppIntegrity": {
                "type": "boolean",
                "description": "Require the device to pass the Company Portal client app runtime integrity check.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "createdDateTime": "string (timestamp)",
          "description": "string",
          "lastModifiedDateTime": "string (timestamp)",
          "displayName": "string",
          "version": "integer",
          "scheduledActionsForRule": [
            {
              "@odata.type": "microsoft.graph.deviceComplianceScheduledActionForRule"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceComplianceDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceComplianceUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceComplianceDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceComplianceUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceCompliancePolicyAssignment"
            }
          ],
          "passwordRequired": true,
          "passwordMinimumLength": "integer",
          "passwordRequiredType": {
            "@odata.type": "microsoft.graph.androidRequiredPasswordType"
          },
          "passwordMinutesOfInactivityBeforeLock": "integer",
          "passwordExpirationDays": "integer",
          "passwordPreviousPasswordBlockCount": "integer",
          "securityPreventInstallAppsFromUnknownSources": true,
          "securityDisableUsbDebugging": true,
          "securityRequireVerifyApps": true,
          "deviceThreatProtectionEnabled": true,
          "deviceThreatProtectionRequiredSecurityLevel": {
            "@odata.type": "microsoft.graph.deviceThreatProtectionLevel"
          },
          "securityBlockJailbrokenDevices": true,
          "osMinimumVersion": "string",
          "osMaximumVersion": "string",
          "minAndroidSecurityPatchLevel": "string",
          "storageRequireEncryption": true,
          "securityRequireSafetyNetAttestationBasicIntegrity": true,
          "securityRequireSafetyNetAttestationCertifiedDevice": true,
          "securityRequireGooglePlayServices": true,
          "securityRequireUpToDateSecurityProviders": true,
          "securityRequireCompanyPortalAppIntegrity": true
        }
      },
      "microsoft.graph.deviceConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "deviceConfiguration",
            "type": "object",
            "properties": {
              "lastModifiedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "DateTime the object was last modified.",
                "format": "date-time",
                "nullable": true
              },
              "createdDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "DateTime the object was created.",
                "format": "date-time",
                "nullable": true
              },
              "description": {
                "type": "string",
                "description": "Admin provided description of the Device Configuration.",
                "nullable": true
              },
              "displayName": {
                "type": "string",
                "description": "Admin provided name of the device configuration.",
                "nullable": true
              },
              "version": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Version of the device configuration.",
                "format": "int32",
                "nullable": true
              },
              "assignments": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.deviceConfigurationAssignment"
                }
              },
              "deviceStatuses": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.deviceConfigurationDeviceStatus"
                }
              },
              "userStatuses": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.deviceConfigurationUserStatus"
                }
              },
              "deviceStatusOverview": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceConfigurationDeviceOverview"
                  }
                ],
                "nullable": true
              },
              "userStatusOverview": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceConfigurationUserOverview"
                  }
                ],
                "nullable": true
              },
              "deviceSettingStateSummaries": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.settingStateDeviceSummary"
                }
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "lastModifiedDateTime": "string (timestamp)",
          "createdDateTime": "string (timestamp)",
          "description": "string",
          "displayName": "string",
          "version": "integer",
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ]
        }
      },
      "microsoft.graph.androidCustomConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceConfiguration"
          },
          {
            "title": "androidCustomConfiguration",
            "type": "object",
            "properties": {
              "omaSettings": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.omaSetting"
                    }
                  ],
                  "nullable": true
                },
                "description": "OMA settings. This collection can contain a maximum of 1000 elements."
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "lastModifiedDateTime": "string (timestamp)",
          "createdDateTime": "string (timestamp)",
          "description": "string",
          "displayName": "string",
          "version": "integer",
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "omaSettings": [
            {
              "@odata.type": "microsoft.graph.omaSetting"
            }
          ]
        }
      },
      "microsoft.graph.androidGeneralDeviceConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceConfiguration"
          },
          {
            "title": "androidGeneralDeviceConfiguration",
            "type": "object",
            "properties": {
              "appsBlockClipboardSharing": {
                "type": "boolean",
                "description": "Indicates whether or not to block clipboard sharing to copy and paste between applications.",
                "nullable": true
              },
              "appsBlockCopyPaste": {
                "type": "boolean",
                "description": "Indicates whether or not to block copy and paste within applications.",
                "nullable": true
              },
              "appsBlockYouTube": {
                "type": "boolean",
                "description": "Indicates whether or not to block the YouTube app.",
                "nullable": true
              },
              "bluetoothBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to block Bluetooth.",
                "nullable": true
              },
              "cameraBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to block the use of the camera.",
                "nullable": true
              },
              "cellularBlockDataRoaming": {
                "type": "boolean",
                "description": "Indicates whether or not to block data roaming.",
                "nullable": true
              },
              "cellularBlockMessaging": {
                "type": "boolean",
                "description": "Indicates whether or not to block SMS/MMS messaging.",
                "nullable": true
              },
              "cellularBlockVoiceRoaming": {
                "type": "boolean",
                "description": "Indicates whether or not to block voice roaming.",
                "nullable": true
              },
              "cellularBlockWiFiTethering": {
                "type": "boolean",
                "description": "Indicates whether or not to block syncing Wi-Fi tethering.",
                "nullable": true
              },
              "compliantAppsList": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.appListItem"
                    }
                  ],
                  "nullable": true
                },
                "description": "List of apps in the compliance (either allow list or block list, controlled by CompliantAppListType). This collection can contain a maximum of 10000 elements."
              },
              "compliantAppListType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.appListType"
                  }
                ],
                "description": "Type of list that is in the CompliantAppsList. Possible values are: none, appsInListCompliant, appsNotInListCompliant.",
                "nullable": true
              },
              "diagnosticDataBlockSubmission": {
                "type": "boolean",
                "description": "Indicates whether or not to block diagnostic data submission.",
                "nullable": true
              },
              "locationServicesBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to block location services.",
                "nullable": true
              },
              "googleAccountBlockAutoSync": {
                "type": "boolean",
                "description": "Indicates whether or not to block Google account auto sync.",
                "nullable": true
              },
              "googlePlayStoreBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to block the Google Play store.",
                "nullable": true
              },
              "kioskModeBlockSleepButton": {
                "type": "boolean",
                "description": "Indicates whether or not to block the screen sleep button while in Kiosk Mode.",
                "nullable": true
              },
              "kioskModeBlockVolumeButtons": {
                "type": "boolean",
                "description": "Indicates whether or not to block the volume buttons while in Kiosk Mode.",
                "nullable": true
              },
              "kioskModeApps": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.appListItem"
                    }
                  ],
                  "nullable": true
                },
                "description": "A list of apps that will be allowed to run when the device is in Kiosk Mode. This collection can contain a maximum of 500 elements."
              },
              "nfcBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to block Near-Field Communication.",
                "nullable": true
              },
              "passwordBlockFingerprintUnlock": {
                "type": "boolean",
                "description": "Indicates whether or not to block fingerprint unlock.",
                "nullable": true
              },
              "passwordBlockTrustAgents": {
                "type": "boolean",
                "description": "Indicates whether or not to block Smart Lock and other trust agents.",
                "nullable": true
              },
              "passwordExpirationDays": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of days before the password expires. Valid values 1 to 365",
                "format": "int32",
                "nullable": true
              },
              "passwordMinimumLength": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Minimum length of passwords. Valid values 4 to 16",
                "format": "int32",
                "nullable": true
              },
              "passwordMinutesOfInactivityBeforeScreenTimeout": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Minutes of inactivity before the screen times out.",
                "format": "int32",
                "nullable": true
              },
              "passwordPreviousPasswordBlockCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of previous passwords to block. Valid values 0 to 24",
                "format": "int32",
                "nullable": true
              },
              "passwordSignInFailureCountBeforeFactoryReset": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of sign in failures allowed before factory reset. Valid values 4 to 11",
                "format": "int32",
                "nullable": true
              },
              "passwordRequiredType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.androidRequiredPasswordType"
                  }
                ],
                "description": "Type of password that is required. Possible values are: deviceDefault, alphabetic, alphanumeric, alphanumericWithSymbols, lowSecurityBiometric, numeric, numericComplex, any.",
                "nullable": true
              },
              "passwordRequired": {
                "type": "boolean",
                "description": "Indicates whether or not to require a password.",
                "nullable": true
              },
              "powerOffBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to block powering off the device.",
                "nullable": true
              },
              "factoryResetBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to block user performing a factory reset.",
                "nullable": true
              },
              "screenCaptureBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to block screenshots.",
                "nullable": true
              },
              "deviceSharingAllowed": {
                "type": "boolean",
                "description": "Indicates whether or not to allow device sharing mode.",
                "nullable": true
              },
              "storageBlockGoogleBackup": {
                "type": "boolean",
                "description": "Indicates whether or not to block Google Backup.",
                "nullable": true
              },
              "storageBlockRemovableStorage": {
                "type": "boolean",
                "description": "Indicates whether or not to block removable storage usage.",
                "nullable": true
              },
              "storageRequireDeviceEncryption": {
                "type": "boolean",
                "description": "Indicates whether or not to require device encryption.",
                "nullable": true
              },
              "storageRequireRemovableStorageEncryption": {
                "type": "boolean",
                "description": "Indicates whether or not to require removable storage encryption.",
                "nullable": true
              },
              "voiceAssistantBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to block the use of the Voice Assistant.",
                "nullable": true
              },
              "voiceDialingBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to block voice dialing.",
                "nullable": true
              },
              "webBrowserBlockPopups": {
                "type": "boolean",
                "description": "Indicates whether or not to block popups within the web browser.",
                "nullable": true
              },
              "webBrowserBlockAutofill": {
                "type": "boolean",
                "description": "Indicates whether or not to block the web browser's auto fill feature.",
                "nullable": true
              },
              "webBrowserBlockJavaScript": {
                "type": "boolean",
                "description": "Indicates whether or not to block JavaScript within the web browser.",
                "nullable": true
              },
              "webBrowserBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to block the web browser.",
                "nullable": true
              },
              "webBrowserCookieSettings": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.webBrowserCookieSettings"
                  }
                ],
                "description": "Cookie settings within the web browser. Possible values are: browserDefault, blockAlways, allowCurrentWebSite, allowFromWebsitesVisited, allowAlways.",
                "nullable": true
              },
              "wiFiBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to block syncing Wi-Fi.",
                "nullable": true
              },
              "appsInstallAllowList": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.appListItem"
                    }
                  ],
                  "nullable": true
                },
                "description": "List of apps which can be installed on the KNOX device. This collection can contain a maximum of 500 elements."
              },
              "appsLaunchBlockList": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.appListItem"
                    }
                  ],
                  "nullable": true
                },
                "description": "List of apps which are blocked from being launched on the KNOX device. This collection can contain a maximum of 500 elements."
              },
              "appsHideList": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.appListItem"
                    }
                  ],
                  "nullable": true
                },
                "description": "List of apps to be hidden on the KNOX device. This collection can contain a maximum of 500 elements."
              },
              "securityRequireVerifyApps": {
                "type": "boolean",
                "description": "Require the Android Verify apps feature is turned on.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "lastModifiedDateTime": "string (timestamp)",
          "createdDateTime": "string (timestamp)",
          "description": "string",
          "displayName": "string",
          "version": "integer",
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "appsBlockClipboardSharing": true,
          "appsBlockCopyPaste": true,
          "appsBlockYouTube": true,
          "bluetoothBlocked": true,
          "cameraBlocked": true,
          "cellularBlockDataRoaming": true,
          "cellularBlockMessaging": true,
          "cellularBlockVoiceRoaming": true,
          "cellularBlockWiFiTethering": true,
          "compliantAppsList": [
            {
              "@odata.type": "microsoft.graph.appListItem"
            }
          ],
          "compliantAppListType": {
            "@odata.type": "microsoft.graph.appListType"
          },
          "diagnosticDataBlockSubmission": true,
          "locationServicesBlocked": true,
          "googleAccountBlockAutoSync": true,
          "googlePlayStoreBlocked": true,
          "kioskModeBlockSleepButton": true,
          "kioskModeBlockVolumeButtons": true,
          "kioskModeApps": [
            {
              "@odata.type": "microsoft.graph.appListItem"
            }
          ],
          "nfcBlocked": true,
          "passwordBlockFingerprintUnlock": true,
          "passwordBlockTrustAgents": true,
          "passwordExpirationDays": "integer",
          "passwordMinimumLength": "integer",
          "passwordMinutesOfInactivityBeforeScreenTimeout": "integer",
          "passwordPreviousPasswordBlockCount": "integer",
          "passwordSignInFailureCountBeforeFactoryReset": "integer",
          "passwordRequiredType": {
            "@odata.type": "microsoft.graph.androidRequiredPasswordType"
          },
          "passwordRequired": true,
          "powerOffBlocked": true,
          "factoryResetBlocked": true,
          "screenCaptureBlocked": true,
          "deviceSharingAllowed": true,
          "storageBlockGoogleBackup": true,
          "storageBlockRemovableStorage": true,
          "storageRequireDeviceEncryption": true,
          "storageRequireRemovableStorageEncryption": true,
          "voiceAssistantBlocked": true,
          "voiceDialingBlocked": true,
          "webBrowserBlockPopups": true,
          "webBrowserBlockAutofill": true,
          "webBrowserBlockJavaScript": true,
          "webBrowserBlocked": true,
          "webBrowserCookieSettings": {
            "@odata.type": "microsoft.graph.webBrowserCookieSettings"
          },
          "wiFiBlocked": true,
          "appsInstallAllowList": [
            {
              "@odata.type": "microsoft.graph.appListItem"
            }
          ],
          "appsLaunchBlockList": [
            {
              "@odata.type": "microsoft.graph.appListItem"
            }
          ],
          "appsHideList": [
            {
              "@odata.type": "microsoft.graph.appListItem"
            }
          ],
          "securityRequireVerifyApps": true
        }
      },
      "microsoft.graph.androidWorkProfileCompliancePolicy": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceCompliancePolicy"
          },
          {
            "title": "androidWorkProfileCompliancePolicy",
            "type": "object",
            "properties": {
              "passwordRequired": {
                "type": "boolean",
                "description": "Require a password to unlock device.",
                "nullable": true
              },
              "passwordMinimumLength": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Minimum password length. Valid values 4 to 16",
                "format": "int32",
                "nullable": true
              },
              "passwordRequiredType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.androidRequiredPasswordType"
                  }
                ],
                "description": "Type of characters in password. Possible values are: deviceDefault, alphabetic, alphanumeric, alphanumericWithSymbols, lowSecurityBiometric, numeric, numericComplex, any.",
                "nullable": true
              },
              "passwordMinutesOfInactivityBeforeLock": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Minutes of inactivity before a password is required.",
                "format": "int32",
                "nullable": true
              },
              "passwordExpirationDays": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of days before the password expires. Valid values 1 to 365",
                "format": "int32",
                "nullable": true
              },
              "passwordPreviousPasswordBlockCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of previous passwords to block.",
                "format": "int32",
                "nullable": true
              },
              "securityPreventInstallAppsFromUnknownSources": {
                "type": "boolean",
                "description": "Require that devices disallow installation of apps from unknown sources.",
                "nullable": true
              },
              "securityDisableUsbDebugging": {
                "type": "boolean",
                "description": "Disable USB debugging on Android devices.",
                "nullable": true
              },
              "securityRequireVerifyApps": {
                "type": "boolean",
                "description": "Require the Android Verify apps feature is turned on.",
                "nullable": true
              },
              "deviceThreatProtectionEnabled": {
                "type": "boolean",
                "description": "Require that devices have enabled device threat protection.",
                "nullable": true
              },
              "deviceThreatProtectionRequiredSecurityLevel": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceThreatProtectionLevel"
                  }
                ],
                "description": "Require Mobile Threat Protection minimum risk level to report noncompliance. Possible values are: unavailable, secured, low, medium, high, notSet.",
                "nullable": true
              },
              "securityBlockJailbrokenDevices": {
                "type": "boolean",
                "description": "Devices must not be jailbroken or rooted.",
                "nullable": true
              },
              "osMinimumVersion": {
                "type": "string",
                "description": "Minimum Android version.",
                "nullable": true
              },
              "osMaximumVersion": {
                "type": "string",
                "description": "Maximum Android version.",
                "nullable": true
              },
              "minAndroidSecurityPatchLevel": {
                "type": "string",
                "description": "Minimum Android security patch level.",
                "nullable": true
              },
              "storageRequireEncryption": {
                "type": "boolean",
                "description": "Require encryption on Android devices.",
                "nullable": true
              },
              "securityRequireSafetyNetAttestationBasicIntegrity": {
                "type": "boolean",
                "description": "Require the device to pass the SafetyNet basic integrity check.",
                "nullable": true
              },
              "securityRequireSafetyNetAttestationCertifiedDevice": {
                "type": "boolean",
                "description": "Require the device to pass the SafetyNet certified device check.",
                "nullable": true
              },
              "securityRequireGooglePlayServices": {
                "type": "boolean",
                "description": "Require Google Play Services to be installed and enabled on the device.",
                "nullable": true
              },
              "securityRequireUpToDateSecurityProviders": {
                "type": "boolean",
                "description": "Require the device to have up to date security providers. The device will require Google Play Services to be enabled and up to date.",
                "nullable": true
              },
              "securityRequireCompanyPortalAppIntegrity": {
                "type": "boolean",
                "description": "Require the device to pass the Company Portal client app runtime integrity check.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "createdDateTime": "string (timestamp)",
          "description": "string",
          "lastModifiedDateTime": "string (timestamp)",
          "displayName": "string",
          "version": "integer",
          "scheduledActionsForRule": [
            {
              "@odata.type": "microsoft.graph.deviceComplianceScheduledActionForRule"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceComplianceDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceComplianceUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceComplianceDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceComplianceUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceCompliancePolicyAssignment"
            }
          ],
          "passwordRequired": true,
          "passwordMinimumLength": "integer",
          "passwordRequiredType": {
            "@odata.type": "microsoft.graph.androidRequiredPasswordType"
          },
          "passwordMinutesOfInactivityBeforeLock": "integer",
          "passwordExpirationDays": "integer",
          "passwordPreviousPasswordBlockCount": "integer",
          "securityPreventInstallAppsFromUnknownSources": true,
          "securityDisableUsbDebugging": true,
          "securityRequireVerifyApps": true,
          "deviceThreatProtectionEnabled": true,
          "deviceThreatProtectionRequiredSecurityLevel": {
            "@odata.type": "microsoft.graph.deviceThreatProtectionLevel"
          },
          "securityBlockJailbrokenDevices": true,
          "osMinimumVersion": "string",
          "osMaximumVersion": "string",
          "minAndroidSecurityPatchLevel": "string",
          "storageRequireEncryption": true,
          "securityRequireSafetyNetAttestationBasicIntegrity": true,
          "securityRequireSafetyNetAttestationCertifiedDevice": true,
          "securityRequireGooglePlayServices": true,
          "securityRequireUpToDateSecurityProviders": true,
          "securityRequireCompanyPortalAppIntegrity": true
        }
      },
      "microsoft.graph.androidWorkProfileCustomConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceConfiguration"
          },
          {
            "title": "androidWorkProfileCustomConfiguration",
            "type": "object",
            "properties": {
              "omaSettings": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.omaSetting"
                    }
                  ],
                  "nullable": true
                },
                "description": "OMA settings. This collection can contain a maximum of 500 elements."
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "lastModifiedDateTime": "string (timestamp)",
          "createdDateTime": "string (timestamp)",
          "description": "string",
          "displayName": "string",
          "version": "integer",
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "omaSettings": [
            {
              "@odata.type": "microsoft.graph.omaSetting"
            }
          ]
        }
      },
      "microsoft.graph.androidWorkProfileGeneralDeviceConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceConfiguration"
          },
          {
            "title": "androidWorkProfileGeneralDeviceConfiguration",
            "type": "object",
            "properties": {
              "passwordBlockFingerprintUnlock": {
                "type": "boolean",
                "description": "Indicates whether or not to block fingerprint unlock.",
                "nullable": true
              },
              "passwordBlockTrustAgents": {
                "type": "boolean",
                "description": "Indicates whether or not to block Smart Lock and other trust agents.",
                "nullable": true
              },
              "passwordExpirationDays": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of days before the password expires. Valid values 1 to 365",
                "format": "int32",
                "nullable": true
              },
              "passwordMinimumLength": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Minimum length of passwords. Valid values 4 to 16",
                "format": "int32",
                "nullable": true
              },
              "passwordMinutesOfInactivityBeforeScreenTimeout": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Minutes of inactivity before the screen times out.",
                "format": "int32",
                "nullable": true
              },
              "passwordPreviousPasswordBlockCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of previous passwords to block. Valid values 0 to 24",
                "format": "int32",
                "nullable": true
              },
              "passwordSignInFailureCountBeforeFactoryReset": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of sign in failures allowed before factory reset. Valid values 4 to 11",
                "format": "int32",
                "nullable": true
              },
              "passwordRequiredType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.androidWorkProfileRequiredPasswordType"
                  }
                ],
                "description": "Type of password that is required. Possible values are: deviceDefault, lowSecurityBiometric, required, atLeastNumeric, numericComplex, atLeastAlphabetic, atLeastAlphanumeric, alphanumericWithSymbols.",
                "nullable": true
              },
              "workProfileDataSharingType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.androidWorkProfileCrossProfileDataSharingType"
                  }
                ],
                "description": "Type of data sharing that is allowed. Possible values are: deviceDefault, preventAny, allowPersonalToWork, noRestrictions.",
                "nullable": true
              },
              "workProfileBlockNotificationsWhileDeviceLocked": {
                "type": "boolean",
                "description": "Indicates whether or not to block notifications while device locked.",
                "nullable": true
              },
              "workProfileBlockAddingAccounts": {
                "type": "boolean",
                "description": "Block users from adding/removing accounts in work profile.",
                "nullable": true
              },
              "workProfileBluetoothEnableContactSharing": {
                "type": "boolean",
                "description": "Allow bluetooth devices to access enterprise contacts.",
                "nullable": true
              },
              "workProfileBlockScreenCapture": {
                "type": "boolean",
                "description": "Block screen capture in work profile.",
                "nullable": true
              },
              "workProfileBlockCrossProfileCallerId": {
                "type": "boolean",
                "description": "Block display work profile caller ID in personal profile.",
                "nullable": true
              },
              "workProfileBlockCamera": {
                "type": "boolean",
                "description": "Block work profile camera.",
                "nullable": true
              },
              "workProfileBlockCrossProfileContactsSearch": {
                "type": "boolean",
                "description": "Block work profile contacts availability in personal profile.",
                "nullable": true
              },
              "workProfileBlockCrossProfileCopyPaste": {
                "type": "boolean",
                "description": "Boolean that indicates if the setting disallow cross profile copy/paste is enabled.",
                "nullable": true
              },
              "workProfileDefaultAppPermissionPolicy": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.androidWorkProfileDefaultAppPermissionPolicyType"
                  }
                ],
                "description": "Type of password that is required. Possible values are: deviceDefault, prompt, autoGrant, autoDeny.",
                "nullable": true
              },
              "workProfilePasswordBlockFingerprintUnlock": {
                "type": "boolean",
                "description": "Indicates whether or not to block fingerprint unlock for work profile.",
                "nullable": true
              },
              "workProfilePasswordBlockTrustAgents": {
                "type": "boolean",
                "description": "Indicates whether or not to block Smart Lock and other trust agents for work profile.",
                "nullable": true
              },
              "workProfilePasswordExpirationDays": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of days before the work profile password expires. Valid values 1 to 365",
                "format": "int32",
                "nullable": true
              },
              "workProfilePasswordMinimumLength": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Minimum length of work profile password. Valid values 4 to 16",
                "format": "int32",
                "nullable": true
              },
              "workProfilePasswordMinNumericCharacters": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Minimum # of numeric characters required in work profile password. Valid values 1 to 10",
                "format": "int32",
                "nullable": true
              },
              "workProfilePasswordMinNonLetterCharacters": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Minimum # of non-letter characters required in work profile password. Valid values 1 to 10",
                "format": "int32",
                "nullable": true
              },
              "workProfilePasswordMinLetterCharacters": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Minimum # of letter characters required in work profile password. Valid values 1 to 10",
                "format": "int32",
                "nullable": true
              },
              "workProfilePasswordMinLowerCaseCharacters": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Minimum # of lower-case characters required in work profile password. Valid values 1 to 10",
                "format": "int32",
                "nullable": true
              },
              "workProfilePasswordMinUpperCaseCharacters": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Minimum # of upper-case characters required in work profile password. Valid values 1 to 10",
                "format": "int32",
                "nullable": true
              },
              "workProfilePasswordMinSymbolCharacters": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Minimum # of symbols required in work profile password. Valid values 1 to 10",
                "format": "int32",
                "nullable": true
              },
              "workProfilePasswordMinutesOfInactivityBeforeScreenTimeout": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Minutes of inactivity before the screen times out.",
                "format": "int32",
                "nullable": true
              },
              "workProfilePasswordPreviousPasswordBlockCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of previous work profile passwords to block. Valid values 0 to 24",
                "format": "int32",
                "nullable": true
              },
              "workProfilePasswordSignInFailureCountBeforeFactoryReset": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of sign in failures allowed before work profile is removed and all corporate data deleted. Valid values 4 to 11",
                "format": "int32",
                "nullable": true
              },
              "workProfilePasswordRequiredType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.androidWorkProfileRequiredPasswordType"
                  }
                ],
                "description": "Type of work profile password that is required. Possible values are: deviceDefault, lowSecurityBiometric, required, atLeastNumeric, numericComplex, atLeastAlphabetic, atLeastAlphanumeric, alphanumericWithSymbols.",
                "nullable": true
              },
              "workProfileRequirePassword": {
                "type": "boolean",
                "description": "Password is required or not for work profile",
                "nullable": true
              },
              "securityRequireVerifyApps": {
                "type": "boolean",
                "description": "Require the Android Verify apps feature is turned on.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "lastModifiedDateTime": "string (timestamp)",
          "createdDateTime": "string (timestamp)",
          "description": "string",
          "displayName": "string",
          "version": "integer",
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "passwordBlockFingerprintUnlock": true,
          "passwordBlockTrustAgents": true,
          "passwordExpirationDays": "integer",
          "passwordMinimumLength": "integer",
          "passwordMinutesOfInactivityBeforeScreenTimeout": "integer",
          "passwordPreviousPasswordBlockCount": "integer",
          "passwordSignInFailureCountBeforeFactoryReset": "integer",
          "passwordRequiredType": {
            "@odata.type": "microsoft.graph.androidWorkProfileRequiredPasswordType"
          },
          "workProfileDataSharingType": {
            "@odata.type": "microsoft.graph.androidWorkProfileCrossProfileDataSharingType"
          },
          "workProfileBlockNotificationsWhileDeviceLocked": true,
          "workProfileBlockAddingAccounts": true,
          "workProfileBluetoothEnableContactSharing": true,
          "workProfileBlockScreenCapture": true,
          "workProfileBlockCrossProfileCallerId": true,
          "workProfileBlockCamera": true,
          "workProfileBlockCrossProfileContactsSearch": true,
          "workProfileBlockCrossProfileCopyPaste": true,
          "workProfileDefaultAppPermissionPolicy": {
            "@odata.type": "microsoft.graph.androidWorkProfileDefaultAppPermissionPolicyType"
          },
          "workProfilePasswordBlockFingerprintUnlock": true,
          "workProfilePasswordBlockTrustAgents": true,
          "workProfilePasswordExpirationDays": "integer",
          "workProfilePasswordMinimumLength": "integer",
          "workProfilePasswordMinNumericCharacters": "integer",
          "workProfilePasswordMinNonLetterCharacters": "integer",
          "workProfilePasswordMinLetterCharacters": "integer",
          "workProfilePasswordMinLowerCaseCharacters": "integer",
          "workProfilePasswordMinUpperCaseCharacters": "integer",
          "workProfilePasswordMinSymbolCharacters": "integer",
          "workProfilePasswordMinutesOfInactivityBeforeScreenTimeout": "integer",
          "workProfilePasswordPreviousPasswordBlockCount": "integer",
          "workProfilePasswordSignInFailureCountBeforeFactoryReset": "integer",
          "workProfilePasswordRequiredType": {
            "@odata.type": "microsoft.graph.androidWorkProfileRequiredPasswordType"
          },
          "workProfileRequirePassword": true,
          "securityRequireVerifyApps": true
        }
      },
      "microsoft.graph.appleDeviceFeaturesConfigurationBase": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceConfiguration"
          },
          {
            "title": "appleDeviceFeaturesConfigurationBase",
            "type": "object"
          }
        ],
        "example": {
          "id": "string (identifier)",
          "lastModifiedDateTime": "string (timestamp)",
          "createdDateTime": "string (timestamp)",
          "description": "string",
          "displayName": "string",
          "version": "integer",
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ]
        }
      },
      "microsoft.graph.deviceComplianceActionItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "deviceComplianceActionItem",
            "type": "object",
            "properties": {
              "gracePeriodHours": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of hours to wait till the action will be enforced. Valid values 0 to 8760",
                "format": "int32",
                "nullable": true
              },
              "actionType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceComplianceActionType"
                  }
                ],
                "description": "What action to take. Possible values are: noAction, notification, block, retire, wipe, removeResourceAccessProfiles, pushNotification.",
                "nullable": true
              },
              "notificationTemplateId": {
                "type": "string",
                "description": "What notification Message template to use",
                "nullable": true
              },
              "notificationMessageCCList": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "A list of group IDs to speicify who to CC this notification message to."
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "gracePeriodHours": "integer",
          "actionType": {
            "@odata.type": "microsoft.graph.deviceComplianceActionType"
          },
          "notificationTemplateId": "string",
          "notificationMessageCCList": [
            "string"
          ]
        }
      },
      "microsoft.graph.deviceComplianceDeviceOverview": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "deviceComplianceDeviceOverview",
            "type": "object",
            "properties": {
              "pendingCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of pending devices",
                "format": "int32",
                "nullable": true
              },
              "notApplicableCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of not applicable devices",
                "format": "int32",
                "nullable": true
              },
              "successCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of succeeded devices",
                "format": "int32",
                "nullable": true
              },
              "errorCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of error devices",
                "format": "int32",
                "nullable": true
              },
              "failedCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of failed devices",
                "format": "int32",
                "nullable": true
              },
              "lastUpdateDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Last update time",
                "format": "date-time",
                "nullable": true
              },
              "configurationVersion": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Version of the policy for that overview",
                "format": "int32",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "pendingCount": "integer",
          "notApplicableCount": "integer",
          "successCount": "integer",
          "errorCount": "integer",
          "failedCount": "integer",
          "lastUpdateDateTime": "string (timestamp)",
          "configurationVersion": "integer"
        }
      },
      "microsoft.graph.deviceComplianceDeviceStatus": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "deviceComplianceDeviceStatus",
            "type": "object",
            "properties": {
              "deviceDisplayName": {
                "type": "string",
                "description": "Device name of the DevicePolicyStatus.",
                "nullable": true
              },
              "userName": {
                "type": "string",
                "description": "The User Name that is being reported",
                "nullable": true
              },
              "deviceModel": {
                "type": "string",
                "description": "The device model that is being reported",
                "nullable": true
              },
              "complianceGracePeriodExpirationDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The DateTime when device compliance grace period expires",
                "format": "date-time",
                "nullable": true
              },
              "status": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.complianceStatus"
                  }
                ],
                "description": "Compliance status of the policy report. Possible values are: unknown, notApplicable, compliant, remediated, nonCompliant, error, conflict, notAssigned.",
                "nullable": true
              },
              "lastReportedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Last modified date time of the policy report.",
                "format": "date-time",
                "nullable": true
              },
              "userPrincipalName": {
                "type": "string",
                "description": "UserPrincipalName.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "deviceDisplayName": "string",
          "userName": "string",
          "deviceModel": "string",
          "complianceGracePeriodExpirationDateTime": "string (timestamp)",
          "status": {
            "@odata.type": "microsoft.graph.complianceStatus"
          },
          "lastReportedDateTime": "string (timestamp)",
          "userPrincipalName": "string"
        }
      },
      "microsoft.graph.deviceCompliancePolicyAssignment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "deviceCompliancePolicyAssignment",
            "type": "object",
            "properties": {
              "target": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceAndAppManagementAssignmentTarget"
                  }
                ],
                "description": "Target for the compliance policy assignment.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "target": {
            "@odata.type": "microsoft.graph.deviceAndAppManagementAssignmentTarget"
          }
        }
      },
      "microsoft.graph.deviceCompliancePolicyDeviceStateSummary": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "deviceCompliancePolicyDeviceStateSummary",
            "type": "object",
            "properties": {
              "inGracePeriodCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of devices that are in grace period",
                "format": "int32",
                "nullable": true
              },
              "configManagerCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of devices that have compliance managed by System Center Configuration Manager",
                "format": "int32",
                "nullable": true
              },
              "unknownDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of unknown devices",
                "format": "int32",
                "nullable": true
              },
              "notApplicableDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of not applicable devices",
                "format": "int32",
                "nullable": true
              },
              "compliantDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of compliant devices",
                "format": "int32",
                "nullable": true
              },
              "remediatedDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of remediated devices",
                "format": "int32",
                "nullable": true
              },
              "nonCompliantDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of NonCompliant devices",
                "format": "int32",
                "nullable": true
              },
              "errorDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of error devices",
                "format": "int32",
                "nullable": true
              },
              "conflictDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of conflict devices",
                "format": "int32",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "inGracePeriodCount": "integer",
          "configManagerCount": "integer",
          "unknownDeviceCount": "integer",
          "notApplicableDeviceCount": "integer",
          "compliantDeviceCount": "integer",
          "remediatedDeviceCount": "integer",
          "nonCompliantDeviceCount": "integer",
          "errorDeviceCount": "integer",
          "conflictDeviceCount": "integer"
        }
      },
      "microsoft.graph.deviceCompliancePolicySettingStateSummary": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "deviceCompliancePolicySettingStateSummary",
            "type": "object",
            "properties": {
              "setting": {
                "type": "string",
                "description": "The setting class name and property name.",
                "nullable": true
              },
              "settingName": {
                "type": "string",
                "description": "Name of the setting.",
                "nullable": true
              },
              "platformType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.policyPlatformType"
                  }
                ],
                "description": "Setting platform. Possible values are: android, iOS, macOS, windowsPhone81, windows81AndLater, windows10AndLater, androidWorkProfile, all.",
                "nullable": true
              },
              "unknownDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of unknown devices",
                "format": "int32",
                "nullable": true
              },
              "notApplicableDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of not applicable devices",
                "format": "int32",
                "nullable": true
              },
              "compliantDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of compliant devices",
                "format": "int32",
                "nullable": true
              },
              "remediatedDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of remediated devices",
                "format": "int32",
                "nullable": true
              },
              "nonCompliantDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of NonCompliant devices",
                "format": "int32",
                "nullable": true
              },
              "errorDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of error devices",
                "format": "int32",
                "nullable": true
              },
              "conflictDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of conflict devices",
                "format": "int32",
                "nullable": true
              },
              "deviceComplianceSettingStates": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.deviceComplianceSettingState"
                }
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "setting": "string",
          "settingName": "string",
          "platformType": {
            "@odata.type": "microsoft.graph.policyPlatformType"
          },
          "unknownDeviceCount": "integer",
          "notApplicableDeviceCount": "integer",
          "compliantDeviceCount": "integer",
          "remediatedDeviceCount": "integer",
          "nonCompliantDeviceCount": "integer",
          "errorDeviceCount": "integer",
          "conflictDeviceCount": "integer",
          "deviceComplianceSettingStates": [
            {
              "@odata.type": "microsoft.graph.deviceComplianceSettingState"
            }
          ]
        }
      },
      "microsoft.graph.deviceComplianceScheduledActionForRule": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "deviceComplianceScheduledActionForRule",
            "type": "object",
            "properties": {
              "ruleName": {
                "type": "string",
                "description": "Name of the rule which this scheduled action applies to.",
                "nullable": true
              },
              "scheduledActionConfigurations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.deviceComplianceActionItem"
                }
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "ruleName": "string",
          "scheduledActionConfigurations": [
            {
              "@odata.type": "microsoft.graph.deviceComplianceActionItem"
            }
          ]
        }
      },
      "microsoft.graph.deviceComplianceSettingState": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "deviceComplianceSettingState",
            "type": "object",
            "properties": {
              "setting": {
                "type": "string",
                "description": "The setting class name and property name.",
                "nullable": true
              },
              "settingName": {
                "type": "string",
                "description": "The Setting Name that is being reported",
                "nullable": true
              },
              "deviceId": {
                "type": "string",
                "description": "The Device Id that is being reported",
                "nullable": true
              },
              "deviceName": {
                "type": "string",
                "description": "The Device Name that is being reported",
                "nullable": true
              },
              "userId": {
                "type": "string",
                "description": "The user Id that is being reported",
                "nullable": true
              },
              "userEmail": {
                "type": "string",
                "description": "The User email address that is being reported",
                "nullable": true
              },
              "userName": {
                "type": "string",
                "description": "The User Name that is being reported",
                "nullable": true
              },
              "userPrincipalName": {
                "type": "string",
                "description": "The User PrincipalName that is being reported",
                "nullable": true
              },
              "deviceModel": {
                "type": "string",
                "description": "The device model that is being reported",
                "nullable": true
              },
              "state": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.complianceStatus"
                  }
                ],
                "description": "The compliance state of the setting. Possible values are: unknown, notApplicable, compliant, remediated, nonCompliant, error, conflict, notAssigned.",
                "nullable": true
              },
              "complianceGracePeriodExpirationDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The DateTime when device compliance grace period expires",
                "format": "date-time",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "setting": "string",
          "settingName": "string",
          "deviceId": "string",
          "deviceName": "string",
          "userId": "string",
          "userEmail": "string",
          "userName": "string",
          "userPrincipalName": "string",
          "deviceModel": "string",
          "state": {
            "@odata.type": "microsoft.graph.complianceStatus"
          },
          "complianceGracePeriodExpirationDateTime": "string (timestamp)"
        }
      },
      "microsoft.graph.deviceComplianceUserOverview": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "deviceComplianceUserOverview",
            "type": "object",
            "properties": {
              "pendingCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of pending Users",
                "format": "int32",
                "nullable": true
              },
              "notApplicableCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of not applicable users",
                "format": "int32",
                "nullable": true
              },
              "successCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of succeeded Users",
                "format": "int32",
                "nullable": true
              },
              "errorCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of error Users",
                "format": "int32",
                "nullable": true
              },
              "failedCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of failed Users",
                "format": "int32",
                "nullable": true
              },
              "lastUpdateDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Last update time",
                "format": "date-time",
                "nullable": true
              },
              "configurationVersion": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Version of the policy for that overview",
                "format": "int32",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "pendingCount": "integer",
          "notApplicableCount": "integer",
          "successCount": "integer",
          "errorCount": "integer",
          "failedCount": "integer",
          "lastUpdateDateTime": "string (timestamp)",
          "configurationVersion": "integer"
        }
      },
      "microsoft.graph.deviceComplianceUserStatus": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "deviceComplianceUserStatus",
            "type": "object",
            "properties": {
              "userDisplayName": {
                "type": "string",
                "description": "User name of the DevicePolicyStatus.",
                "nullable": true
              },
              "devicesCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Devices count for that user.",
                "format": "int32",
                "nullable": true
              },
              "status": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.complianceStatus"
                  }
                ],
                "description": "Compliance status of the policy report. Possible values are: unknown, notApplicable, compliant, remediated, nonCompliant, error, conflict, notAssigned.",
                "nullable": true
              },
              "lastReportedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Last modified date time of the policy report.",
                "format": "date-time",
                "nullable": true
              },
              "userPrincipalName": {
                "type": "string",
                "description": "UserPrincipalName.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "userDisplayName": "string",
          "devicesCount": "integer",
          "status": {
            "@odata.type": "microsoft.graph.complianceStatus"
          },
          "lastReportedDateTime": "string (timestamp)",
          "userPrincipalName": "string"
        }
      },
      "microsoft.graph.deviceConfigurationAssignment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "deviceConfigurationAssignment",
            "type": "object",
            "properties": {
              "target": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceAndAppManagementAssignmentTarget"
                  }
                ],
                "description": "The assignment target for the device configuration.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "target": {
            "@odata.type": "microsoft.graph.deviceAndAppManagementAssignmentTarget"
          }
        }
      },
      "microsoft.graph.deviceConfigurationDeviceOverview": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "deviceConfigurationDeviceOverview",
            "type": "object",
            "properties": {
              "pendingCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of pending devices",
                "format": "int32",
                "nullable": true
              },
              "notApplicableCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of not applicable devices",
                "format": "int32",
                "nullable": true
              },
              "successCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of succeeded devices",
                "format": "int32",
                "nullable": true
              },
              "errorCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of error devices",
                "format": "int32",
                "nullable": true
              },
              "failedCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of failed devices",
                "format": "int32",
                "nullable": true
              },
              "lastUpdateDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Last update time",
                "format": "date-time",
                "nullable": true
              },
              "configurationVersion": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Version of the policy for that overview",
                "format": "int32",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "pendingCount": "integer",
          "notApplicableCount": "integer",
          "successCount": "integer",
          "errorCount": "integer",
          "failedCount": "integer",
          "lastUpdateDateTime": "string (timestamp)",
          "configurationVersion": "integer"
        }
      },
      "microsoft.graph.deviceConfigurationDeviceStateSummary": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "deviceConfigurationDeviceStateSummary",
            "type": "object",
            "properties": {
              "unknownDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of unknown devices",
                "format": "int32",
                "nullable": true
              },
              "notApplicableDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of not applicable devices",
                "format": "int32",
                "nullable": true
              },
              "compliantDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of compliant devices",
                "format": "int32",
                "nullable": true
              },
              "remediatedDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of remediated devices",
                "format": "int32",
                "nullable": true
              },
              "nonCompliantDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of NonCompliant devices",
                "format": "int32",
                "nullable": true
              },
              "errorDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of error devices",
                "format": "int32",
                "nullable": true
              },
              "conflictDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of conflict devices",
                "format": "int32",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "unknownDeviceCount": "integer",
          "notApplicableDeviceCount": "integer",
          "compliantDeviceCount": "integer",
          "remediatedDeviceCount": "integer",
          "nonCompliantDeviceCount": "integer",
          "errorDeviceCount": "integer",
          "conflictDeviceCount": "integer"
        }
      },
      "microsoft.graph.deviceConfigurationDeviceStatus": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "deviceConfigurationDeviceStatus",
            "type": "object",
            "properties": {
              "deviceDisplayName": {
                "type": "string",
                "description": "Device name of the DevicePolicyStatus.",
                "nullable": true
              },
              "userName": {
                "type": "string",
                "description": "The User Name that is being reported",
                "nullable": true
              },
              "deviceModel": {
                "type": "string",
                "description": "The device model that is being reported",
                "nullable": true
              },
              "complianceGracePeriodExpirationDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The DateTime when device compliance grace period expires",
                "format": "date-time",
                "nullable": true
              },
              "status": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.complianceStatus"
                  }
                ],
                "description": "Compliance status of the policy report. Possible values are: unknown, notApplicable, compliant, remediated, nonCompliant, error, conflict, notAssigned.",
                "nullable": true
              },
              "lastReportedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Last modified date time of the policy report.",
                "format": "date-time",
                "nullable": true
              },
              "userPrincipalName": {
                "type": "string",
                "description": "UserPrincipalName.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "deviceDisplayName": "string",
          "userName": "string",
          "deviceModel": "string",
          "complianceGracePeriodExpirationDateTime": "string (timestamp)",
          "status": {
            "@odata.type": "microsoft.graph.complianceStatus"
          },
          "lastReportedDateTime": "string (timestamp)",
          "userPrincipalName": "string"
        }
      },
      "microsoft.graph.deviceConfigurationUserOverview": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "deviceConfigurationUserOverview",
            "type": "object",
            "properties": {
              "pendingCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of pending Users",
                "format": "int32",
                "nullable": true
              },
              "notApplicableCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of not applicable users",
                "format": "int32",
                "nullable": true
              },
              "successCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of succeeded Users",
                "format": "int32",
                "nullable": true
              },
              "errorCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of error Users",
                "format": "int32",
                "nullable": true
              },
              "failedCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of failed Users",
                "format": "int32",
                "nullable": true
              },
              "lastUpdateDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Last update time",
                "format": "date-time",
                "nullable": true
              },
              "configurationVersion": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Version of the policy for that overview",
                "format": "int32",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "pendingCount": "integer",
          "notApplicableCount": "integer",
          "successCount": "integer",
          "errorCount": "integer",
          "failedCount": "integer",
          "lastUpdateDateTime": "string (timestamp)",
          "configurationVersion": "integer"
        }
      },
      "microsoft.graph.deviceConfigurationUserStatus": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "deviceConfigurationUserStatus",
            "type": "object",
            "properties": {
              "userDisplayName": {
                "type": "string",
                "description": "User name of the DevicePolicyStatus.",
                "nullable": true
              },
              "devicesCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Devices count for that user.",
                "format": "int32",
                "nullable": true
              },
              "status": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.complianceStatus"
                  }
                ],
                "description": "Compliance status of the policy report. Possible values are: unknown, notApplicable, compliant, remediated, nonCompliant, error, conflict, notAssigned.",
                "nullable": true
              },
              "lastReportedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Last modified date time of the policy report.",
                "format": "date-time",
                "nullable": true
              },
              "userPrincipalName": {
                "type": "string",
                "description": "UserPrincipalName.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "userDisplayName": "string",
          "devicesCount": "integer",
          "status": {
            "@odata.type": "microsoft.graph.complianceStatus"
          },
          "lastReportedDateTime": "string (timestamp)",
          "userPrincipalName": "string"
        }
      },
      "microsoft.graph.editionUpgradeConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceConfiguration"
          },
          {
            "title": "editionUpgradeConfiguration",
            "type": "object",
            "properties": {
              "licenseType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.editionUpgradeLicenseType"
                  }
                ],
                "description": "Edition Upgrade License Type. Possible values are: productKey, licenseFile.",
                "nullable": true
              },
              "targetEdition": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.windows10EditionType"
                  }
                ],
                "description": "Edition Upgrade Target Edition. Possible values are: windows10Enterprise, windows10EnterpriseN, windows10Education, windows10EducationN, windows10MobileEnterprise, windows10HolographicEnterprise, windows10Professional, windows10ProfessionalN, windows10ProfessionalEducation, windows10ProfessionalEducationN, windows10ProfessionalWorkstation, windows10ProfessionalWorkstationN.",
                "nullable": true
              },
              "license": {
                "type": "string",
                "description": "Edition Upgrade License File Content.",
                "nullable": true
              },
              "productKey": {
                "type": "string",
                "description": "Edition Upgrade Product Key.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "lastModifiedDateTime": "string (timestamp)",
          "createdDateTime": "string (timestamp)",
          "description": "string",
          "displayName": "string",
          "version": "integer",
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "licenseType": {
            "@odata.type": "microsoft.graph.editionUpgradeLicenseType"
          },
          "targetEdition": {
            "@odata.type": "microsoft.graph.windows10EditionType"
          },
          "license": "string",
          "productKey": "string"
        }
      },
      "microsoft.graph.iosCertificateProfile": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceConfiguration"
          },
          {
            "title": "iosCertificateProfile",
            "type": "object"
          }
        ],
        "example": {
          "id": "string (identifier)",
          "lastModifiedDateTime": "string (timestamp)",
          "createdDateTime": "string (timestamp)",
          "description": "string",
          "displayName": "string",
          "version": "integer",
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ]
        }
      },
      "microsoft.graph.iosCompliancePolicy": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceCompliancePolicy"
          },
          {
            "title": "iosCompliancePolicy",
            "type": "object",
            "properties": {
              "passcodeBlockSimple": {
                "type": "boolean",
                "description": "Indicates whether or not to block simple passcodes.",
                "nullable": true
              },
              "passcodeExpirationDays": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of days before the passcode expires. Valid values 1 to 65535",
                "format": "int32",
                "nullable": true
              },
              "passcodeMinimumLength": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Minimum length of passcode. Valid values 4 to 14",
                "format": "int32",
                "nullable": true
              },
              "passcodeMinutesOfInactivityBeforeLock": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Minutes of inactivity before a passcode is required.",
                "format": "int32",
                "nullable": true
              },
              "passcodePreviousPasscodeBlockCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of previous passcodes to block. Valid values 1 to 24",
                "format": "int32",
                "nullable": true
              },
              "passcodeMinimumCharacterSetCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The number of character sets required in the password.",
                "format": "int32",
                "nullable": true
              },
              "passcodeRequiredType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.requiredPasswordType"
                  }
                ],
                "description": "The required passcode type. Possible values are: deviceDefault, alphanumeric, numeric.",
                "nullable": true
              },
              "passcodeRequired": {
                "type": "boolean",
                "description": "Indicates whether or not to require a passcode.",
                "nullable": true
              },
              "osMinimumVersion": {
                "type": "string",
                "description": "Minimum IOS version.",
                "nullable": true
              },
              "osMaximumVersion": {
                "type": "string",
                "description": "Maximum IOS version.",
                "nullable": true
              },
              "securityBlockJailbrokenDevices": {
                "type": "boolean",
                "description": "Devices must not be jailbroken or rooted.",
                "nullable": true
              },
              "deviceThreatProtectionEnabled": {
                "type": "boolean",
                "description": "Require that devices have enabled device threat protection .",
                "nullable": true
              },
              "deviceThreatProtectionRequiredSecurityLevel": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceThreatProtectionLevel"
                  }
                ],
                "description": "Require Mobile Threat Protection minimum risk level to report noncompliance. Possible values are: unavailable, secured, low, medium, high, notSet.",
                "nullable": true
              },
              "managedEmailProfileRequired": {
                "type": "boolean",
                "description": "Indicates whether or not to require a managed email profile.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "createdDateTime": "string (timestamp)",
          "description": "string",
          "lastModifiedDateTime": "string (timestamp)",
          "displayName": "string",
          "version": "integer",
          "scheduledActionsForRule": [
            {
              "@odata.type": "microsoft.graph.deviceComplianceScheduledActionForRule"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceComplianceDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceComplianceUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceComplianceDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceComplianceUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceCompliancePolicyAssignment"
            }
          ],
          "passcodeBlockSimple": true,
          "passcodeExpirationDays": "integer",
          "passcodeMinimumLength": "integer",
          "passcodeMinutesOfInactivityBeforeLock": "integer",
          "passcodePreviousPasscodeBlockCount": "integer",
          "passcodeMinimumCharacterSetCount": "integer",
          "passcodeRequiredType": {
            "@odata.type": "microsoft.graph.requiredPasswordType"
          },
          "passcodeRequired": true,
          "osMinimumVersion": "string",
          "osMaximumVersion": "string",
          "securityBlockJailbrokenDevices": true,
          "deviceThreatProtectionEnabled": true,
          "deviceThreatProtectionRequiredSecurityLevel": {
            "@odata.type": "microsoft.graph.deviceThreatProtectionLevel"
          },
          "managedEmailProfileRequired": true
        }
      },
      "microsoft.graph.iosCustomConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceConfiguration"
          },
          {
            "title": "iosCustomConfiguration",
            "type": "object",
            "properties": {
              "payloadName": {
                "type": "string",
                "description": "Name that is displayed to the user.",
                "nullable": true
              },
              "payloadFileName": {
                "type": "string",
                "description": "Payload file name (.mobileconfig",
                "nullable": true
              },
              "payload": {
                "type": "string",
                "description": "Payload. (UTF8 encoded byte array)",
                "format": "base64url",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "lastModifiedDateTime": "string (timestamp)",
          "createdDateTime": "string (timestamp)",
          "description": "string",
          "displayName": "string",
          "version": "integer",
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "payloadName": "string",
          "payloadFileName": "string",
          "payload": "string"
        }
      },
      "microsoft.graph.iosDeviceFeaturesConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.appleDeviceFeaturesConfigurationBase"
          },
          {
            "title": "iosDeviceFeaturesConfiguration",
            "type": "object",
            "properties": {
              "assetTagTemplate": {
                "type": "string",
                "description": "Asset tag information for the device, displayed on the login window and lock screen.",
                "nullable": true
              },
              "lockScreenFootnote": {
                "type": "string",
                "description": "A footnote displayed on the login window and lock screen. Available in iOS 9.3.1 and later.",
                "nullable": true
              },
              "homeScreenDockIcons": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.iosHomeScreenItem"
                    }
                  ],
                  "nullable": true
                },
                "description": "A list of app and folders to appear on the Home Screen Dock. This collection can contain a maximum of 500 elements."
              },
              "homeScreenPages": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.iosHomeScreenPage"
                    }
                  ],
                  "nullable": true
                },
                "description": "A list of pages on the Home Screen. This collection can contain a maximum of 500 elements."
              },
              "notificationSettings": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.iosNotificationSettings"
                    }
                  ],
                  "nullable": true
                },
                "description": "Notification settings for each bundle id. Applicable to devices in supervised mode only (iOS 9.3 and later). This collection can contain a maximum of 500 elements."
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "lastModifiedDateTime": "string (timestamp)",
          "createdDateTime": "string (timestamp)",
          "description": "string",
          "displayName": "string",
          "version": "integer",
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "assetTagTemplate": "string",
          "lockScreenFootnote": "string",
          "homeScreenDockIcons": [
            {
              "@odata.type": "microsoft.graph.iosHomeScreenItem"
            }
          ],
          "homeScreenPages": [
            {
              "@odata.type": "microsoft.graph.iosHomeScreenPage"
            }
          ],
          "notificationSettings": [
            {
              "@odata.type": "microsoft.graph.iosNotificationSettings"
            }
          ]
        }
      },
      "microsoft.graph.iosGeneralDeviceConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceConfiguration"
          },
          {
            "title": "iosGeneralDeviceConfiguration",
            "type": "object",
            "properties": {
              "accountBlockModification": {
                "type": "boolean",
                "description": "Indicates whether or not to allow account modification when the device is in supervised mode.",
                "nullable": true
              },
              "activationLockAllowWhenSupervised": {
                "type": "boolean",
                "description": "Indicates whether or not to allow activation lock when the device is in the supervised mode.",
                "nullable": true
              },
              "airDropBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to allow AirDrop when the device is in supervised mode.",
                "nullable": true
              },
              "airDropForceUnmanagedDropTarget": {
                "type": "boolean",
                "description": "Indicates whether or not to cause AirDrop to be considered an unmanaged drop target (iOS 9.0 and later).",
                "nullable": true
              },
              "airPlayForcePairingPasswordForOutgoingRequests": {
                "type": "boolean",
                "description": "Indicates whether or not to enforce all devices receiving AirPlay requests from this device to use a pairing password.",
                "nullable": true
              },
              "appleWatchBlockPairing": {
                "type": "boolean",
                "description": "Indicates whether or not to allow Apple Watch pairing when the device is in supervised mode (iOS 9.0 and later).",
                "nullable": true
              },
              "appleWatchForceWristDetection": {
                "type": "boolean",
                "description": "Indicates whether or not to force a paired Apple Watch to use Wrist Detection (iOS 8.2 and later).",
                "nullable": true
              },
              "appleNewsBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to block the user from using News when the device is in supervised mode (iOS 9.0 and later).",
                "nullable": true
              },
              "appsSingleAppModeList": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.appListItem"
                    }
                  ],
                  "nullable": true
                },
                "description": "Gets or sets the list of iOS apps allowed to autonomously enter Single App Mode. Supervised only. iOS 7.0 and later. This collection can contain a maximum of 500 elements."
              },
              "appsVisibilityList": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.appListItem"
                    }
                  ],
                  "nullable": true
                },
                "description": "List of apps in the visibility list (either visible/launchable apps list or hidden/unlaunchable apps list, controlled by AppsVisibilityListType) (iOS 9.3 and later). This collection can contain a maximum of 10000 elements."
              },
              "appsVisibilityListType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.appListType"
                  }
                ],
                "description": "Type of list that is in the AppsVisibilityList. Possible values are: none, appsInListCompliant, appsNotInListCompliant.",
                "nullable": true
              },
              "appStoreBlockAutomaticDownloads": {
                "type": "boolean",
                "description": "Indicates whether or not to block the automatic downloading of apps purchased on other devices when the device is in supervised mode (iOS 9.0 and later).",
                "nullable": true
              },
              "appStoreBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to block the user from using the App Store.",
                "nullable": true
              },
              "appStoreBlockInAppPurchases": {
                "type": "boolean",
                "description": "Indicates whether or not to block the user from making in app purchases.",
                "nullable": true
              },
              "appStoreBlockUIAppInstallation": {
                "type": "boolean",
                "description": "Indicates whether or not to block the App Store app, not restricting installation through Host apps. Applies to supervised mode only (iOS 9.0 and later).",
                "nullable": true
              },
              "appStoreRequirePassword": {
                "type": "boolean",
                "description": "Indicates whether or not to require a password when using the app store.",
                "nullable": true
              },
              "bluetoothBlockModification": {
                "type": "boolean",
                "description": "Indicates whether or not to allow modification of Bluetooth settings when the device is in supervised mode (iOS 10.0 and later).",
                "nullable": true
              },
              "cameraBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to block the user from accessing the camera of the device.",
                "nullable": true
              },
              "cellularBlockDataRoaming": {
                "type": "boolean",
                "description": "Indicates whether or not to block data roaming.",
                "nullable": true
              },
              "cellularBlockGlobalBackgroundFetchWhileRoaming": {
                "type": "boolean",
                "description": "Indicates whether or not to block global background fetch while roaming.",
                "nullable": true
              },
              "cellularBlockPerAppDataModification": {
                "type": "boolean",
                "description": "Indicates whether or not to allow changes to cellular app data usage settings when the device is in supervised mode.",
                "nullable": true
              },
              "cellularBlockPersonalHotspot": {
                "type": "boolean",
                "description": "Indicates whether or not to block Personal Hotspot.",
                "nullable": true
              },
              "cellularBlockVoiceRoaming": {
                "type": "boolean",
                "description": "Indicates whether or not to block voice roaming.",
                "nullable": true
              },
              "certificatesBlockUntrustedTlsCertificates": {
                "type": "boolean",
                "description": "Indicates whether or not to block untrusted TLS certificates.",
                "nullable": true
              },
              "classroomAppBlockRemoteScreenObservation": {
                "type": "boolean",
                "description": "Indicates whether or not to allow remote screen observation by Classroom app when the device is in supervised mode (iOS 9.3 and later).",
                "nullable": true
              },
              "classroomAppForceUnpromptedScreenObservation": {
                "type": "boolean",
                "description": "Indicates whether or not to automatically give permission to the teacher of a managed course on the Classroom app to view a student's screen without prompting when the device is in supervised mode.",
                "nullable": true
              },
              "compliantAppsList": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.appListItem"
                    }
                  ],
                  "nullable": true
                },
                "description": "List of apps in the compliance (either allow list or block list, controlled by CompliantAppListType). This collection can contain a maximum of 10000 elements."
              },
              "compliantAppListType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.appListType"
                  }
                ],
                "description": "List that is in the AppComplianceList. Possible values are: none, appsInListCompliant, appsNotInListCompliant.",
                "nullable": true
              },
              "configurationProfileBlockChanges": {
                "type": "boolean",
                "description": "Indicates whether or not to block the user from installing configuration profiles and certificates interactively when the device is in supervised mode.",
                "nullable": true
              },
              "definitionLookupBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to block definition lookup when the device is in supervised mode (iOS 8.1.3 and later ).",
                "nullable": true
              },
              "deviceBlockEnableRestrictions": {
                "type": "boolean",
                "description": "Indicates whether or not to allow the user to enables restrictions in the device settings when the device is in supervised mode.",
                "nullable": true
              },
              "deviceBlockEraseContentAndSettings": {
                "type": "boolean",
                "description": "Indicates whether or not to allow the use of the 'Erase all content and settings' option on the device when the device is in supervised mode.",
                "nullable": true
              },
              "deviceBlockNameModification": {
                "type": "boolean",
                "description": "Indicates whether or not to allow device name modification when the device is in supervised mode (iOS 9.0 and later).",
                "nullable": true
              },
              "diagnosticDataBlockSubmission": {
                "type": "boolean",
                "description": "Indicates whether or not to block diagnostic data submission.",
                "nullable": true
              },
              "diagnosticDataBlockSubmissionModification": {
                "type": "boolean",
                "description": "Indicates whether or not to allow diagnostics submission settings modification when the device is in supervised mode (iOS 9.3.2 and later).",
                "nullable": true
              },
              "documentsBlockManagedDocumentsInUnmanagedApps": {
                "type": "boolean",
                "description": "Indicates whether or not to block the user from viewing managed documents in unmanaged apps.",
                "nullable": true
              },
              "documentsBlockUnmanagedDocumentsInManagedApps": {
                "type": "boolean",
                "description": "Indicates whether or not to block the user from viewing unmanaged documents in managed apps.",
                "nullable": true
              },
              "emailInDomainSuffixes": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "An email address lacking a suffix that matches any of these strings will be considered out-of-domain."
              },
              "enterpriseAppBlockTrust": {
                "type": "boolean",
                "description": "Indicates whether or not to block the user from trusting an enterprise app.",
                "nullable": true
              },
              "enterpriseAppBlockTrustModification": {
                "type": "boolean",
                "description": "Indicates whether or not to block the user from modifying the enterprise app trust settings.",
                "nullable": true
              },
              "faceTimeBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to block the user from using FaceTime.",
                "nullable": true
              },
              "findMyFriendsBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to block Find My Friends when the device is in supervised mode.",
                "nullable": true
              },
              "gamingBlockGameCenterFriends": {
                "type": "boolean",
                "description": "Indicates whether or not to block the user from having friends in Game Center.",
                "nullable": true
              },
              "gamingBlockMultiplayer": {
                "type": "boolean",
                "description": "Indicates whether or not to block the user from using multiplayer gaming.",
                "nullable": true
              },
              "gameCenterBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to block the user from using Game Center when the device is in supervised mode.",
                "nullable": true
              },
              "hostPairingBlocked": {
                "type": "boolean",
                "description": "indicates whether or not to allow host pairing to control the devices an iOS device can pair with when the iOS device is in supervised mode.",
                "nullable": true
              },
              "iBooksStoreBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to block the user from using the iBooks Store when the device is in supervised mode.",
                "nullable": true
              },
              "iBooksStoreBlockErotica": {
                "type": "boolean",
                "description": "Indicates whether or not to block the user from downloading media from the iBookstore that has been tagged as erotica.",
                "nullable": true
              },
              "iCloudBlockActivityContinuation": {
                "type": "boolean",
                "description": "Indicates whether or not to block  the the user from continuing work they started on iOS device to another iOS or macOS device.",
                "nullable": true
              },
              "iCloudBlockBackup": {
                "type": "boolean",
                "description": "Indicates whether or not to block iCloud backup.",
                "nullable": true
              },
              "iCloudBlockDocumentSync": {
                "type": "boolean",
                "description": "Indicates whether or not to block iCloud document sync.",
                "nullable": true
              },
              "iCloudBlockManagedAppsSync": {
                "type": "boolean",
                "description": "Indicates whether or not to block Managed Apps Cloud Sync.",
                "nullable": true
              },
              "iCloudBlockPhotoLibrary": {
                "type": "boolean",
                "description": "Indicates whether or not to block iCloud Photo Library.",
                "nullable": true
              },
              "iCloudBlockPhotoStreamSync": {
                "type": "boolean",
                "description": "Indicates whether or not to block iCloud Photo Stream Sync.",
                "nullable": true
              },
              "iCloudBlockSharedPhotoStream": {
                "type": "boolean",
                "description": "Indicates whether or not to block Shared Photo Stream.",
                "nullable": true
              },
              "iCloudRequireEncryptedBackup": {
                "type": "boolean",
                "description": "Indicates whether or not to require backups to iCloud be encrypted.",
                "nullable": true
              },
              "iTunesBlockExplicitContent": {
                "type": "boolean",
                "description": "Indicates whether or not to block the user from accessing explicit content in iTunes and the App Store.",
                "nullable": true
              },
              "iTunesBlockMusicService": {
                "type": "boolean",
                "description": "Indicates whether or not to block Music service and revert Music app to classic mode when the device is in supervised mode (iOS 9.3 and later and macOS 10.12 and later).",
                "nullable": true
              },
              "iTunesBlockRadio": {
                "type": "boolean",
                "description": "Indicates whether or not to block the user from using iTunes Radio when the device is in supervised mode (iOS 9.3 and later).",
                "nullable": true
              },
              "keyboardBlockAutoCorrect": {
                "type": "boolean",
                "description": "Indicates whether or not to block keyboard auto-correction when the device is in supervised mode (iOS 8.1.3 and later).",
                "nullable": true
              },
              "keyboardBlockDictation": {
                "type": "boolean",
                "description": "Indicates whether or not to block the user from using dictation input when the device is in supervised mode.",
                "nullable": true
              },
              "keyboardBlockPredictive": {
                "type": "boolean",
                "description": "Indicates whether or not to block predictive keyboards when device is in supervised mode (iOS 8.1.3 and later).",
                "nullable": true
              },
              "keyboardBlockShortcuts": {
                "type": "boolean",
                "description": "Indicates whether or not to block keyboard shortcuts when the device is in supervised mode (iOS 9.0 and later).",
                "nullable": true
              },
              "keyboardBlockSpellCheck": {
                "type": "boolean",
                "description": "Indicates whether or not to block keyboard spell-checking when the device is in supervised mode (iOS 8.1.3 and later).",
                "nullable": true
              },
              "kioskModeAllowAssistiveSpeak": {
                "type": "boolean",
                "description": "Indicates whether or not to allow assistive speak while in kiosk mode.",
                "nullable": true
              },
              "kioskModeAllowAssistiveTouchSettings": {
                "type": "boolean",
                "description": "Indicates whether or not to allow access to the Assistive Touch Settings while in kiosk mode.",
                "nullable": true
              },
              "kioskModeAllowAutoLock": {
                "type": "boolean",
                "description": "Indicates whether or not to allow device auto lock while in kiosk mode.",
                "nullable": true
              },
              "kioskModeAllowColorInversionSettings": {
                "type": "boolean",
                "description": "Indicates whether or not to allow access to the Color Inversion Settings while in kiosk mode.",
                "nullable": true
              },
              "kioskModeAllowRingerSwitch": {
                "type": "boolean",
                "description": "Indicates whether or not to allow use of the ringer switch while in kiosk mode.",
                "nullable": true
              },
              "kioskModeAllowScreenRotation": {
                "type": "boolean",
                "description": "Indicates whether or not to allow screen rotation while in kiosk mode.",
                "nullable": true
              },
              "kioskModeAllowSleepButton": {
                "type": "boolean",
                "description": "Indicates whether or not to allow use of the sleep button while in kiosk mode.",
                "nullable": true
              },
              "kioskModeAllowTouchscreen": {
                "type": "boolean",
                "description": "Indicates whether or not to allow use of the touchscreen while in kiosk mode.",
                "nullable": true
              },
              "kioskModeAllowVoiceOverSettings": {
                "type": "boolean",
                "description": "Indicates whether or not to allow access to the voice over settings while in kiosk mode.",
                "nullable": true
              },
              "kioskModeAllowVolumeButtons": {
                "type": "boolean",
                "description": "Indicates whether or not to allow use of the volume buttons while in kiosk mode.",
                "nullable": true
              },
              "kioskModeAllowZoomSettings": {
                "type": "boolean",
                "description": "Indicates whether or not to allow access to the zoom settings while in kiosk mode.",
                "nullable": true
              },
              "kioskModeAppStoreUrl": {
                "type": "string",
                "description": "URL in the app store to the app to use for kiosk mode. Use if KioskModeManagedAppId is not known.",
                "nullable": true
              },
              "kioskModeBuiltInAppId": {
                "type": "string",
                "description": "ID for built-in apps to use for kiosk mode. Used when KioskModeManagedAppId and KioskModeAppStoreUrl are not set.",
                "nullable": true
              },
              "kioskModeRequireAssistiveTouch": {
                "type": "boolean",
                "description": "Indicates whether or not to require assistive touch while in kiosk mode.",
                "nullable": true
              },
              "kioskModeRequireColorInversion": {
                "type": "boolean",
                "description": "Indicates whether or not to require color inversion while in kiosk mode.",
                "nullable": true
              },
              "kioskModeRequireMonoAudio": {
                "type": "boolean",
                "description": "Indicates whether or not to require mono audio while in kiosk mode.",
                "nullable": true
              },
              "kioskModeRequireVoiceOver": {
                "type": "boolean",
                "description": "Indicates whether or not to require voice over while in kiosk mode.",
                "nullable": true
              },
              "kioskModeRequireZoom": {
                "type": "boolean",
                "description": "Indicates whether or not to require zoom while in kiosk mode.",
                "nullable": true
              },
              "kioskModeManagedAppId": {
                "type": "string",
                "description": "Managed app id of the app to use for kiosk mode. If KioskModeManagedAppId is specified then KioskModeAppStoreUrl will be ignored.",
                "nullable": true
              },
              "lockScreenBlockControlCenter": {
                "type": "boolean",
                "description": "Indicates whether or not to block the user from using control center on the lock screen.",
                "nullable": true
              },
              "lockScreenBlockNotificationView": {
                "type": "boolean",
                "description": "Indicates whether or not to block the user from using the notification view on the lock screen.",
                "nullable": true
              },
              "lockScreenBlockPassbook": {
                "type": "boolean",
                "description": "Indicates whether or not to block the user from using passbook when the device is locked.",
                "nullable": true
              },
              "lockScreenBlockTodayView": {
                "type": "boolean",
                "description": "Indicates whether or not to block the user from using the Today View on the lock screen.",
                "nullable": true
              },
              "mediaContentRatingAustralia": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.mediaContentRatingAustralia"
                  }
                ],
                "description": "Media content rating settings for Australia",
                "nullable": true
              },
              "mediaContentRatingCanada": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.mediaContentRatingCanada"
                  }
                ],
                "description": "Media content rating settings for Canada",
                "nullable": true
              },
              "mediaContentRatingFrance": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.mediaContentRatingFrance"
                  }
                ],
                "description": "Media content rating settings for France",
                "nullable": true
              },
              "mediaContentRatingGermany": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.mediaContentRatingGermany"
                  }
                ],
                "description": "Media content rating settings for Germany",
                "nullable": true
              },
              "mediaContentRatingIreland": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.mediaContentRatingIreland"
                  }
                ],
                "description": "Media content rating settings for Ireland",
                "nullable": true
              },
              "mediaContentRatingJapan": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.mediaContentRatingJapan"
                  }
                ],
                "description": "Media content rating settings for Japan",
                "nullable": true
              },
              "mediaContentRatingNewZealand": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.mediaContentRatingNewZealand"
                  }
                ],
                "description": "Media content rating settings for New Zealand",
                "nullable": true
              },
              "mediaContentRatingUnitedKingdom": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.mediaContentRatingUnitedKingdom"
                  }
                ],
                "description": "Media content rating settings for United Kingdom",
                "nullable": true
              },
              "mediaContentRatingUnitedStates": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.mediaContentRatingUnitedStates"
                  }
                ],
                "description": "Media content rating settings for United States",
                "nullable": true
              },
              "networkUsageRules": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.iosNetworkUsageRule"
                    }
                  ],
                  "nullable": true
                },
                "description": "List of managed apps and the network rules that applies to them. This collection can contain a maximum of 1000 elements."
              },
              "mediaContentRatingApps": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.ratingAppsType"
                  }
                ],
                "description": "Media content rating settings for Apps. Possible values are: allAllowed, allBlocked, agesAbove4, agesAbove9, agesAbove12, agesAbove17.",
                "nullable": true
              },
              "messagesBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to block the user from using the Messages app on the supervised device.",
                "nullable": true
              },
              "notificationsBlockSettingsModification": {
                "type": "boolean",
                "description": "Indicates whether or not to allow notifications settings modification (iOS 9.3 and later).",
                "nullable": true
              },
              "passcodeBlockFingerprintUnlock": {
                "type": "boolean",
                "description": "Indicates whether or not to block fingerprint unlock.",
                "nullable": true
              },
              "passcodeBlockFingerprintModification": {
                "type": "boolean",
                "description": "Block modification of registered Touch ID fingerprints when in supervised mode.",
                "nullable": true
              },
              "passcodeBlockModification": {
                "type": "boolean",
                "description": "Indicates whether or not to allow passcode modification on the supervised device (iOS 9.0 and later).",
                "nullable": true
              },
              "passcodeBlockSimple": {
                "type": "boolean",
                "description": "Indicates whether or not to block simple passcodes.",
                "nullable": true
              },
              "passcodeExpirationDays": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of days before the passcode expires. Valid values 1 to 65535",
                "format": "int32",
                "nullable": true
              },
              "passcodeMinimumLength": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Minimum length of passcode. Valid values 4 to 14",
                "format": "int32",
                "nullable": true
              },
              "passcodeMinutesOfInactivityBeforeLock": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Minutes of inactivity before a passcode is required.",
                "format": "int32",
                "nullable": true
              },
              "passcodeMinutesOfInactivityBeforeScreenTimeout": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Minutes of inactivity before the screen times out.",
                "format": "int32",
                "nullable": true
              },
              "passcodeMinimumCharacterSetCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of character sets a passcode must contain. Valid values 0 to 4",
                "format": "int32",
                "nullable": true
              },
              "passcodePreviousPasscodeBlockCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of previous passcodes to block. Valid values 1 to 24",
                "format": "int32",
                "nullable": true
              },
              "passcodeSignInFailureCountBeforeWipe": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of sign in failures allowed before wiping the device. Valid values 4 to 11",
                "format": "int32",
                "nullable": true
              },
              "passcodeRequiredType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.requiredPasswordType"
                  }
                ],
                "description": "Type of passcode that is required. Possible values are: deviceDefault, alphanumeric, numeric.",
                "nullable": true
              },
              "passcodeRequired": {
                "type": "boolean",
                "description": "Indicates whether or not to require a passcode.",
                "nullable": true
              },
              "podcastsBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to block the user from using podcasts on the supervised device (iOS 8.0 and later).",
                "nullable": true
              },
              "safariBlockAutofill": {
                "type": "boolean",
                "description": "Indicates whether or not to block the user from using Auto fill in Safari.",
                "nullable": true
              },
              "safariBlockJavaScript": {
                "type": "boolean",
                "description": "Indicates whether or not to block JavaScript in Safari.",
                "nullable": true
              },
              "safariBlockPopups": {
                "type": "boolean",
                "description": "Indicates whether or not to block popups in Safari.",
                "nullable": true
              },
              "safariBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to block the user from using Safari.",
                "nullable": true
              },
              "safariCookieSettings": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.webBrowserCookieSettings"
                  }
                ],
                "description": "Cookie settings for Safari. Possible values are: browserDefault, blockAlways, allowCurrentWebSite, allowFromWebsitesVisited, allowAlways.",
                "nullable": true
              },
              "safariManagedDomains": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "URLs matching the patterns listed here will be considered managed."
              },
              "safariPasswordAutoFillDomains": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "Users can save passwords in Safari only from URLs matching the patterns listed here. Applies to devices in supervised mode (iOS 9.3 and later)."
              },
              "safariRequireFraudWarning": {
                "type": "boolean",
                "description": "Indicates whether or not to require fraud warning in Safari.",
                "nullable": true
              },
              "screenCaptureBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to block the user from taking Screenshots.",
                "nullable": true
              },
              "siriBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to block the user from using Siri.",
                "nullable": true
              },
              "siriBlockedWhenLocked": {
                "type": "boolean",
                "description": "Indicates whether or not to block the user from using Siri when locked.",
                "nullable": true
              },
              "siriBlockUserGeneratedContent": {
                "type": "boolean",
                "description": "Indicates whether or not to block Siri from querying user-generated content when used on a supervised device.",
                "nullable": true
              },
              "siriRequireProfanityFilter": {
                "type": "boolean",
                "description": "Indicates whether or not to prevent Siri from dictating, or speaking profane language on supervised device.",
                "nullable": true
              },
              "spotlightBlockInternetResults": {
                "type": "boolean",
                "description": "Indicates whether or not to block Spotlight search from returning internet results on supervised device.",
                "nullable": true
              },
              "voiceDialingBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to block voice dialing.",
                "nullable": true
              },
              "wallpaperBlockModification": {
                "type": "boolean",
                "description": "Indicates whether or not to allow wallpaper modification on supervised device (iOS 9.0 and later) .",
                "nullable": true
              },
              "wiFiConnectOnlyToConfiguredNetworks": {
                "type": "boolean",
                "description": "Indicates whether or not to force the device to use only Wi-Fi networks from configuration profiles when the device is in supervised mode.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "lastModifiedDateTime": "string (timestamp)",
          "createdDateTime": "string (timestamp)",
          "description": "string",
          "displayName": "string",
          "version": "integer",
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "accountBlockModification": true,
          "activationLockAllowWhenSupervised": true,
          "airDropBlocked": true,
          "airDropForceUnmanagedDropTarget": true,
          "airPlayForcePairingPasswordForOutgoingRequests": true,
          "appleWatchBlockPairing": true,
          "appleWatchForceWristDetection": true,
          "appleNewsBlocked": true,
          "appsSingleAppModeList": [
            {
              "@odata.type": "microsoft.graph.appListItem"
            }
          ],
          "appsVisibilityList": [
            {
              "@odata.type": "microsoft.graph.appListItem"
            }
          ],
          "appsVisibilityListType": {
            "@odata.type": "microsoft.graph.appListType"
          },
          "appStoreBlockAutomaticDownloads": true,
          "appStoreBlocked": true,
          "appStoreBlockInAppPurchases": true,
          "appStoreBlockUIAppInstallation": true,
          "appStoreRequirePassword": true,
          "bluetoothBlockModification": true,
          "cameraBlocked": true,
          "cellularBlockDataRoaming": true,
          "cellularBlockGlobalBackgroundFetchWhileRoaming": true,
          "cellularBlockPerAppDataModification": true,
          "cellularBlockPersonalHotspot": true,
          "cellularBlockVoiceRoaming": true,
          "certificatesBlockUntrustedTlsCertificates": true,
          "classroomAppBlockRemoteScreenObservation": true,
          "classroomAppForceUnpromptedScreenObservation": true,
          "compliantAppsList": [
            {
              "@odata.type": "microsoft.graph.appListItem"
            }
          ],
          "compliantAppListType": {
            "@odata.type": "microsoft.graph.appListType"
          },
          "configurationProfileBlockChanges": true,
          "definitionLookupBlocked": true,
          "deviceBlockEnableRestrictions": true,
          "deviceBlockEraseContentAndSettings": true,
          "deviceBlockNameModification": true,
          "diagnosticDataBlockSubmission": true,
          "diagnosticDataBlockSubmissionModification": true,
          "documentsBlockManagedDocumentsInUnmanagedApps": true,
          "documentsBlockUnmanagedDocumentsInManagedApps": true,
          "emailInDomainSuffixes": [
            "string"
          ],
          "enterpriseAppBlockTrust": true,
          "enterpriseAppBlockTrustModification": true,
          "faceTimeBlocked": true,
          "findMyFriendsBlocked": true,
          "gamingBlockGameCenterFriends": true,
          "gamingBlockMultiplayer": true,
          "gameCenterBlocked": true,
          "hostPairingBlocked": true,
          "iBooksStoreBlocked": true,
          "iBooksStoreBlockErotica": true,
          "iCloudBlockActivityContinuation": true,
          "iCloudBlockBackup": true,
          "iCloudBlockDocumentSync": true,
          "iCloudBlockManagedAppsSync": true,
          "iCloudBlockPhotoLibrary": true,
          "iCloudBlockPhotoStreamSync": true,
          "iCloudBlockSharedPhotoStream": true,
          "iCloudRequireEncryptedBackup": true,
          "iTunesBlockExplicitContent": true,
          "iTunesBlockMusicService": true,
          "iTunesBlockRadio": true,
          "keyboardBlockAutoCorrect": true,
          "keyboardBlockDictation": true,
          "keyboardBlockPredictive": true,
          "keyboardBlockShortcuts": true,
          "keyboardBlockSpellCheck": true,
          "kioskModeAllowAssistiveSpeak": true,
          "kioskModeAllowAssistiveTouchSettings": true,
          "kioskModeAllowAutoLock": true,
          "kioskModeAllowColorInversionSettings": true,
          "kioskModeAllowRingerSwitch": true,
          "kioskModeAllowScreenRotation": true,
          "kioskModeAllowSleepButton": true,
          "kioskModeAllowTouchscreen": true,
          "kioskModeAllowVoiceOverSettings": true,
          "kioskModeAllowVolumeButtons": true,
          "kioskModeAllowZoomSettings": true,
          "kioskModeAppStoreUrl": "string",
          "kioskModeBuiltInAppId": "string",
          "kioskModeRequireAssistiveTouch": true,
          "kioskModeRequireColorInversion": true,
          "kioskModeRequireMonoAudio": true,
          "kioskModeRequireVoiceOver": true,
          "kioskModeRequireZoom": true,
          "kioskModeManagedAppId": "string",
          "lockScreenBlockControlCenter": true,
          "lockScreenBlockNotificationView": true,
          "lockScreenBlockPassbook": true,
          "lockScreenBlockTodayView": true,
          "mediaContentRatingAustralia": {
            "@odata.type": "microsoft.graph.mediaContentRatingAustralia"
          },
          "mediaContentRatingCanada": {
            "@odata.type": "microsoft.graph.mediaContentRatingCanada"
          },
          "mediaContentRatingFrance": {
            "@odata.type": "microsoft.graph.mediaContentRatingFrance"
          },
          "mediaContentRatingGermany": {
            "@odata.type": "microsoft.graph.mediaContentRatingGermany"
          },
          "mediaContentRatingIreland": {
            "@odata.type": "microsoft.graph.mediaContentRatingIreland"
          },
          "mediaContentRatingJapan": {
            "@odata.type": "microsoft.graph.mediaContentRatingJapan"
          },
          "mediaContentRatingNewZealand": {
            "@odata.type": "microsoft.graph.mediaContentRatingNewZealand"
          },
          "mediaContentRatingUnitedKingdom": {
            "@odata.type": "microsoft.graph.mediaContentRatingUnitedKingdom"
          },
          "mediaContentRatingUnitedStates": {
            "@odata.type": "microsoft.graph.mediaContentRatingUnitedStates"
          },
          "networkUsageRules": [
            {
              "@odata.type": "microsoft.graph.iosNetworkUsageRule"
            }
          ],
          "mediaContentRatingApps": {
            "@odata.type": "microsoft.graph.ratingAppsType"
          },
          "messagesBlocked": true,
          "notificationsBlockSettingsModification": true,
          "passcodeBlockFingerprintUnlock": true,
          "passcodeBlockFingerprintModification": true,
          "passcodeBlockModification": true,
          "passcodeBlockSimple": true,
          "passcodeExpirationDays": "integer",
          "passcodeMinimumLength": "integer",
          "passcodeMinutesOfInactivityBeforeLock": "integer",
          "passcodeMinutesOfInactivityBeforeScreenTimeout": "integer",
          "passcodeMinimumCharacterSetCount": "integer",
          "passcodePreviousPasscodeBlockCount": "integer",
          "passcodeSignInFailureCountBeforeWipe": "integer",
          "passcodeRequiredType": {
            "@odata.type": "microsoft.graph.requiredPasswordType"
          },
          "passcodeRequired": true,
          "podcastsBlocked": true,
          "safariBlockAutofill": true,
          "safariBlockJavaScript": true,
          "safariBlockPopups": true,
          "safariBlocked": true,
          "safariCookieSettings": {
            "@odata.type": "microsoft.graph.webBrowserCookieSettings"
          },
          "safariManagedDomains": [
            "string"
          ],
          "safariPasswordAutoFillDomains": [
            "string"
          ],
          "safariRequireFraudWarning": true,
          "screenCaptureBlocked": true,
          "siriBlocked": true,
          "siriBlockedWhenLocked": true,
          "siriBlockUserGeneratedContent": true,
          "siriRequireProfanityFilter": true,
          "spotlightBlockInternetResults": true,
          "voiceDialingBlocked": true,
          "wallpaperBlockModification": true,
          "wiFiConnectOnlyToConfiguredNetworks": true
        }
      },
      "microsoft.graph.iosUpdateConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceConfiguration"
          },
          {
            "title": "iosUpdateConfiguration",
            "type": "object",
            "properties": {
              "activeHoursStart": {
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?$",
                "type": "string",
                "description": "Active Hours Start (active hours mean the time window when updates install should not happen)",
                "format": "time",
                "nullable": true
              },
              "activeHoursEnd": {
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?$",
                "type": "string",
                "description": "Active Hours End (active hours mean the time window when updates install should not happen)",
                "format": "time",
                "nullable": true
              },
              "scheduledInstallDays": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.dayOfWeek"
                    }
                  ],
                  "nullable": true
                },
                "description": "Days in week for which active hours are configured. This collection can contain a maximum of 7 elements."
              },
              "utcTimeOffsetInMinutes": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "UTC Time Offset indicated in minutes",
                "format": "int32",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "lastModifiedDateTime": "string (timestamp)",
          "createdDateTime": "string (timestamp)",
          "description": "string",
          "displayName": "string",
          "version": "integer",
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "activeHoursStart": "string (timestamp)",
          "activeHoursEnd": "string (timestamp)",
          "scheduledInstallDays": [
            {
              "@odata.type": "microsoft.graph.dayOfWeek"
            }
          ],
          "utcTimeOffsetInMinutes": "integer"
        }
      },
      "microsoft.graph.iosUpdateDeviceStatus": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "iosUpdateDeviceStatus",
            "type": "object",
            "properties": {
              "installStatus": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.iosUpdatesInstallStatus"
                  }
                ],
                "description": "The installation status of the policy report. Possible values are: success, available, idle, unknown, downloading, downloadFailed, downloadRequiresComputer, downloadInsufficientSpace, downloadInsufficientPower, downloadInsufficientNetwork, installing, installInsufficientSpace, installInsufficientPower, installPhoneCallInProgress, installFailed, notSupportedOperation, sharedDeviceUserLoggedInError.",
                "nullable": true
              },
              "osVersion": {
                "type": "string",
                "description": "The device version that is being reported.",
                "nullable": true
              },
              "deviceId": {
                "type": "string",
                "description": "The device id that is being reported.",
                "nullable": true
              },
              "userId": {
                "type": "string",
                "description": "The User id that is being reported.",
                "nullable": true
              },
              "deviceDisplayName": {
                "type": "string",
                "description": "Device name of the DevicePolicyStatus.",
                "nullable": true
              },
              "userName": {
                "type": "string",
                "description": "The User Name that is being reported",
                "nullable": true
              },
              "deviceModel": {
                "type": "string",
                "description": "The device model that is being reported",
                "nullable": true
              },
              "complianceGracePeriodExpirationDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The DateTime when device compliance grace period expires",
                "format": "date-time",
                "nullable": true
              },
              "status": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.complianceStatus"
                  }
                ],
                "description": "Compliance status of the policy report. Possible values are: unknown, notApplicable, compliant, remediated, nonCompliant, error, conflict, notAssigned.",
                "nullable": true
              },
              "lastReportedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Last modified date time of the policy report.",
                "format": "date-time",
                "nullable": true
              },
              "userPrincipalName": {
                "type": "string",
                "description": "UserPrincipalName.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "installStatus": {
            "@odata.type": "microsoft.graph.iosUpdatesInstallStatus"
          },
          "osVersion": "string",
          "deviceId": "string",
          "userId": "string",
          "deviceDisplayName": "string",
          "userName": "string",
          "deviceModel": "string",
          "complianceGracePeriodExpirationDateTime": "string (timestamp)",
          "status": {
            "@odata.type": "microsoft.graph.complianceStatus"
          },
          "lastReportedDateTime": "string (timestamp)",
          "userPrincipalName": "string"
        }
      },
      "microsoft.graph.macOSCompliancePolicy": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceCompliancePolicy"
          },
          {
            "title": "macOSCompliancePolicy",
            "type": "object",
            "properties": {
              "passwordRequired": {
                "type": "boolean",
                "description": "Whether or not to require a password.",
                "nullable": true
              },
              "passwordBlockSimple": {
                "type": "boolean",
                "description": "Indicates whether or not to block simple passwords.",
                "nullable": true
              },
              "passwordExpirationDays": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of days before the password expires. Valid values 1 to 65535",
                "format": "int32",
                "nullable": true
              },
              "passwordMinimumLength": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Minimum length of password. Valid values 4 to 14",
                "format": "int32",
                "nullable": true
              },
              "passwordMinutesOfInactivityBeforeLock": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Minutes of inactivity before a password is required.",
                "format": "int32",
                "nullable": true
              },
              "passwordPreviousPasswordBlockCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of previous passwords to block. Valid values 1 to 24",
                "format": "int32",
                "nullable": true
              },
              "passwordMinimumCharacterSetCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The number of character sets required in the password.",
                "format": "int32",
                "nullable": true
              },
              "passwordRequiredType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.requiredPasswordType"
                  }
                ],
                "description": "The required password type. Possible values are: deviceDefault, alphanumeric, numeric.",
                "nullable": true
              },
              "osMinimumVersion": {
                "type": "string",
                "description": "Minimum IOS version.",
                "nullable": true
              },
              "osMaximumVersion": {
                "type": "string",
                "description": "Maximum IOS version.",
                "nullable": true
              },
              "systemIntegrityProtectionEnabled": {
                "type": "boolean",
                "description": "Require that devices have enabled system integrity protection.",
                "nullable": true
              },
              "deviceThreatProtectionEnabled": {
                "type": "boolean",
                "description": "Require that devices have enabled device threat protection .",
                "nullable": true
              },
              "deviceThreatProtectionRequiredSecurityLevel": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceThreatProtectionLevel"
                  }
                ],
                "description": "Require Mobile Threat Protection minimum risk level to report noncompliance. Possible values are: unavailable, secured, low, medium, high, notSet.",
                "nullable": true
              },
              "storageRequireEncryption": {
                "type": "boolean",
                "description": "Require encryption on Mac OS devices.",
                "nullable": true
              },
              "firewallEnabled": {
                "type": "boolean",
                "description": "Whether the firewall should be enabled or not.",
                "nullable": true
              },
              "firewallBlockAllIncoming": {
                "type": "boolean",
                "description": "Corresponds to the 'Block all incoming connections' option.",
                "nullable": true
              },
              "firewallEnableStealthMode": {
                "type": "boolean",
                "description": "Corresponds to 'Enable stealth mode.'",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "createdDateTime": "string (timestamp)",
          "description": "string",
          "lastModifiedDateTime": "string (timestamp)",
          "displayName": "string",
          "version": "integer",
          "scheduledActionsForRule": [
            {
              "@odata.type": "microsoft.graph.deviceComplianceScheduledActionForRule"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceComplianceDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceComplianceUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceComplianceDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceComplianceUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceCompliancePolicyAssignment"
            }
          ],
          "passwordRequired": true,
          "passwordBlockSimple": true,
          "passwordExpirationDays": "integer",
          "passwordMinimumLength": "integer",
          "passwordMinutesOfInactivityBeforeLock": "integer",
          "passwordPreviousPasswordBlockCount": "integer",
          "passwordMinimumCharacterSetCount": "integer",
          "passwordRequiredType": {
            "@odata.type": "microsoft.graph.requiredPasswordType"
          },
          "osMinimumVersion": "string",
          "osMaximumVersion": "string",
          "systemIntegrityProtectionEnabled": true,
          "deviceThreatProtectionEnabled": true,
          "deviceThreatProtectionRequiredSecurityLevel": {
            "@odata.type": "microsoft.graph.deviceThreatProtectionLevel"
          },
          "storageRequireEncryption": true,
          "firewallEnabled": true,
          "firewallBlockAllIncoming": true,
          "firewallEnableStealthMode": true
        }
      },
      "microsoft.graph.macOSCustomConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceConfiguration"
          },
          {
            "title": "macOSCustomConfiguration",
            "type": "object",
            "properties": {
              "payloadName": {
                "type": "string",
                "description": "Name that is displayed to the user.",
                "nullable": true
              },
              "payloadFileName": {
                "type": "string",
                "description": "Payload file name (.mobileconfig",
                "nullable": true
              },
              "payload": {
                "type": "string",
                "description": "Payload. (UTF8 encoded byte array)",
                "format": "base64url",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "lastModifiedDateTime": "string (timestamp)",
          "createdDateTime": "string (timestamp)",
          "description": "string",
          "displayName": "string",
          "version": "integer",
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "payloadName": "string",
          "payloadFileName": "string",
          "payload": "string"
        }
      },
      "microsoft.graph.macOSDeviceFeaturesConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.appleDeviceFeaturesConfigurationBase"
          },
          {
            "title": "macOSDeviceFeaturesConfiguration",
            "type": "object"
          }
        ],
        "example": {
          "id": "string (identifier)",
          "lastModifiedDateTime": "string (timestamp)",
          "createdDateTime": "string (timestamp)",
          "description": "string",
          "displayName": "string",
          "version": "integer",
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ]
        }
      },
      "microsoft.graph.macOSGeneralDeviceConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceConfiguration"
          },
          {
            "title": "macOSGeneralDeviceConfiguration",
            "type": "object",
            "properties": {
              "compliantAppsList": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.appListItem"
                    }
                  ],
                  "nullable": true
                },
                "description": "List of apps in the compliance (either allow list or block list, controlled by CompliantAppListType). This collection can contain a maximum of 10000 elements."
              },
              "compliantAppListType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.appListType"
                  }
                ],
                "description": "List that is in the CompliantAppsList. Possible values are: none, appsInListCompliant, appsNotInListCompliant.",
                "nullable": true
              },
              "emailInDomainSuffixes": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "An email address lacking a suffix that matches any of these strings will be considered out-of-domain."
              },
              "passwordBlockSimple": {
                "type": "boolean",
                "description": "Block simple passwords.",
                "nullable": true
              },
              "passwordExpirationDays": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of days before the password expires.",
                "format": "int32",
                "nullable": true
              },
              "passwordMinimumCharacterSetCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of character sets a password must contain. Valid values 0 to 4",
                "format": "int32",
                "nullable": true
              },
              "passwordMinimumLength": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Minimum length of passwords.",
                "format": "int32",
                "nullable": true
              },
              "passwordMinutesOfInactivityBeforeLock": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Minutes of inactivity required before a password is required.",
                "format": "int32",
                "nullable": true
              },
              "passwordMinutesOfInactivityBeforeScreenTimeout": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Minutes of inactivity required before the screen times out.",
                "format": "int32",
                "nullable": true
              },
              "passwordPreviousPasswordBlockCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of previous passwords to block.",
                "format": "int32",
                "nullable": true
              },
              "passwordRequiredType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.requiredPasswordType"
                  }
                ],
                "description": "Type of password that is required. Possible values are: deviceDefault, alphanumeric, numeric.",
                "nullable": true
              },
              "passwordRequired": {
                "type": "boolean",
                "description": "Whether or not to require a password.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "lastModifiedDateTime": "string (timestamp)",
          "createdDateTime": "string (timestamp)",
          "description": "string",
          "displayName": "string",
          "version": "integer",
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "compliantAppsList": [
            {
              "@odata.type": "microsoft.graph.appListItem"
            }
          ],
          "compliantAppListType": {
            "@odata.type": "microsoft.graph.appListType"
          },
          "emailInDomainSuffixes": [
            "string"
          ],
          "passwordBlockSimple": true,
          "passwordExpirationDays": "integer",
          "passwordMinimumCharacterSetCount": "integer",
          "passwordMinimumLength": "integer",
          "passwordMinutesOfInactivityBeforeLock": "integer",
          "passwordMinutesOfInactivityBeforeScreenTimeout": "integer",
          "passwordPreviousPasswordBlockCount": "integer",
          "passwordRequiredType": {
            "@odata.type": "microsoft.graph.requiredPasswordType"
          },
          "passwordRequired": true
        }
      },
      "microsoft.graph.settingSource": {
        "title": "settingSource",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Not yet documented",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "description": "Not yet documented",
            "nullable": true
          }
        },
        "example": {
          "id": "string (identifier)",
          "displayName": "string"
        }
      },
      "microsoft.graph.settingStateDeviceSummary": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "settingStateDeviceSummary",
            "type": "object",
            "properties": {
              "settingName": {
                "type": "string",
                "description": "Name of the setting",
                "nullable": true
              },
              "instancePath": {
                "type": "string",
                "description": "Name of the InstancePath for the setting",
                "nullable": true
              },
              "unknownDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Device Unkown count for the setting",
                "format": "int32",
                "nullable": true
              },
              "notApplicableDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Device Not Applicable count for the setting",
                "format": "int32",
                "nullable": true
              },
              "compliantDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Device Compliant count for the setting",
                "format": "int32",
                "nullable": true
              },
              "remediatedDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Device Compliant count for the setting",
                "format": "int32",
                "nullable": true
              },
              "nonCompliantDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Device NonCompliant count for the setting",
                "format": "int32",
                "nullable": true
              },
              "errorDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Device error count for the setting",
                "format": "int32",
                "nullable": true
              },
              "conflictDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Device conflict error count for the setting",
                "format": "int32",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "settingName": "string",
          "instancePath": "string",
          "unknownDeviceCount": "integer",
          "notApplicableDeviceCount": "integer",
          "compliantDeviceCount": "integer",
          "remediatedDeviceCount": "integer",
          "nonCompliantDeviceCount": "integer",
          "errorDeviceCount": "integer",
          "conflictDeviceCount": "integer"
        }
      },
      "microsoft.graph.sharedPCConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceConfiguration"
          },
          {
            "title": "sharedPCConfiguration",
            "type": "object",
            "properties": {
              "accountManagerPolicy": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.sharedPCAccountManagerPolicy"
                  }
                ],
                "description": "Specifies how accounts are managed on a shared PC. Only applies when disableAccountManager is false.",
                "nullable": true
              },
              "allowedAccounts": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.sharedPCAllowedAccountType"
                  }
                ],
                "description": "Indicates which type of accounts are allowed to use on a shared PC. Possible values are: guest, domain.",
                "nullable": true
              },
              "allowLocalStorage": {
                "type": "boolean",
                "description": "Specifies whether local storage is allowed on a shared PC.",
                "nullable": true
              },
              "disableAccountManager": {
                "type": "boolean",
                "description": "Disables the account manager for shared PC mode.",
                "nullable": true
              },
              "disableEduPolicies": {
                "type": "boolean",
                "description": "Specifies whether the default shared PC education environment policies should be disabled. For Windows 10 RS2 and later, this policy will be applied without setting Enabled to true.",
                "nullable": true
              },
              "disablePowerPolicies": {
                "type": "boolean",
                "description": "Specifies whether the default shared PC power policies should be disabled.",
                "nullable": true
              },
              "disableSignInOnResume": {
                "type": "boolean",
                "description": "Disables the requirement to sign in whenever the device wakes up from sleep mode.",
                "nullable": true
              },
              "enabled": {
                "type": "boolean",
                "description": "Enables shared PC mode and applies the shared pc policies.",
                "nullable": true
              },
              "idleTimeBeforeSleepInSeconds": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Specifies the time in seconds that a device must sit idle before the PC goes to sleep. Setting this value to 0 prevents the sleep timeout from occurring.",
                "format": "int32",
                "nullable": true
              },
              "kioskAppDisplayName": {
                "type": "string",
                "description": "Specifies the display text for the account shown on the sign-in screen which launches the app specified by SetKioskAppUserModelId. Only applies when KioskAppUserModelId is set.",
                "nullable": true
              },
              "kioskAppUserModelId": {
                "type": "string",
                "description": "Specifies the application user model ID of the app to use with assigned access.",
                "nullable": true
              },
              "maintenanceStartTime": {
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?$",
                "type": "string",
                "description": "Specifies the daily start time of maintenance hour.",
                "format": "time",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "lastModifiedDateTime": "string (timestamp)",
          "createdDateTime": "string (timestamp)",
          "description": "string",
          "displayName": "string",
          "version": "integer",
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "accountManagerPolicy": {
            "@odata.type": "microsoft.graph.sharedPCAccountManagerPolicy"
          },
          "allowedAccounts": {
            "@odata.type": "microsoft.graph.sharedPCAllowedAccountType"
          },
          "allowLocalStorage": true,
          "disableAccountManager": true,
          "disableEduPolicies": true,
          "disablePowerPolicies": true,
          "disableSignInOnResume": true,
          "enabled": true,
          "idleTimeBeforeSleepInSeconds": "integer",
          "kioskAppDisplayName": "string",
          "kioskAppUserModelId": "string",
          "maintenanceStartTime": "string (timestamp)"
        }
      },
      "microsoft.graph.softwareUpdateStatusSummary": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "softwareUpdateStatusSummary",
            "type": "object",
            "properties": {
              "displayName": {
                "type": "string",
                "description": "The name of the policy.",
                "nullable": true
              },
              "compliantDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of compliant devices.",
                "format": "int32",
                "nullable": true
              },
              "nonCompliantDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of non compliant devices.",
                "format": "int32",
                "nullable": true
              },
              "remediatedDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of remediated devices.",
                "format": "int32",
                "nullable": true
              },
              "errorDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of devices had error.",
                "format": "int32",
                "nullable": true
              },
              "unknownDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of unknown devices.",
                "format": "int32",
                "nullable": true
              },
              "conflictDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of conflict devices.",
                "format": "int32",
                "nullable": true
              },
              "notApplicableDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of not applicable devices.",
                "format": "int32",
                "nullable": true
              },
              "compliantUserCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of compliant users.",
                "format": "int32",
                "nullable": true
              },
              "nonCompliantUserCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of non compliant users.",
                "format": "int32",
                "nullable": true
              },
              "remediatedUserCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of remediated users.",
                "format": "int32",
                "nullable": true
              },
              "errorUserCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of users had error.",
                "format": "int32",
                "nullable": true
              },
              "unknownUserCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of unknown users.",
                "format": "int32",
                "nullable": true
              },
              "conflictUserCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of conflict users.",
                "format": "int32",
                "nullable": true
              },
              "notApplicableUserCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of not applicable users.",
                "format": "int32",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "displayName": "string",
          "compliantDeviceCount": "integer",
          "nonCompliantDeviceCount": "integer",
          "remediatedDeviceCount": "integer",
          "errorDeviceCount": "integer",
          "unknownDeviceCount": "integer",
          "conflictDeviceCount": "integer",
          "notApplicableDeviceCount": "integer",
          "compliantUserCount": "integer",
          "nonCompliantUserCount": "integer",
          "remediatedUserCount": "integer",
          "errorUserCount": "integer",
          "unknownUserCount": "integer",
          "conflictUserCount": "integer",
          "notApplicableUserCount": "integer"
        }
      },
      "microsoft.graph.windows10CompliancePolicy": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceCompliancePolicy"
          },
          {
            "title": "windows10CompliancePolicy",
            "type": "object",
            "properties": {
              "passwordRequired": {
                "type": "boolean",
                "description": "Require a password to unlock Windows device.",
                "nullable": true
              },
              "passwordBlockSimple": {
                "type": "boolean",
                "description": "Indicates whether or not to block simple password.",
                "nullable": true
              },
              "passwordRequiredToUnlockFromIdle": {
                "type": "boolean",
                "description": "Require a password to unlock an idle device.",
                "nullable": true
              },
              "passwordMinutesOfInactivityBeforeLock": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Minutes of inactivity before a password is required.",
                "format": "int32",
                "nullable": true
              },
              "passwordExpirationDays": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The password expiration in days.",
                "format": "int32",
                "nullable": true
              },
              "passwordMinimumLength": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The minimum password length.",
                "format": "int32",
                "nullable": true
              },
              "passwordMinimumCharacterSetCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The number of character sets required in the password.",
                "format": "int32",
                "nullable": true
              },
              "passwordRequiredType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.requiredPasswordType"
                  }
                ],
                "description": "The required password type. Possible values are: deviceDefault, alphanumeric, numeric.",
                "nullable": true
              },
              "passwordPreviousPasswordBlockCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The number of previous passwords to prevent re-use of.",
                "format": "int32",
                "nullable": true
              },
              "requireHealthyDeviceReport": {
                "type": "boolean",
                "description": "Require devices to be reported as healthy by Windows Device Health Attestation.",
                "nullable": true
              },
              "osMinimumVersion": {
                "type": "string",
                "description": "Minimum Windows 10 version.",
                "nullable": true
              },
              "osMaximumVersion": {
                "type": "string",
                "description": "Maximum Windows 10 version.",
                "nullable": true
              },
              "mobileOsMinimumVersion": {
                "type": "string",
                "description": "Minimum Windows Phone version.",
                "nullable": true
              },
              "mobileOsMaximumVersion": {
                "type": "string",
                "description": "Maximum Windows Phone version.",
                "nullable": true
              },
              "earlyLaunchAntiMalwareDriverEnabled": {
                "type": "boolean",
                "description": "Require devices to be reported as healthy by Windows Device Health Attestation - early launch antimalware driver is enabled.",
                "nullable": true
              },
              "bitLockerEnabled": {
                "type": "boolean",
                "description": "Require devices to be reported healthy by Windows Device Health Attestation - bit locker is enabled",
                "nullable": true
              },
              "secureBootEnabled": {
                "type": "boolean",
                "description": "Require devices to be reported as healthy by Windows Device Health Attestation - secure boot is enabled.",
                "nullable": true
              },
              "codeIntegrityEnabled": {
                "type": "boolean",
                "description": "Require devices to be reported as healthy by Windows Device Health Attestation.",
                "nullable": true
              },
              "storageRequireEncryption": {
                "type": "boolean",
                "description": "Require encryption on windows devices.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "createdDateTime": "string (timestamp)",
          "description": "string",
          "lastModifiedDateTime": "string (timestamp)",
          "displayName": "string",
          "version": "integer",
          "scheduledActionsForRule": [
            {
              "@odata.type": "microsoft.graph.deviceComplianceScheduledActionForRule"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceComplianceDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceComplianceUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceComplianceDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceComplianceUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceCompliancePolicyAssignment"
            }
          ],
          "passwordRequired": true,
          "passwordBlockSimple": true,
          "passwordRequiredToUnlockFromIdle": true,
          "passwordMinutesOfInactivityBeforeLock": "integer",
          "passwordExpirationDays": "integer",
          "passwordMinimumLength": "integer",
          "passwordMinimumCharacterSetCount": "integer",
          "passwordRequiredType": {
            "@odata.type": "microsoft.graph.requiredPasswordType"
          },
          "passwordPreviousPasswordBlockCount": "integer",
          "requireHealthyDeviceReport": true,
          "osMinimumVersion": "string",
          "osMaximumVersion": "string",
          "mobileOsMinimumVersion": "string",
          "mobileOsMaximumVersion": "string",
          "earlyLaunchAntiMalwareDriverEnabled": true,
          "bitLockerEnabled": true,
          "secureBootEnabled": true,
          "codeIntegrityEnabled": true,
          "storageRequireEncryption": true
        }
      },
      "microsoft.graph.windows10CustomConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceConfiguration"
          },
          {
            "title": "windows10CustomConfiguration",
            "type": "object",
            "properties": {
              "omaSettings": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.omaSetting"
                    }
                  ],
                  "nullable": true
                },
                "description": "OMA settings. This collection can contain a maximum of 1000 elements."
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "lastModifiedDateTime": "string (timestamp)",
          "createdDateTime": "string (timestamp)",
          "description": "string",
          "displayName": "string",
          "version": "integer",
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "omaSettings": [
            {
              "@odata.type": "microsoft.graph.omaSetting"
            }
          ]
        }
      },
      "microsoft.graph.windows10EndpointProtectionConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceConfiguration"
          },
          {
            "title": "windows10EndpointProtectionConfiguration",
            "type": "object",
            "properties": {
              "firewallBlockStatefulFTP": {
                "type": "boolean",
                "description": "Blocks stateful FTP connections to the device",
                "nullable": true
              },
              "firewallIdleTimeoutForSecurityAssociationInSeconds": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Configures the idle timeout for security associations, in seconds, from 300 to 3600 inclusive. This is the period after which security associations will expire and be deleted. Valid values 300 to 3600",
                "format": "int32",
                "nullable": true
              },
              "firewallPreSharedKeyEncodingMethod": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.firewallPreSharedKeyEncodingMethodType"
                  }
                ],
                "description": "Select the preshared key encoding to be used. Possible values are: deviceDefault, none, utF8.",
                "nullable": true
              },
              "firewallIPSecExemptionsAllowNeighborDiscovery": {
                "type": "boolean",
                "description": "Configures IPSec exemptions to allow neighbor discovery IPv6 ICMP type-codes",
                "nullable": true
              },
              "firewallIPSecExemptionsAllowICMP": {
                "type": "boolean",
                "description": "Configures IPSec exemptions to allow ICMP",
                "nullable": true
              },
              "firewallIPSecExemptionsAllowRouterDiscovery": {
                "type": "boolean",
                "description": "Configures IPSec exemptions to allow router discovery IPv6 ICMP type-codes",
                "nullable": true
              },
              "firewallIPSecExemptionsAllowDHCP": {
                "type": "boolean",
                "description": "Configures IPSec exemptions to allow both IPv4 and IPv6 DHCP traffic",
                "nullable": true
              },
              "firewallCertificateRevocationListCheckMethod": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.firewallCertificateRevocationListCheckMethodType"
                  }
                ],
                "description": "Specify how the certificate revocation list is to be enforced. Possible values are: deviceDefault, none, attempt, require.",
                "nullable": true
              },
              "firewallMergeKeyingModuleSettings": {
                "type": "boolean",
                "description": "If an authentication set is not fully supported by a keying module, direct the module to ignore only unsupported authentication suites rather than the entire set",
                "nullable": true
              },
              "firewallPacketQueueingMethod": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.firewallPacketQueueingMethodType"
                  }
                ],
                "description": "Configures how packet queueing should be applied in the tunnel gateway scenario. Possible values are: deviceDefault, disabled, queueInbound, queueOutbound, queueBoth.",
                "nullable": true
              },
              "firewallProfileDomain": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.windowsFirewallNetworkProfile"
                  }
                ],
                "description": "Configures the firewall profile settings for domain networks",
                "nullable": true
              },
              "firewallProfilePublic": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.windowsFirewallNetworkProfile"
                  }
                ],
                "description": "Configures the firewall profile settings for public networks",
                "nullable": true
              },
              "firewallProfilePrivate": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.windowsFirewallNetworkProfile"
                  }
                ],
                "description": "Configures the firewall profile settings for private networks",
                "nullable": true
              },
              "defenderAttackSurfaceReductionExcludedPaths": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "List of exe files and folders to be excluded from attack surface reduction rules"
              },
              "defenderGuardedFoldersAllowedAppPaths": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "List of paths to exe that are allowed to access protected folders"
              },
              "defenderAdditionalGuardedFolders": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "List of folder paths to be added to the list of protected folders"
              },
              "defenderExploitProtectionXml": {
                "type": "string",
                "description": "Xml content containing information regarding exploit protection details.",
                "format": "base64url",
                "nullable": true
              },
              "defenderExploitProtectionXmlFileName": {
                "type": "string",
                "description": "Name of the file from which DefenderExploitProtectionXml was obtained.",
                "nullable": true
              },
              "defenderSecurityCenterBlockExploitProtectionOverride": {
                "type": "boolean",
                "description": "Indicates whether or not to block user from overriding Exploit Protection settings.",
                "nullable": true
              },
              "appLockerApplicationControl": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.appLockerApplicationControlType"
                  }
                ],
                "description": "Enables the Admin to choose what types of app to allow on devices. Possible values are: notConfigured, enforceComponentsAndStoreApps, auditComponentsAndStoreApps, enforceComponentsStoreAppsAndSmartlocker, auditComponentsStoreAppsAndSmartlocker.",
                "nullable": true
              },
              "smartScreenEnableInShell": {
                "type": "boolean",
                "description": "Allows IT Admins to configure SmartScreen for Windows.",
                "nullable": true
              },
              "smartScreenBlockOverrideForFiles": {
                "type": "boolean",
                "description": "Allows IT Admins to control whether users can can ignore SmartScreen warnings and run malicious files.",
                "nullable": true
              },
              "applicationGuardEnabled": {
                "type": "boolean",
                "description": "Enable Windows Defender Application Guard",
                "nullable": true
              },
              "applicationGuardBlockFileTransfer": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.applicationGuardBlockFileTransferType"
                  }
                ],
                "description": "Block clipboard to transfer image file, text file or neither of them. Possible values are: notConfigured, blockImageAndTextFile, blockImageFile, blockNone, blockTextFile.",
                "nullable": true
              },
              "applicationGuardBlockNonEnterpriseContent": {
                "type": "boolean",
                "description": "Block enterprise sites to load non-enterprise content, such as third party plug-ins",
                "nullable": true
              },
              "applicationGuardAllowPersistence": {
                "type": "boolean",
                "description": "Allow persisting user generated data inside the App Guard Containter (favorites, cookies, web passwords, etc.)",
                "nullable": true
              },
              "applicationGuardForceAuditing": {
                "type": "boolean",
                "description": "Force auditing will persist Windows logs and events to meet security/compliance criteria (sample events are user login-logoff, use of privilege rights, software installation, system changes, etc.)",
                "nullable": true
              },
              "applicationGuardBlockClipboardSharing": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.applicationGuardBlockClipboardSharingType"
                  }
                ],
                "description": "Block clipboard to share data from Host to Container, or from Container to Host, or both ways, or neither ways. Possible values are: notConfigured, blockBoth, blockHostToContainer, blockContainerToHost, blockNone.",
                "nullable": true
              },
              "applicationGuardAllowPrintToPDF": {
                "type": "boolean",
                "description": "Allow printing to PDF from Container",
                "nullable": true
              },
              "applicationGuardAllowPrintToXPS": {
                "type": "boolean",
                "description": "Allow printing to XPS from Container",
                "nullable": true
              },
              "applicationGuardAllowPrintToLocalPrinters": {
                "type": "boolean",
                "description": "Allow printing to Local Printers from Container",
                "nullable": true
              },
              "applicationGuardAllowPrintToNetworkPrinters": {
                "type": "boolean",
                "description": "Allow printing to Network Printers from Container",
                "nullable": true
              },
              "bitLockerDisableWarningForOtherDiskEncryption": {
                "type": "boolean",
                "description": "Allows the Admin to disable the warning prompt for other disk encryption on the user machines.",
                "nullable": true
              },
              "bitLockerEnableStorageCardEncryptionOnMobile": {
                "type": "boolean",
                "description": "Allows the admin to require encryption to be turned on using BitLocker. This policy is valid only for a mobile SKU.",
                "nullable": true
              },
              "bitLockerEncryptDevice": {
                "type": "boolean",
                "description": "Allows the admin to require encryption to be turned on using BitLocker.",
                "nullable": true
              },
              "bitLockerRemovableDrivePolicy": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.bitLockerRemovableDrivePolicy"
                  }
                ],
                "description": "BitLocker Removable Drive Policy.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "lastModifiedDateTime": "string (timestamp)",
          "createdDateTime": "string (timestamp)",
          "description": "string",
          "displayName": "string",
          "version": "integer",
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "firewallBlockStatefulFTP": true,
          "firewallIdleTimeoutForSecurityAssociationInSeconds": "integer",
          "firewallPreSharedKeyEncodingMethod": {
            "@odata.type": "microsoft.graph.firewallPreSharedKeyEncodingMethodType"
          },
          "firewallIPSecExemptionsAllowNeighborDiscovery": true,
          "firewallIPSecExemptionsAllowICMP": true,
          "firewallIPSecExemptionsAllowRouterDiscovery": true,
          "firewallIPSecExemptionsAllowDHCP": true,
          "firewallCertificateRevocationListCheckMethod": {
            "@odata.type": "microsoft.graph.firewallCertificateRevocationListCheckMethodType"
          },
          "firewallMergeKeyingModuleSettings": true,
          "firewallPacketQueueingMethod": {
            "@odata.type": "microsoft.graph.firewallPacketQueueingMethodType"
          },
          "firewallProfileDomain": {
            "@odata.type": "microsoft.graph.windowsFirewallNetworkProfile"
          },
          "firewallProfilePublic": {
            "@odata.type": "microsoft.graph.windowsFirewallNetworkProfile"
          },
          "firewallProfilePrivate": {
            "@odata.type": "microsoft.graph.windowsFirewallNetworkProfile"
          },
          "defenderAttackSurfaceReductionExcludedPaths": [
            "string"
          ],
          "defenderGuardedFoldersAllowedAppPaths": [
            "string"
          ],
          "defenderAdditionalGuardedFolders": [
            "string"
          ],
          "defenderExploitProtectionXml": "string",
          "defenderExploitProtectionXmlFileName": "string",
          "defenderSecurityCenterBlockExploitProtectionOverride": true,
          "appLockerApplicationControl": {
            "@odata.type": "microsoft.graph.appLockerApplicationControlType"
          },
          "smartScreenEnableInShell": true,
          "smartScreenBlockOverrideForFiles": true,
          "applicationGuardEnabled": true,
          "applicationGuardBlockFileTransfer": {
            "@odata.type": "microsoft.graph.applicationGuardBlockFileTransferType"
          },
          "applicationGuardBlockNonEnterpriseContent": true,
          "applicationGuardAllowPersistence": true,
          "applicationGuardForceAuditing": true,
          "applicationGuardBlockClipboardSharing": {
            "@odata.type": "microsoft.graph.applicationGuardBlockClipboardSharingType"
          },
          "applicationGuardAllowPrintToPDF": true,
          "applicationGuardAllowPrintToXPS": true,
          "applicationGuardAllowPrintToLocalPrinters": true,
          "applicationGuardAllowPrintToNetworkPrinters": true,
          "bitLockerDisableWarningForOtherDiskEncryption": true,
          "bitLockerEnableStorageCardEncryptionOnMobile": true,
          "bitLockerEncryptDevice": true,
          "bitLockerRemovableDrivePolicy": {
            "@odata.type": "microsoft.graph.bitLockerRemovableDrivePolicy"
          }
        }
      },
      "microsoft.graph.windows10EnterpriseModernAppManagementConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceConfiguration"
          },
          {
            "title": "windows10EnterpriseModernAppManagementConfiguration",
            "type": "object",
            "properties": {
              "uninstallBuiltInApps": {
                "type": "boolean",
                "description": "Indicates whether or not to uninstall a fixed list of built-in Windows apps.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "lastModifiedDateTime": "string (timestamp)",
          "createdDateTime": "string (timestamp)",
          "description": "string",
          "displayName": "string",
          "version": "integer",
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "uninstallBuiltInApps": true
        }
      },
      "microsoft.graph.windows10GeneralConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceConfiguration"
          },
          {
            "title": "windows10GeneralConfiguration",
            "type": "object",
            "properties": {
              "enterpriseCloudPrintDiscoveryEndPoint": {
                "type": "string",
                "description": "Endpoint for discovering cloud printers.",
                "nullable": true
              },
              "enterpriseCloudPrintOAuthAuthority": {
                "type": "string",
                "description": "Authentication endpoint for acquiring OAuth tokens.",
                "nullable": true
              },
              "enterpriseCloudPrintOAuthClientIdentifier": {
                "type": "string",
                "description": "GUID of a client application authorized to retrieve OAuth tokens from the OAuth Authority.",
                "nullable": true
              },
              "enterpriseCloudPrintResourceIdentifier": {
                "type": "string",
                "description": "OAuth resource URI for print service as configured in the Azure portal.",
                "nullable": true
              },
              "enterpriseCloudPrintDiscoveryMaxLimit": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Maximum number of printers that should be queried from a discovery endpoint. This is a mobile only setting. Valid values 1 to 65535",
                "format": "int32",
                "nullable": true
              },
              "enterpriseCloudPrintMopriaDiscoveryResourceIdentifier": {
                "type": "string",
                "description": "OAuth resource URI for printer discovery service as configured in Azure portal.",
                "nullable": true
              },
              "searchBlockDiacritics": {
                "type": "boolean",
                "description": "Specifies if search can use diacritics.",
                "nullable": true
              },
              "searchDisableAutoLanguageDetection": {
                "type": "boolean",
                "description": "Specifies whether to use automatic language detection when indexing content and properties.",
                "nullable": true
              },
              "searchDisableIndexingEncryptedItems": {
                "type": "boolean",
                "description": "Indicates whether or not to block indexing of WIP-protected items to prevent them from appearing in search results for Cortana or Explorer.",
                "nullable": true
              },
              "searchEnableRemoteQueries": {
                "type": "boolean",
                "description": "Indicates whether or not to block remote queries of this computer’s index.",
                "nullable": true
              },
              "searchDisableIndexerBackoff": {
                "type": "boolean",
                "description": "Indicates whether or not to disable the search indexer backoff feature.",
                "nullable": true
              },
              "searchDisableIndexingRemovableDrive": {
                "type": "boolean",
                "description": "Indicates whether or not to allow users to add locations on removable drives to libraries and to be indexed.",
                "nullable": true
              },
              "searchEnableAutomaticIndexSizeManangement": {
                "type": "boolean",
                "description": "Specifies minimum amount of hard drive space on the same drive as the index location before indexing stops.",
                "nullable": true
              },
              "diagnosticsDataSubmissionMode": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.diagnosticDataSubmissionMode"
                  }
                ],
                "description": "Gets or sets a value allowing the device to send diagnostic and usage telemetry data, such as Watson. Possible values are: userDefined, none, basic, enhanced, full.",
                "nullable": true
              },
              "oneDriveDisableFileSync": {
                "type": "boolean",
                "description": "Gets or sets a value allowing IT admins to prevent apps and features from working with files on OneDrive.",
                "nullable": true
              },
              "smartScreenEnableAppInstallControl": {
                "type": "boolean",
                "description": "Allows IT Admins to control whether users are allowed to install apps from places other than the Store.",
                "nullable": true
              },
              "personalizationDesktopImageUrl": {
                "type": "string",
                "description": "A http or https Url to a jpg, jpeg or png image that needs to be downloaded and used as the Desktop Image or a file Url to a local image on the file system that needs to used as the Desktop Image.",
                "nullable": true
              },
              "personalizationLockScreenImageUrl": {
                "type": "string",
                "description": "A http or https Url to a jpg, jpeg or png image that neeeds to be downloaded and used as the Lock Screen Image or a file Url to a local image on the file system that needs to be used as the Lock Screen Image.",
                "nullable": true
              },
              "bluetoothAllowedServices": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "Specify a list of allowed Bluetooth services and profiles in hex formatted strings."
              },
              "bluetoothBlockAdvertising": {
                "type": "boolean",
                "description": "Whether or not to Block the user from using bluetooth advertising.",
                "nullable": true
              },
              "bluetoothBlockDiscoverableMode": {
                "type": "boolean",
                "description": "Whether or not to Block the user from using bluetooth discoverable mode.",
                "nullable": true
              },
              "bluetoothBlockPrePairing": {
                "type": "boolean",
                "description": "Whether or not to block specific bundled Bluetooth peripherals to automatically pair with the host device.",
                "nullable": true
              },
              "edgeBlockAutofill": {
                "type": "boolean",
                "description": "Indicates whether or not to block auto fill.",
                "nullable": true
              },
              "edgeBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to Block the user from using the Edge browser.",
                "nullable": true
              },
              "edgeCookiePolicy": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.edgeCookiePolicy"
                  }
                ],
                "description": "Indicates which cookies to block in the Edge browser. Possible values are: userDefined, allow, blockThirdParty, blockAll.",
                "nullable": true
              },
              "edgeBlockDeveloperTools": {
                "type": "boolean",
                "description": "Indicates whether or not to block developer tools in the Edge browser.",
                "nullable": true
              },
              "edgeBlockSendingDoNotTrackHeader": {
                "type": "boolean",
                "description": "Indicates whether or not to Block the user from sending the do not track header.",
                "nullable": true
              },
              "edgeBlockExtensions": {
                "type": "boolean",
                "description": "Indicates whether or not to block extensions in the Edge browser.",
                "nullable": true
              },
              "edgeBlockInPrivateBrowsing": {
                "type": "boolean",
                "description": "Indicates whether or not to block InPrivate browsing on corporate networks, in the Edge browser.",
                "nullable": true
              },
              "edgeBlockJavaScript": {
                "type": "boolean",
                "description": "Indicates whether or not to Block the user from using JavaScript.",
                "nullable": true
              },
              "edgeBlockPasswordManager": {
                "type": "boolean",
                "description": "Indicates whether or not to Block password manager.",
                "nullable": true
              },
              "edgeBlockAddressBarDropdown": {
                "type": "boolean",
                "description": "Block the address bar dropdown functionality in Microsoft Edge. Disable this settings to minimize network connections from Microsoft Edge to Microsoft services.",
                "nullable": true
              },
              "edgeBlockCompatibilityList": {
                "type": "boolean",
                "description": "Block Microsoft compatibility list in Microsoft Edge. This list from Microsoft helps Edge properly display sites with known compatibility issues.",
                "nullable": true
              },
              "edgeClearBrowsingDataOnExit": {
                "type": "boolean",
                "description": "Clear browsing data on exiting Microsoft Edge.",
                "nullable": true
              },
              "edgeAllowStartPagesModification": {
                "type": "boolean",
                "description": "Allow users to change Start pages on Edge. Use the EdgeHomepageUrls to specify the Start pages that the user would see by default when they open Edge.",
                "nullable": true
              },
              "edgeDisableFirstRunPage": {
                "type": "boolean",
                "description": "Block the Microsoft web page that opens on the first use of Microsoft Edge. This policy allows enterprises, like those enrolled in zero emissions configurations, to block this page.",
                "nullable": true
              },
              "edgeBlockLiveTileDataCollection": {
                "type": "boolean",
                "description": "Block the collection of information by Microsoft for live tile creation when users pin a site to Start from Microsoft Edge.",
                "nullable": true
              },
              "edgeSyncFavoritesWithInternetExplorer": {
                "type": "boolean",
                "description": "Enable favorites sync between Internet Explorer and Microsoft Edge. Additions, deletions, modifications and order changes to favorites are shared between browsers.",
                "nullable": true
              },
              "cellularBlockDataWhenRoaming": {
                "type": "boolean",
                "description": "Whether or not to Block the user from using data over cellular while roaming.",
                "nullable": true
              },
              "cellularBlockVpn": {
                "type": "boolean",
                "description": "Whether or not to Block the user from using VPN over cellular.",
                "nullable": true
              },
              "cellularBlockVpnWhenRoaming": {
                "type": "boolean",
                "description": "Whether or not to Block the user from using VPN when roaming over cellular.",
                "nullable": true
              },
              "defenderBlockEndUserAccess": {
                "type": "boolean",
                "description": "Whether or not to block end user access to Defender.",
                "nullable": true
              },
              "defenderDaysBeforeDeletingQuarantinedMalware": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of days before deleting quarantined malware. Valid values 0 to 90",
                "format": "int32",
                "nullable": true
              },
              "defenderDetectedMalwareActions": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.defenderDetectedMalwareActions"
                  }
                ],
                "description": "Gets or sets Defender’s actions to take on detected Malware per threat level.",
                "nullable": true
              },
              "defenderSystemScanSchedule": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.weeklySchedule"
                  }
                ],
                "description": "Defender day of the week for the system scan. Possible values are: userDefined, everyday, sunday, monday, tuesday, wednesday, thursday, friday, saturday.",
                "nullable": true
              },
              "defenderFilesAndFoldersToExclude": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "Files and folder to exclude from scans and real time protection."
              },
              "defenderFileExtensionsToExclude": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "File extensions to exclude from scans and real time protection."
              },
              "defenderScanMaxCpu": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Max CPU usage percentage during scan. Valid values 0 to 100",
                "format": "int32",
                "nullable": true
              },
              "defenderMonitorFileActivity": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.defenderMonitorFileActivity"
                  }
                ],
                "description": "Value for monitoring file activity. Possible values are: userDefined, disable, monitorAllFiles, monitorIncomingFilesOnly, monitorOutgoingFilesOnly.",
                "nullable": true
              },
              "defenderProcessesToExclude": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "Processes to exclude from scans and real time protection."
              },
              "defenderPromptForSampleSubmission": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.defenderPromptForSampleSubmission"
                  }
                ],
                "description": "The configuration for how to prompt user for sample submission. Possible values are: userDefined, alwaysPrompt, promptBeforeSendingPersonalData, neverSendData, sendAllDataWithoutPrompting.",
                "nullable": true
              },
              "defenderRequireBehaviorMonitoring": {
                "type": "boolean",
                "description": "Indicates whether or not to require behavior monitoring.",
                "nullable": true
              },
              "defenderRequireCloudProtection": {
                "type": "boolean",
                "description": "Indicates whether or not to require cloud protection.",
                "nullable": true
              },
              "defenderRequireNetworkInspectionSystem": {
                "type": "boolean",
                "description": "Indicates whether or not to require network inspection system.",
                "nullable": true
              },
              "defenderRequireRealTimeMonitoring": {
                "type": "boolean",
                "description": "Indicates whether or not to require real time monitoring.",
                "nullable": true
              },
              "defenderScanArchiveFiles": {
                "type": "boolean",
                "description": "Indicates whether or not to scan archive files.",
                "nullable": true
              },
              "defenderScanDownloads": {
                "type": "boolean",
                "description": "Indicates whether or not to scan downloads.",
                "nullable": true
              },
              "defenderScanNetworkFiles": {
                "type": "boolean",
                "description": "Indicates whether or not to scan files opened from a network folder.",
                "nullable": true
              },
              "defenderScanIncomingMail": {
                "type": "boolean",
                "description": "Indicates whether or not to scan incoming mail messages.",
                "nullable": true
              },
              "defenderScanMappedNetworkDrivesDuringFullScan": {
                "type": "boolean",
                "description": "Indicates whether or not to scan mapped network drives during full scan.",
                "nullable": true
              },
              "defenderScanRemovableDrivesDuringFullScan": {
                "type": "boolean",
                "description": "Indicates whether or not to scan removable drives during full scan.",
                "nullable": true
              },
              "defenderScanScriptsLoadedInInternetExplorer": {
                "type": "boolean",
                "description": "Indicates whether or not to scan scripts loaded in Internet Explorer browser.",
                "nullable": true
              },
              "defenderSignatureUpdateIntervalInHours": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The signature update interval in hours. Specify 0 not to check. Valid values 0 to 24",
                "format": "int32",
                "nullable": true
              },
              "defenderScanType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.defenderScanType"
                  }
                ],
                "description": "The defender system scan type. Possible values are: userDefined, disabled, quick, full.",
                "nullable": true
              },
              "defenderScheduledScanTime": {
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?$",
                "type": "string",
                "description": "The defender time for the system scan.",
                "format": "time",
                "nullable": true
              },
              "defenderScheduledQuickScanTime": {
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?$",
                "type": "string",
                "description": "The time to perform a daily quick scan.",
                "format": "time",
                "nullable": true
              },
              "defenderCloudBlockLevel": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.defenderCloudBlockLevelType"
                  }
                ],
                "description": "Specifies the level of cloud-delivered protection. Possible values are: notConfigured, high, highPlus, zeroTolerance.",
                "nullable": true
              },
              "lockScreenAllowTimeoutConfiguration": {
                "type": "boolean",
                "description": "Specify whether to show a user-configurable setting to control the screen timeout while on the lock screen of Windows 10 Mobile devices. If this policy is set to Allow, the value set by lockScreenTimeoutInSeconds is ignored.",
                "nullable": true
              },
              "lockScreenBlockActionCenterNotifications": {
                "type": "boolean",
                "description": "Indicates whether or not to block action center notifications over lock screen.",
                "nullable": true
              },
              "lockScreenBlockCortana": {
                "type": "boolean",
                "description": "Indicates whether or not the user can interact with Cortana using speech while the system is locked.",
                "nullable": true
              },
              "lockScreenBlockToastNotifications": {
                "type": "boolean",
                "description": "Indicates whether to allow toast notifications above the device lock screen.",
                "nullable": true
              },
              "lockScreenTimeoutInSeconds": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Set the duration (in seconds) from the screen locking to the screen turning off for Windows 10 Mobile devices. Supported values are 11-1800. Valid values 11 to 1800",
                "format": "int32",
                "nullable": true
              },
              "passwordBlockSimple": {
                "type": "boolean",
                "description": "Specify whether PINs or passwords such as '1111' or '1234' are allowed. For Windows 10 desktops, it also controls the use of picture passwords.",
                "nullable": true
              },
              "passwordExpirationDays": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The password expiration in days. Valid values 0 to 730",
                "format": "int32",
                "nullable": true
              },
              "passwordMinimumLength": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The minimum password length. Valid values 4 to 16",
                "format": "int32",
                "nullable": true
              },
              "passwordMinutesOfInactivityBeforeScreenTimeout": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The minutes of inactivity before the screen times out.",
                "format": "int32",
                "nullable": true
              },
              "passwordMinimumCharacterSetCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The number of character sets required in the password.",
                "format": "int32",
                "nullable": true
              },
              "passwordPreviousPasswordBlockCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The number of previous passwords to prevent reuse of. Valid values 0 to 50",
                "format": "int32",
                "nullable": true
              },
              "passwordRequired": {
                "type": "boolean",
                "description": "Indicates whether or not to require the user to have a password.",
                "nullable": true
              },
              "passwordRequireWhenResumeFromIdleState": {
                "type": "boolean",
                "description": "Indicates whether or not to require a password upon resuming from an idle state.",
                "nullable": true
              },
              "passwordRequiredType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.requiredPasswordType"
                  }
                ],
                "description": "The required password type. Possible values are: deviceDefault, alphanumeric, numeric.",
                "nullable": true
              },
              "passwordSignInFailureCountBeforeFactoryReset": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The number of sign in failures before factory reset. Valid values 0 to 999",
                "format": "int32",
                "nullable": true
              },
              "privacyAdvertisingId": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.stateManagementSetting"
                  }
                ],
                "description": "Enables or disables the use of advertising ID. Added in Windows 10, version 1607. Possible values are: notConfigured, blocked, allowed.",
                "nullable": true
              },
              "privacyAutoAcceptPairingAndConsentPrompts": {
                "type": "boolean",
                "description": "Indicates whether or not to allow the automatic acceptance of the pairing and privacy user consent dialog when launching apps.",
                "nullable": true
              },
              "privacyBlockInputPersonalization": {
                "type": "boolean",
                "description": "Indicates whether or not to block the usage of cloud based speech services for Cortana, Dictation, or Store applications.",
                "nullable": true
              },
              "startBlockUnpinningAppsFromTaskbar": {
                "type": "boolean",
                "description": "Indicates whether or not to block the user from unpinning apps from taskbar.",
                "nullable": true
              },
              "startMenuAppListVisibility": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.windowsStartMenuAppListVisibilityType"
                  }
                ],
                "description": "Setting the value of this collapses the app list, removes the app list entirely, or disables the corresponding toggle in the Settings app. Possible values are: userDefined, collapse, remove, disableSettingsApp.",
                "nullable": true
              },
              "startMenuHideChangeAccountSettings": {
                "type": "boolean",
                "description": "Enabling this policy hides the change account setting from appearing in the user tile in the start menu.",
                "nullable": true
              },
              "startMenuHideFrequentlyUsedApps": {
                "type": "boolean",
                "description": "Enabling this policy hides the most used apps from appearing on the start menu and disables the corresponding toggle in the Settings app.",
                "nullable": true
              },
              "startMenuHideHibernate": {
                "type": "boolean",
                "description": "Enabling this policy hides hibernate from appearing in the power button in the start menu.",
                "nullable": true
              },
              "startMenuHideLock": {
                "type": "boolean",
                "description": "Enabling this policy hides lock from appearing in the user tile in the start menu.",
                "nullable": true
              },
              "startMenuHidePowerButton": {
                "type": "boolean",
                "description": "Enabling this policy hides the power button from appearing in the start menu.",
                "nullable": true
              },
              "startMenuHideRecentJumpLists": {
                "type": "boolean",
                "description": "Enabling this policy hides recent jump lists from appearing on the start menu/taskbar and disables the corresponding toggle in the Settings app.",
                "nullable": true
              },
              "startMenuHideRecentlyAddedApps": {
                "type": "boolean",
                "description": "Enabling this policy hides recently added apps from appearing on the start menu and disables the corresponding toggle in the Settings app.",
                "nullable": true
              },
              "startMenuHideRestartOptions": {
                "type": "boolean",
                "description": "Enabling this policy hides 'Restart/Update and Restart' from appearing in the power button in the start menu.",
                "nullable": true
              },
              "startMenuHideShutDown": {
                "type": "boolean",
                "description": "Enabling this policy hides shut down/update and shut down from appearing in the power button in the start menu.",
                "nullable": true
              },
              "startMenuHideSignOut": {
                "type": "boolean",
                "description": "Enabling this policy hides sign out from appearing in the user tile in the start menu.",
                "nullable": true
              },
              "startMenuHideSleep": {
                "type": "boolean",
                "description": "Enabling this policy hides sleep from appearing in the power button in the start menu.",
                "nullable": true
              },
              "startMenuHideSwitchAccount": {
                "type": "boolean",
                "description": "Enabling this policy hides switch account from appearing in the user tile in the start menu.",
                "nullable": true
              },
              "startMenuHideUserTile": {
                "type": "boolean",
                "description": "Enabling this policy hides the user tile from appearing in the start menu.",
                "nullable": true
              },
              "startMenuLayoutEdgeAssetsXml": {
                "type": "string",
                "description": "This policy setting allows you to import Edge assets to be used with startMenuLayoutXml policy. Start layout can contain secondary tile from Edge app which looks for Edge local asset file. Edge local asset would not exist and cause Edge secondary tile to appear empty in this case. This policy only gets applied when startMenuLayoutXml policy is modified. The value should be a UTF-8 Base64 encoded byte array.",
                "format": "base64url",
                "nullable": true
              },
              "startMenuLayoutXml": {
                "type": "string",
                "description": "Allows admins to override the default Start menu layout and prevents the user from changing it. The layout is modified by specifying an XML file based on a layout modification schema. XML needs to be in a UTF8 encoded byte array format.",
                "format": "base64url",
                "nullable": true
              },
              "startMenuMode": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.windowsStartMenuModeType"
                  }
                ],
                "description": "Allows admins to decide how the Start menu is displayed. Possible values are: userDefined, fullScreen, nonFullScreen.",
                "nullable": true
              },
              "startMenuPinnedFolderDocuments": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.visibilitySetting"
                  }
                ],
                "description": "Enforces the visibility (Show/Hide) of the Documents folder shortcut on the Start menu. Possible values are: notConfigured, hide, show.",
                "nullable": true
              },
              "startMenuPinnedFolderDownloads": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.visibilitySetting"
                  }
                ],
                "description": "Enforces the visibility (Show/Hide) of the Downloads folder shortcut on the Start menu. Possible values are: notConfigured, hide, show.",
                "nullable": true
              },
              "startMenuPinnedFolderFileExplorer": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.visibilitySetting"
                  }
                ],
                "description": "Enforces the visibility (Show/Hide) of the FileExplorer shortcut on the Start menu. Possible values are: notConfigured, hide, show.",
                "nullable": true
              },
              "startMenuPinnedFolderHomeGroup": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.visibilitySetting"
                  }
                ],
                "description": "Enforces the visibility (Show/Hide) of the HomeGroup folder shortcut on the Start menu. Possible values are: notConfigured, hide, show.",
                "nullable": true
              },
              "startMenuPinnedFolderMusic": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.visibilitySetting"
                  }
                ],
                "description": "Enforces the visibility (Show/Hide) of the Music folder shortcut on the Start menu. Possible values are: notConfigured, hide, show.",
                "nullable": true
              },
              "startMenuPinnedFolderNetwork": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.visibilitySetting"
                  }
                ],
                "description": "Enforces the visibility (Show/Hide) of the Network folder shortcut on the Start menu. Possible values are: notConfigured, hide, show.",
                "nullable": true
              },
              "startMenuPinnedFolderPersonalFolder": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.visibilitySetting"
                  }
                ],
                "description": "Enforces the visibility (Show/Hide) of the PersonalFolder shortcut on the Start menu. Possible values are: notConfigured, hide, show.",
                "nullable": true
              },
              "startMenuPinnedFolderPictures": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.visibilitySetting"
                  }
                ],
                "description": "Enforces the visibility (Show/Hide) of the Pictures folder shortcut on the Start menu. Possible values are: notConfigured, hide, show.",
                "nullable": true
              },
              "startMenuPinnedFolderSettings": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.visibilitySetting"
                  }
                ],
                "description": "Enforces the visibility (Show/Hide) of the Settings folder shortcut on the Start menu. Possible values are: notConfigured, hide, show.",
                "nullable": true
              },
              "startMenuPinnedFolderVideos": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.visibilitySetting"
                  }
                ],
                "description": "Enforces the visibility (Show/Hide) of the Videos folder shortcut on the Start menu. Possible values are: notConfigured, hide, show.",
                "nullable": true
              },
              "settingsBlockSettingsApp": {
                "type": "boolean",
                "description": "Indicates whether or not to block access to Settings app.",
                "nullable": true
              },
              "settingsBlockSystemPage": {
                "type": "boolean",
                "description": "Indicates whether or not to block access to System in Settings app.",
                "nullable": true
              },
              "settingsBlockDevicesPage": {
                "type": "boolean",
                "description": "Indicates whether or not to block access to Devices in Settings app.",
                "nullable": true
              },
              "settingsBlockNetworkInternetPage": {
                "type": "boolean",
                "description": "Indicates whether or not to block access to Network & Internet in Settings app.",
                "nullable": true
              },
              "settingsBlockPersonalizationPage": {
                "type": "boolean",
                "description": "Indicates whether or not to block access to Personalization in Settings app.",
                "nullable": true
              },
              "settingsBlockAccountsPage": {
                "type": "boolean",
                "description": "Indicates whether or not to block access to Accounts in Settings app.",
                "nullable": true
              },
              "settingsBlockTimeLanguagePage": {
                "type": "boolean",
                "description": "Indicates whether or not to block access to Time & Language in Settings app.",
                "nullable": true
              },
              "settingsBlockEaseOfAccessPage": {
                "type": "boolean",
                "description": "Indicates whether or not to block access to Ease of Access in Settings app.",
                "nullable": true
              },
              "settingsBlockPrivacyPage": {
                "type": "boolean",
                "description": "Indicates whether or not to block access to Privacy in Settings app.",
                "nullable": true
              },
              "settingsBlockUpdateSecurityPage": {
                "type": "boolean",
                "description": "Indicates whether or not to block access to Update & Security in Settings app.",
                "nullable": true
              },
              "settingsBlockAppsPage": {
                "type": "boolean",
                "description": "Indicates whether or not to block access to Apps in Settings app.",
                "nullable": true
              },
              "settingsBlockGamingPage": {
                "type": "boolean",
                "description": "Indicates whether or not to block access to Gaming in Settings app.",
                "nullable": true
              },
              "windowsSpotlightBlockConsumerSpecificFeatures": {
                "type": "boolean",
                "description": "Allows IT admins to block experiences that are typically for consumers only, such as Start suggestions, Membership notifications, Post-OOBE app install and redirect tiles.",
                "nullable": true
              },
              "windowsSpotlightBlocked": {
                "type": "boolean",
                "description": "Allows IT admins to turn off all Windows Spotlight features",
                "nullable": true
              },
              "windowsSpotlightBlockOnActionCenter": {
                "type": "boolean",
                "description": "Block suggestions from Microsoft that show after each OS clean install, upgrade or in an on-going basis to introduce users to what is new or changed",
                "nullable": true
              },
              "windowsSpotlightBlockTailoredExperiences": {
                "type": "boolean",
                "description": "Block personalized content in Windows spotlight based on user’s device usage.",
                "nullable": true
              },
              "windowsSpotlightBlockThirdPartyNotifications": {
                "type": "boolean",
                "description": "Block third party content delivered via Windows Spotlight",
                "nullable": true
              },
              "windowsSpotlightBlockWelcomeExperience": {
                "type": "boolean",
                "description": "Block Windows Spotlight Windows welcome experience",
                "nullable": true
              },
              "windowsSpotlightBlockWindowsTips": {
                "type": "boolean",
                "description": "Allows IT admins to turn off the popup of Windows Tips.",
                "nullable": true
              },
              "windowsSpotlightConfigureOnLockScreen": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.windowsSpotlightEnablementSettings"
                  }
                ],
                "description": "Specifies the type of Spotlight. Possible values are: notConfigured, disabled, enabled.",
                "nullable": true
              },
              "networkProxyApplySettingsDeviceWide": {
                "type": "boolean",
                "description": "If set, proxy settings will be applied to all processes and accounts in the device. Otherwise, it will be applied to the user account that’s enrolled into MDM.",
                "nullable": true
              },
              "networkProxyDisableAutoDetect": {
                "type": "boolean",
                "description": "Disable automatic detection of settings. If enabled, the system will try to find the path to a proxy auto-config (PAC) script.",
                "nullable": true
              },
              "networkProxyAutomaticConfigurationUrl": {
                "type": "string",
                "description": "Address to the proxy auto-config (PAC) script you want to use.",
                "nullable": true
              },
              "networkProxyServer": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.windows10NetworkProxyServer"
                  }
                ],
                "description": "Specifies manual proxy server settings.",
                "nullable": true
              },
              "accountsBlockAddingNonMicrosoftAccountEmail": {
                "type": "boolean",
                "description": "Indicates whether or not to Block the user from adding email accounts to the device that are not associated with a Microsoft account.",
                "nullable": true
              },
              "antiTheftModeBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to block the user from selecting an AntiTheft mode preference (Windows 10 Mobile only).",
                "nullable": true
              },
              "bluetoothBlocked": {
                "type": "boolean",
                "description": "Whether or not to Block the user from using bluetooth.",
                "nullable": true
              },
              "cameraBlocked": {
                "type": "boolean",
                "description": "Whether or not to Block the user from accessing the camera of the device.",
                "nullable": true
              },
              "connectedDevicesServiceBlocked": {
                "type": "boolean",
                "description": "Whether or not to block Connected Devices Service which enables discovery and connection to other devices, remote messaging, remote app sessions and other cross-device experiences.",
                "nullable": true
              },
              "certificatesBlockManualRootCertificateInstallation": {
                "type": "boolean",
                "description": "Whether or not to Block the user from doing manual root certificate installation.",
                "nullable": true
              },
              "copyPasteBlocked": {
                "type": "boolean",
                "description": "Whether or not to Block the user from using copy paste.",
                "nullable": true
              },
              "cortanaBlocked": {
                "type": "boolean",
                "description": "Whether or not to Block the user from using Cortana.",
                "nullable": true
              },
              "deviceManagementBlockFactoryResetOnMobile": {
                "type": "boolean",
                "description": "Indicates whether or not to Block the user from resetting their phone.",
                "nullable": true
              },
              "deviceManagementBlockManualUnenroll": {
                "type": "boolean",
                "description": "Indicates whether or not to Block the user from doing manual un-enrollment from device management.",
                "nullable": true
              },
              "safeSearchFilter": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.safeSearchFilterType"
                  }
                ],
                "description": "Specifies what filter level of safe search is required. Possible values are: userDefined, strict, moderate.",
                "nullable": true
              },
              "edgeBlockPopups": {
                "type": "boolean",
                "description": "Indicates whether or not to block popups.",
                "nullable": true
              },
              "edgeBlockSearchSuggestions": {
                "type": "boolean",
                "description": "Indicates whether or not to Block the user from using the search suggestions in the address bar.",
                "nullable": true
              },
              "edgeBlockSendingIntranetTrafficToInternetExplorer": {
                "type": "boolean",
                "description": "Indicates whether or not to Block the user from sending Intranet traffic to Internet Explorer from Edge.",
                "nullable": true
              },
              "edgeRequireSmartScreen": {
                "type": "boolean",
                "description": "Indicates whether or not to Require the user to use the smart screen filter.",
                "nullable": true
              },
              "edgeEnterpriseModeSiteListLocation": {
                "type": "string",
                "description": "Indicates the enterprise mode site list location. Could be a local file, local network or http location.",
                "nullable": true
              },
              "edgeFirstRunUrl": {
                "type": "string",
                "description": "The first run URL for when Edge browser is opened for the first time.",
                "nullable": true
              },
              "edgeSearchEngine": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.edgeSearchEngineBase"
                  }
                ],
                "description": "Allows IT admins to set a default search engine for MDM-Controlled devices. Users can override this and change their default search engine provided the AllowSearchEngineCustomization policy is not set.",
                "nullable": true
              },
              "edgeHomepageUrls": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "The list of URLs for homepages shodwn on MDM-enrolled devices on Edge browser."
              },
              "edgeBlockAccessToAboutFlags": {
                "type": "boolean",
                "description": "Indicates whether or not to prevent access to about flags on Edge browser.",
                "nullable": true
              },
              "smartScreenBlockPromptOverride": {
                "type": "boolean",
                "description": "Indicates whether or not users can override SmartScreen Filter warnings about potentially malicious websites.",
                "nullable": true
              },
              "smartScreenBlockPromptOverrideForFiles": {
                "type": "boolean",
                "description": "Indicates whether or not users can override the SmartScreen Filter warnings about downloading unverified files",
                "nullable": true
              },
              "webRtcBlockLocalhostIpAddress": {
                "type": "boolean",
                "description": "Indicates whether or not user's localhost IP address is displayed while making phone calls using the WebRTC",
                "nullable": true
              },
              "internetSharingBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to Block the user from using internet sharing.",
                "nullable": true
              },
              "settingsBlockAddProvisioningPackage": {
                "type": "boolean",
                "description": "Indicates whether or not to block the user from installing provisioning packages.",
                "nullable": true
              },
              "settingsBlockRemoveProvisioningPackage": {
                "type": "boolean",
                "description": "Indicates whether or not to block the runtime configuration agent from removing provisioning packages.",
                "nullable": true
              },
              "settingsBlockChangeSystemTime": {
                "type": "boolean",
                "description": "Indicates whether or not to block the user from changing date and time settings.",
                "nullable": true
              },
              "settingsBlockEditDeviceName": {
                "type": "boolean",
                "description": "Indicates whether or not to block the user from editing the device name.",
                "nullable": true
              },
              "settingsBlockChangeRegion": {
                "type": "boolean",
                "description": "Indicates whether or not to block the user from changing the region settings.",
                "nullable": true
              },
              "settingsBlockChangeLanguage": {
                "type": "boolean",
                "description": "Indicates whether or not to block the user from changing the language settings.",
                "nullable": true
              },
              "settingsBlockChangePowerSleep": {
                "type": "boolean",
                "description": "Indicates whether or not to block the user from changing power and sleep settings.",
                "nullable": true
              },
              "locationServicesBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to Block the user from location services.",
                "nullable": true
              },
              "microsoftAccountBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to Block a Microsoft account.",
                "nullable": true
              },
              "microsoftAccountBlockSettingsSync": {
                "type": "boolean",
                "description": "Indicates whether or not to Block Microsoft account settings sync.",
                "nullable": true
              },
              "nfcBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to Block the user from using near field communication.",
                "nullable": true
              },
              "resetProtectionModeBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to Block the user from reset protection mode.",
                "nullable": true
              },
              "screenCaptureBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to Block the user from taking Screenshots.",
                "nullable": true
              },
              "storageBlockRemovableStorage": {
                "type": "boolean",
                "description": "Indicates whether or not to Block the user from using removable storage.",
                "nullable": true
              },
              "storageRequireMobileDeviceEncryption": {
                "type": "boolean",
                "description": "Indicating whether or not to require encryption on a mobile device.",
                "nullable": true
              },
              "usbBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to Block the user from USB connection.",
                "nullable": true
              },
              "voiceRecordingBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to Block the user from voice recording.",
                "nullable": true
              },
              "wiFiBlockAutomaticConnectHotspots": {
                "type": "boolean",
                "description": "Indicating whether or not to block automatically connecting to Wi-Fi hotspots. Has no impact if Wi-Fi is blocked.",
                "nullable": true
              },
              "wiFiBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to Block the user from using Wi-Fi.",
                "nullable": true
              },
              "wiFiBlockManualConfiguration": {
                "type": "boolean",
                "description": "Indicates whether or not to Block the user from using Wi-Fi manual configuration.",
                "nullable": true
              },
              "wiFiScanInterval": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Specify how often devices scan for Wi-Fi networks. Supported values are 1-500, where 100 = default, and 500 = low frequency. Valid values 1 to 500",
                "format": "int32",
                "nullable": true
              },
              "wirelessDisplayBlockProjectionToThisDevice": {
                "type": "boolean",
                "description": "Indicates whether or not to allow other devices from discovering this PC for projection.",
                "nullable": true
              },
              "wirelessDisplayBlockUserInputFromReceiver": {
                "type": "boolean",
                "description": "Indicates whether or not to allow user input from wireless display receiver.",
                "nullable": true
              },
              "wirelessDisplayRequirePinForPairing": {
                "type": "boolean",
                "description": "Indicates whether or not to require a PIN for new devices to initiate pairing.",
                "nullable": true
              },
              "windowsStoreBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to Block the user from using the Windows store.",
                "nullable": true
              },
              "appsAllowTrustedAppsSideloading": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.stateManagementSetting"
                  }
                ],
                "description": "Indicates whether apps from AppX packages signed with a trusted certificate can be side loaded. Possible values are: notConfigured, blocked, allowed.",
                "nullable": true
              },
              "windowsStoreBlockAutoUpdate": {
                "type": "boolean",
                "description": "Indicates whether or not to block automatic update of apps from Windows Store.",
                "nullable": true
              },
              "developerUnlockSetting": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.stateManagementSetting"
                  }
                ],
                "description": "Indicates whether or not to allow developer unlock. Possible values are: notConfigured, blocked, allowed.",
                "nullable": true
              },
              "sharedUserAppDataAllowed": {
                "type": "boolean",
                "description": "Indicates whether or not to block multiple users of the same app to share data.",
                "nullable": true
              },
              "appsBlockWindowsStoreOriginatedApps": {
                "type": "boolean",
                "description": "Indicates whether or not to disable the launch of all apps from Windows Store that came pre-installed or were downloaded.",
                "nullable": true
              },
              "windowsStoreEnablePrivateStoreOnly": {
                "type": "boolean",
                "description": "Indicates whether or not to enable Private Store Only.",
                "nullable": true
              },
              "storageRestrictAppDataToSystemVolume": {
                "type": "boolean",
                "description": "Indicates whether application data is restricted to the system drive.",
                "nullable": true
              },
              "storageRestrictAppInstallToSystemVolume": {
                "type": "boolean",
                "description": "Indicates whether the installation of applications is restricted to the system drive.",
                "nullable": true
              },
              "gameDvrBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to block DVR and broadcasting.",
                "nullable": true
              },
              "experienceBlockDeviceDiscovery": {
                "type": "boolean",
                "description": "Indicates whether or not to enable device discovery UX.",
                "nullable": true
              },
              "experienceBlockErrorDialogWhenNoSIM": {
                "type": "boolean",
                "description": "Indicates whether or not to allow the error dialog from displaying if no SIM card is detected.",
                "nullable": true
              },
              "experienceBlockTaskSwitcher": {
                "type": "boolean",
                "description": "Indicates whether or not to enable task switching on the device.",
                "nullable": true
              },
              "logonBlockFastUserSwitching": {
                "type": "boolean",
                "description": "Disables the ability to quickly switch between users that are logged on simultaneously without logging off.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "lastModifiedDateTime": "string (timestamp)",
          "createdDateTime": "string (timestamp)",
          "description": "string",
          "displayName": "string",
          "version": "integer",
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "enterpriseCloudPrintDiscoveryEndPoint": "string",
          "enterpriseCloudPrintOAuthAuthority": "string",
          "enterpriseCloudPrintOAuthClientIdentifier": "string",
          "enterpriseCloudPrintResourceIdentifier": "string",
          "enterpriseCloudPrintDiscoveryMaxLimit": "integer",
          "enterpriseCloudPrintMopriaDiscoveryResourceIdentifier": "string",
          "searchBlockDiacritics": true,
          "searchDisableAutoLanguageDetection": true,
          "searchDisableIndexingEncryptedItems": true,
          "searchEnableRemoteQueries": true,
          "searchDisableIndexerBackoff": true,
          "searchDisableIndexingRemovableDrive": true,
          "searchEnableAutomaticIndexSizeManangement": true,
          "diagnosticsDataSubmissionMode": {
            "@odata.type": "microsoft.graph.diagnosticDataSubmissionMode"
          },
          "oneDriveDisableFileSync": true,
          "smartScreenEnableAppInstallControl": true,
          "personalizationDesktopImageUrl": "string",
          "personalizationLockScreenImageUrl": "string",
          "bluetoothAllowedServices": [
            "string"
          ],
          "bluetoothBlockAdvertising": true,
          "bluetoothBlockDiscoverableMode": true,
          "bluetoothBlockPrePairing": true,
          "edgeBlockAutofill": true,
          "edgeBlocked": true,
          "edgeCookiePolicy": {
            "@odata.type": "microsoft.graph.edgeCookiePolicy"
          },
          "edgeBlockDeveloperTools": true,
          "edgeBlockSendingDoNotTrackHeader": true,
          "edgeBlockExtensions": true,
          "edgeBlockInPrivateBrowsing": true,
          "edgeBlockJavaScript": true,
          "edgeBlockPasswordManager": true,
          "edgeBlockAddressBarDropdown": true,
          "edgeBlockCompatibilityList": true,
          "edgeClearBrowsingDataOnExit": true,
          "edgeAllowStartPagesModification": true,
          "edgeDisableFirstRunPage": true,
          "edgeBlockLiveTileDataCollection": true,
          "edgeSyncFavoritesWithInternetExplorer": true,
          "cellularBlockDataWhenRoaming": true,
          "cellularBlockVpn": true,
          "cellularBlockVpnWhenRoaming": true,
          "defenderBlockEndUserAccess": true,
          "defenderDaysBeforeDeletingQuarantinedMalware": "integer",
          "defenderDetectedMalwareActions": {
            "@odata.type": "microsoft.graph.defenderDetectedMalwareActions"
          },
          "defenderSystemScanSchedule": {
            "@odata.type": "microsoft.graph.weeklySchedule"
          },
          "defenderFilesAndFoldersToExclude": [
            "string"
          ],
          "defenderFileExtensionsToExclude": [
            "string"
          ],
          "defenderScanMaxCpu": "integer",
          "defenderMonitorFileActivity": {
            "@odata.type": "microsoft.graph.defenderMonitorFileActivity"
          },
          "defenderProcessesToExclude": [
            "string"
          ],
          "defenderPromptForSampleSubmission": {
            "@odata.type": "microsoft.graph.defenderPromptForSampleSubmission"
          },
          "defenderRequireBehaviorMonitoring": true,
          "defenderRequireCloudProtection": true,
          "defenderRequireNetworkInspectionSystem": true,
          "defenderRequireRealTimeMonitoring": true,
          "defenderScanArchiveFiles": true,
          "defenderScanDownloads": true,
          "defenderScanNetworkFiles": true,
          "defenderScanIncomingMail": true,
          "defenderScanMappedNetworkDrivesDuringFullScan": true,
          "defenderScanRemovableDrivesDuringFullScan": true,
          "defenderScanScriptsLoadedInInternetExplorer": true,
          "defenderSignatureUpdateIntervalInHours": "integer",
          "defenderScanType": {
            "@odata.type": "microsoft.graph.defenderScanType"
          },
          "defenderScheduledScanTime": "string (timestamp)",
          "defenderScheduledQuickScanTime": "string (timestamp)",
          "defenderCloudBlockLevel": {
            "@odata.type": "microsoft.graph.defenderCloudBlockLevelType"
          },
          "lockScreenAllowTimeoutConfiguration": true,
          "lockScreenBlockActionCenterNotifications": true,
          "lockScreenBlockCortana": true,
          "lockScreenBlockToastNotifications": true,
          "lockScreenTimeoutInSeconds": "integer",
          "passwordBlockSimple": true,
          "passwordExpirationDays": "integer",
          "passwordMinimumLength": "integer",
          "passwordMinutesOfInactivityBeforeScreenTimeout": "integer",
          "passwordMinimumCharacterSetCount": "integer",
          "passwordPreviousPasswordBlockCount": "integer",
          "passwordRequired": true,
          "passwordRequireWhenResumeFromIdleState": true,
          "passwordRequiredType": {
            "@odata.type": "microsoft.graph.requiredPasswordType"
          },
          "passwordSignInFailureCountBeforeFactoryReset": "integer",
          "privacyAdvertisingId": {
            "@odata.type": "microsoft.graph.stateManagementSetting"
          },
          "privacyAutoAcceptPairingAndConsentPrompts": true,
          "privacyBlockInputPersonalization": true,
          "startBlockUnpinningAppsFromTaskbar": true,
          "startMenuAppListVisibility": {
            "@odata.type": "microsoft.graph.windowsStartMenuAppListVisibilityType"
          },
          "startMenuHideChangeAccountSettings": true,
          "startMenuHideFrequentlyUsedApps": true,
          "startMenuHideHibernate": true,
          "startMenuHideLock": true,
          "startMenuHidePowerButton": true,
          "startMenuHideRecentJumpLists": true,
          "startMenuHideRecentlyAddedApps": true,
          "startMenuHideRestartOptions": true,
          "startMenuHideShutDown": true,
          "startMenuHideSignOut": true,
          "startMenuHideSleep": true,
          "startMenuHideSwitchAccount": true,
          "startMenuHideUserTile": true,
          "startMenuLayoutEdgeAssetsXml": "string",
          "startMenuLayoutXml": "string",
          "startMenuMode": {
            "@odata.type": "microsoft.graph.windowsStartMenuModeType"
          },
          "startMenuPinnedFolderDocuments": {
            "@odata.type": "microsoft.graph.visibilitySetting"
          },
          "startMenuPinnedFolderDownloads": {
            "@odata.type": "microsoft.graph.visibilitySetting"
          },
          "startMenuPinnedFolderFileExplorer": {
            "@odata.type": "microsoft.graph.visibilitySetting"
          },
          "startMenuPinnedFolderHomeGroup": {
            "@odata.type": "microsoft.graph.visibilitySetting"
          },
          "startMenuPinnedFolderMusic": {
            "@odata.type": "microsoft.graph.visibilitySetting"
          },
          "startMenuPinnedFolderNetwork": {
            "@odata.type": "microsoft.graph.visibilitySetting"
          },
          "startMenuPinnedFolderPersonalFolder": {
            "@odata.type": "microsoft.graph.visibilitySetting"
          },
          "startMenuPinnedFolderPictures": {
            "@odata.type": "microsoft.graph.visibilitySetting"
          },
          "startMenuPinnedFolderSettings": {
            "@odata.type": "microsoft.graph.visibilitySetting"
          },
          "startMenuPinnedFolderVideos": {
            "@odata.type": "microsoft.graph.visibilitySetting"
          },
          "settingsBlockSettingsApp": true,
          "settingsBlockSystemPage": true,
          "settingsBlockDevicesPage": true,
          "settingsBlockNetworkInternetPage": true,
          "settingsBlockPersonalizationPage": true,
          "settingsBlockAccountsPage": true,
          "settingsBlockTimeLanguagePage": true,
          "settingsBlockEaseOfAccessPage": true,
          "settingsBlockPrivacyPage": true,
          "settingsBlockUpdateSecurityPage": true,
          "settingsBlockAppsPage": true,
          "settingsBlockGamingPage": true,
          "windowsSpotlightBlockConsumerSpecificFeatures": true,
          "windowsSpotlightBlocked": true,
          "windowsSpotlightBlockOnActionCenter": true,
          "windowsSpotlightBlockTailoredExperiences": true,
          "windowsSpotlightBlockThirdPartyNotifications": true,
          "windowsSpotlightBlockWelcomeExperience": true,
          "windowsSpotlightBlockWindowsTips": true,
          "windowsSpotlightConfigureOnLockScreen": {
            "@odata.type": "microsoft.graph.windowsSpotlightEnablementSettings"
          },
          "networkProxyApplySettingsDeviceWide": true,
          "networkProxyDisableAutoDetect": true,
          "networkProxyAutomaticConfigurationUrl": "string",
          "networkProxyServer": {
            "@odata.type": "microsoft.graph.windows10NetworkProxyServer"
          },
          "accountsBlockAddingNonMicrosoftAccountEmail": true,
          "antiTheftModeBlocked": true,
          "bluetoothBlocked": true,
          "cameraBlocked": true,
          "connectedDevicesServiceBlocked": true,
          "certificatesBlockManualRootCertificateInstallation": true,
          "copyPasteBlocked": true,
          "cortanaBlocked": true,
          "deviceManagementBlockFactoryResetOnMobile": true,
          "deviceManagementBlockManualUnenroll": true,
          "safeSearchFilter": {
            "@odata.type": "microsoft.graph.safeSearchFilterType"
          },
          "edgeBlockPopups": true,
          "edgeBlockSearchSuggestions": true,
          "edgeBlockSendingIntranetTrafficToInternetExplorer": true,
          "edgeRequireSmartScreen": true,
          "edgeEnterpriseModeSiteListLocation": "string",
          "edgeFirstRunUrl": "string",
          "edgeSearchEngine": {
            "@odata.type": "microsoft.graph.edgeSearchEngineBase"
          },
          "edgeHomepageUrls": [
            "string"
          ],
          "edgeBlockAccessToAboutFlags": true,
          "smartScreenBlockPromptOverride": true,
          "smartScreenBlockPromptOverrideForFiles": true,
          "webRtcBlockLocalhostIpAddress": true,
          "internetSharingBlocked": true,
          "settingsBlockAddProvisioningPackage": true,
          "settingsBlockRemoveProvisioningPackage": true,
          "settingsBlockChangeSystemTime": true,
          "settingsBlockEditDeviceName": true,
          "settingsBlockChangeRegion": true,
          "settingsBlockChangeLanguage": true,
          "settingsBlockChangePowerSleep": true,
          "locationServicesBlocked": true,
          "microsoftAccountBlocked": true,
          "microsoftAccountBlockSettingsSync": true,
          "nfcBlocked": true,
          "resetProtectionModeBlocked": true,
          "screenCaptureBlocked": true,
          "storageBlockRemovableStorage": true,
          "storageRequireMobileDeviceEncryption": true,
          "usbBlocked": true,
          "voiceRecordingBlocked": true,
          "wiFiBlockAutomaticConnectHotspots": true,
          "wiFiBlocked": true,
          "wiFiBlockManualConfiguration": true,
          "wiFiScanInterval": "integer",
          "wirelessDisplayBlockProjectionToThisDevice": true,
          "wirelessDisplayBlockUserInputFromReceiver": true,
          "wirelessDisplayRequirePinForPairing": true,
          "windowsStoreBlocked": true,
          "appsAllowTrustedAppsSideloading": {
            "@odata.type": "microsoft.graph.stateManagementSetting"
          },
          "windowsStoreBlockAutoUpdate": true,
          "developerUnlockSetting": {
            "@odata.type": "microsoft.graph.stateManagementSetting"
          },
          "sharedUserAppDataAllowed": true,
          "appsBlockWindowsStoreOriginatedApps": true,
          "windowsStoreEnablePrivateStoreOnly": true,
          "storageRestrictAppDataToSystemVolume": true,
          "storageRestrictAppInstallToSystemVolume": true,
          "gameDvrBlocked": true,
          "experienceBlockDeviceDiscovery": true,
          "experienceBlockErrorDialogWhenNoSIM": true,
          "experienceBlockTaskSwitcher": true,
          "logonBlockFastUserSwitching": true
        }
      },
      "microsoft.graph.windows10MobileCompliancePolicy": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceCompliancePolicy"
          },
          {
            "title": "windows10MobileCompliancePolicy",
            "type": "object",
            "properties": {
              "passwordRequired": {
                "type": "boolean",
                "description": "Require a password to unlock Windows Phone device.",
                "nullable": true
              },
              "passwordBlockSimple": {
                "type": "boolean",
                "description": "Whether or not to block syncing the calendar.",
                "nullable": true
              },
              "passwordMinimumLength": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Minimum password length. Valid values 4 to 16",
                "format": "int32",
                "nullable": true
              },
              "passwordMinimumCharacterSetCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The number of character sets required in the password.",
                "format": "int32",
                "nullable": true
              },
              "passwordRequiredType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.requiredPasswordType"
                  }
                ],
                "description": "The required password type. Possible values are: deviceDefault, alphanumeric, numeric.",
                "nullable": true
              },
              "passwordPreviousPasswordBlockCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The number of previous passwords to prevent re-use of.",
                "format": "int32",
                "nullable": true
              },
              "passwordExpirationDays": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of days before password expiration. Valid values 1 to 255",
                "format": "int32",
                "nullable": true
              },
              "passwordMinutesOfInactivityBeforeLock": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Minutes of inactivity before a password is required.",
                "format": "int32",
                "nullable": true
              },
              "passwordRequireToUnlockFromIdle": {
                "type": "boolean",
                "description": "Require a password to unlock an idle device.",
                "nullable": true
              },
              "osMinimumVersion": {
                "type": "string",
                "description": "Minimum Windows Phone version.",
                "nullable": true
              },
              "osMaximumVersion": {
                "type": "string",
                "description": "Maximum Windows Phone version.",
                "nullable": true
              },
              "earlyLaunchAntiMalwareDriverEnabled": {
                "type": "boolean",
                "description": "Require devices to be reported as healthy by Windows Device Health Attestation - early launch antimalware driver is enabled.",
                "nullable": true
              },
              "bitLockerEnabled": {
                "type": "boolean",
                "description": "Require devices to be reported healthy by Windows Device Health Attestation - bit locker is enabled",
                "nullable": true
              },
              "secureBootEnabled": {
                "type": "boolean",
                "description": "Require devices to be reported as healthy by Windows Device Health Attestation - secure boot is enabled.",
                "nullable": true
              },
              "codeIntegrityEnabled": {
                "type": "boolean",
                "description": "Require devices to be reported as healthy by Windows Device Health Attestation.",
                "nullable": true
              },
              "storageRequireEncryption": {
                "type": "boolean",
                "description": "Require encryption on windows devices.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "createdDateTime": "string (timestamp)",
          "description": "string",
          "lastModifiedDateTime": "string (timestamp)",
          "displayName": "string",
          "version": "integer",
          "scheduledActionsForRule": [
            {
              "@odata.type": "microsoft.graph.deviceComplianceScheduledActionForRule"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceComplianceDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceComplianceUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceComplianceDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceComplianceUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceCompliancePolicyAssignment"
            }
          ],
          "passwordRequired": true,
          "passwordBlockSimple": true,
          "passwordMinimumLength": "integer",
          "passwordMinimumCharacterSetCount": "integer",
          "passwordRequiredType": {
            "@odata.type": "microsoft.graph.requiredPasswordType"
          },
          "passwordPreviousPasswordBlockCount": "integer",
          "passwordExpirationDays": "integer",
          "passwordMinutesOfInactivityBeforeLock": "integer",
          "passwordRequireToUnlockFromIdle": true,
          "osMinimumVersion": "string",
          "osMaximumVersion": "string",
          "earlyLaunchAntiMalwareDriverEnabled": true,
          "bitLockerEnabled": true,
          "secureBootEnabled": true,
          "codeIntegrityEnabled": true,
          "storageRequireEncryption": true
        }
      },
      "microsoft.graph.windows10SecureAssessmentConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceConfiguration"
          },
          {
            "title": "windows10SecureAssessmentConfiguration",
            "type": "object",
            "properties": {
              "launchUri": {
                "type": "string",
                "description": "Url link to an assessment that's automatically loaded when the secure assessment browser is launched. It has to be a valid Url (http[s]://msdn.microsoft.com/).",
                "nullable": true
              },
              "configurationAccount": {
                "type": "string",
                "description": "The account used to configure the Windows device for taking the test. The user can be a domain account (domain/user), an AAD account (username@tenant.com) or a local account (username).",
                "nullable": true
              },
              "allowPrinting": {
                "type": "boolean",
                "description": "Indicates whether or not to allow the app from printing during the test.",
                "nullable": true
              },
              "allowScreenCapture": {
                "type": "boolean",
                "description": "Indicates whether or not to allow screen capture capability during a test.",
                "nullable": true
              },
              "allowTextSuggestion": {
                "type": "boolean",
                "description": "Indicates whether or not to allow text suggestions during the test.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "lastModifiedDateTime": "string (timestamp)",
          "createdDateTime": "string (timestamp)",
          "description": "string",
          "displayName": "string",
          "version": "integer",
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "launchUri": "string",
          "configurationAccount": "string",
          "allowPrinting": true,
          "allowScreenCapture": true,
          "allowTextSuggestion": true
        }
      },
      "microsoft.graph.windows10TeamGeneralConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceConfiguration"
          },
          {
            "title": "windows10TeamGeneralConfiguration",
            "type": "object",
            "properties": {
              "azureOperationalInsightsBlockTelemetry": {
                "type": "boolean",
                "description": "Indicates whether or not to Block Azure Operational Insights.",
                "nullable": true
              },
              "azureOperationalInsightsWorkspaceId": {
                "type": "string",
                "description": "The Azure Operational Insights workspace id.",
                "nullable": true
              },
              "azureOperationalInsightsWorkspaceKey": {
                "type": "string",
                "description": "The Azure Operational Insights Workspace key.",
                "nullable": true
              },
              "connectAppBlockAutoLaunch": {
                "type": "boolean",
                "description": "Specifies whether to automatically launch the Connect app whenever a projection is initiated.",
                "nullable": true
              },
              "maintenanceWindowBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to Block setting a maintenance window for device updates.",
                "nullable": true
              },
              "maintenanceWindowDurationInHours": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Maintenance window duration for device updates. Valid values 0 to 5",
                "format": "int32",
                "nullable": true
              },
              "maintenanceWindowStartTime": {
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?$",
                "type": "string",
                "description": "Maintenance window start time for device updates.",
                "format": "time",
                "nullable": true
              },
              "miracastChannel": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.miracastChannel"
                  }
                ],
                "description": "The channel. Possible values are: userDefined, one, two, three, four, five, six, seven, eight, nine, ten, eleven, thirtySix, forty, fortyFour, fortyEight, oneHundredFortyNine, oneHundredFiftyThree, oneHundredFiftySeven, oneHundredSixtyOne, oneHundredSixtyFive.",
                "nullable": true
              },
              "miracastBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to Block wireless projection.",
                "nullable": true
              },
              "miracastRequirePin": {
                "type": "boolean",
                "description": "Indicates whether or not to require a pin for wireless projection.",
                "nullable": true
              },
              "settingsBlockMyMeetingsAndFiles": {
                "type": "boolean",
                "description": "Specifies whether to disable the 'My meetings and files' feature in the Start menu, which shows the signed-in user's meetings and files from Office 365.",
                "nullable": true
              },
              "settingsBlockSessionResume": {
                "type": "boolean",
                "description": "Specifies whether to allow the ability to resume a session when the session times out.",
                "nullable": true
              },
              "settingsBlockSigninSuggestions": {
                "type": "boolean",
                "description": "Specifies whether to disable auto-populating of the sign-in dialog with invitees from scheduled meetings.",
                "nullable": true
              },
              "settingsDefaultVolume": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Specifies the default volume value for a new session. Permitted values are 0-100. The default is 45. Valid values 0 to 100",
                "format": "int32",
                "nullable": true
              },
              "settingsScreenTimeoutInMinutes": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Specifies the number of minutes until the Hub screen turns off.",
                "format": "int32",
                "nullable": true
              },
              "settingsSessionTimeoutInMinutes": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Specifies the number of minutes until the session times out.",
                "format": "int32",
                "nullable": true
              },
              "settingsSleepTimeoutInMinutes": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Specifies the number of minutes until the Hub enters sleep mode.",
                "format": "int32",
                "nullable": true
              },
              "welcomeScreenBlockAutomaticWakeUp": {
                "type": "boolean",
                "description": "Indicates whether or not to Block the welcome screen from waking up automatically when someone enters the room.",
                "nullable": true
              },
              "welcomeScreenBackgroundImageUrl": {
                "type": "string",
                "description": "The welcome screen background image URL. The URL must use the HTTPS protocol and return a PNG image.",
                "nullable": true
              },
              "welcomeScreenMeetingInformation": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.welcomeScreenMeetingInformation"
                  }
                ],
                "description": "The welcome screen meeting information shown. Possible values are: userDefined, showOrganizerAndTimeOnly, showOrganizerAndTimeAndSubject.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "lastModifiedDateTime": "string (timestamp)",
          "createdDateTime": "string (timestamp)",
          "description": "string",
          "displayName": "string",
          "version": "integer",
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "azureOperationalInsightsBlockTelemetry": true,
          "azureOperationalInsightsWorkspaceId": "string",
          "azureOperationalInsightsWorkspaceKey": "string",
          "connectAppBlockAutoLaunch": true,
          "maintenanceWindowBlocked": true,
          "maintenanceWindowDurationInHours": "integer",
          "maintenanceWindowStartTime": "string (timestamp)",
          "miracastChannel": {
            "@odata.type": "microsoft.graph.miracastChannel"
          },
          "miracastBlocked": true,
          "miracastRequirePin": true,
          "settingsBlockMyMeetingsAndFiles": true,
          "settingsBlockSessionResume": true,
          "settingsBlockSigninSuggestions": true,
          "settingsDefaultVolume": "integer",
          "settingsScreenTimeoutInMinutes": "integer",
          "settingsSessionTimeoutInMinutes": "integer",
          "settingsSleepTimeoutInMinutes": "integer",
          "welcomeScreenBlockAutomaticWakeUp": true,
          "welcomeScreenBackgroundImageUrl": "string",
          "welcomeScreenMeetingInformation": {
            "@odata.type": "microsoft.graph.welcomeScreenMeetingInformation"
          }
        }
      },
      "microsoft.graph.windows81CompliancePolicy": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceCompliancePolicy"
          },
          {
            "title": "windows81CompliancePolicy",
            "type": "object",
            "properties": {
              "passwordRequired": {
                "type": "boolean",
                "description": "Require a password to unlock Windows device.",
                "nullable": true
              },
              "passwordBlockSimple": {
                "type": "boolean",
                "description": "Indicates whether or not to block simple password.",
                "nullable": true
              },
              "passwordExpirationDays": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Password expiration in days.",
                "format": "int32",
                "nullable": true
              },
              "passwordMinimumLength": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The minimum password length.",
                "format": "int32",
                "nullable": true
              },
              "passwordMinutesOfInactivityBeforeLock": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Minutes of inactivity before a password is required.",
                "format": "int32",
                "nullable": true
              },
              "passwordMinimumCharacterSetCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The number of character sets required in the password.",
                "format": "int32",
                "nullable": true
              },
              "passwordRequiredType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.requiredPasswordType"
                  }
                ],
                "description": "The required password type. Possible values are: deviceDefault, alphanumeric, numeric.",
                "nullable": true
              },
              "passwordPreviousPasswordBlockCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The number of previous passwords to prevent re-use of. Valid values 0 to 24",
                "format": "int32",
                "nullable": true
              },
              "osMinimumVersion": {
                "type": "string",
                "description": "Minimum Windows 8.1 version.",
                "nullable": true
              },
              "osMaximumVersion": {
                "type": "string",
                "description": "Maximum Windows 8.1 version.",
                "nullable": true
              },
              "storageRequireEncryption": {
                "type": "boolean",
                "description": "Indicates whether or not to require encryption on a windows 8.1 device.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "createdDateTime": "string (timestamp)",
          "description": "string",
          "lastModifiedDateTime": "string (timestamp)",
          "displayName": "string",
          "version": "integer",
          "scheduledActionsForRule": [
            {
              "@odata.type": "microsoft.graph.deviceComplianceScheduledActionForRule"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceComplianceDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceComplianceUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceComplianceDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceComplianceUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceCompliancePolicyAssignment"
            }
          ],
          "passwordRequired": true,
          "passwordBlockSimple": true,
          "passwordExpirationDays": "integer",
          "passwordMinimumLength": "integer",
          "passwordMinutesOfInactivityBeforeLock": "integer",
          "passwordMinimumCharacterSetCount": "integer",
          "passwordRequiredType": {
            "@odata.type": "microsoft.graph.requiredPasswordType"
          },
          "passwordPreviousPasswordBlockCount": "integer",
          "osMinimumVersion": "string",
          "osMaximumVersion": "string",
          "storageRequireEncryption": true
        }
      },
      "microsoft.graph.windows81GeneralConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceConfiguration"
          },
          {
            "title": "windows81GeneralConfiguration",
            "type": "object",
            "properties": {
              "accountsBlockAddingNonMicrosoftAccountEmail": {
                "type": "boolean",
                "description": "Indicates whether or not to Block the user from adding email accounts to the device that are not associated with a Microsoft account.",
                "nullable": true
              },
              "applyOnlyToWindows81": {
                "type": "boolean",
                "description": "Value indicating whether this policy only applies to Windows 8.1. This property is read-only.",
                "nullable": true
              },
              "browserBlockAutofill": {
                "type": "boolean",
                "description": "Indicates whether or not to block auto fill.",
                "nullable": true
              },
              "browserBlockAutomaticDetectionOfIntranetSites": {
                "type": "boolean",
                "description": "Indicates whether or not to block automatic detection of Intranet sites.",
                "nullable": true
              },
              "browserBlockEnterpriseModeAccess": {
                "type": "boolean",
                "description": "Indicates whether or not to block enterprise mode access.",
                "nullable": true
              },
              "browserBlockJavaScript": {
                "type": "boolean",
                "description": "Indicates whether or not to Block the user from using JavaScript.",
                "nullable": true
              },
              "browserBlockPlugins": {
                "type": "boolean",
                "description": "Indicates whether or not to block plug-ins.",
                "nullable": true
              },
              "browserBlockPopups": {
                "type": "boolean",
                "description": "Indicates whether or not to block popups.",
                "nullable": true
              },
              "browserBlockSendingDoNotTrackHeader": {
                "type": "boolean",
                "description": "Indicates whether or not to Block the user from sending the do not track header.",
                "nullable": true
              },
              "browserBlockSingleWordEntryOnIntranetSites": {
                "type": "boolean",
                "description": "Indicates whether or not to block a single word entry on Intranet sites.",
                "nullable": true
              },
              "browserRequireSmartScreen": {
                "type": "boolean",
                "description": "Indicates whether or not to require the user to use the smart screen filter.",
                "nullable": true
              },
              "browserEnterpriseModeSiteListLocation": {
                "type": "string",
                "description": "The enterprise mode site list location. Could be a local file, local network or http location.",
                "nullable": true
              },
              "browserInternetSecurityLevel": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.internetSiteSecurityLevel"
                  }
                ],
                "description": "The internet security level. Possible values are: userDefined, medium, mediumHigh, high.",
                "nullable": true
              },
              "browserIntranetSecurityLevel": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.siteSecurityLevel"
                  }
                ],
                "description": "The Intranet security level. Possible values are: userDefined, low, mediumLow, medium, mediumHigh, high.",
                "nullable": true
              },
              "browserLoggingReportLocation": {
                "type": "string",
                "description": "The logging report location.",
                "nullable": true
              },
              "browserRequireHighSecurityForRestrictedSites": {
                "type": "boolean",
                "description": "Indicates whether or not to require high security for restricted sites.",
                "nullable": true
              },
              "browserRequireFirewall": {
                "type": "boolean",
                "description": "Indicates whether or not to require a firewall.",
                "nullable": true
              },
              "browserRequireFraudWarning": {
                "type": "boolean",
                "description": "Indicates whether or not to require fraud warning.",
                "nullable": true
              },
              "browserTrustedSitesSecurityLevel": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.siteSecurityLevel"
                  }
                ],
                "description": "The trusted sites security level. Possible values are: userDefined, low, mediumLow, medium, mediumHigh, high.",
                "nullable": true
              },
              "cellularBlockDataRoaming": {
                "type": "boolean",
                "description": "Indicates whether or not to block data roaming.",
                "nullable": true
              },
              "diagnosticsBlockDataSubmission": {
                "type": "boolean",
                "description": "Indicates whether or not to block diagnostic data submission.",
                "nullable": true
              },
              "passwordBlockPicturePasswordAndPin": {
                "type": "boolean",
                "description": "Indicates whether or not to Block the user from using a pictures password and pin.",
                "nullable": true
              },
              "passwordExpirationDays": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Password expiration in days.",
                "format": "int32",
                "nullable": true
              },
              "passwordMinimumLength": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The minimum password length.",
                "format": "int32",
                "nullable": true
              },
              "passwordMinutesOfInactivityBeforeScreenTimeout": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The minutes of inactivity before the screen times out.",
                "format": "int32",
                "nullable": true
              },
              "passwordMinimumCharacterSetCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The number of character sets required in the password.",
                "format": "int32",
                "nullable": true
              },
              "passwordPreviousPasswordBlockCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The number of previous passwords to prevent re-use of. Valid values 0 to 24",
                "format": "int32",
                "nullable": true
              },
              "passwordRequiredType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.requiredPasswordType"
                  }
                ],
                "description": "The required password type. Possible values are: deviceDefault, alphanumeric, numeric.",
                "nullable": true
              },
              "passwordSignInFailureCountBeforeFactoryReset": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The number of sign in failures before factory reset.",
                "format": "int32",
                "nullable": true
              },
              "storageRequireDeviceEncryption": {
                "type": "boolean",
                "description": "Indicates whether or not to require encryption on a mobile device.",
                "nullable": true
              },
              "updatesRequireAutomaticUpdates": {
                "type": "boolean",
                "description": "Indicates whether or not to require automatic updates.",
                "nullable": true
              },
              "userAccountControlSettings": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.windowsUserAccountControlSettings"
                  }
                ],
                "description": "The user account control settings. Possible values are: userDefined, alwaysNotify, notifyOnAppChanges, notifyOnAppChangesWithoutDimming, neverNotify.",
                "nullable": true
              },
              "workFoldersUrl": {
                "type": "string",
                "description": "The work folders url.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "lastModifiedDateTime": "string (timestamp)",
          "createdDateTime": "string (timestamp)",
          "description": "string",
          "displayName": "string",
          "version": "integer",
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "accountsBlockAddingNonMicrosoftAccountEmail": true,
          "applyOnlyToWindows81": true,
          "browserBlockAutofill": true,
          "browserBlockAutomaticDetectionOfIntranetSites": true,
          "browserBlockEnterpriseModeAccess": true,
          "browserBlockJavaScript": true,
          "browserBlockPlugins": true,
          "browserBlockPopups": true,
          "browserBlockSendingDoNotTrackHeader": true,
          "browserBlockSingleWordEntryOnIntranetSites": true,
          "browserRequireSmartScreen": true,
          "browserEnterpriseModeSiteListLocation": "string",
          "browserInternetSecurityLevel": {
            "@odata.type": "microsoft.graph.internetSiteSecurityLevel"
          },
          "browserIntranetSecurityLevel": {
            "@odata.type": "microsoft.graph.siteSecurityLevel"
          },
          "browserLoggingReportLocation": "string",
          "browserRequireHighSecurityForRestrictedSites": true,
          "browserRequireFirewall": true,
          "browserRequireFraudWarning": true,
          "browserTrustedSitesSecurityLevel": {
            "@odata.type": "microsoft.graph.siteSecurityLevel"
          },
          "cellularBlockDataRoaming": true,
          "diagnosticsBlockDataSubmission": true,
          "passwordBlockPicturePasswordAndPin": true,
          "passwordExpirationDays": "integer",
          "passwordMinimumLength": "integer",
          "passwordMinutesOfInactivityBeforeScreenTimeout": "integer",
          "passwordMinimumCharacterSetCount": "integer",
          "passwordPreviousPasswordBlockCount": "integer",
          "passwordRequiredType": {
            "@odata.type": "microsoft.graph.requiredPasswordType"
          },
          "passwordSignInFailureCountBeforeFactoryReset": "integer",
          "storageRequireDeviceEncryption": true,
          "updatesRequireAutomaticUpdates": true,
          "userAccountControlSettings": {
            "@odata.type": "microsoft.graph.windowsUserAccountControlSettings"
          },
          "workFoldersUrl": "string"
        }
      },
      "microsoft.graph.windowsDefenderAdvancedThreatProtectionConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceConfiguration"
          },
          {
            "title": "windowsDefenderAdvancedThreatProtectionConfiguration",
            "type": "object",
            "properties": {
              "allowSampleSharing": {
                "type": "boolean",
                "description": "Windows Defender AdvancedThreatProtection 'Allow Sample Sharing' Rule",
                "nullable": true
              },
              "enableExpeditedTelemetryReporting": {
                "type": "boolean",
                "description": "Expedite Windows Defender Advanced Threat Protection telemetry reporting frequency.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "lastModifiedDateTime": "string (timestamp)",
          "createdDateTime": "string (timestamp)",
          "description": "string",
          "displayName": "string",
          "version": "integer",
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "allowSampleSharing": true,
          "enableExpeditedTelemetryReporting": true
        }
      },
      "microsoft.graph.windowsPhone81CompliancePolicy": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceCompliancePolicy"
          },
          {
            "title": "windowsPhone81CompliancePolicy",
            "type": "object",
            "properties": {
              "passwordBlockSimple": {
                "type": "boolean",
                "description": "Whether or not to block syncing the calendar.",
                "nullable": true
              },
              "passwordExpirationDays": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of days before the password expires.",
                "format": "int32",
                "nullable": true
              },
              "passwordMinimumLength": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Minimum length of passwords.",
                "format": "int32",
                "nullable": true
              },
              "passwordMinutesOfInactivityBeforeLock": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Minutes of inactivity before a password is required.",
                "format": "int32",
                "nullable": true
              },
              "passwordMinimumCharacterSetCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The number of character sets required in the password.",
                "format": "int32",
                "nullable": true
              },
              "passwordRequiredType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.requiredPasswordType"
                  }
                ],
                "description": "The required password type. Possible values are: deviceDefault, alphanumeric, numeric.",
                "nullable": true
              },
              "passwordPreviousPasswordBlockCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of previous passwords to block. Valid values 0 to 24",
                "format": "int32",
                "nullable": true
              },
              "passwordRequired": {
                "type": "boolean",
                "description": "Whether or not to require a password.",
                "nullable": true
              },
              "osMinimumVersion": {
                "type": "string",
                "description": "Minimum Windows Phone version.",
                "nullable": true
              },
              "osMaximumVersion": {
                "type": "string",
                "description": "Maximum Windows Phone version.",
                "nullable": true
              },
              "storageRequireEncryption": {
                "type": "boolean",
                "description": "Require encryption on windows phone devices.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "createdDateTime": "string (timestamp)",
          "description": "string",
          "lastModifiedDateTime": "string (timestamp)",
          "displayName": "string",
          "version": "integer",
          "scheduledActionsForRule": [
            {
              "@odata.type": "microsoft.graph.deviceComplianceScheduledActionForRule"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceComplianceDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceComplianceUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceComplianceDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceComplianceUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceCompliancePolicyAssignment"
            }
          ],
          "passwordBlockSimple": true,
          "passwordExpirationDays": "integer",
          "passwordMinimumLength": "integer",
          "passwordMinutesOfInactivityBeforeLock": "integer",
          "passwordMinimumCharacterSetCount": "integer",
          "passwordRequiredType": {
            "@odata.type": "microsoft.graph.requiredPasswordType"
          },
          "passwordPreviousPasswordBlockCount": "integer",
          "passwordRequired": true,
          "osMinimumVersion": "string",
          "osMaximumVersion": "string",
          "storageRequireEncryption": true
        }
      },
      "microsoft.graph.windowsPhone81CustomConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceConfiguration"
          },
          {
            "title": "windowsPhone81CustomConfiguration",
            "type": "object",
            "properties": {
              "omaSettings": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.omaSetting"
                    }
                  ],
                  "nullable": true
                },
                "description": "OMA settings. This collection can contain a maximum of 1000 elements."
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "lastModifiedDateTime": "string (timestamp)",
          "createdDateTime": "string (timestamp)",
          "description": "string",
          "displayName": "string",
          "version": "integer",
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "omaSettings": [
            {
              "@odata.type": "microsoft.graph.omaSetting"
            }
          ]
        }
      },
      "microsoft.graph.windowsPhone81GeneralConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceConfiguration"
          },
          {
            "title": "windowsPhone81GeneralConfiguration",
            "type": "object",
            "properties": {
              "applyOnlyToWindowsPhone81": {
                "type": "boolean",
                "description": "Value indicating whether this policy only applies to Windows Phone 8.1. This property is read-only.",
                "nullable": true
              },
              "appsBlockCopyPaste": {
                "type": "boolean",
                "description": "Indicates whether or not to block copy paste.",
                "nullable": true
              },
              "bluetoothBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to block bluetooth.",
                "nullable": true
              },
              "cameraBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to block camera.",
                "nullable": true
              },
              "cellularBlockWifiTethering": {
                "type": "boolean",
                "description": "Indicates whether or not to block Wi-Fi tethering. Has no impact if Wi-Fi is blocked.",
                "nullable": true
              },
              "compliantAppsList": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.appListItem"
                    }
                  ],
                  "nullable": true
                },
                "description": "List of apps in the compliance (either allow list or block list, controlled by CompliantAppListType). This collection can contain a maximum of 10000 elements."
              },
              "compliantAppListType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.appListType"
                  }
                ],
                "description": "List that is in the AppComplianceList. Possible values are: none, appsInListCompliant, appsNotInListCompliant.",
                "nullable": true
              },
              "diagnosticDataBlockSubmission": {
                "type": "boolean",
                "description": "Indicates whether or not to block diagnostic data submission.",
                "nullable": true
              },
              "emailBlockAddingAccounts": {
                "type": "boolean",
                "description": "Indicates whether or not to block custom email accounts.",
                "nullable": true
              },
              "locationServicesBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to block location services.",
                "nullable": true
              },
              "microsoftAccountBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to block using a Microsoft Account.",
                "nullable": true
              },
              "nfcBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to block Near-Field Communication.",
                "nullable": true
              },
              "passwordBlockSimple": {
                "type": "boolean",
                "description": "Indicates whether or not to block syncing the calendar.",
                "nullable": true
              },
              "passwordExpirationDays": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of days before the password expires.",
                "format": "int32",
                "nullable": true
              },
              "passwordMinimumLength": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Minimum length of passwords.",
                "format": "int32",
                "nullable": true
              },
              "passwordMinutesOfInactivityBeforeScreenTimeout": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Minutes of inactivity before screen timeout.",
                "format": "int32",
                "nullable": true
              },
              "passwordMinimumCharacterSetCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of character sets a password must contain.",
                "format": "int32",
                "nullable": true
              },
              "passwordPreviousPasswordBlockCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of previous passwords to block. Valid values 0 to 24",
                "format": "int32",
                "nullable": true
              },
              "passwordSignInFailureCountBeforeFactoryReset": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of sign in failures allowed before factory reset.",
                "format": "int32",
                "nullable": true
              },
              "passwordRequiredType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.requiredPasswordType"
                  }
                ],
                "description": "Password type that is required. Possible values are: deviceDefault, alphanumeric, numeric.",
                "nullable": true
              },
              "passwordRequired": {
                "type": "boolean",
                "description": "Indicates whether or not to require a password.",
                "nullable": true
              },
              "screenCaptureBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to block screenshots.",
                "nullable": true
              },
              "storageBlockRemovableStorage": {
                "type": "boolean",
                "description": "Indicates whether or not to block removable storage.",
                "nullable": true
              },
              "storageRequireEncryption": {
                "type": "boolean",
                "description": "Indicates whether or not to require encryption.",
                "nullable": true
              },
              "webBrowserBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to block the web browser.",
                "nullable": true
              },
              "wifiBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to block Wi-Fi.",
                "nullable": true
              },
              "wifiBlockAutomaticConnectHotspots": {
                "type": "boolean",
                "description": "Indicates whether or not to block automatically connecting to Wi-Fi hotspots. Has no impact if Wi-Fi is blocked.",
                "nullable": true
              },
              "wifiBlockHotspotReporting": {
                "type": "boolean",
                "description": "Indicates whether or not to block Wi-Fi hotspot reporting. Has no impact if Wi-Fi is blocked.",
                "nullable": true
              },
              "windowsStoreBlocked": {
                "type": "boolean",
                "description": "Indicates whether or not to block the Windows Store.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "lastModifiedDateTime": "string (timestamp)",
          "createdDateTime": "string (timestamp)",
          "description": "string",
          "displayName": "string",
          "version": "integer",
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "applyOnlyToWindowsPhone81": true,
          "appsBlockCopyPaste": true,
          "bluetoothBlocked": true,
          "cameraBlocked": true,
          "cellularBlockWifiTethering": true,
          "compliantAppsList": [
            {
              "@odata.type": "microsoft.graph.appListItem"
            }
          ],
          "compliantAppListType": {
            "@odata.type": "microsoft.graph.appListType"
          },
          "diagnosticDataBlockSubmission": true,
          "emailBlockAddingAccounts": true,
          "locationServicesBlocked": true,
          "microsoftAccountBlocked": true,
          "nfcBlocked": true,
          "passwordBlockSimple": true,
          "passwordExpirationDays": "integer",
          "passwordMinimumLength": "integer",
          "passwordMinutesOfInactivityBeforeScreenTimeout": "integer",
          "passwordMinimumCharacterSetCount": "integer",
          "passwordPreviousPasswordBlockCount": "integer",
          "passwordSignInFailureCountBeforeFactoryReset": "integer",
          "passwordRequiredType": {
            "@odata.type": "microsoft.graph.requiredPasswordType"
          },
          "passwordRequired": true,
          "screenCaptureBlocked": true,
          "storageBlockRemovableStorage": true,
          "storageRequireEncryption": true,
          "webBrowserBlocked": true,
          "wifiBlocked": true,
          "wifiBlockAutomaticConnectHotspots": true,
          "wifiBlockHotspotReporting": true,
          "windowsStoreBlocked": true
        }
      },
      "microsoft.graph.windowsUpdateForBusinessConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceConfiguration"
          },
          {
            "title": "windowsUpdateForBusinessConfiguration",
            "type": "object",
            "properties": {
              "deliveryOptimizationMode": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.windowsDeliveryOptimizationMode"
                  }
                ],
                "description": "Delivery Optimization Mode. Possible values are: userDefined, httpOnly, httpWithPeeringNat, httpWithPeeringPrivateGroup, httpWithInternetPeering, simpleDownload, bypassMode.",
                "nullable": true
              },
              "prereleaseFeatures": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.prereleaseFeatures"
                  }
                ],
                "description": "The pre-release features. Possible values are: userDefined, settingsOnly, settingsAndExperimentations, notAllowed.",
                "nullable": true
              },
              "automaticUpdateMode": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.automaticUpdateMode"
                  }
                ],
                "description": "Automatic update mode. Possible values are: userDefined, notifyDownload, autoInstallAtMaintenanceTime, autoInstallAndRebootAtMaintenanceTime, autoInstallAndRebootAtScheduledTime, autoInstallAndRebootWithoutEndUserControl.",
                "nullable": true
              },
              "microsoftUpdateServiceAllowed": {
                "type": "boolean",
                "description": "Allow Microsoft Update Service",
                "nullable": true
              },
              "driversExcluded": {
                "type": "boolean",
                "description": "Exclude Windows update Drivers",
                "nullable": true
              },
              "installationSchedule": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.windowsUpdateInstallScheduleType"
                  }
                ],
                "description": "Installation schedule",
                "nullable": true
              },
              "qualityUpdatesDeferralPeriodInDays": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Defer Quality Updates by these many days",
                "format": "int32",
                "nullable": true
              },
              "featureUpdatesDeferralPeriodInDays": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Defer Feature Updates by these many days",
                "format": "int32",
                "nullable": true
              },
              "qualityUpdatesPaused": {
                "type": "boolean",
                "description": "Pause Quality Updates",
                "nullable": true
              },
              "featureUpdatesPaused": {
                "type": "boolean",
                "description": "Pause Feature Updates",
                "nullable": true
              },
              "qualityUpdatesPauseExpiryDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Quality Updates Pause Expiry datetime",
                "format": "date-time",
                "nullable": true
              },
              "featureUpdatesPauseExpiryDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Feature Updates Pause Expiry datetime",
                "format": "date-time",
                "nullable": true
              },
              "businessReadyUpdatesOnly": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.windowsUpdateType"
                  }
                ],
                "description": "Determines which branch devices will receive their updates from. Possible values are: userDefined, all, businessReadyOnly, windowsInsiderBuildFast, windowsInsiderBuildSlow, windowsInsiderBuildRelease.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "lastModifiedDateTime": "string (timestamp)",
          "createdDateTime": "string (timestamp)",
          "description": "string",
          "displayName": "string",
          "version": "integer",
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "deliveryOptimizationMode": {
            "@odata.type": "microsoft.graph.windowsDeliveryOptimizationMode"
          },
          "prereleaseFeatures": {
            "@odata.type": "microsoft.graph.prereleaseFeatures"
          },
          "automaticUpdateMode": {
            "@odata.type": "microsoft.graph.automaticUpdateMode"
          },
          "microsoftUpdateServiceAllowed": true,
          "driversExcluded": true,
          "installationSchedule": {
            "@odata.type": "microsoft.graph.windowsUpdateInstallScheduleType"
          },
          "qualityUpdatesDeferralPeriodInDays": "integer",
          "featureUpdatesDeferralPeriodInDays": "integer",
          "qualityUpdatesPaused": true,
          "featureUpdatesPaused": true,
          "qualityUpdatesPauseExpiryDateTime": "string (timestamp)",
          "featureUpdatesPauseExpiryDateTime": "string (timestamp)",
          "businessReadyUpdatesOnly": {
            "@odata.type": "microsoft.graph.windowsUpdateType"
          }
        }
      },
      "microsoft.graph.applePushNotificationCertificate": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "applePushNotificationCertificate",
            "type": "object",
            "properties": {
              "appleIdentifier": {
                "type": "string",
                "description": "Apple Id of the account used to create the MDM push certificate.",
                "nullable": true
              },
              "topicIdentifier": {
                "type": "string",
                "description": "Topic Id.",
                "nullable": true
              },
              "lastModifiedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Last modified date and time for Apple push notification certificate.",
                "format": "date-time",
                "nullable": true
              },
              "expirationDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The expiration date and time for Apple push notification certificate.",
                "format": "date-time",
                "nullable": true
              },
              "certificate": {
                "type": "string",
                "description": "Not yet documented",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "appleIdentifier": "string",
          "topicIdentifier": "string",
          "lastModifiedDateTime": "string (timestamp)",
          "expirationDateTime": "string (timestamp)",
          "certificate": "string"
        }
      },
      "microsoft.graph.detectedApp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "detectedApp",
            "type": "object",
            "properties": {
              "displayName": {
                "type": "string",
                "description": "Name of the discovered application. Read-only",
                "nullable": true
              },
              "version": {
                "type": "string",
                "description": "Version of the discovered application. Read-only",
                "nullable": true
              },
              "sizeInByte": {
                "type": "integer",
                "description": "Discovered application size in bytes. Read-only",
                "format": "int64",
                "nullable": true
              },
              "deviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The number of devices that have installed this application",
                "format": "int32",
                "nullable": true
              },
              "managedDevices": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.managedDevice"
                }
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "displayName": "string",
          "version": "string",
          "sizeInByte": "integer",
          "deviceCount": "integer",
          "managedDevices": [
            {
              "@odata.type": "microsoft.graph.managedDevice"
            }
          ]
        }
      },
      "microsoft.graph.managedDevice": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "managedDevice",
            "type": "object",
            "properties": {
              "userId": {
                "type": "string",
                "description": "Unique Identifier for the user associated with the device",
                "nullable": true
              },
              "deviceName": {
                "type": "string",
                "description": "Name of the device",
                "nullable": true
              },
              "managedDeviceOwnerType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.managedDeviceOwnerType"
                  }
                ],
                "description": "Ownership of the device. Can be 'company' or 'personal'. Possible values are: unknown, company, personal.",
                "nullable": true
              },
              "deviceActionResults": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.deviceActionResult"
                    }
                  ],
                  "nullable": true
                },
                "description": "List of ComplexType deviceActionResult objects."
              },
              "enrolledDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Enrollment time of the device.",
                "format": "date-time",
                "nullable": true
              },
              "lastSyncDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The date and time that the device last completed a successful sync with Intune.",
                "format": "date-time",
                "nullable": true
              },
              "operatingSystem": {
                "type": "string",
                "description": "Operating system of the device. Windows, iOS, etc.",
                "nullable": true
              },
              "complianceState": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.complianceState"
                  }
                ],
                "description": "Compliance state of the device. Possible values are: unknown, compliant, noncompliant, conflict, error, inGracePeriod, configManager.",
                "nullable": true
              },
              "jailBroken": {
                "type": "string",
                "description": "whether the device is jail broken or rooted.",
                "nullable": true
              },
              "managementAgent": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.managementAgentType"
                  }
                ],
                "description": "Management channel of the device. Intune, EAS, etc. Possible values are: eas, mdm, easMdm, intuneClient, easIntuneClient, configurationManagerClient, configurationManagerClientMdm, configurationManagerClientMdmEas, unknown, jamf, googleCloudDevicePolicyController.",
                "nullable": true
              },
              "osVersion": {
                "type": "string",
                "description": "Operating system version of the device.",
                "nullable": true
              },
              "easActivated": {
                "type": "boolean",
                "description": "Whether the device is Exchange ActiveSync activated.",
                "nullable": true
              },
              "easDeviceId": {
                "type": "string",
                "description": "Exchange ActiveSync Id of the device.",
                "nullable": true
              },
              "easActivationDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Exchange ActivationSync activation time of the device.",
                "format": "date-time",
                "nullable": true
              },
              "azureADRegistered": {
                "type": "boolean",
                "description": "Whether the device is Azure Active Directory registered.",
                "nullable": true
              },
              "deviceEnrollmentType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceEnrollmentType"
                  }
                ],
                "description": "Enrollment type of the device. Possible values are: unknown, userEnrollment, deviceEnrollmentManager, appleBulkWithUser, appleBulkWithoutUser, windowsAzureADJoin, windowsBulkUserless, windowsAutoEnrollment, windowsBulkAzureDomainJoin, windowsCoManagement.",
                "nullable": true
              },
              "activationLockBypassCode": {
                "type": "string",
                "description": "Code that allows the Activation Lock on a device to be bypassed.",
                "nullable": true
              },
              "emailAddress": {
                "type": "string",
                "description": "Email(s) for the user associated with the device",
                "nullable": true
              },
              "azureADDeviceId": {
                "type": "string",
                "description": "The unique identifier for the Azure Active Directory device. Read only.",
                "nullable": true
              },
              "deviceRegistrationState": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceRegistrationState"
                  }
                ],
                "description": "Device registration state. Possible values are: notRegistered, registered, revoked, keyConflict, approvalPending, certificateReset, notRegisteredPendingEnrollment, unknown.",
                "nullable": true
              },
              "deviceCategoryDisplayName": {
                "type": "string",
                "description": "Device category display name",
                "nullable": true
              },
              "isSupervised": {
                "type": "boolean",
                "description": "Device supervised status",
                "nullable": true
              },
              "exchangeLastSuccessfulSyncDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Last time the device contacted Exchange.",
                "format": "date-time",
                "nullable": true
              },
              "exchangeAccessState": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceManagementExchangeAccessState"
                  }
                ],
                "description": "The Access State of the device in Exchange. Possible values are: none, unknown, allowed, blocked, quarantined.",
                "nullable": true
              },
              "exchangeAccessStateReason": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceManagementExchangeAccessStateReason"
                  }
                ],
                "description": "The reason for the device's access state in Exchange. Possible values are: none, unknown, exchangeGlobalRule, exchangeIndividualRule, exchangeDeviceRule, exchangeUpgrade, exchangeMailboxPolicy, other, compliant, notCompliant, notEnrolled, unknownLocation, mfaRequired, azureADBlockDueToAccessPolicy, compromisedPassword, deviceNotKnownWithManagedApp.",
                "nullable": true
              },
              "remoteAssistanceSessionUrl": {
                "type": "string",
                "description": "Url that allows a Remote Assistance session to be established with the device.",
                "nullable": true
              },
              "remoteAssistanceSessionErrorDetails": {
                "type": "string",
                "description": "An error string that identifies issues when creating Remote Assistance session objects.",
                "nullable": true
              },
              "isEncrypted": {
                "type": "boolean",
                "description": "Device encryption status",
                "nullable": true
              },
              "userPrincipalName": {
                "type": "string",
                "description": "Device user principal name",
                "nullable": true
              },
              "model": {
                "type": "string",
                "description": "Model of the device",
                "nullable": true
              },
              "manufacturer": {
                "type": "string",
                "description": "Manufacturer of the device",
                "nullable": true
              },
              "imei": {
                "type": "string",
                "description": "IMEI",
                "nullable": true
              },
              "complianceGracePeriodExpirationDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The DateTime when device compliance grace period expires",
                "format": "date-time",
                "nullable": true
              },
              "serialNumber": {
                "type": "string",
                "description": "SerialNumber",
                "nullable": true
              },
              "phoneNumber": {
                "type": "string",
                "description": "Phone number of the device",
                "nullable": true
              },
              "androidSecurityPatchLevel": {
                "type": "string",
                "description": "Android security patch level",
                "nullable": true
              },
              "userDisplayName": {
                "type": "string",
                "description": "User display name",
                "nullable": true
              },
              "configurationManagerClientEnabledFeatures": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.configurationManagerClientEnabledFeatures"
                  }
                ],
                "description": "ConfigrMgr client enabled features",
                "nullable": true
              },
              "wiFiMacAddress": {
                "type": "string",
                "description": "Wi-Fi MAC",
                "nullable": true
              },
              "deviceHealthAttestationState": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceHealthAttestationState"
                  }
                ],
                "description": "The device health attestation state.",
                "nullable": true
              },
              "subscriberCarrier": {
                "type": "string",
                "description": "Subscriber Carrier",
                "nullable": true
              },
              "meid": {
                "type": "string",
                "description": "MEID",
                "nullable": true
              },
              "totalStorageSpaceInBytes": {
                "type": "integer",
                "description": "Total Storage in Bytes",
                "format": "int64",
                "nullable": true
              },
              "freeStorageSpaceInBytes": {
                "type": "integer",
                "description": "Free Storage in Bytes",
                "format": "int64",
                "nullable": true
              },
              "managedDeviceName": {
                "type": "string",
                "description": "Automatically generated name to identify a device. Can be overwritten to a user friendly name.",
                "nullable": true
              },
              "partnerReportedThreatState": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.managedDevicePartnerReportedHealthState"
                  }
                ],
                "description": "Indicates the threat state of a device when a Mobile Threat Defense partner is in use by the account and device. Read Only. Possible values are: unknown, activated, deactivated, secured, lowSeverity, mediumSeverity, highSeverity, unresponsive, compromised, misconfigured.",
                "nullable": true
              },
              "deviceCategory": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceCategory"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "userId": "string",
          "deviceName": "string",
          "managedDeviceOwnerType": {
            "@odata.type": "microsoft.graph.managedDeviceOwnerType"
          },
          "deviceActionResults": [
            {
              "@odata.type": "microsoft.graph.deviceActionResult"
            }
          ],
          "enrolledDateTime": "string (timestamp)",
          "lastSyncDateTime": "string (timestamp)",
          "operatingSystem": "string",
          "complianceState": {
            "@odata.type": "microsoft.graph.complianceState"
          },
          "jailBroken": "string",
          "managementAgent": {
            "@odata.type": "microsoft.graph.managementAgentType"
          },
          "osVersion": "string",
          "easActivated": true,
          "easDeviceId": "string",
          "easActivationDateTime": "string (timestamp)",
          "azureADRegistered": true,
          "deviceEnrollmentType": {
            "@odata.type": "microsoft.graph.deviceEnrollmentType"
          },
          "activationLockBypassCode": "string",
          "emailAddress": "string",
          "azureADDeviceId": "string",
          "deviceRegistrationState": {
            "@odata.type": "microsoft.graph.deviceRegistrationState"
          },
          "deviceCategoryDisplayName": "string",
          "isSupervised": true,
          "exchangeLastSuccessfulSyncDateTime": "string (timestamp)",
          "exchangeAccessState": {
            "@odata.type": "microsoft.graph.deviceManagementExchangeAccessState"
          },
          "exchangeAccessStateReason": {
            "@odata.type": "microsoft.graph.deviceManagementExchangeAccessStateReason"
          },
          "remoteAssistanceSessionUrl": "string",
          "remoteAssistanceSessionErrorDetails": "string",
          "isEncrypted": true,
          "userPrincipalName": "string",
          "model": "string",
          "manufacturer": "string",
          "imei": "string",
          "complianceGracePeriodExpirationDateTime": "string (timestamp)",
          "serialNumber": "string",
          "phoneNumber": "string",
          "androidSecurityPatchLevel": "string",
          "userDisplayName": "string",
          "configurationManagerClientEnabledFeatures": {
            "@odata.type": "microsoft.graph.configurationManagerClientEnabledFeatures"
          },
          "wiFiMacAddress": "string",
          "deviceHealthAttestationState": {
            "@odata.type": "microsoft.graph.deviceHealthAttestationState"
          },
          "subscriberCarrier": "string",
          "meid": "string",
          "totalStorageSpaceInBytes": "integer",
          "freeStorageSpaceInBytes": "integer",
          "managedDeviceName": "string",
          "partnerReportedThreatState": {
            "@odata.type": "microsoft.graph.managedDevicePartnerReportedHealthState"
          },
          "deviceCategory": {
            "@odata.type": "microsoft.graph.deviceCategory"
          }
        }
      },
      "microsoft.graph.managedDeviceOverview": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "managedDeviceOverview",
            "type": "object",
            "properties": {
              "enrolledDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Total enrolled device count. Does not include PC devices managed via Intune PC Agent",
                "format": "int32",
                "nullable": true
              },
              "mdmEnrolledCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The number of devices enrolled in MDM",
                "format": "int32",
                "nullable": true
              },
              "dualEnrolledDeviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The number of devices enrolled in both MDM and EAS",
                "format": "int32",
                "nullable": true
              },
              "deviceOperatingSystemSummary": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceOperatingSystemSummary"
                  }
                ],
                "description": "Device operating system summary.",
                "nullable": true
              },
              "deviceExchangeAccessStateSummary": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceExchangeAccessStateSummary"
                  }
                ],
                "description": "Distribution of Exchange Access State in Intune",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "enrolledDeviceCount": "integer",
          "mdmEnrolledCount": "integer",
          "dualEnrolledDeviceCount": "integer",
          "deviceOperatingSystemSummary": {
            "@odata.type": "microsoft.graph.deviceOperatingSystemSummary"
          },
          "deviceExchangeAccessStateSummary": {
            "@odata.type": "microsoft.graph.deviceExchangeAccessStateSummary"
          }
        }
      },
      "microsoft.graph.importedWindowsAutopilotDeviceIdentity": {
        "title": "importedWindowsAutopilotDeviceIdentity",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The GUID for the object",
            "nullable": true
          },
          "orderIdentifier": {
            "type": "string",
            "description": "Order Id of the Windows autopilot device.",
            "nullable": true
          },
          "serialNumber": {
            "type": "string",
            "description": "Serial number of the Windows autopilot device.",
            "nullable": true
          },
          "productKey": {
            "type": "string",
            "description": "Product Key of the Windows autopilot device.",
            "nullable": true
          },
          "hardwareIdentifier": {
            "type": "string",
            "description": "Hardware Blob of the Windows autopilot device.",
            "format": "base64url",
            "nullable": true
          },
          "state": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.importedWindowsAutopilotDeviceIdentityState"
              }
            ],
            "description": "Current state of the imported device.",
            "nullable": true
          }
        },
        "example": {
          "id": "string (identifier)",
          "orderIdentifier": "string",
          "serialNumber": "string",
          "productKey": "string",
          "hardwareIdentifier": "string",
          "state": {
            "@odata.type": "microsoft.graph.importedWindowsAutopilotDeviceIdentityState"
          }
        }
      },
      "microsoft.graph.importedWindowsAutopilotDeviceIdentityUpload": {
        "title": "importedWindowsAutopilotDeviceIdentityUpload",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The GUID for the object",
            "nullable": true
          },
          "createdDateTimeUtc": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "description": "DateTime when the entity is created.",
            "format": "date-time",
            "nullable": true
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.importedWindowsAutopilotDeviceIdentityUploadStatus"
              }
            ],
            "description": "Upload status. Possible values are: noUpload, pending, complete, error.",
            "nullable": true
          },
          "deviceIdentities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/microsoft.graph.importedWindowsAutopilotDeviceIdentity"
            }
          }
        },
        "example": {
          "id": "string (identifier)",
          "createdDateTimeUtc": "string (timestamp)",
          "status": {
            "@odata.type": "microsoft.graph.importedWindowsAutopilotDeviceIdentityUploadStatus"
          },
          "deviceIdentities": [
            {
              "@odata.type": "microsoft.graph.importedWindowsAutopilotDeviceIdentity"
            }
          ]
        }
      },
      "microsoft.graph.managedAppPolicy": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "managedAppPolicy",
            "type": "object",
            "properties": {
              "displayName": {
                "type": "string",
                "description": "Policy display name.",
                "nullable": true
              },
              "description": {
                "type": "string",
                "description": "The policy's description.",
                "nullable": true
              },
              "createdDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The date and time the policy was created.",
                "format": "date-time",
                "nullable": true
              },
              "lastModifiedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Last time the policy was modified.",
                "format": "date-time",
                "nullable": true
              },
              "version": {
                "type": "string",
                "description": "Version of the entity.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "displayName": "string",
          "description": "string",
          "createdDateTime": "string (timestamp)",
          "lastModifiedDateTime": "string (timestamp)",
          "version": "string"
        }
      },
      "microsoft.graph.managedAppProtection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.managedAppPolicy"
          },
          {
            "title": "managedAppProtection",
            "type": "object",
            "properties": {
              "periodOfflineBeforeAccessCheck": {
                "pattern": "^-?P([0-9]+D)?(T([0-9]+H)?([0-9]+M)?([0-9]+([.][0-9]+)?S)?)?$",
                "type": "string",
                "description": "The period after which access is checked when the device is not connected to the internet.",
                "format": "duration",
                "nullable": true
              },
              "periodOnlineBeforeAccessCheck": {
                "pattern": "^-?P([0-9]+D)?(T([0-9]+H)?([0-9]+M)?([0-9]+([.][0-9]+)?S)?)?$",
                "type": "string",
                "description": "The period after which access is checked when the device is connected to the internet.",
                "format": "duration",
                "nullable": true
              },
              "allowedInboundDataTransferSources": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.managedAppDataTransferLevel"
                  }
                ],
                "description": "Sources from which data is allowed to be transferred. Possible values are: allApps, managedApps, none.",
                "nullable": true
              },
              "allowedOutboundDataTransferDestinations": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.managedAppDataTransferLevel"
                  }
                ],
                "description": "Destinations to which data is allowed to be transferred. Possible values are: allApps, managedApps, none.",
                "nullable": true
              },
              "organizationalCredentialsRequired": {
                "type": "boolean",
                "description": "Indicates whether organizational credentials are required for app use.",
                "nullable": true
              },
              "allowedOutboundClipboardSharingLevel": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.managedAppClipboardSharingLevel"
                  }
                ],
                "description": "The level to which the clipboard may be shared between apps on the managed device. Possible values are: allApps, managedAppsWithPasteIn, managedApps, blocked.",
                "nullable": true
              },
              "dataBackupBlocked": {
                "type": "boolean",
                "description": "Indicates whether the backup of a managed app's data is blocked.",
                "nullable": true
              },
              "deviceComplianceRequired": {
                "type": "boolean",
                "description": "Indicates whether device compliance is required.",
                "nullable": true
              },
              "managedBrowserToOpenLinksRequired": {
                "type": "boolean",
                "description": "Indicates whether internet links should be opened in the managed browser app.",
                "nullable": true
              },
              "saveAsBlocked": {
                "type": "boolean",
                "description": "Indicates whether users may use the 'Save As' menu item to save a copy of protected files.",
                "nullable": true
              },
              "periodOfflineBeforeWipeIsEnforced": {
                "pattern": "^-?P([0-9]+D)?(T([0-9]+H)?([0-9]+M)?([0-9]+([.][0-9]+)?S)?)?$",
                "type": "string",
                "description": "The amount of time an app is allowed to remain disconnected from the internet before all managed data it is wiped.",
                "format": "duration",
                "nullable": true
              },
              "pinRequired": {
                "type": "boolean",
                "description": "Indicates whether an app-level pin is required.",
                "nullable": true
              },
              "maximumPinRetries": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Maximum number of incorrect pin retry attempts before the managed app is either blocked or wiped.",
                "format": "int32",
                "nullable": true
              },
              "simplePinBlocked": {
                "type": "boolean",
                "description": "Indicates whether simplePin is blocked.",
                "nullable": true
              },
              "minimumPinLength": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Minimum pin length required for an app-level pin if PinRequired is set to True",
                "format": "int32",
                "nullable": true
              },
              "pinCharacterSet": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.managedAppPinCharacterSet"
                  }
                ],
                "description": "Character set which may be used for an app-level pin if PinRequired is set to True. Possible values are: numeric, alphanumericAndSymbol.",
                "nullable": true
              },
              "periodBeforePinReset": {
                "pattern": "^-?P([0-9]+D)?(T([0-9]+H)?([0-9]+M)?([0-9]+([.][0-9]+)?S)?)?$",
                "type": "string",
                "description": "TimePeriod before the all-level pin must be reset if PinRequired is set to True.",
                "format": "duration",
                "nullable": true
              },
              "allowedDataStorageLocations": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.managedAppDataStorageLocation"
                    }
                  ],
                  "nullable": true
                },
                "description": "Data storage locations where a user may store managed data."
              },
              "contactSyncBlocked": {
                "type": "boolean",
                "description": "Indicates whether contacts can be synced to the user's device.",
                "nullable": true
              },
              "printBlocked": {
                "type": "boolean",
                "description": "Indicates whether printing is allowed from managed apps.",
                "nullable": true
              },
              "fingerprintBlocked": {
                "type": "boolean",
                "description": "Indicates whether use of the fingerprint reader is allowed in place of a pin if PinRequired is set to True.",
                "nullable": true
              },
              "disableAppPinIfDevicePinIsSet": {
                "type": "boolean",
                "description": "Indicates whether use of the app pin is required if the device pin is set.",
                "nullable": true
              },
              "minimumRequiredOsVersion": {
                "type": "string",
                "description": "Versions less than the specified version will block the managed app from accessing company data.",
                "nullable": true
              },
              "minimumWarningOsVersion": {
                "type": "string",
                "description": "Versions less than the specified version will result in warning message on the managed app from accessing company data.",
                "nullable": true
              },
              "minimumRequiredAppVersion": {
                "type": "string",
                "description": "Versions less than the specified version will block the managed app from accessing company data.",
                "nullable": true
              },
              "minimumWarningAppVersion": {
                "type": "string",
                "description": "Versions less than the specified version will result in warning message on the managed app.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "displayName": "string",
          "description": "string",
          "createdDateTime": "string (timestamp)",
          "lastModifiedDateTime": "string (timestamp)",
          "version": "string",
          "periodOfflineBeforeAccessCheck": "string",
          "periodOnlineBeforeAccessCheck": "string",
          "allowedInboundDataTransferSources": {
            "@odata.type": "microsoft.graph.managedAppDataTransferLevel"
          },
          "allowedOutboundDataTransferDestinations": {
            "@odata.type": "microsoft.graph.managedAppDataTransferLevel"
          },
          "organizationalCredentialsRequired": true,
          "allowedOutboundClipboardSharingLevel": {
            "@odata.type": "microsoft.graph.managedAppClipboardSharingLevel"
          },
          "dataBackupBlocked": true,
          "deviceComplianceRequired": true,
          "managedBrowserToOpenLinksRequired": true,
          "saveAsBlocked": true,
          "periodOfflineBeforeWipeIsEnforced": "string",
          "pinRequired": true,
          "maximumPinRetries": "integer",
          "simplePinBlocked": true,
          "minimumPinLength": "integer",
          "pinCharacterSet": {
            "@odata.type": "microsoft.graph.managedAppPinCharacterSet"
          },
          "periodBeforePinReset": "string",
          "allowedDataStorageLocations": [
            {
              "@odata.type": "microsoft.graph.managedAppDataStorageLocation"
            }
          ],
          "contactSyncBlocked": true,
          "printBlocked": true,
          "fingerprintBlocked": true,
          "disableAppPinIfDevicePinIsSet": true,
          "minimumRequiredOsVersion": "string",
          "minimumWarningOsVersion": "string",
          "minimumRequiredAppVersion": "string",
          "minimumWarningAppVersion": "string"
        }
      },
      "microsoft.graph.targetedManagedAppProtection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.managedAppProtection"
          },
          {
            "title": "targetedManagedAppProtection",
            "type": "object",
            "properties": {
              "isAssigned": {
                "type": "boolean",
                "description": "Indicates if the policy is deployed to any inclusion groups or not.",
                "nullable": true
              },
              "assignments": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.targetedManagedAppPolicyAssignment"
                }
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "displayName": "string",
          "description": "string",
          "createdDateTime": "string (timestamp)",
          "lastModifiedDateTime": "string (timestamp)",
          "version": "string",
          "periodOfflineBeforeAccessCheck": "string",
          "periodOnlineBeforeAccessCheck": "string",
          "allowedInboundDataTransferSources": {
            "@odata.type": "microsoft.graph.managedAppDataTransferLevel"
          },
          "allowedOutboundDataTransferDestinations": {
            "@odata.type": "microsoft.graph.managedAppDataTransferLevel"
          },
          "organizationalCredentialsRequired": true,
          "allowedOutboundClipboardSharingLevel": {
            "@odata.type": "microsoft.graph.managedAppClipboardSharingLevel"
          },
          "dataBackupBlocked": true,
          "deviceComplianceRequired": true,
          "managedBrowserToOpenLinksRequired": true,
          "saveAsBlocked": true,
          "periodOfflineBeforeWipeIsEnforced": "string",
          "pinRequired": true,
          "maximumPinRetries": "integer",
          "simplePinBlocked": true,
          "minimumPinLength": "integer",
          "pinCharacterSet": {
            "@odata.type": "microsoft.graph.managedAppPinCharacterSet"
          },
          "periodBeforePinReset": "string",
          "allowedDataStorageLocations": [
            {
              "@odata.type": "microsoft.graph.managedAppDataStorageLocation"
            }
          ],
          "contactSyncBlocked": true,
          "printBlocked": true,
          "fingerprintBlocked": true,
          "disableAppPinIfDevicePinIsSet": true,
          "minimumRequiredOsVersion": "string",
          "minimumWarningOsVersion": "string",
          "minimumRequiredAppVersion": "string",
          "minimumWarningAppVersion": "string",
          "isAssigned": true,
          "assignments": [
            {
              "@odata.type": "microsoft.graph.targetedManagedAppPolicyAssignment"
            }
          ]
        }
      },
      "microsoft.graph.androidManagedAppProtection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.targetedManagedAppProtection"
          },
          {
            "title": "androidManagedAppProtection",
            "type": "object",
            "properties": {
              "screenCaptureBlocked": {
                "type": "boolean",
                "description": "Indicates whether a managed user can take screen captures of managed apps",
                "nullable": true
              },
              "disableAppEncryptionIfDeviceEncryptionIsEnabled": {
                "type": "boolean",
                "description": "When this setting is enabled, app level encryption is disabled if device level encryption is enabled",
                "nullable": true
              },
              "encryptAppData": {
                "type": "boolean",
                "description": "Indicates whether application data for managed apps should be encrypted",
                "nullable": true
              },
              "deployedAppCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Count of apps to which the current policy is deployed.",
                "format": "int32",
                "nullable": true
              },
              "minimumRequiredPatchVersion": {
                "type": "string",
                "description": "Define the oldest required Android security patch level a user can have to gain secure access to the app.",
                "nullable": true
              },
              "minimumWarningPatchVersion": {
                "type": "string",
                "description": "Define the oldest recommended Android security patch level a user can have for secure access to the app.",
                "nullable": true
              },
              "apps": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.managedMobileApp"
                }
              },
              "deploymentSummary": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.managedAppPolicyDeploymentSummary"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "displayName": "string",
          "description": "string",
          "createdDateTime": "string (timestamp)",
          "lastModifiedDateTime": "string (timestamp)",
          "version": "string",
          "periodOfflineBeforeAccessCheck": "string",
          "periodOnlineBeforeAccessCheck": "string",
          "allowedInboundDataTransferSources": {
            "@odata.type": "microsoft.graph.managedAppDataTransferLevel"
          },
          "allowedOutboundDataTransferDestinations": {
            "@odata.type": "microsoft.graph.managedAppDataTransferLevel"
          },
          "organizationalCredentialsRequired": true,
          "allowedOutboundClipboardSharingLevel": {
            "@odata.type": "microsoft.graph.managedAppClipboardSharingLevel"
          },
          "dataBackupBlocked": true,
          "deviceComplianceRequired": true,
          "managedBrowserToOpenLinksRequired": true,
          "saveAsBlocked": true,
          "periodOfflineBeforeWipeIsEnforced": "string",
          "pinRequired": true,
          "maximumPinRetries": "integer",
          "simplePinBlocked": true,
          "minimumPinLength": "integer",
          "pinCharacterSet": {
            "@odata.type": "microsoft.graph.managedAppPinCharacterSet"
          },
          "periodBeforePinReset": "string",
          "allowedDataStorageLocations": [
            {
              "@odata.type": "microsoft.graph.managedAppDataStorageLocation"
            }
          ],
          "contactSyncBlocked": true,
          "printBlocked": true,
          "fingerprintBlocked": true,
          "disableAppPinIfDevicePinIsSet": true,
          "minimumRequiredOsVersion": "string",
          "minimumWarningOsVersion": "string",
          "minimumRequiredAppVersion": "string",
          "minimumWarningAppVersion": "string",
          "isAssigned": true,
          "assignments": [
            {
              "@odata.type": "microsoft.graph.targetedManagedAppPolicyAssignment"
            }
          ],
          "screenCaptureBlocked": true,
          "disableAppEncryptionIfDeviceEncryptionIsEnabled": true,
          "encryptAppData": true,
          "deployedAppCount": "integer",
          "minimumRequiredPatchVersion": "string",
          "minimumWarningPatchVersion": "string",
          "apps": [
            {
              "@odata.type": "microsoft.graph.managedMobileApp"
            }
          ],
          "deploymentSummary": {
            "@odata.type": "microsoft.graph.managedAppPolicyDeploymentSummary"
          }
        }
      },
      "microsoft.graph.managedAppRegistration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "managedAppRegistration",
            "type": "object",
            "properties": {
              "createdDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Date and time of creation",
                "format": "date-time",
                "nullable": true
              },
              "lastSyncDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Date and time of last the app synced with management service.",
                "format": "date-time",
                "nullable": true
              },
              "applicationVersion": {
                "type": "string",
                "description": "App version",
                "nullable": true
              },
              "managementSdkVersion": {
                "type": "string",
                "description": "App management SDK version",
                "nullable": true
              },
              "platformVersion": {
                "type": "string",
                "description": "Operating System version",
                "nullable": true
              },
              "deviceType": {
                "type": "string",
                "description": "Host device type",
                "nullable": true
              },
              "deviceTag": {
                "type": "string",
                "description": "App management SDK generated tag, which helps relate apps hosted on the same device. Not guaranteed to relate apps in all conditions.",
                "nullable": true
              },
              "deviceName": {
                "type": "string",
                "description": "Host device name",
                "nullable": true
              },
              "flaggedReasons": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.managedAppFlaggedReason"
                    }
                  ],
                  "nullable": true
                },
                "description": "Zero or more reasons an app registration is flagged. E.g. app running on rooted device"
              },
              "userId": {
                "type": "string",
                "description": "The user Id to who this app registration belongs.",
                "nullable": true
              },
              "appIdentifier": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.mobileAppIdentifier"
                  }
                ],
                "description": "The app package Identifier",
                "nullable": true
              },
              "version": {
                "type": "string",
                "description": "Version of the entity.",
                "nullable": true
              },
              "appliedPolicies": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.managedAppPolicy"
                }
              },
              "intendedPolicies": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.managedAppPolicy"
                }
              },
              "operations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.managedAppOperation"
                }
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "createdDateTime": "string (timestamp)",
          "lastSyncDateTime": "string (timestamp)",
          "applicationVersion": "string",
          "managementSdkVersion": "string",
          "platformVersion": "string",
          "deviceType": "string",
          "deviceTag": "string",
          "deviceName": "string",
          "flaggedReasons": [
            {
              "@odata.type": "microsoft.graph.managedAppFlaggedReason"
            }
          ],
          "userId": "string",
          "appIdentifier": {
            "@odata.type": "microsoft.graph.mobileAppIdentifier"
          },
          "version": "string",
          "appliedPolicies": [
            {
              "@odata.type": "microsoft.graph.managedAppPolicy"
            }
          ],
          "intendedPolicies": [
            {
              "@odata.type": "microsoft.graph.managedAppPolicy"
            }
          ],
          "operations": [
            {
              "@odata.type": "microsoft.graph.managedAppOperation"
            }
          ]
        }
      },
      "microsoft.graph.androidManagedAppRegistration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.managedAppRegistration"
          },
          {
            "title": "androidManagedAppRegistration",
            "type": "object"
          }
        ],
        "example": {
          "id": "string (identifier)",
          "createdDateTime": "string (timestamp)",
          "lastSyncDateTime": "string (timestamp)",
          "applicationVersion": "string",
          "managementSdkVersion": "string",
          "platformVersion": "string",
          "deviceType": "string",
          "deviceTag": "string",
          "deviceName": "string",
          "flaggedReasons": [
            {
              "@odata.type": "microsoft.graph.managedAppFlaggedReason"
            }
          ],
          "userId": "string",
          "appIdentifier": {
            "@odata.type": "microsoft.graph.mobileAppIdentifier"
          },
          "version": "string",
          "appliedPolicies": [
            {
              "@odata.type": "microsoft.graph.managedAppPolicy"
            }
          ],
          "intendedPolicies": [
            {
              "@odata.type": "microsoft.graph.managedAppPolicy"
            }
          ],
          "operations": [
            {
              "@odata.type": "microsoft.graph.managedAppOperation"
            }
          ]
        }
      },
      "microsoft.graph.defaultManagedAppProtection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.managedAppProtection"
          },
          {
            "title": "defaultManagedAppProtection",
            "type": "object",
            "properties": {
              "appDataEncryptionType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.managedAppDataEncryptionType"
                  }
                ],
                "description": "Type of encryption which should be used for data in a managed app. (iOS Only). Possible values are: useDeviceSettings, afterDeviceRestart, whenDeviceLockedExceptOpenFiles, whenDeviceLocked.",
                "nullable": true
              },
              "screenCaptureBlocked": {
                "type": "boolean",
                "description": "Indicates whether screen capture is blocked. (Android only)",
                "nullable": true
              },
              "encryptAppData": {
                "type": "boolean",
                "description": "Indicates whether managed-app data should be encrypted. (Android only)",
                "nullable": true
              },
              "disableAppEncryptionIfDeviceEncryptionIsEnabled": {
                "type": "boolean",
                "description": "When this setting is enabled, app level encryption is disabled if device level encryption is enabled. (Android only)",
                "nullable": true
              },
              "minimumRequiredSdkVersion": {
                "type": "string",
                "description": "Versions less than the specified version will block the managed app from accessing company data. (iOS Only)",
                "nullable": true
              },
              "customSettings": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.keyValuePair"
                    }
                  ],
                  "nullable": true
                },
                "description": "A set of string key and string value pairs to be sent to the affected users, unalterned by this service"
              },
              "deployedAppCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Count of apps to which the current policy is deployed.",
                "format": "int32",
                "nullable": true
              },
              "minimumRequiredPatchVersion": {
                "type": "string",
                "description": "Define the oldest required Android security patch level a user can have to gain secure access to the app. (Android only)",
                "nullable": true
              },
              "minimumWarningPatchVersion": {
                "type": "string",
                "description": "Define the oldest recommended Android security patch level a user can have for secure access to the app. (Android only)",
                "nullable": true
              },
              "faceIdBlocked": {
                "type": "boolean",
                "description": "Indicates whether use of the FaceID is allowed in place of a pin if PinRequired is set to True. (iOS Only)",
                "nullable": true
              },
              "apps": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.managedMobileApp"
                }
              },
              "deploymentSummary": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.managedAppPolicyDeploymentSummary"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "displayName": "string",
          "description": "string",
          "createdDateTime": "string (timestamp)",
          "lastModifiedDateTime": "string (timestamp)",
          "version": "string",
          "periodOfflineBeforeAccessCheck": "string",
          "periodOnlineBeforeAccessCheck": "string",
          "allowedInboundDataTransferSources": {
            "@odata.type": "microsoft.graph.managedAppDataTransferLevel"
          },
          "allowedOutboundDataTransferDestinations": {
            "@odata.type": "microsoft.graph.managedAppDataTransferLevel"
          },
          "organizationalCredentialsRequired": true,
          "allowedOutboundClipboardSharingLevel": {
            "@odata.type": "microsoft.graph.managedAppClipboardSharingLevel"
          },
          "dataBackupBlocked": true,
          "deviceComplianceRequired": true,
          "managedBrowserToOpenLinksRequired": true,
          "saveAsBlocked": true,
          "periodOfflineBeforeWipeIsEnforced": "string",
          "pinRequired": true,
          "maximumPinRetries": "integer",
          "simplePinBlocked": true,
          "minimumPinLength": "integer",
          "pinCharacterSet": {
            "@odata.type": "microsoft.graph.managedAppPinCharacterSet"
          },
          "periodBeforePinReset": "string",
          "allowedDataStorageLocations": [
            {
              "@odata.type": "microsoft.graph.managedAppDataStorageLocation"
            }
          ],
          "contactSyncBlocked": true,
          "printBlocked": true,
          "fingerprintBlocked": true,
          "disableAppPinIfDevicePinIsSet": true,
          "minimumRequiredOsVersion": "string",
          "minimumWarningOsVersion": "string",
          "minimumRequiredAppVersion": "string",
          "minimumWarningAppVersion": "string",
          "appDataEncryptionType": {
            "@odata.type": "microsoft.graph.managedAppDataEncryptionType"
          },
          "screenCaptureBlocked": true,
          "encryptAppData": true,
          "disableAppEncryptionIfDeviceEncryptionIsEnabled": true,
          "minimumRequiredSdkVersion": "string",
          "customSettings": [
            {
              "@odata.type": "microsoft.graph.keyValuePair"
            }
          ],
          "deployedAppCount": "integer",
          "minimumRequiredPatchVersion": "string",
          "minimumWarningPatchVersion": "string",
          "faceIdBlocked": true,
          "apps": [
            {
              "@odata.type": "microsoft.graph.managedMobileApp"
            }
          ],
          "deploymentSummary": {
            "@odata.type": "microsoft.graph.managedAppPolicyDeploymentSummary"
          }
        }
      },
      "microsoft.graph.iosManagedAppProtection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.targetedManagedAppProtection"
          },
          {
            "title": "iosManagedAppProtection",
            "type": "object",
            "properties": {
              "appDataEncryptionType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.managedAppDataEncryptionType"
                  }
                ],
                "description": "Type of encryption which should be used for data in a managed app. Possible values are: useDeviceSettings, afterDeviceRestart, whenDeviceLockedExceptOpenFiles, whenDeviceLocked.",
                "nullable": true
              },
              "minimumRequiredSdkVersion": {
                "type": "string",
                "description": "Versions less than the specified version will block the managed app from accessing company data.",
                "nullable": true
              },
              "deployedAppCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Count of apps to which the current policy is deployed.",
                "format": "int32",
                "nullable": true
              },
              "faceIdBlocked": {
                "type": "boolean",
                "description": "Indicates whether use of the FaceID is allowed in place of a pin if PinRequired is set to True.",
                "nullable": true
              },
              "apps": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.managedMobileApp"
                }
              },
              "deploymentSummary": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.managedAppPolicyDeploymentSummary"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "displayName": "string",
          "description": "string",
          "createdDateTime": "string (timestamp)",
          "lastModifiedDateTime": "string (timestamp)",
          "version": "string",
          "periodOfflineBeforeAccessCheck": "string",
          "periodOnlineBeforeAccessCheck": "string",
          "allowedInboundDataTransferSources": {
            "@odata.type": "microsoft.graph.managedAppDataTransferLevel"
          },
          "allowedOutboundDataTransferDestinations": {
            "@odata.type": "microsoft.graph.managedAppDataTransferLevel"
          },
          "organizationalCredentialsRequired": true,
          "allowedOutboundClipboardSharingLevel": {
            "@odata.type": "microsoft.graph.managedAppClipboardSharingLevel"
          },
          "dataBackupBlocked": true,
          "deviceComplianceRequired": true,
          "managedBrowserToOpenLinksRequired": true,
          "saveAsBlocked": true,
          "periodOfflineBeforeWipeIsEnforced": "string",
          "pinRequired": true,
          "maximumPinRetries": "integer",
          "simplePinBlocked": true,
          "minimumPinLength": "integer",
          "pinCharacterSet": {
            "@odata.type": "microsoft.graph.managedAppPinCharacterSet"
          },
          "periodBeforePinReset": "string",
          "allowedDataStorageLocations": [
            {
              "@odata.type": "microsoft.graph.managedAppDataStorageLocation"
            }
          ],
          "contactSyncBlocked": true,
          "printBlocked": true,
          "fingerprintBlocked": true,
          "disableAppPinIfDevicePinIsSet": true,
          "minimumRequiredOsVersion": "string",
          "minimumWarningOsVersion": "string",
          "minimumRequiredAppVersion": "string",
          "minimumWarningAppVersion": "string",
          "isAssigned": true,
          "assignments": [
            {
              "@odata.type": "microsoft.graph.targetedManagedAppPolicyAssignment"
            }
          ],
          "appDataEncryptionType": {
            "@odata.type": "microsoft.graph.managedAppDataEncryptionType"
          },
          "minimumRequiredSdkVersion": "string",
          "deployedAppCount": "integer",
          "faceIdBlocked": true,
          "apps": [
            {
              "@odata.type": "microsoft.graph.managedMobileApp"
            }
          ],
          "deploymentSummary": {
            "@odata.type": "microsoft.graph.managedAppPolicyDeploymentSummary"
          }
        }
      },
      "microsoft.graph.iosManagedAppRegistration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.managedAppRegistration"
          },
          {
            "title": "iosManagedAppRegistration",
            "type": "object"
          }
        ],
        "example": {
          "id": "string (identifier)",
          "createdDateTime": "string (timestamp)",
          "lastSyncDateTime": "string (timestamp)",
          "applicationVersion": "string",
          "managementSdkVersion": "string",
          "platformVersion": "string",
          "deviceType": "string",
          "deviceTag": "string",
          "deviceName": "string",
          "flaggedReasons": [
            {
              "@odata.type": "microsoft.graph.managedAppFlaggedReason"
            }
          ],
          "userId": "string",
          "appIdentifier": {
            "@odata.type": "microsoft.graph.mobileAppIdentifier"
          },
          "version": "string",
          "appliedPolicies": [
            {
              "@odata.type": "microsoft.graph.managedAppPolicy"
            }
          ],
          "intendedPolicies": [
            {
              "@odata.type": "microsoft.graph.managedAppPolicy"
            }
          ],
          "operations": [
            {
              "@odata.type": "microsoft.graph.managedAppOperation"
            }
          ]
        }
      },
      "microsoft.graph.managedAppConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.managedAppPolicy"
          },
          {
            "title": "managedAppConfiguration",
            "type": "object",
            "properties": {
              "customSettings": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.keyValuePair"
                    }
                  ],
                  "nullable": true
                },
                "description": "A set of string key and string value pairs to be sent to apps for users to whom the configuration is scoped, unalterned by this service"
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "displayName": "string",
          "description": "string",
          "createdDateTime": "string (timestamp)",
          "lastModifiedDateTime": "string (timestamp)",
          "version": "string",
          "customSettings": [
            {
              "@odata.type": "microsoft.graph.keyValuePair"
            }
          ]
        }
      },
      "microsoft.graph.managedAppOperation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "managedAppOperation",
            "type": "object",
            "properties": {
              "displayName": {
                "type": "string",
                "description": "The operation name.",
                "nullable": true
              },
              "lastModifiedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The last time the app operation was modified.",
                "format": "date-time",
                "nullable": true
              },
              "state": {
                "type": "string",
                "description": "The current state of the operation",
                "nullable": true
              },
              "version": {
                "type": "string",
                "description": "Version of the entity.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "displayName": "string",
          "lastModifiedDateTime": "string (timestamp)",
          "state": "string",
          "version": "string"
        }
      },
      "microsoft.graph.managedAppPolicyDeploymentSummary": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "managedAppPolicyDeploymentSummary",
            "type": "object",
            "properties": {
              "displayName": {
                "type": "string",
                "description": "Not yet documented",
                "nullable": true
              },
              "configurationDeployedUserCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Not yet documented",
                "format": "int32",
                "nullable": true
              },
              "lastRefreshTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Not yet documented",
                "format": "date-time",
                "nullable": true
              },
              "configurationDeploymentSummaryPerApp": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.managedAppPolicyDeploymentSummaryPerApp"
                    }
                  ],
                  "nullable": true
                },
                "description": "Not yet documented"
              },
              "version": {
                "type": "string",
                "description": "Version of the entity.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "displayName": "string",
          "configurationDeployedUserCount": "integer",
          "lastRefreshTime": "string (timestamp)",
          "configurationDeploymentSummaryPerApp": [
            {
              "@odata.type": "microsoft.graph.managedAppPolicyDeploymentSummaryPerApp"
            }
          ],
          "version": "string"
        }
      },
      "microsoft.graph.managedAppStatus": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "managedAppStatus",
            "type": "object",
            "properties": {
              "displayName": {
                "type": "string",
                "description": "Friendly name of the status report.",
                "nullable": true
              },
              "version": {
                "type": "string",
                "description": "Version of the entity.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "displayName": "string",
          "version": "string"
        }
      },
      "microsoft.graph.managedAppStatusRaw": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.managedAppStatus"
          },
          {
            "title": "managedAppStatusRaw",
            "type": "object",
            "properties": {
              "content": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.Json"
                  }
                ],
                "description": "Status report content.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "displayName": "string",
          "version": "string",
          "content": {
            "@odata.type": "microsoft.graph.Json"
          }
        }
      },
      "microsoft.graph.managedMobileApp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "managedMobileApp",
            "type": "object",
            "properties": {
              "mobileAppIdentifier": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.mobileAppIdentifier"
                  }
                ],
                "description": "The identifier for an app with it's operating system type.",
                "nullable": true
              },
              "version": {
                "type": "string",
                "description": "Version of the entity.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "mobileAppIdentifier": {
            "@odata.type": "microsoft.graph.mobileAppIdentifier"
          },
          "version": "string"
        }
      },
      "microsoft.graph.windowsInformationProtection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.managedAppPolicy"
          },
          {
            "title": "windowsInformationProtection",
            "type": "object",
            "properties": {
              "enforcementLevel": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.windowsInformationProtectionEnforcementLevel"
                  }
                ],
                "description": "WIP enforcement level.See the Enum definition for supported values. Possible values are: noProtection, encryptAndAuditOnly, encryptAuditAndPrompt, encryptAuditAndBlock.",
                "nullable": true
              },
              "enterpriseDomain": {
                "type": "string",
                "description": "Primary enterprise domain",
                "nullable": true
              },
              "enterpriseProtectedDomainNames": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.windowsInformationProtectionResourceCollection"
                    }
                  ],
                  "nullable": true
                },
                "description": "List of enterprise domains to be protected"
              },
              "protectionUnderLockConfigRequired": {
                "type": "boolean",
                "description": "Specifies whether the protection under lock feature (also known as encrypt under pin) should be configured",
                "nullable": true
              },
              "dataRecoveryCertificate": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.windowsInformationProtectionDataRecoveryCertificate"
                  }
                ],
                "description": "Specifies a recovery certificate that can be used for data recovery of encrypted files. This is the same as the data recovery agent(DRA) certificate for encrypting file system(EFS)",
                "nullable": true
              },
              "revokeOnUnenrollDisabled": {
                "type": "boolean",
                "description": "This policy controls whether to revoke the WIP keys when a device unenrolls from the management service. If set to 1 (Don't revoke keys), the keys will not be revoked and the user will continue to have access to protected files after unenrollment. If the keys are not revoked, there will be no revoked file cleanup subsequently.",
                "nullable": true
              },
              "rightsManagementServicesTemplateId": {
                "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                "type": "string",
                "description": "TemplateID GUID to use for RMS encryption. The RMS template allows the IT admin to configure the details about who has access to RMS-protected file and how long they have access",
                "format": "uuid",
                "nullable": true
              },
              "azureRightsManagementServicesAllowed": {
                "type": "boolean",
                "description": "Specifies whether to allow Azure RMS encryption for WIP",
                "nullable": true
              },
              "iconsVisible": {
                "type": "boolean",
                "description": "Determines whether overlays are added to icons for WIP protected files in Explorer and enterprise only app tiles in the Start menu. Starting in Windows 10, version 1703 this setting also configures the visibility of the WIP icon in the title bar of a WIP-protected app",
                "nullable": true
              },
              "protectedApps": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.windowsInformationProtectionApp"
                    }
                  ],
                  "nullable": true
                },
                "description": "Protected applications can access enterprise data and the data handled by those applications are protected with encryption"
              },
              "exemptApps": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.windowsInformationProtectionApp"
                    }
                  ],
                  "nullable": true
                },
                "description": "Exempt applications can also access enterprise data, but the data handled by those applications are not protected. This is because some critical enterprise applications may have compatibility problems with encrypted data."
              },
              "enterpriseNetworkDomainNames": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.windowsInformationProtectionResourceCollection"
                    }
                  ],
                  "nullable": true
                },
                "description": "This is the list of domains that comprise the boundaries of the enterprise. Data from one of these domains that is sent to a device will be considered enterprise data and protected These locations will be considered a safe destination for enterprise data to be shared to"
              },
              "enterpriseProxiedDomains": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.windowsInformationProtectionProxiedDomainCollection"
                    }
                  ],
                  "nullable": true
                },
                "description": "Contains a list of Enterprise resource domains hosted in the cloud that need to be protected. Connections to these resources are considered enterprise data. If a proxy is paired with a cloud resource, traffic to the cloud resource will be routed through the enterprise network via the denoted proxy server (on Port 80). A proxy server used for this purpose must also be configured using the EnterpriseInternalProxyServers policy"
              },
              "enterpriseIPRanges": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.windowsInformationProtectionIPRangeCollection"
                    }
                  ],
                  "nullable": true
                },
                "description": "Sets the enterprise IP ranges that define the computers in the enterprise network. Data that comes from those computers will be considered part of the enterprise and protected. These locations will be considered a safe destination for enterprise data to be shared to"
              },
              "enterpriseIPRangesAreAuthoritative": {
                "type": "boolean",
                "description": "Boolean value that tells the client to accept the configured list and not to use heuristics to attempt to find other subnets. Default is false",
                "nullable": true
              },
              "enterpriseProxyServers": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.windowsInformationProtectionResourceCollection"
                    }
                  ],
                  "nullable": true
                },
                "description": "This is a list of proxy servers. Any server not on this list is considered non-enterprise"
              },
              "enterpriseInternalProxyServers": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.windowsInformationProtectionResourceCollection"
                    }
                  ],
                  "nullable": true
                },
                "description": "This is the comma-separated list of internal proxy servers. For example, '157.54.14.28, 157.54.11.118, 10.202.14.167, 157.53.14.163, 157.69.210.59'. These proxies have been configured by the admin to connect to specific resources on the Internet. They are considered to be enterprise network locations. The proxies are only leveraged in configuring the EnterpriseProxiedDomains policy to force traffic to the matched domains through these proxies"
              },
              "enterpriseProxyServersAreAuthoritative": {
                "type": "boolean",
                "description": "Boolean value that tells the client to accept the configured list of proxies and not try to detect other work proxies. Default is false",
                "nullable": true
              },
              "neutralDomainResources": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.windowsInformationProtectionResourceCollection"
                    }
                  ],
                  "nullable": true
                },
                "description": "List of domain names that can used for work or personal resource"
              },
              "indexingEncryptedStoresOrItemsBlocked": {
                "type": "boolean",
                "description": "This switch is for the Windows Search Indexer, to allow or disallow indexing of items",
                "nullable": true
              },
              "smbAutoEncryptedFileExtensions": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.windowsInformationProtectionResourceCollection"
                    }
                  ],
                  "nullable": true
                },
                "description": "Specifies a list of file extensions, so that files with these extensions are encrypted when copying from an SMB share within the corporate boundary"
              },
              "isAssigned": {
                "type": "boolean",
                "description": "Indicates if the policy is deployed to any inclusion groups or not.",
                "nullable": true
              },
              "protectedAppLockerFiles": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.windowsInformationProtectionAppLockerFile"
                }
              },
              "exemptAppLockerFiles": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.windowsInformationProtectionAppLockerFile"
                }
              },
              "assignments": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.targetedManagedAppPolicyAssignment"
                }
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "displayName": "string",
          "description": "string",
          "createdDateTime": "string (timestamp)",
          "lastModifiedDateTime": "string (timestamp)",
          "version": "string",
          "enforcementLevel": {
            "@odata.type": "microsoft.graph.windowsInformationProtectionEnforcementLevel"
          },
          "enterpriseDomain": "string",
          "enterpriseProtectedDomainNames": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionResourceCollection"
            }
          ],
          "protectionUnderLockConfigRequired": true,
          "dataRecoveryCertificate": {
            "@odata.type": "microsoft.graph.windowsInformationProtectionDataRecoveryCertificate"
          },
          "revokeOnUnenrollDisabled": true,
          "rightsManagementServicesTemplateId": "string",
          "azureRightsManagementServicesAllowed": true,
          "iconsVisible": true,
          "protectedApps": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionApp"
            }
          ],
          "exemptApps": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionApp"
            }
          ],
          "enterpriseNetworkDomainNames": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionResourceCollection"
            }
          ],
          "enterpriseProxiedDomains": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionProxiedDomainCollection"
            }
          ],
          "enterpriseIPRanges": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionIPRangeCollection"
            }
          ],
          "enterpriseIPRangesAreAuthoritative": true,
          "enterpriseProxyServers": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionResourceCollection"
            }
          ],
          "enterpriseInternalProxyServers": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionResourceCollection"
            }
          ],
          "enterpriseProxyServersAreAuthoritative": true,
          "neutralDomainResources": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionResourceCollection"
            }
          ],
          "indexingEncryptedStoresOrItemsBlocked": true,
          "smbAutoEncryptedFileExtensions": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionResourceCollection"
            }
          ],
          "isAssigned": true,
          "protectedAppLockerFiles": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionAppLockerFile"
            }
          ],
          "exemptAppLockerFiles": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionAppLockerFile"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.targetedManagedAppPolicyAssignment"
            }
          ]
        }
      },
      "microsoft.graph.mdmWindowsInformationProtectionPolicy": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.windowsInformationProtection"
          },
          {
            "title": "mdmWindowsInformationProtectionPolicy",
            "type": "object"
          }
        ],
        "example": {
          "id": "string (identifier)",
          "displayName": "string",
          "description": "string",
          "createdDateTime": "string (timestamp)",
          "lastModifiedDateTime": "string (timestamp)",
          "version": "string",
          "enforcementLevel": {
            "@odata.type": "microsoft.graph.windowsInformationProtectionEnforcementLevel"
          },
          "enterpriseDomain": "string",
          "enterpriseProtectedDomainNames": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionResourceCollection"
            }
          ],
          "protectionUnderLockConfigRequired": true,
          "dataRecoveryCertificate": {
            "@odata.type": "microsoft.graph.windowsInformationProtectionDataRecoveryCertificate"
          },
          "revokeOnUnenrollDisabled": true,
          "rightsManagementServicesTemplateId": "string",
          "azureRightsManagementServicesAllowed": true,
          "iconsVisible": true,
          "protectedApps": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionApp"
            }
          ],
          "exemptApps": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionApp"
            }
          ],
          "enterpriseNetworkDomainNames": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionResourceCollection"
            }
          ],
          "enterpriseProxiedDomains": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionProxiedDomainCollection"
            }
          ],
          "enterpriseIPRanges": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionIPRangeCollection"
            }
          ],
          "enterpriseIPRangesAreAuthoritative": true,
          "enterpriseProxyServers": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionResourceCollection"
            }
          ],
          "enterpriseInternalProxyServers": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionResourceCollection"
            }
          ],
          "enterpriseProxyServersAreAuthoritative": true,
          "neutralDomainResources": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionResourceCollection"
            }
          ],
          "indexingEncryptedStoresOrItemsBlocked": true,
          "smbAutoEncryptedFileExtensions": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionResourceCollection"
            }
          ],
          "isAssigned": true,
          "protectedAppLockerFiles": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionAppLockerFile"
            }
          ],
          "exemptAppLockerFiles": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionAppLockerFile"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.targetedManagedAppPolicyAssignment"
            }
          ]
        }
      },
      "microsoft.graph.targetedManagedAppConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.managedAppConfiguration"
          },
          {
            "title": "targetedManagedAppConfiguration",
            "type": "object",
            "properties": {
              "deployedAppCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Count of apps to which the current policy is deployed.",
                "format": "int32",
                "nullable": true
              },
              "isAssigned": {
                "type": "boolean",
                "description": "Indicates if the policy is deployed to any inclusion groups or not.",
                "nullable": true
              },
              "apps": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.managedMobileApp"
                }
              },
              "deploymentSummary": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.managedAppPolicyDeploymentSummary"
                  }
                ],
                "nullable": true
              },
              "assignments": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.targetedManagedAppPolicyAssignment"
                }
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "displayName": "string",
          "description": "string",
          "createdDateTime": "string (timestamp)",
          "lastModifiedDateTime": "string (timestamp)",
          "version": "string",
          "customSettings": [
            {
              "@odata.type": "microsoft.graph.keyValuePair"
            }
          ],
          "deployedAppCount": "integer",
          "isAssigned": true,
          "apps": [
            {
              "@odata.type": "microsoft.graph.managedMobileApp"
            }
          ],
          "deploymentSummary": {
            "@odata.type": "microsoft.graph.managedAppPolicyDeploymentSummary"
          },
          "assignments": [
            {
              "@odata.type": "microsoft.graph.targetedManagedAppPolicyAssignment"
            }
          ]
        }
      },
      "microsoft.graph.targetedManagedAppPolicyAssignment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "targetedManagedAppPolicyAssignment",
            "type": "object",
            "properties": {
              "target": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceAndAppManagementAssignmentTarget"
                  }
                ],
                "description": "Identifier for deployment of a group or app",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "target": {
            "@odata.type": "microsoft.graph.deviceAndAppManagementAssignmentTarget"
          }
        }
      },
      "microsoft.graph.windowsInformationProtectionAppLockerFile": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "windowsInformationProtectionAppLockerFile",
            "type": "object",
            "properties": {
              "displayName": {
                "type": "string",
                "description": "The friendly name",
                "nullable": true
              },
              "fileHash": {
                "type": "string",
                "description": "SHA256 hash of the file",
                "nullable": true
              },
              "file": {
                "type": "string",
                "description": "File as a byte array",
                "format": "base64url",
                "nullable": true
              },
              "version": {
                "type": "string",
                "description": "Version of the entity.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "displayName": "string",
          "fileHash": "string",
          "file": "string",
          "version": "string"
        }
      },
      "microsoft.graph.windowsInformationProtectionPolicy": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.windowsInformationProtection"
          },
          {
            "title": "windowsInformationProtectionPolicy",
            "type": "object",
            "properties": {
              "revokeOnMdmHandoffDisabled": {
                "type": "boolean",
                "description": "New property in RS2, pending documentation",
                "nullable": true
              },
              "mdmEnrollmentUrl": {
                "type": "string",
                "description": "Enrollment url for the MDM",
                "nullable": true
              },
              "windowsHelloForBusinessBlocked": {
                "type": "boolean",
                "description": "Boolean value that sets Windows Hello for Business as a method for signing into Windows.",
                "nullable": true
              },
              "pinMinimumLength": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Integer value that sets the minimum number of characters required for the PIN. Default value is 4. The lowest number you can configure for this policy setting is 4. The largest number you can configure must be less than the number configured in the Maximum PIN length policy setting or the number 127, whichever is the lowest.",
                "format": "int32",
                "nullable": true
              },
              "pinUppercaseLetters": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.windowsInformationProtectionPinCharacterRequirements"
                  }
                ],
                "description": "Integer value that configures the use of uppercase letters in the Windows Hello for Business PIN. Default is NotAllow. Possible values are: notAllow, requireAtLeastOne, allow.",
                "nullable": true
              },
              "pinLowercaseLetters": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.windowsInformationProtectionPinCharacterRequirements"
                  }
                ],
                "description": "Integer value that configures the use of lowercase letters in the Windows Hello for Business PIN. Default is NotAllow. Possible values are: notAllow, requireAtLeastOne, allow.",
                "nullable": true
              },
              "pinSpecialCharacters": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.windowsInformationProtectionPinCharacterRequirements"
                  }
                ],
                "description": "Integer value that configures the use of special characters in the Windows Hello for Business PIN. Valid special characters for Windows Hello for Business PIN gestures include: ! ' # $ % & ' ( )  + , - . / : ; < = > ? @ [ / ] ^  ` {",
                "nullable": true
              },
              "pinExpirationDays": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Integer value specifies the period of time (in days) that a PIN can be used before the system requires the user to change it. The largest number you can configure for this policy setting is 730. The lowest number you can configure for this policy setting is 0. If this policy is set to 0, then the user's PIN will never expire. This node was added in Windows 10, version 1511. Default is 0.",
                "format": "int32",
                "nullable": true
              },
              "numberOfPastPinsRemembered": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Integer value that specifies the number of past PINs that can be associated to a user account that can't be reused. The largest number you can configure for this policy setting is 50. The lowest number you can configure for this policy setting is 0. If this policy is set to 0, then storage of previous PINs is not required. This node was added in Windows 10, version 1511. Default is 0.",
                "format": "int32",
                "nullable": true
              },
              "passwordMaximumAttemptCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The number of authentication failures allowed before the device will be wiped. A value of 0 disables device wipe functionality. Range is an integer X where 4 <= X <= 16 for desktop and 0 <= X <= 999 for mobile devices.",
                "format": "int32",
                "nullable": true
              },
              "minutesOfInactivityBeforeDeviceLock": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Specifies the maximum amount of time (in minutes) allowed after the device is idle that will cause the device to become PIN or password locked.   Range is an integer X where 0 <= X <= 999.",
                "format": "int32",
                "nullable": true
              },
              "daysWithoutContactBeforeUnenroll": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Offline interval before app data is wiped (days)",
                "format": "int32",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "displayName": "string",
          "description": "string",
          "createdDateTime": "string (timestamp)",
          "lastModifiedDateTime": "string (timestamp)",
          "version": "string",
          "enforcementLevel": {
            "@odata.type": "microsoft.graph.windowsInformationProtectionEnforcementLevel"
          },
          "enterpriseDomain": "string",
          "enterpriseProtectedDomainNames": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionResourceCollection"
            }
          ],
          "protectionUnderLockConfigRequired": true,
          "dataRecoveryCertificate": {
            "@odata.type": "microsoft.graph.windowsInformationProtectionDataRecoveryCertificate"
          },
          "revokeOnUnenrollDisabled": true,
          "rightsManagementServicesTemplateId": "string",
          "azureRightsManagementServicesAllowed": true,
          "iconsVisible": true,
          "protectedApps": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionApp"
            }
          ],
          "exemptApps": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionApp"
            }
          ],
          "enterpriseNetworkDomainNames": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionResourceCollection"
            }
          ],
          "enterpriseProxiedDomains": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionProxiedDomainCollection"
            }
          ],
          "enterpriseIPRanges": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionIPRangeCollection"
            }
          ],
          "enterpriseIPRangesAreAuthoritative": true,
          "enterpriseProxyServers": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionResourceCollection"
            }
          ],
          "enterpriseInternalProxyServers": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionResourceCollection"
            }
          ],
          "enterpriseProxyServersAreAuthoritative": true,
          "neutralDomainResources": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionResourceCollection"
            }
          ],
          "indexingEncryptedStoresOrItemsBlocked": true,
          "smbAutoEncryptedFileExtensions": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionResourceCollection"
            }
          ],
          "isAssigned": true,
          "protectedAppLockerFiles": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionAppLockerFile"
            }
          ],
          "exemptAppLockerFiles": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionAppLockerFile"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.targetedManagedAppPolicyAssignment"
            }
          ],
          "revokeOnMdmHandoffDisabled": true,
          "mdmEnrollmentUrl": "string",
          "windowsHelloForBusinessBlocked": true,
          "pinMinimumLength": "integer",
          "pinUppercaseLetters": {
            "@odata.type": "microsoft.graph.windowsInformationProtectionPinCharacterRequirements"
          },
          "pinLowercaseLetters": {
            "@odata.type": "microsoft.graph.windowsInformationProtectionPinCharacterRequirements"
          },
          "pinSpecialCharacters": {
            "@odata.type": "microsoft.graph.windowsInformationProtectionPinCharacterRequirements"
          },
          "pinExpirationDays": "integer",
          "numberOfPastPinsRemembered": "integer",
          "passwordMaximumAttemptCount": "integer",
          "minutesOfInactivityBeforeDeviceLock": "integer",
          "daysWithoutContactBeforeUnenroll": "integer"
        }
      },
      "microsoft.graph.localizedNotificationMessage": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "localizedNotificationMessage",
            "type": "object",
            "properties": {
              "lastModifiedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "DateTime the object was last modified.",
                "format": "date-time",
                "nullable": true
              },
              "locale": {
                "type": "string",
                "description": "The Locale for which this message is destined.",
                "nullable": true
              },
              "subject": {
                "type": "string",
                "description": "The Message Template Subject.",
                "nullable": true
              },
              "messageTemplate": {
                "type": "string",
                "description": "The Message Template content.",
                "nullable": true
              },
              "isDefault": {
                "type": "boolean",
                "description": "Flag to indicate whether or not this is the default locale for language fallback. This flag can only be set. To unset, set this property to true on another Localized Notification Message.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "lastModifiedDateTime": "string (timestamp)",
          "locale": "string",
          "subject": "string",
          "messageTemplate": "string",
          "isDefault": true
        }
      },
      "microsoft.graph.notificationMessageTemplate": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "notificationMessageTemplate",
            "type": "object",
            "properties": {
              "lastModifiedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "DateTime the object was last modified.",
                "format": "date-time",
                "nullable": true
              },
              "displayName": {
                "type": "string",
                "description": "Display name for the Notification Message Template.",
                "nullable": true
              },
              "defaultLocale": {
                "type": "string",
                "description": "The default locale to fallback onto when the requested locale is not available.",
                "nullable": true
              },
              "brandingOptions": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.notificationTemplateBrandingOptions"
                  }
                ],
                "description": "The Message Template Branding Options. Branding is defined in the Intune Admin Console. Possible values are: none, includeCompanyLogo, includeCompanyName, includeContactInformation.",
                "nullable": true
              },
              "localizedNotificationMessages": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.localizedNotificationMessage"
                }
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "lastModifiedDateTime": "string (timestamp)",
          "displayName": "string",
          "defaultLocale": "string",
          "brandingOptions": {
            "@odata.type": "microsoft.graph.notificationTemplateBrandingOptions"
          },
          "localizedNotificationMessages": [
            {
              "@odata.type": "microsoft.graph.localizedNotificationMessage"
            }
          ]
        }
      },
      "microsoft.graph.deviceEnrollmentConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "deviceEnrollmentConfiguration",
            "type": "object",
            "properties": {
              "displayName": {
                "type": "string",
                "description": "Not yet documented",
                "nullable": true
              },
              "description": {
                "type": "string",
                "description": "Not yet documented",
                "nullable": true
              },
              "priority": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Not yet documented",
                "format": "int32",
                "nullable": true
              },
              "createdDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Not yet documented",
                "format": "date-time",
                "nullable": true
              },
              "lastModifiedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Not yet documented",
                "format": "date-time",
                "nullable": true
              },
              "version": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Not yet documented",
                "format": "int32",
                "nullable": true
              },
              "assignments": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.enrollmentConfigurationAssignment"
                }
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "displayName": "string",
          "description": "string",
          "priority": "integer",
          "createdDateTime": "string (timestamp)",
          "lastModifiedDateTime": "string (timestamp)",
          "version": "integer",
          "assignments": [
            {
              "@odata.type": "microsoft.graph.enrollmentConfigurationAssignment"
            }
          ]
        }
      },
      "microsoft.graph.deviceEnrollmentLimitConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceEnrollmentConfiguration"
          },
          {
            "title": "deviceEnrollmentLimitConfiguration",
            "type": "object",
            "properties": {
              "limit": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Not yet documented",
                "format": "int32",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "displayName": "string",
          "description": "string",
          "priority": "integer",
          "createdDateTime": "string (timestamp)",
          "lastModifiedDateTime": "string (timestamp)",
          "version": "integer",
          "assignments": [
            {
              "@odata.type": "microsoft.graph.enrollmentConfigurationAssignment"
            }
          ],
          "limit": "integer"
        }
      },
      "microsoft.graph.deviceEnrollmentPlatformRestrictionsConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceEnrollmentConfiguration"
          },
          {
            "title": "deviceEnrollmentPlatformRestrictionsConfiguration",
            "type": "object",
            "properties": {
              "iosRestriction": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceEnrollmentPlatformRestriction"
                  }
                ],
                "description": "Not yet documented",
                "nullable": true
              },
              "windowsRestriction": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceEnrollmentPlatformRestriction"
                  }
                ],
                "description": "Not yet documented",
                "nullable": true
              },
              "windowsMobileRestriction": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceEnrollmentPlatformRestriction"
                  }
                ],
                "description": "Not yet documented",
                "nullable": true
              },
              "androidRestriction": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceEnrollmentPlatformRestriction"
                  }
                ],
                "description": "Not yet documented",
                "nullable": true
              },
              "macOSRestriction": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceEnrollmentPlatformRestriction"
                  }
                ],
                "description": "Not yet documented",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "displayName": "string",
          "description": "string",
          "priority": "integer",
          "createdDateTime": "string (timestamp)",
          "lastModifiedDateTime": "string (timestamp)",
          "version": "integer",
          "assignments": [
            {
              "@odata.type": "microsoft.graph.enrollmentConfigurationAssignment"
            }
          ],
          "iosRestriction": {
            "@odata.type": "microsoft.graph.deviceEnrollmentPlatformRestriction"
          },
          "windowsRestriction": {
            "@odata.type": "microsoft.graph.deviceEnrollmentPlatformRestriction"
          },
          "windowsMobileRestriction": {
            "@odata.type": "microsoft.graph.deviceEnrollmentPlatformRestriction"
          },
          "androidRestriction": {
            "@odata.type": "microsoft.graph.deviceEnrollmentPlatformRestriction"
          },
          "macOSRestriction": {
            "@odata.type": "microsoft.graph.deviceEnrollmentPlatformRestriction"
          }
        }
      },
      "microsoft.graph.deviceEnrollmentWindowsHelloForBusinessConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceEnrollmentConfiguration"
          },
          {
            "title": "deviceEnrollmentWindowsHelloForBusinessConfiguration",
            "type": "object",
            "properties": {
              "pinMinimumLength": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Not yet documented",
                "format": "int32",
                "nullable": true
              },
              "pinMaximumLength": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Not yet documented",
                "format": "int32",
                "nullable": true
              },
              "pinUppercaseCharactersUsage": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.windowsHelloForBusinessPinUsage"
                  }
                ],
                "description": "Not yet documented. Possible values are: allowed, required, disallowed.",
                "nullable": true
              },
              "pinLowercaseCharactersUsage": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.windowsHelloForBusinessPinUsage"
                  }
                ],
                "description": "Not yet documented. Possible values are: allowed, required, disallowed.",
                "nullable": true
              },
              "pinSpecialCharactersUsage": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.windowsHelloForBusinessPinUsage"
                  }
                ],
                "description": "Not yet documented. Possible values are: allowed, required, disallowed.",
                "nullable": true
              },
              "state": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.enablement"
                  }
                ],
                "description": "Not yet documented. Possible values are: notConfigured, enabled, disabled.",
                "nullable": true
              },
              "securityDeviceRequired": {
                "type": "boolean",
                "description": "Not yet documented",
                "nullable": true
              },
              "unlockWithBiometricsEnabled": {
                "type": "boolean",
                "description": "Not yet documented",
                "nullable": true
              },
              "remotePassportEnabled": {
                "type": "boolean",
                "description": "Not yet documented",
                "nullable": true
              },
              "pinPreviousBlockCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Not yet documented",
                "format": "int32",
                "nullable": true
              },
              "pinExpirationInDays": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Not yet documented",
                "format": "int32",
                "nullable": true
              },
              "enhancedBiometricsState": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.enablement"
                  }
                ],
                "description": "Not yet documented. Possible values are: notConfigured, enabled, disabled.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "displayName": "string",
          "description": "string",
          "priority": "integer",
          "createdDateTime": "string (timestamp)",
          "lastModifiedDateTime": "string (timestamp)",
          "version": "integer",
          "assignments": [
            {
              "@odata.type": "microsoft.graph.enrollmentConfigurationAssignment"
            }
          ],
          "pinMinimumLength": "integer",
          "pinMaximumLength": "integer",
          "pinUppercaseCharactersUsage": {
            "@odata.type": "microsoft.graph.windowsHelloForBusinessPinUsage"
          },
          "pinLowercaseCharactersUsage": {
            "@odata.type": "microsoft.graph.windowsHelloForBusinessPinUsage"
          },
          "pinSpecialCharactersUsage": {
            "@odata.type": "microsoft.graph.windowsHelloForBusinessPinUsage"
          },
          "state": {
            "@odata.type": "microsoft.graph.enablement"
          },
          "securityDeviceRequired": true,
          "unlockWithBiometricsEnabled": true,
          "remotePassportEnabled": true,
          "pinPreviousBlockCount": "integer",
          "pinExpirationInDays": "integer",
          "enhancedBiometricsState": {
            "@odata.type": "microsoft.graph.enablement"
          }
        }
      },
      "microsoft.graph.deviceManagementExchangeConnector": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "deviceManagementExchangeConnector",
            "type": "object",
            "properties": {
              "lastSyncDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Last sync time for the Exchange Connector",
                "format": "date-time",
                "nullable": true
              },
              "status": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceManagementExchangeConnectorStatus"
                  }
                ],
                "description": "Exchange Connector Status. Possible values are: none, connectionPending, connected, disconnected.",
                "nullable": true
              },
              "primarySmtpAddress": {
                "type": "string",
                "description": "Email address used to configure the Service To Service Exchange Connector.",
                "nullable": true
              },
              "serverName": {
                "type": "string",
                "description": "The name of the Exchange server.",
                "nullable": true
              },
              "connectorServerName": {
                "type": "string",
                "description": "The name of the server hosting the Exchange Connector.",
                "nullable": true
              },
              "exchangeConnectorType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceManagementExchangeConnectorType"
                  }
                ],
                "description": "The type of Exchange Connector Configured. Possible values are: onPremises, hosted, serviceToService, dedicated.",
                "nullable": true
              },
              "version": {
                "type": "string",
                "description": "The version of the ExchangeConnectorAgent",
                "nullable": true
              },
              "exchangeAlias": {
                "type": "string",
                "description": "An alias assigned to the Exchange server",
                "nullable": true
              },
              "exchangeOrganization": {
                "type": "string",
                "description": "Exchange Organization to the Exchange server",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "lastSyncDateTime": "string (timestamp)",
          "status": {
            "@odata.type": "microsoft.graph.deviceManagementExchangeConnectorStatus"
          },
          "primarySmtpAddress": "string",
          "serverName": "string",
          "connectorServerName": "string",
          "exchangeConnectorType": {
            "@odata.type": "microsoft.graph.deviceManagementExchangeConnectorType"
          },
          "version": "string",
          "exchangeAlias": "string",
          "exchangeOrganization": "string"
        }
      },
      "microsoft.graph.deviceManagementPartner": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "deviceManagementPartner",
            "type": "object",
            "properties": {
              "lastHeartbeatDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Timestamp of last heartbeat after admin enabled option Connect to Device management Partner",
                "format": "date-time",
                "nullable": true
              },
              "partnerState": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceManagementPartnerTenantState"
                  }
                ],
                "description": "Partner state of this tenant. Possible values are: unknown, unavailable, enabled, terminated, rejected, unresponsive.",
                "nullable": true
              },
              "partnerAppType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceManagementPartnerAppType"
                  }
                ],
                "description": "Partner App type. Possible values are: unknown, singleTenantApp, multiTenantApp.",
                "nullable": true
              },
              "singleTenantAppId": {
                "type": "string",
                "description": "Partner Single tenant App id",
                "nullable": true
              },
              "displayName": {
                "type": "string",
                "description": "Partner display name",
                "nullable": true
              },
              "isConfigured": {
                "type": "boolean",
                "description": "Whether device management partner is configured or not",
                "nullable": true
              },
              "whenPartnerDevicesWillBeRemovedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "DateTime in UTC when PartnerDevices will be removed",
                "format": "date-time",
                "nullable": true
              },
              "whenPartnerDevicesWillBeMarkedAsNonCompliantDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "DateTime in UTC when PartnerDevices will be marked as NonCompliant",
                "format": "date-time",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "lastHeartbeatDateTime": "string (timestamp)",
          "partnerState": {
            "@odata.type": "microsoft.graph.deviceManagementPartnerTenantState"
          },
          "partnerAppType": {
            "@odata.type": "microsoft.graph.deviceManagementPartnerAppType"
          },
          "singleTenantAppId": "string",
          "displayName": "string",
          "isConfigured": true,
          "whenPartnerDevicesWillBeRemovedDateTime": "string (timestamp)",
          "whenPartnerDevicesWillBeMarkedAsNonCompliantDateTime": "string (timestamp)"
        }
      },
      "microsoft.graph.enrollmentConfigurationAssignment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "enrollmentConfigurationAssignment",
            "type": "object",
            "properties": {
              "target": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceAndAppManagementAssignmentTarget"
                  }
                ],
                "description": "Not yet documented",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "target": {
            "@odata.type": "microsoft.graph.deviceAndAppManagementAssignmentTarget"
          }
        }
      },
      "microsoft.graph.mobileThreatDefenseConnector": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "mobileThreatDefenseConnector",
            "type": "object",
            "properties": {
              "lastHeartbeatDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "DateTime of last Heartbeat recieved from the Data Sync Partner",
                "format": "date-time",
                "nullable": true
              },
              "partnerState": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.mobileThreatPartnerTenantState"
                  }
                ],
                "description": "Data Sync Partner state for this account. Possible values are: unavailable, available, enabled, unresponsive.",
                "nullable": true
              },
              "androidEnabled": {
                "type": "boolean",
                "description": "For Android, set whether data from the data sync partner should be used during compliance evaluations",
                "nullable": true
              },
              "iosEnabled": {
                "type": "boolean",
                "description": "For IOS, get or set whether data from the data sync partner should be used during compliance evaluations",
                "nullable": true
              },
              "androidDeviceBlockedOnMissingPartnerData": {
                "type": "boolean",
                "description": "For Android, set whether Intune must receive data from the data sync partner prior to marking a device compliant",
                "nullable": true
              },
              "iosDeviceBlockedOnMissingPartnerData": {
                "type": "boolean",
                "description": "For IOS, set whether Intune must receive data from the data sync partner prior to marking a device compliant",
                "nullable": true
              },
              "partnerUnsupportedOsVersionBlocked": {
                "type": "boolean",
                "description": "Get or set whether to block devices on the enabled platforms that do not meet the minimum version requirements of the Data Sync Partner",
                "nullable": true
              },
              "partnerUnresponsivenessThresholdInDays": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Get or Set days the per tenant tolerance to unresponsiveness for this partner integration",
                "format": "int32",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "lastHeartbeatDateTime": "string (timestamp)",
          "partnerState": {
            "@odata.type": "microsoft.graph.mobileThreatPartnerTenantState"
          },
          "androidEnabled": true,
          "iosEnabled": true,
          "androidDeviceBlockedOnMissingPartnerData": true,
          "iosDeviceBlockedOnMissingPartnerData": true,
          "partnerUnsupportedOsVersionBlocked": true,
          "partnerUnresponsivenessThresholdInDays": "integer"
        }
      },
      "microsoft.graph.onPremisesConditionalAccessSettings": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "onPremisesConditionalAccessSettings",
            "type": "object",
            "properties": {
              "enabled": {
                "type": "boolean",
                "description": "Indicates if on premises conditional access is enabled for this organization",
                "nullable": true
              },
              "includedGroups": {
                "type": "array",
                "items": {
                  "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                  "type": "string",
                  "format": "uuid",
                  "nullable": true
                },
                "description": "User groups that will be targeted by on premises conditional access. All users in these groups will be required to have mobile device managed and compliant for mail access."
              },
              "excludedGroups": {
                "type": "array",
                "items": {
                  "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                  "type": "string",
                  "format": "uuid",
                  "nullable": true
                },
                "description": "User groups that will be exempt by on premises conditional access. All users in these groups will be exempt from the conditional access policy."
              },
              "overrideDefaultRule": {
                "type": "boolean",
                "description": "Override the default access rule when allowing a device to ensure access is granted.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "enabled": true,
          "includedGroups": [
            "string"
          ],
          "excludedGroups": [
            "string"
          ],
          "overrideDefaultRule": true
        }
      },
      "microsoft.graph.organization": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.directoryObject"
          },
          {
            "title": "organization",
            "type": "object",
            "properties": {
              "mobileDeviceManagementAuthority": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.mdmAuthority"
                  }
                ],
                "description": "Mobile device management authority. Possible values are: unknown, intune, sccm, office365.",
                "nullable": true
              },
              "assignedPlans": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.assignedPlan"
                    }
                  ],
                  "nullable": true
                },
                "description": "The collection of service plans associated with the tenant. Not nullable."
              },
              "businessPhones": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                }
              },
              "city": {
                "type": "string",
                "description": "City name of the address for the organization",
                "nullable": true
              },
              "companyLastDirSyncTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The time and date at which the tenant was last synced with the on-premise directory.The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'",
                "format": "date-time",
                "nullable": true
              },
              "country": {
                "type": "string",
                "description": "Country/region name of the address for the organization",
                "nullable": true
              },
              "countryLetterCode": {
                "type": "string",
                "description": "Country/region abbreviation for the organization",
                "nullable": true
              },
              "deletionTimestamp": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'",
                "format": "date-time",
                "nullable": true
              },
              "dirSyncEnabled": {
                "type": "boolean",
                "description": "true if this object is synced from an on-premises directory; false if this object was originally synced from an on-premises directory but is no longer synced; null if this object has never been synced from an on-premises directory (default).",
                "nullable": true
              },
              "displayName": {
                "type": "string",
                "description": "The display name for the tenant.",
                "nullable": true
              },
              "marketingNotificationEmails": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "Not nullable."
              },
              "objectType": {
                "type": "string",
                "description": "A string that identifies the object type. For tenants the value is always 'Company'.",
                "nullable": true
              },
              "onPremisesLastSyncDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "onPremisesSyncEnabled": {
                "type": "boolean",
                "nullable": true
              },
              "postalCode": {
                "type": "string",
                "description": "Postal code of the address for the organization",
                "nullable": true
              },
              "preferredLanguage": {
                "type": "string",
                "description": "The preferred language for the organization. Should follow ISO 639-1 Code; for example 'en'.",
                "nullable": true
              },
              "privacyProfile": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.privacyProfile"
                  }
                ],
                "description": "The privacy profile of an organization.",
                "nullable": true
              },
              "provisionedPlans": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.provisionedPlan"
                    }
                  ],
                  "nullable": true
                },
                "description": "Not nullable."
              },
              "securityComplianceNotificationMails": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                }
              },
              "securityComplianceNotificationPhones": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                }
              },
              "state": {
                "type": "string",
                "description": "State name of the address for the organization",
                "nullable": true
              },
              "street": {
                "type": "string",
                "description": "Street name of the address for organization",
                "nullable": true
              },
              "technicalNotificationMails": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "Not nullable."
              },
              "telephoneNumber": {
                "type": "string",
                "description": "Telephone number for the organization",
                "nullable": true
              },
              "verifiedDomains": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.verifiedDomain"
                    }
                  ],
                  "nullable": true
                },
                "description": "The collection of domains associated with this tenant. Not nullable."
              },
              "extensions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "mobileDeviceManagementAuthority": {
            "@odata.type": "microsoft.graph.mdmAuthority"
          },
          "assignedPlans": [
            {
              "@odata.type": "microsoft.graph.assignedPlan"
            }
          ],
          "businessPhones": [
            "string"
          ],
          "city": "string",
          "companyLastDirSyncTime": "string (timestamp)",
          "country": "string",
          "countryLetterCode": "string",
          "deletionTimestamp": "string (timestamp)",
          "dirSyncEnabled": true,
          "displayName": "string",
          "marketingNotificationEmails": [
            "string"
          ],
          "objectType": "string",
          "onPremisesLastSyncDateTime": "string (timestamp)",
          "onPremisesSyncEnabled": true,
          "postalCode": "string",
          "preferredLanguage": "string",
          "privacyProfile": {
            "@odata.type": "microsoft.graph.privacyProfile"
          },
          "provisionedPlans": [
            {
              "@odata.type": "microsoft.graph.provisionedPlan"
            }
          ],
          "securityComplianceNotificationMails": [
            "string"
          ],
          "securityComplianceNotificationPhones": [
            "string"
          ],
          "state": "string",
          "street": "string",
          "technicalNotificationMails": [
            "string"
          ],
          "telephoneNumber": "string",
          "verifiedDomains": [
            {
              "@odata.type": "microsoft.graph.verifiedDomain"
            }
          ],
          "extensions": [
            {
              "@odata.type": "microsoft.graph.extension"
            }
          ]
        }
      },
      "microsoft.graph.vppToken": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "vppToken",
            "type": "object",
            "properties": {
              "organizationName": {
                "type": "string",
                "description": "The organization associated with the Apple Volume Purchase Program Token",
                "nullable": true
              },
              "vppTokenAccountType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.vppTokenAccountType"
                  }
                ],
                "description": "The type of volume purchase program which the given Apple Volume Purchase Program Token is associated with. Possible values are: business, education. Possible values are: business, education.",
                "nullable": true
              },
              "appleId": {
                "type": "string",
                "description": "The apple Id associated with the given Apple Volume Purchase Program Token.",
                "nullable": true
              },
              "expirationDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The expiration date time of the Apple Volume Purchase Program Token.",
                "format": "date-time",
                "nullable": true
              },
              "lastSyncDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The last time when an application sync was done with the Apple volume purchase program service using the the Apple Volume Purchase Program Token.",
                "format": "date-time",
                "nullable": true
              },
              "token": {
                "type": "string",
                "description": "The Apple Volume Purchase Program Token string downloaded from the Apple Volume Purchase Program.",
                "nullable": true
              },
              "lastModifiedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Last modification date time associated with the Apple Volume Purchase Program Token.",
                "format": "date-time",
                "nullable": true
              },
              "state": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.vppTokenState"
                  }
                ],
                "description": "Current state of the Apple Volume Purchase Program Token. Possible values are: unknown, valid, expired, invalid, assignedToExternalMDM. Possible values are: unknown, valid, expired, invalid, assignedToExternalMDM.",
                "nullable": true
              },
              "lastSyncStatus": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.vppTokenSyncStatus"
                  }
                ],
                "description": "Current sync status of the last application sync which was triggered using the Apple Volume Purchase Program Token. Possible values are: none, inProgress, completed, failed. Possible values are: none, inProgress, completed, failed.",
                "nullable": true
              },
              "automaticallyUpdateApps": {
                "type": "boolean",
                "description": "Whether or not apps for the VPP token will be automatically updated.",
                "nullable": true
              },
              "countryOrRegion": {
                "type": "string",
                "description": "Whether or not apps for the VPP token will be automatically updated.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "organizationName": "string",
          "vppTokenAccountType": {
            "@odata.type": "microsoft.graph.vppTokenAccountType"
          },
          "appleId": "string",
          "expirationDateTime": "string (timestamp)",
          "lastSyncDateTime": "string (timestamp)",
          "token": "string",
          "lastModifiedDateTime": "string (timestamp)",
          "state": {
            "@odata.type": "microsoft.graph.vppTokenState"
          },
          "lastSyncStatus": {
            "@odata.type": "microsoft.graph.vppTokenSyncStatus"
          },
          "automaticallyUpdateApps": true,
          "countryOrRegion": "string"
        }
      },
      "microsoft.graph.roleAssignment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "roleAssignment",
            "type": "object",
            "properties": {
              "displayName": {
                "type": "string",
                "description": "The display or friendly name of the role Assignment.",
                "nullable": true
              },
              "description": {
                "type": "string",
                "description": "Description of the Role Assignment.",
                "nullable": true
              },
              "resourceScopes": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "List of ids of role scope member security groups.  These are IDs from Azure Active Directory."
              },
              "roleDefinition": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.roleDefinition"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "displayName": "string",
          "description": "string",
          "resourceScopes": [
            "string"
          ],
          "roleDefinition": {
            "@odata.type": "microsoft.graph.roleDefinition"
          }
        }
      },
      "microsoft.graph.deviceAndAppManagementRoleAssignment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.roleAssignment"
          },
          {
            "title": "deviceAndAppManagementRoleAssignment",
            "type": "object",
            "properties": {
              "members": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "The list of ids of role member security groups. These are IDs from Azure Active Directory."
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "displayName": "string",
          "description": "string",
          "resourceScopes": [
            "string"
          ],
          "roleDefinition": {
            "@odata.type": "microsoft.graph.roleDefinition"
          },
          "members": [
            "string"
          ]
        }
      },
      "microsoft.graph.roleDefinition": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "roleDefinition",
            "type": "object",
            "properties": {
              "displayName": {
                "type": "string",
                "description": "Display Name of the Role definition.",
                "nullable": true
              },
              "description": {
                "type": "string",
                "description": "Description of the Role definition.",
                "nullable": true
              },
              "rolePermissions": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.rolePermission"
                    }
                  ],
                  "nullable": true
                },
                "description": "List of Role Permissions this role is allowed to perform. These must match the actionName that is defined as part of the rolePermission."
              },
              "isBuiltIn": {
                "type": "boolean",
                "description": "Type of Role. Set to True if it is built-in, or set to False if it is a custom role definition.",
                "nullable": true
              },
              "roleAssignments": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.roleAssignment"
                }
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "displayName": "string",
          "description": "string",
          "rolePermissions": [
            {
              "@odata.type": "microsoft.graph.rolePermission"
            }
          ],
          "isBuiltIn": true,
          "roleAssignments": [
            {
              "@odata.type": "microsoft.graph.roleAssignment"
            }
          ]
        }
      },
      "microsoft.graph.deviceAndAppManagementRoleDefinition": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.roleDefinition"
          },
          {
            "title": "deviceAndAppManagementRoleDefinition",
            "type": "object"
          }
        ],
        "example": {
          "id": "string (identifier)",
          "displayName": "string",
          "description": "string",
          "rolePermissions": [
            {
              "@odata.type": "microsoft.graph.rolePermission"
            }
          ],
          "isBuiltIn": true,
          "roleAssignments": [
            {
              "@odata.type": "microsoft.graph.roleAssignment"
            }
          ]
        }
      },
      "microsoft.graph.resourceOperation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "resourceOperation",
            "type": "object",
            "properties": {
              "resourceName": {
                "type": "string",
                "description": "Name of the Resource this operation is performed on.",
                "nullable": true
              },
              "actionName": {
                "type": "string",
                "description": "Type of action this operation is going to perform. The actionName should be concise and limited to as few words as possible.",
                "nullable": true
              },
              "description": {
                "type": "string",
                "description": "Description of the resource operation. The description is used in mouse-over text for the operation when shown in the Azure Portal.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "resourceName": "string",
          "actionName": "string",
          "description": "string"
        }
      },
      "microsoft.graph.remoteAssistancePartner": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "remoteAssistancePartner",
            "type": "object",
            "properties": {
              "displayName": {
                "type": "string",
                "description": "Display name of the partner.",
                "nullable": true
              },
              "onboardingUrl": {
                "type": "string",
                "description": "URL of the partner's onboarding portal, where an administrator can configure their Remote Assistance service.",
                "nullable": true
              },
              "onboardingStatus": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.remoteAssistanceOnboardingStatus"
                  }
                ],
                "description": "TBD. Possible values are: notOnboarded, onboarding, onboarded.",
                "nullable": true
              },
              "lastConnectionDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Timestamp of the last request sent to Intune by the TEM partner.",
                "format": "date-time",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "displayName": "string",
          "onboardingUrl": "string",
          "onboardingStatus": {
            "@odata.type": "microsoft.graph.remoteAssistanceOnboardingStatus"
          },
          "lastConnectionDateTime": "string (timestamp)"
        }
      },
      "microsoft.graph.deviceAppManagement": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "deviceAppManagement",
            "type": "object",
            "properties": {
              "microsoftStoreForBusinessLastSuccessfulSyncDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The last time the apps from the Microsoft Store for Business were synced successfully for the account.",
                "format": "date-time",
                "nullable": true
              },
              "isEnabledForMicrosoftStoreForBusiness": {
                "type": "boolean",
                "description": "Whether the account is enabled for syncing applications from the Microsoft Store for Business.",
                "nullable": true
              },
              "microsoftStoreForBusinessLanguage": {
                "type": "string",
                "description": "The locale information used to sync applications from the Microsoft Store for Business. Cultures that are specific to a country/region. The names of these cultures follow RFC 4646 (Windows Vista and later). The format is -<country/regioncode2>, where  is a lowercase two-letter code derived from ISO 639-1 and <country/regioncode2> is an uppercase two-letter code derived from ISO 3166. For example, en-US for English (United States) is a specific culture.",
                "nullable": true
              },
              "microsoftStoreForBusinessLastCompletedApplicationSyncTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The last time an application sync from the Microsoft Store for Business was completed.",
                "format": "date-time",
                "nullable": true
              },
              "mobileAppCategories": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.mobileAppCategory"
                }
              },
              "mobileAppConfigurations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.managedDeviceMobileAppConfiguration"
                }
              },
              "mobileApps": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.mobileApp"
                }
              },
              "managedEBooks": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.managedEBook"
                }
              },
              "androidManagedAppProtections": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.androidManagedAppProtection"
                }
              },
              "defaultManagedAppProtections": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.defaultManagedAppProtection"
                }
              },
              "iosManagedAppProtections": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.iosManagedAppProtection"
                }
              },
              "managedAppPolicies": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.managedAppPolicy"
                }
              },
              "managedAppRegistrations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.managedAppRegistration"
                }
              },
              "managedAppStatuses": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.managedAppStatus"
                }
              },
              "mdmWindowsInformationProtectionPolicies": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.mdmWindowsInformationProtectionPolicy"
                }
              },
              "targetedManagedAppConfigurations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.targetedManagedAppConfiguration"
                }
              },
              "windowsInformationProtectionPolicies": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.windowsInformationProtectionPolicy"
                }
              },
              "vppTokens": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.vppToken"
                }
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "microsoftStoreForBusinessLastSuccessfulSyncDateTime": "string (timestamp)",
          "isEnabledForMicrosoftStoreForBusiness": true,
          "microsoftStoreForBusinessLanguage": "string",
          "microsoftStoreForBusinessLastCompletedApplicationSyncTime": "string (timestamp)",
          "mobileAppCategories": [
            {
              "@odata.type": "microsoft.graph.mobileAppCategory"
            }
          ],
          "mobileAppConfigurations": [
            {
              "@odata.type": "microsoft.graph.managedDeviceMobileAppConfiguration"
            }
          ],
          "mobileApps": [
            {
              "@odata.type": "microsoft.graph.mobileApp"
            }
          ],
          "managedEBooks": [
            {
              "@odata.type": "microsoft.graph.managedEBook"
            }
          ],
          "androidManagedAppProtections": [
            {
              "@odata.type": "microsoft.graph.androidManagedAppProtection"
            }
          ],
          "defaultManagedAppProtections": [
            {
              "@odata.type": "microsoft.graph.defaultManagedAppProtection"
            }
          ],
          "iosManagedAppProtections": [
            {
              "@odata.type": "microsoft.graph.iosManagedAppProtection"
            }
          ],
          "managedAppPolicies": [
            {
              "@odata.type": "microsoft.graph.managedAppPolicy"
            }
          ],
          "managedAppRegistrations": [
            {
              "@odata.type": "microsoft.graph.managedAppRegistration"
            }
          ],
          "managedAppStatuses": [
            {
              "@odata.type": "microsoft.graph.managedAppStatus"
            }
          ],
          "mdmWindowsInformationProtectionPolicies": [
            {
              "@odata.type": "microsoft.graph.mdmWindowsInformationProtectionPolicy"
            }
          ],
          "targetedManagedAppConfigurations": [
            {
              "@odata.type": "microsoft.graph.targetedManagedAppConfiguration"
            }
          ],
          "windowsInformationProtectionPolicies": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionPolicy"
            }
          ],
          "vppTokens": [
            {
              "@odata.type": "microsoft.graph.vppToken"
            }
          ]
        }
      },
      "microsoft.graph.deviceCategory": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "deviceCategory",
            "type": "object",
            "properties": {
              "displayName": {
                "type": "string",
                "description": "Display name for the device category.",
                "nullable": true
              },
              "description": {
                "type": "string",
                "description": "Optional description for the device category.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "displayName": "string",
          "description": "string"
        }
      },
      "microsoft.graph.deviceManagement": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "deviceManagement",
            "type": "object",
            "properties": {
              "intuneBrand": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.intuneBrand"
                  }
                ],
                "description": "intuneBrand contains data which is used in customizing the appearance of the Company Portal applications as well as the end user web portal.",
                "nullable": true
              },
              "subscriptionState": {
                "type": "string",
                "description": "Tenant mobile device management subscription state. The possible values are: pending, active, warning, disabled, deleted, blocked, lockedOut.",
                "nullable": true
              },
              "settings": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceManagementSettings"
                  }
                ],
                "description": "Account level settings.",
                "nullable": true
              },
              "auditEvents": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.auditEvent"
                }
              },
              "termsAndConditions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.termsAndConditions"
                }
              },
              "deviceCompliancePolicies": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.deviceCompliancePolicy"
                }
              },
              "deviceCompliancePolicyDeviceStateSummary": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceCompliancePolicyDeviceStateSummary"
                  }
                ],
                "nullable": true
              },
              "deviceCompliancePolicySettingStateSummaries": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.deviceCompliancePolicySettingStateSummary"
                }
              },
              "deviceConfigurationDeviceStateSummaries": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceConfigurationDeviceStateSummary"
                  }
                ],
                "nullable": true
              },
              "deviceConfigurations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.deviceConfiguration"
                }
              },
              "iosUpdateStatuses": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.iosUpdateDeviceStatus"
                }
              },
              "softwareUpdateStatusSummary": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.softwareUpdateStatusSummary"
                  }
                ],
                "nullable": true
              },
              "applePushNotificationCertificate": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.applePushNotificationCertificate"
                  }
                ],
                "nullable": true
              },
              "detectedApps": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.detectedApp"
                }
              },
              "managedDeviceOverview": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.managedDeviceOverview"
                  }
                ],
                "nullable": true
              },
              "managedDevices": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.managedDevice"
                }
              },
              "importedWindowsAutopilotDeviceIdentities": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.importedWindowsAutopilotDeviceIdentity"
                }
              },
              "importedWindowsAutopilotDeviceIdentityUploads": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.importedWindowsAutopilotDeviceIdentityUpload"
                }
              },
              "notificationMessageTemplates": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.notificationMessageTemplate"
                }
              },
              "conditionalAccessSettings": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.onPremisesConditionalAccessSettings"
                  }
                ],
                "nullable": true
              },
              "deviceCategories": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.deviceCategory"
                }
              },
              "deviceEnrollmentConfigurations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.deviceEnrollmentConfiguration"
                }
              },
              "deviceManagementPartners": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.deviceManagementPartner"
                }
              },
              "exchangeConnectors": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.deviceManagementExchangeConnector"
                }
              },
              "mobileThreatDefenseConnectors": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.mobileThreatDefenseConnector"
                }
              },
              "resourceOperations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.resourceOperation"
                }
              },
              "roleAssignments": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.deviceAndAppManagementRoleAssignment"
                }
              },
              "roleDefinitions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.roleDefinition"
                }
              },
              "remoteAssistancePartners": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.remoteAssistancePartner"
                }
              },
              "telecomExpenseManagementPartners": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.telecomExpenseManagementPartner"
                }
              },
              "troubleshootingEvents": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.deviceManagementTroubleshootingEvent"
                }
              },
              "windowsInformationProtectionAppLearningSummaries": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.windowsInformationProtectionAppLearningSummary"
                }
              },
              "windowsInformationProtectionNetworkLearningSummaries": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.windowsInformationProtectionNetworkLearningSummary"
                }
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "intuneBrand": {
            "@odata.type": "microsoft.graph.intuneBrand"
          },
          "subscriptionState": "string",
          "settings": {
            "@odata.type": "microsoft.graph.deviceManagementSettings"
          },
          "auditEvents": [
            {
              "@odata.type": "microsoft.graph.auditEvent"
            }
          ],
          "termsAndConditions": [
            {
              "@odata.type": "microsoft.graph.termsAndConditions"
            }
          ],
          "deviceCompliancePolicies": [
            {
              "@odata.type": "microsoft.graph.deviceCompliancePolicy"
            }
          ],
          "deviceCompliancePolicyDeviceStateSummary": {
            "@odata.type": "microsoft.graph.deviceCompliancePolicyDeviceStateSummary"
          },
          "deviceCompliancePolicySettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.deviceCompliancePolicySettingStateSummary"
            }
          ],
          "deviceConfigurationDeviceStateSummaries": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceStateSummary"
          },
          "deviceConfigurations": [
            {
              "@odata.type": "microsoft.graph.deviceConfiguration"
            }
          ],
          "iosUpdateStatuses": [
            {
              "@odata.type": "microsoft.graph.iosUpdateDeviceStatus"
            }
          ],
          "softwareUpdateStatusSummary": {
            "@odata.type": "microsoft.graph.softwareUpdateStatusSummary"
          },
          "applePushNotificationCertificate": {
            "@odata.type": "microsoft.graph.applePushNotificationCertificate"
          },
          "detectedApps": [
            {
              "@odata.type": "microsoft.graph.detectedApp"
            }
          ],
          "managedDeviceOverview": {
            "@odata.type": "microsoft.graph.managedDeviceOverview"
          },
          "managedDevices": [
            {
              "@odata.type": "microsoft.graph.managedDevice"
            }
          ],
          "importedWindowsAutopilotDeviceIdentities": [
            {
              "@odata.type": "microsoft.graph.importedWindowsAutopilotDeviceIdentity"
            }
          ],
          "importedWindowsAutopilotDeviceIdentityUploads": [
            {
              "@odata.type": "microsoft.graph.importedWindowsAutopilotDeviceIdentityUpload"
            }
          ],
          "notificationMessageTemplates": [
            {
              "@odata.type": "microsoft.graph.notificationMessageTemplate"
            }
          ],
          "conditionalAccessSettings": {
            "@odata.type": "microsoft.graph.onPremisesConditionalAccessSettings"
          },
          "deviceCategories": [
            {
              "@odata.type": "microsoft.graph.deviceCategory"
            }
          ],
          "deviceEnrollmentConfigurations": [
            {
              "@odata.type": "microsoft.graph.deviceEnrollmentConfiguration"
            }
          ],
          "deviceManagementPartners": [
            {
              "@odata.type": "microsoft.graph.deviceManagementPartner"
            }
          ],
          "exchangeConnectors": [
            {
              "@odata.type": "microsoft.graph.deviceManagementExchangeConnector"
            }
          ],
          "mobileThreatDefenseConnectors": [
            {
              "@odata.type": "microsoft.graph.mobileThreatDefenseConnector"
            }
          ],
          "resourceOperations": [
            {
              "@odata.type": "microsoft.graph.resourceOperation"
            }
          ],
          "roleAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceAndAppManagementRoleAssignment"
            }
          ],
          "roleDefinitions": [
            {
              "@odata.type": "microsoft.graph.roleDefinition"
            }
          ],
          "remoteAssistancePartners": [
            {
              "@odata.type": "microsoft.graph.remoteAssistancePartner"
            }
          ],
          "telecomExpenseManagementPartners": [
            {
              "@odata.type": "microsoft.graph.telecomExpenseManagementPartner"
            }
          ],
          "troubleshootingEvents": [
            {
              "@odata.type": "microsoft.graph.deviceManagementTroubleshootingEvent"
            }
          ],
          "windowsInformationProtectionAppLearningSummaries": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionAppLearningSummary"
            }
          ],
          "windowsInformationProtectionNetworkLearningSummaries": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionNetworkLearningSummary"
            }
          ]
        }
      },
      "microsoft.graph.reportRoot": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "reportRoot",
            "type": "object"
          }
        ],
        "example": {
          "id": "string (identifier)"
        }
      },
      "microsoft.graph.user": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.directoryObject"
          },
          {
            "title": "user",
            "type": "object",
            "properties": {
              "deviceEnrollmentLimit": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The limit on the maximum number of devices that the user is permitted to enroll. Allowed values are 5 or 1000.",
                "format": "int32",
                "nullable": true
              },
              "aboutMe": {
                "type": "string",
                "description": "A freeform text entry field for the user to describe themselves.",
                "nullable": true
              },
              "accountEnabled": {
                "type": "boolean",
                "description": "true if the account is enabled; otherwise, false. This property is required when a user is created. Supports $filter.",
                "nullable": true
              },
              "ageGroup": {
                "type": "string",
                "description": "Sets the age group of the user. Allowed values: null, minor, notAdult and adult. Refer to the legal age group property definitions for further information.",
                "nullable": true
              },
              "assignedLicenses": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.assignedLicense"
                    }
                  ],
                  "nullable": true
                },
                "description": "The licenses that are assigned to the user. Not nullable."
              },
              "assignedPlans": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.assignedPlan"
                    }
                  ],
                  "nullable": true
                },
                "description": "The plans that are assigned to the user. Read-only. Not nullable."
              },
              "birthday": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The birthday of the user. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'",
                "format": "date-time",
                "nullable": true
              },
              "businessPhones": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "The telephone numbers for the user. NOTE: Although this is a string collection, only one number can be set for this property."
              },
              "city": {
                "type": "string",
                "description": "The city in which the user is located. Supports $filter.",
                "nullable": true
              },
              "companyName": {
                "type": "string",
                "description": "The company name which the user is associated. Read-only.",
                "nullable": true
              },
              "consentProvidedForMinor": {
                "type": "string",
                "description": "Sets whether consent has been obtained for minors. Allowed values: null, granted, denied and notRequired. Refer to the legal age group property definitions for further information.",
                "nullable": true
              },
              "country": {
                "type": "string",
                "description": "The country/region in which the user is located; for example, 'US' or 'UK'. Supports $filter.",
                "nullable": true
              },
              "department": {
                "type": "string",
                "description": "The name for the department in which the user works. Supports $filter.",
                "nullable": true
              },
              "displayName": {
                "type": "string",
                "description": "The name displayed in the address book for the user. This is usually the combination of the user's first name, middle initial and last name. This property is required when a user is created and it cannot be cleared during updates. Supports $filter and $orderby.",
                "nullable": true
              },
              "givenName": {
                "type": "string",
                "description": "The given name (first name) of the user. Supports $filter.",
                "nullable": true
              },
              "hireDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The hire date of the user. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'",
                "format": "date-time",
                "nullable": true
              },
              "imAddresses": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "The instant message voice over IP (VOIP) session initiation protocol (SIP) addresses for the user. Read-only."
              },
              "interests": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "A list for the user to describe their interests."
              },
              "jobTitle": {
                "type": "string",
                "description": "The user’s job title. Supports $filter.",
                "nullable": true
              },
              "legalAgeGroupClassification": {
                "type": "string",
                "description": "Used by enterprise applications to determine the legal age group of the user. This property is read-only and calculated based on ageGroup and consentProvidedForMinor properties. Allowed values: null, minorWithOutParentalConsent, minorWithParentalConsent, minorNoParentalConsentRequired, notAdult and adult. Refer to the legal age group property definitions for further information.)",
                "nullable": true
              },
              "mail": {
                "type": "string",
                "description": "The SMTP address for the user, for example, 'jeff@contoso.onmicrosoft.com'. Read-Only. Supports $filter.",
                "nullable": true
              },
              "mailboxSettings": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.mailboxSettings"
                  }
                ],
                "description": "Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale and time zone.",
                "nullable": true
              },
              "mailNickname": {
                "type": "string",
                "description": "The mail alias for the user. This property must be specified when a user is created. Supports $filter.",
                "nullable": true
              },
              "mobilePhone": {
                "type": "string",
                "description": "The primary cellular telephone number for the user.",
                "nullable": true
              },
              "mySite": {
                "type": "string",
                "description": "The URL for the user's personal site.",
                "nullable": true
              },
              "officeLocation": {
                "type": "string",
                "description": "The office location in the user's place of business.",
                "nullable": true
              },
              "onPremisesDomainName": {
                "type": "string",
                "description": "Contains the on-premises domainFQDN, also called dnsDomainName synchronized from the on-premises directory. The property is only populated for customers who are synchronizing their on-premises directory to Azure Active Directory via Azure AD Connect. Read-only.",
                "nullable": true
              },
              "onPremisesExtensionAttributes": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.onPremisesExtensionAttributes"
                  }
                ],
                "description": "Contains extensionAttributes 1-15 for the user. Note that the individual extension attributes are neither selectable nor filterable. For an onPremisesSyncEnabled user, this set of properties is mastered on-premises and is read-only. For a cloud-only user (where onPremisesSyncEnabled is false), these properties may be set during creation or update.",
                "nullable": true
              },
              "onPremisesImmutableId": {
                "type": "string",
                "description": "This property is used to associate an on-premises Active Directory user account to their Azure AD user object. This property must be specified when creating a new user account in the Graph if you are using a federated domain for the user’s userPrincipalName (UPN) property. Important: The $ and  characters cannot be used when specifying this property. Supports $filter.",
                "nullable": true
              },
              "onPremisesLastSyncDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Indicates the last time at which the object was synced with the on-premises directory; for example: '2013-02-16T03:04:54Z'. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'. Read-only.",
                "format": "date-time",
                "nullable": true
              },
              "onPremisesProvisioningErrors": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.onPremisesProvisioningError"
                    }
                  ],
                  "nullable": true
                },
                "description": "Errors when using Microsoft synchronization product during provisioning."
              },
              "onPremisesSamAccountName": {
                "type": "string",
                "description": "Contains the on-premises samAccountName synchronized from the on-premises directory. The property is only populated for customers who are synchronizing their on-premises directory to Azure Active Directory via Azure AD Connect. Read-only.",
                "nullable": true
              },
              "onPremisesSecurityIdentifier": {
                "type": "string",
                "description": "Contains the on-premises security identifier (SID) for the user that was synchronized from on-premises to the cloud. Read-only.",
                "nullable": true
              },
              "onPremisesSyncEnabled": {
                "type": "boolean",
                "description": "true if this object is synced from an on-premises directory; false if this object was originally synced from an on-premises directory but is no longer synced; null if this object has never been synced from an on-premises directory (default). Read-only",
                "nullable": true
              },
              "onPremisesUserPrincipalName": {
                "type": "string",
                "description": "Contains the on-premises userPrincipalName synchronized from the on-premises directory. The property is only populated for customers who are synchronizing their on-premises directory to Azure Active Directory via Azure AD Connect. Read-only.",
                "nullable": true
              },
              "passwordPolicies": {
                "type": "string",
                "description": "Specifies password policies for the user. This value is an enumeration with one possible value being 'DisableStrongPassword', which allows weaker passwords than the default policy to be specified. 'DisablePasswordExpiration' can also be specified. The two may be specified together; for example: 'DisablePasswordExpiration, DisableStrongPassword'.",
                "nullable": true
              },
              "passwordProfile": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.passwordProfile"
                  }
                ],
                "description": "Specifies the password profile for the user. The profile contains the user’s password. This property is required when a user is created. The password in the profile must satisfy minimum requirements as specified by the passwordPolicies property. By default, a strong password is required.",
                "nullable": true
              },
              "pastProjects": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "A list for the user to enumerate their past projects."
              },
              "postalCode": {
                "type": "string",
                "description": "The postal code for the user's postal address. The postal code is specific to the user's country/region. In the United States of America, this attribute contains the ZIP code.",
                "nullable": true
              },
              "preferredLanguage": {
                "type": "string",
                "description": "The preferred language for the user. Should follow ISO 639-1 Code; for example 'en-US'.",
                "nullable": true
              },
              "preferredName": {
                "type": "string",
                "description": "The preferred name for the user.",
                "nullable": true
              },
              "provisionedPlans": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.provisionedPlan"
                    }
                  ],
                  "nullable": true
                },
                "description": "The plans that are provisioned for the user. Read-only. Not nullable."
              },
              "proxyAddresses": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "For example: ['SMTP: bob@contoso.com', 'smtp: bob@sales.contoso.com'] The any operator is required for filter expressions on multi-valued properties. Read-only, Not nullable. Supports $filter."
              },
              "responsibilities": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "A list for the user to enumerate their responsibilities."
              },
              "schools": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "A list for the user to enumerate the schools they have attended."
              },
              "skills": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "A list for the user to enumerate their skills."
              },
              "state": {
                "type": "string",
                "description": "The state or province in the user's address. Supports $filter.",
                "nullable": true
              },
              "streetAddress": {
                "type": "string",
                "description": "The street address of the user's place of business.",
                "nullable": true
              },
              "surname": {
                "type": "string",
                "description": "The user's surname (family name or last name). Supports $filter.",
                "nullable": true
              },
              "usageLocation": {
                "type": "string",
                "description": "A two letter country code (ISO standard 3166). Required for users that will be assigned licenses due to legal requirement to check for availability of services in countries.  Examples include: 'US', 'JP', and 'GB'. Not nullable. Supports $filter.",
                "nullable": true
              },
              "userPrincipalName": {
                "type": "string",
                "description": "The user principal name (UPN) of the user. The UPN is an Internet-style login name for the user based on the Internet standard RFC 822. By convention, this should map to the user's email name. The general format is alias@domain, where domain must be present in the tenant’s collection of verified domains. This property is required when a user is created. The verified domains for the tenant can be accessed from the verifiedDomains property of organization. Supports $filter and $orderby.",
                "nullable": true
              },
              "userType": {
                "type": "string",
                "description": "A string value that can be used to classify user types in your directory, such as 'Member' and 'Guest'. Supports $filter.",
                "nullable": true
              },
              "managedDevices": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.managedDevice"
                }
              },
              "managedAppRegistrations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.managedAppRegistration"
                }
              },
              "deviceManagementTroubleshootingEvents": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.deviceManagementTroubleshootingEvent"
                }
              },
              "calendar": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.calendar"
                  }
                ],
                "nullable": true
              },
              "calendarGroups": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.calendarGroup"
                }
              },
              "calendarView": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.event"
                }
              },
              "calendars": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.calendar"
                }
              },
              "contacts": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.contact"
                }
              },
              "contactFolders": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.contactFolder"
                }
              },
              "createdObjects": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              },
              "directReports": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              },
              "drive": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.drive"
                  }
                ],
                "nullable": true
              },
              "drives": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.drive"
                }
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.event"
                }
              },
              "inferenceClassification": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.inferenceClassification"
                  }
                ],
                "nullable": true
              },
              "mailFolders": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.mailFolder"
                }
              },
              "manager": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                  }
                ],
                "nullable": true
              },
              "memberOf": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              },
              "messages": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.message"
                }
              },
              "outlook": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.outlookUser"
                  }
                ],
                "nullable": true
              },
              "ownedDevices": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              },
              "ownedObjects": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              },
              "photo": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.profilePhoto"
                  }
                ],
                "nullable": true
              },
              "registeredDevices": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                }
              },
              "activities": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.userActivity"
                }
              },
              "extensions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              },
              "licenseDetails": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.licenseDetails"
                }
              },
              "onenote": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.onenote"
                  }
                ],
                "nullable": true
              },
              "people": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.person"
                }
              },
              "planner": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.plannerUser"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "deviceEnrollmentLimit": "integer",
          "aboutMe": "string",
          "accountEnabled": true,
          "ageGroup": "string",
          "assignedLicenses": [
            {
              "@odata.type": "microsoft.graph.assignedLicense"
            }
          ],
          "assignedPlans": [
            {
              "@odata.type": "microsoft.graph.assignedPlan"
            }
          ],
          "birthday": "string (timestamp)",
          "businessPhones": [
            "string"
          ],
          "city": "string",
          "companyName": "string",
          "consentProvidedForMinor": "string",
          "country": "string",
          "department": "string",
          "displayName": "string",
          "givenName": "string",
          "hireDate": "string (timestamp)",
          "imAddresses": [
            "string"
          ],
          "interests": [
            "string"
          ],
          "jobTitle": "string",
          "legalAgeGroupClassification": "string",
          "mail": "string",
          "mailboxSettings": {
            "@odata.type": "microsoft.graph.mailboxSettings"
          },
          "mailNickname": "string",
          "mobilePhone": "string",
          "mySite": "string",
          "officeLocation": "string",
          "onPremisesDomainName": "string",
          "onPremisesExtensionAttributes": {
            "@odata.type": "microsoft.graph.onPremisesExtensionAttributes"
          },
          "onPremisesImmutableId": "string",
          "onPremisesLastSyncDateTime": "string (timestamp)",
          "onPremisesProvisioningErrors": [
            {
              "@odata.type": "microsoft.graph.onPremisesProvisioningError"
            }
          ],
          "onPremisesSamAccountName": "string",
          "onPremisesSecurityIdentifier": "string",
          "onPremisesSyncEnabled": true,
          "onPremisesUserPrincipalName": "string",
          "passwordPolicies": "string",
          "passwordProfile": {
            "@odata.type": "microsoft.graph.passwordProfile"
          },
          "pastProjects": [
            "string"
          ],
          "postalCode": "string",
          "preferredLanguage": "string",
          "preferredName": "string",
          "provisionedPlans": [
            {
              "@odata.type": "microsoft.graph.provisionedPlan"
            }
          ],
          "proxyAddresses": [
            "string"
          ],
          "responsibilities": [
            "string"
          ],
          "schools": [
            "string"
          ],
          "skills": [
            "string"
          ],
          "state": "string",
          "streetAddress": "string",
          "surname": "string",
          "usageLocation": "string",
          "userPrincipalName": "string",
          "userType": "string",
          "managedDevices": [
            {
              "@odata.type": "microsoft.graph.managedDevice"
            }
          ],
          "managedAppRegistrations": [
            {
              "@odata.type": "microsoft.graph.managedAppRegistration"
            }
          ],
          "deviceManagementTroubleshootingEvents": [
            {
              "@odata.type": "microsoft.graph.deviceManagementTroubleshootingEvent"
            }
          ],
          "calendar": {
            "@odata.type": "microsoft.graph.calendar"
          },
          "calendarGroups": [
            {
              "@odata.type": "microsoft.graph.calendarGroup"
            }
          ],
          "calendarView": [
            {
              "@odata.type": "microsoft.graph.event"
            }
          ],
          "calendars": [
            {
              "@odata.type": "microsoft.graph.calendar"
            }
          ],
          "contacts": [
            {
              "@odata.type": "microsoft.graph.contact"
            }
          ],
          "contactFolders": [
            {
              "@odata.type": "microsoft.graph.contactFolder"
            }
          ],
          "createdObjects": [
            {
              "@odata.type": "microsoft.graph.directoryObject"
            }
          ],
          "directReports": [
            {
              "@odata.type": "microsoft.graph.directoryObject"
            }
          ],
          "drive": {
            "@odata.type": "microsoft.graph.drive"
          },
          "drives": [
            {
              "@odata.type": "microsoft.graph.drive"
            }
          ],
          "events": [
            {
              "@odata.type": "microsoft.graph.event"
            }
          ],
          "inferenceClassification": {
            "@odata.type": "microsoft.graph.inferenceClassification"
          },
          "mailFolders": [
            {
              "@odata.type": "microsoft.graph.mailFolder"
            }
          ],
          "manager": {
            "@odata.type": "microsoft.graph.directoryObject"
          },
          "memberOf": [
            {
              "@odata.type": "microsoft.graph.directoryObject"
            }
          ],
          "messages": [
            {
              "@odata.type": "microsoft.graph.message"
            }
          ],
          "outlook": {
            "@odata.type": "microsoft.graph.outlookUser"
          },
          "ownedDevices": [
            {
              "@odata.type": "microsoft.graph.directoryObject"
            }
          ],
          "ownedObjects": [
            {
              "@odata.type": "microsoft.graph.directoryObject"
            }
          ],
          "photo": {
            "@odata.type": "microsoft.graph.profilePhoto"
          },
          "registeredDevices": [
            {
              "@odata.type": "microsoft.graph.directoryObject"
            }
          ],
          "activities": [
            {
              "@odata.type": "microsoft.graph.userActivity"
            }
          ],
          "extensions": [
            {
              "@odata.type": "microsoft.graph.extension"
            }
          ],
          "licenseDetails": [
            {
              "@odata.type": "microsoft.graph.licenseDetails"
            }
          ],
          "onenote": {
            "@odata.type": "microsoft.graph.onenote"
          },
          "people": [
            {
              "@odata.type": "microsoft.graph.person"
            }
          ],
          "planner": {
            "@odata.type": "microsoft.graph.plannerUser"
          }
        }
      },
      "microsoft.graph.telecomExpenseManagementPartner": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "telecomExpenseManagementPartner",
            "type": "object",
            "properties": {
              "displayName": {
                "type": "string",
                "description": "Display name of the TEM partner.",
                "nullable": true
              },
              "url": {
                "type": "string",
                "description": "URL of the TEM partner's administrative control panel, where an administrator can configure their TEM service.",
                "nullable": true
              },
              "appAuthorized": {
                "type": "boolean",
                "description": "Whether the partner's AAD app has been authorized to access Intune.",
                "nullable": true
              },
              "enabled": {
                "type": "boolean",
                "description": "Whether Intune's connection to the TEM service is currently enabled or disabled.",
                "nullable": true
              },
              "lastConnectionDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Timestamp of the last request sent to Intune by the TEM partner.",
                "format": "date-time",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "displayName": "string",
          "url": "string",
          "appAuthorized": true,
          "enabled": true,
          "lastConnectionDateTime": "string (timestamp)"
        }
      },
      "microsoft.graph.deviceManagementTroubleshootingEvent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "deviceManagementTroubleshootingEvent",
            "type": "object",
            "properties": {
              "eventDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Time when the event occurred .",
                "format": "date-time",
                "nullable": true
              },
              "correlationId": {
                "type": "string",
                "description": "Id used for tracing the failure in the service.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "eventDateTime": "string (timestamp)",
          "correlationId": "string"
        }
      },
      "microsoft.graph.enrollmentTroubleshootingEvent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.deviceManagementTroubleshootingEvent"
          },
          {
            "title": "enrollmentTroubleshootingEvent",
            "type": "object",
            "properties": {
              "managedDeviceIdentifier": {
                "type": "string",
                "description": "Device identifier created or collected by Intune.",
                "nullable": true
              },
              "operatingSystem": {
                "type": "string",
                "description": "Operating System.",
                "nullable": true
              },
              "osVersion": {
                "type": "string",
                "description": "OS Version.",
                "nullable": true
              },
              "userId": {
                "type": "string",
                "description": "Identifier for the user that tried to enroll the device.",
                "nullable": true
              },
              "deviceId": {
                "type": "string",
                "description": "Azure AD device identifier.",
                "nullable": true
              },
              "enrollmentType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceEnrollmentType"
                  }
                ],
                "description": "Type of the enrollment. Possible values are: unknown, userEnrollment, deviceEnrollmentManager, appleBulkWithUser, appleBulkWithoutUser, windowsAzureADJoin, windowsBulkUserless, windowsAutoEnrollment, windowsBulkAzureDomainJoin, windowsCoManagement.",
                "nullable": true
              },
              "failureCategory": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.deviceEnrollmentFailureReason"
                  }
                ],
                "description": "Highlevel failure category. Possible values are: unknown, authentication, authorization, accountValidation, userValidation, deviceNotSupported, inMaintenance, badRequest, featureNotSupported, enrollmentRestrictionsEnforced, clientDisconnected, userAbandonment.",
                "nullable": true
              },
              "failureReason": {
                "type": "string",
                "description": "Detailed failure reason.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "eventDateTime": "string (timestamp)",
          "correlationId": "string",
          "managedDeviceIdentifier": "string",
          "operatingSystem": "string",
          "osVersion": "string",
          "userId": "string",
          "deviceId": "string",
          "enrollmentType": {
            "@odata.type": "microsoft.graph.deviceEnrollmentType"
          },
          "failureCategory": {
            "@odata.type": "microsoft.graph.deviceEnrollmentFailureReason"
          },
          "failureReason": "string"
        }
      },
      "microsoft.graph.windowsInformationProtectionAppLearningSummary": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "windowsInformationProtectionAppLearningSummary",
            "type": "object",
            "properties": {
              "applicationName": {
                "type": "string",
                "description": "Application Name",
                "nullable": true
              },
              "applicationType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.applicationType"
                  }
                ],
                "description": "Application Type. Possible values are: universal, desktop.",
                "nullable": true
              },
              "deviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Device Count",
                "format": "int32",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "applicationName": "string",
          "applicationType": {
            "@odata.type": "microsoft.graph.applicationType"
          },
          "deviceCount": "integer"
        }
      },
      "microsoft.graph.windowsInformationProtectionNetworkLearningSummary": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "windowsInformationProtectionNetworkLearningSummary",
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "description": "Website url",
                "nullable": true
              },
              "deviceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Device Count",
                "format": "int32",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "url": "string",
          "deviceCount": "integer"
        }
      },
      "microsoft.graph.invitation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "invitation",
            "type": "object",
            "properties": {
              "invitedUserDisplayName": {
                "type": "string",
                "description": "The display name of the user being invited.",
                "nullable": true
              },
              "invitedUserEmailAddress": {
                "type": "string",
                "description": "The email address of the user being invited. Required.",
                "nullable": true
              },
              "invitedUserMessageInfo": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.invitedUserMessageInfo"
                  }
                ],
                "description": "Additional configuration for the message being sent to the invited user, including customizing message text, language and cc recipient list.",
                "nullable": true
              },
              "sendInvitationMessage": {
                "type": "boolean",
                "description": "Indicates whether an email should be sent to the user being invited or not. The default is false.",
                "nullable": true
              },
              "inviteRedirectUrl": {
                "type": "string",
                "description": "The URL user should be redirected to once the invitation is redeemed. Required.",
                "nullable": true
              },
              "inviteRedeemUrl": {
                "type": "string",
                "description": "The URL user can use to redeem his invitation. Read-Only",
                "nullable": true
              },
              "status": {
                "type": "string",
                "description": "The status of the invitation. Possible values: PendingAcceptance, Completed, InProgress, and Error",
                "nullable": true
              },
              "invitedUserType": {
                "type": "string",
                "description": "The userType of the user being invited. By default, this is Guest. You can invite as Member if you are a company administrator.",
                "nullable": true
              },
              "invitedUser": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.user"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "invitedUserDisplayName": "string",
          "invitedUserEmailAddress": "string",
          "invitedUserMessageInfo": {
            "@odata.type": "microsoft.graph.invitedUserMessageInfo"
          },
          "sendInvitationMessage": true,
          "inviteRedirectUrl": "string",
          "inviteRedeemUrl": "string",
          "status": "string",
          "invitedUserType": "string",
          "invitedUser": {
            "@odata.type": "microsoft.graph.user"
          }
        }
      },
      "microsoft.graph.itemAttachment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.attachment"
          },
          {
            "title": "itemAttachment",
            "type": "object",
            "properties": {
              "item": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.outlookItem"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "contentType": "string",
          "isInline": true,
          "lastModifiedDateTime": "string (timestamp)",
          "name": "string",
          "size": "integer",
          "item": {
            "@odata.type": "microsoft.graph.outlookItem"
          }
        }
      },
      "microsoft.graph.licenseDetails": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "licenseDetails",
            "type": "object",
            "properties": {
              "servicePlans": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.servicePlanInfo"
                    }
                  ],
                  "nullable": true
                },
                "description": "Information about the service plans assigned with the license. Read-only, Not nullable"
              },
              "skuId": {
                "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                "type": "string",
                "description": "Unique identifier (GUID) for the service SKU. Equal to the skuId property on the related SubscribedSku object. Read-only",
                "format": "uuid",
                "nullable": true
              },
              "skuPartNumber": {
                "type": "string",
                "description": "Unique SKU display name. Equal to the skuPartNumber on the related SubscribedSku object; for example: 'AAD_Premium'. Read-only",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "servicePlans": [
            {
              "@odata.type": "microsoft.graph.servicePlanInfo"
            }
          ],
          "skuId": "string",
          "skuPartNumber": "string"
        }
      },
      "microsoft.graph.list": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.baseItem"
          },
          {
            "title": "list",
            "type": "object",
            "properties": {
              "displayName": {
                "type": "string",
                "description": "The displayable title of the list.",
                "nullable": true
              },
              "list": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.listInfo"
                  }
                ],
                "description": "Provides additional details about the list.",
                "nullable": true
              },
              "system": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.systemFacet"
                  }
                ],
                "description": "If present, indicates that this is a system-managed list. Read-only.",
                "nullable": true
              },
              "sharepointIds": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.sharepointIds"
                  }
                ],
                "description": "Returns identifiers useful for SharePoint REST compatibility. Read-only.",
                "nullable": true
              },
              "columns": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.columnDefinition"
                }
              },
              "contentTypes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.contentType"
                }
              },
              "drive": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.drive"
                  }
                ],
                "nullable": true
              },
              "items": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.listItem"
                }
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "createdBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "createdDateTime": "string (timestamp)",
          "description": "string",
          "eTag": "string",
          "lastModifiedBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "lastModifiedDateTime": "string (timestamp)",
          "name": "string",
          "parentReference": {
            "@odata.type": "microsoft.graph.itemReference"
          },
          "webUrl": "string",
          "createdByUser": {
            "@odata.type": "microsoft.graph.user"
          },
          "lastModifiedByUser": {
            "@odata.type": "microsoft.graph.user"
          },
          "displayName": "string",
          "list": {
            "@odata.type": "microsoft.graph.listInfo"
          },
          "system": {
            "@odata.type": "microsoft.graph.systemFacet"
          },
          "sharepointIds": {
            "@odata.type": "microsoft.graph.sharepointIds"
          },
          "columns": [
            {
              "@odata.type": "microsoft.graph.columnDefinition"
            }
          ],
          "contentTypes": [
            {
              "@odata.type": "microsoft.graph.contentType"
            }
          ],
          "drive": {
            "@odata.type": "microsoft.graph.drive"
          },
          "items": [
            {
              "@odata.type": "microsoft.graph.listItem"
            }
          ]
        }
      },
      "microsoft.graph.listItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.baseItem"
          },
          {
            "title": "listItem",
            "type": "object",
            "properties": {
              "contentType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.contentTypeInfo"
                  }
                ],
                "description": "The content type of this list item",
                "nullable": true
              },
              "sharepointIds": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.sharepointIds"
                  }
                ],
                "description": "Returns identifiers useful for SharePoint REST compatibility. Read-only.",
                "nullable": true
              },
              "fields": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.fieldValueSet"
                  }
                ],
                "nullable": true
              },
              "driveItem": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.driveItem"
                  }
                ],
                "nullable": true
              },
              "versions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.listItemVersion"
                }
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "createdBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "createdDateTime": "string (timestamp)",
          "description": "string",
          "eTag": "string",
          "lastModifiedBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "lastModifiedDateTime": "string (timestamp)",
          "name": "string",
          "parentReference": {
            "@odata.type": "microsoft.graph.itemReference"
          },
          "webUrl": "string",
          "createdByUser": {
            "@odata.type": "microsoft.graph.user"
          },
          "lastModifiedByUser": {
            "@odata.type": "microsoft.graph.user"
          },
          "contentType": {
            "@odata.type": "microsoft.graph.contentTypeInfo"
          },
          "sharepointIds": {
            "@odata.type": "microsoft.graph.sharepointIds"
          },
          "fields": {
            "@odata.type": "microsoft.graph.fieldValueSet"
          },
          "driveItem": {
            "@odata.type": "microsoft.graph.driveItem"
          },
          "versions": [
            {
              "@odata.type": "microsoft.graph.listItemVersion"
            }
          ]
        }
      },
      "microsoft.graph.listItemVersion": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.baseItemVersion"
          },
          {
            "title": "listItemVersion",
            "type": "object",
            "properties": {
              "published": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.publicationFacet"
                  }
                ],
                "description": "Indicates the publication status of this particular version. Read-only.",
                "nullable": true
              },
              "fields": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.fieldValueSet"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "lastModifiedBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "lastModifiedDateTime": "string (timestamp)",
          "publication": {
            "@odata.type": "microsoft.graph.publicationFacet"
          },
          "published": {
            "@odata.type": "microsoft.graph.publicationFacet"
          },
          "fields": {
            "@odata.type": "microsoft.graph.fieldValueSet"
          }
        }
      },
      "microsoft.graph.mailFolder": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "mailFolder",
            "type": "object",
            "properties": {
              "childFolderCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The number of immediate child mailFolders in the current mailFolder.",
                "format": "int32",
                "nullable": true
              },
              "displayName": {
                "type": "string",
                "description": "The mailFolder's display name.",
                "nullable": true
              },
              "parentFolderId": {
                "type": "string",
                "description": "The unique identifier for the mailFolder's parent mailFolder.",
                "nullable": true
              },
              "totalItemCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The number of items in the mailFolder.",
                "format": "int32",
                "nullable": true
              },
              "unreadItemCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The number of items in the mailFolder marked as unread.",
                "format": "int32",
                "nullable": true
              },
              "childFolders": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.mailFolder"
                }
              },
              "messageRules": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.messageRule"
                }
              },
              "messages": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.message"
                }
              },
              "multiValueExtendedProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.multiValueLegacyExtendedProperty"
                }
              },
              "singleValueExtendedProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.singleValueLegacyExtendedProperty"
                }
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "childFolderCount": "integer",
          "displayName": "string",
          "parentFolderId": "string",
          "totalItemCount": "integer",
          "unreadItemCount": "integer",
          "childFolders": [
            {
              "@odata.type": "microsoft.graph.mailFolder"
            }
          ],
          "messageRules": [
            {
              "@odata.type": "microsoft.graph.messageRule"
            }
          ],
          "messages": [
            {
              "@odata.type": "microsoft.graph.message"
            }
          ],
          "multiValueExtendedProperties": [
            {
              "@odata.type": "microsoft.graph.multiValueLegacyExtendedProperty"
            }
          ],
          "singleValueExtendedProperties": [
            {
              "@odata.type": "microsoft.graph.singleValueLegacyExtendedProperty"
            }
          ]
        }
      },
      "microsoft.graph.messageRule": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "messageRule",
            "type": "object",
            "properties": {
              "actions": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.messageRuleActions"
                  }
                ],
                "description": "Actions to be taken on a message when the corresponding conditions are fulfilled.",
                "nullable": true
              },
              "conditions": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.messageRulePredicates"
                  }
                ],
                "description": "Conditions that when fulfilled, will trigger the corresponding actions for that rule.",
                "nullable": true
              },
              "displayName": {
                "type": "string",
                "description": "The display name of the rule.",
                "nullable": true
              },
              "exceptions": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.messageRulePredicates"
                  }
                ],
                "description": "Exception conditions for the rule.",
                "nullable": true
              },
              "hasError": {
                "type": "boolean",
                "description": "Indicates whether the rule is in an error condition. Read-only.",
                "nullable": true
              },
              "isEnabled": {
                "type": "boolean",
                "description": "Indicates whether the rule is enabled to be applied to messages.",
                "nullable": true
              },
              "isReadOnly": {
                "type": "boolean",
                "description": "Indicates if the rule is read-only and cannot be modified or deleted by the rules REST API.",
                "nullable": true
              },
              "sequence": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Indicates the order in which the rule is executed, among other rules.",
                "format": "int32",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "actions": {
            "@odata.type": "microsoft.graph.messageRuleActions"
          },
          "conditions": {
            "@odata.type": "microsoft.graph.messageRulePredicates"
          },
          "displayName": "string",
          "exceptions": {
            "@odata.type": "microsoft.graph.messageRulePredicates"
          },
          "hasError": true,
          "isEnabled": true,
          "isReadOnly": true,
          "sequence": "integer"
        }
      },
      "microsoft.graph.multiValueLegacyExtendedProperty": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "multiValueLegacyExtendedProperty",
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "A collection of property values."
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "value": [
            "string"
          ]
        }
      },
      "microsoft.graph.workbookNamedItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookNamedItem",
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The name of the object. Read-only.",
                "nullable": true
              },
              "comment": {
                "type": "string",
                "description": "Represents the comment associated with this name.",
                "nullable": true
              },
              "scope": {
                "type": "string",
                "description": "Indicates whether the name is scoped to the workbook or to a specific worksheet. Read-only.",
                "nullable": true
              },
              "type": {
                "type": "string",
                "description": "Indicates what type of reference is associated with the name. The possible values are: String, Integer, Double, Boolean, Range. Read-only.",
                "nullable": true
              },
              "value": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.Json"
                  }
                ],
                "description": "Represents the formula that the name is defined to refer to. E.g. =Sheet14!$B$2:$H$12, =4.75, etc. Read-only.",
                "nullable": true
              },
              "visible": {
                "type": "boolean",
                "description": "Specifies whether the object is visible or not.",
                "nullable": true
              },
              "worksheet": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookWorksheet"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "name": "string",
          "comment": "string",
          "scope": "string",
          "type": "string",
          "value": {
            "@odata.type": "microsoft.graph.Json"
          },
          "visible": true,
          "worksheet": {
            "@odata.type": "microsoft.graph.workbookWorksheet"
          }
        }
      },
      "microsoft.graph.onenoteEntityBaseModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "onenoteEntityBaseModel",
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "description": "The endpoint where you can get details about the page. Read-only.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "self": "string"
        }
      },
      "microsoft.graph.onenoteEntitySchemaObjectModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.onenoteEntityBaseModel"
          },
          {
            "title": "onenoteEntitySchemaObjectModel",
            "type": "object",
            "properties": {
              "createdDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The date and time when the page was created. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'. Read-only.",
                "format": "date-time",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "self": "string",
          "createdDateTime": "string (timestamp)"
        }
      },
      "microsoft.graph.onenoteEntityHierarchyModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.onenoteEntitySchemaObjectModel"
          },
          {
            "title": "onenoteEntityHierarchyModel",
            "type": "object",
            "properties": {
              "displayName": {
                "type": "string",
                "description": "The name of the notebook.",
                "nullable": true
              },
              "createdBy": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.identitySet"
                  }
                ],
                "description": "Identity of the user, device, and application which created the item. Read-only.",
                "nullable": true
              },
              "lastModifiedBy": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.identitySet"
                  }
                ],
                "description": "Identity of the user, device, and application which created the item. Read-only.",
                "nullable": true
              },
              "lastModifiedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The date and time when the notebook was last modified. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'. Read-only.",
                "format": "date-time",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "self": "string",
          "createdDateTime": "string (timestamp)",
          "displayName": "string",
          "createdBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "lastModifiedBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "lastModifiedDateTime": "string (timestamp)"
        }
      },
      "microsoft.graph.notebook": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.onenoteEntityHierarchyModel"
          },
          {
            "title": "notebook",
            "type": "object",
            "properties": {
              "isDefault": {
                "type": "boolean",
                "description": "Indicates whether this is the user's default notebook. Read-only.",
                "nullable": true
              },
              "isShared": {
                "type": "boolean",
                "description": "Indicates whether the notebook is shared. If true, the contents of the notebook can be seen by people other than the owner. Read-only.",
                "nullable": true
              },
              "links": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.notebookLinks"
                  }
                ],
                "description": "Links for opening the notebook. The oneNoteClientURL link opens the notebook in the OneNote native client if it's installed. The oneNoteWebURL link opens the notebook in OneNote Online.",
                "nullable": true
              },
              "sectionGroupsUrl": {
                "type": "string",
                "description": "The URL for the sectionGroups navigation property, which returns all the section groups in the notebook. Read-only.",
                "nullable": true
              },
              "sectionsUrl": {
                "type": "string",
                "description": "The URL for the sections navigation property, which returns all the sections in the notebook. Read-only.",
                "nullable": true
              },
              "userRole": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.onenoteUserRole"
                  }
                ],
                "description": "Possible values are: Owner, Contributor, Reader, None. Owner represents owner-level access to the notebook. Contributor represents read/write access to the notebook. Reader represents read-only access to the notebook. Read-only.",
                "nullable": true
              },
              "sectionGroups": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.sectionGroup"
                }
              },
              "sections": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.onenoteSection"
                }
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "self": "string",
          "createdDateTime": "string (timestamp)",
          "displayName": "string",
          "createdBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "lastModifiedBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "lastModifiedDateTime": "string (timestamp)",
          "isDefault": true,
          "isShared": true,
          "links": {
            "@odata.type": "microsoft.graph.notebookLinks"
          },
          "sectionGroupsUrl": "string",
          "sectionsUrl": "string",
          "userRole": {
            "@odata.type": "microsoft.graph.onenoteUserRole"
          },
          "sectionGroups": [
            {
              "@odata.type": "microsoft.graph.sectionGroup"
            }
          ],
          "sections": [
            {
              "@odata.type": "microsoft.graph.onenoteSection"
            }
          ]
        }
      },
      "microsoft.graph.onenote": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "onenote",
            "type": "object",
            "properties": {
              "notebooks": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.notebook"
                }
              },
              "operations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.onenoteOperation"
                }
              },
              "pages": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.onenotePage"
                }
              },
              "resources": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.onenoteResource"
                }
              },
              "sectionGroups": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.sectionGroup"
                }
              },
              "sections": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.onenoteSection"
                }
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "notebooks": [
            {
              "@odata.type": "microsoft.graph.notebook"
            }
          ],
          "operations": [
            {
              "@odata.type": "microsoft.graph.onenoteOperation"
            }
          ],
          "pages": [
            {
              "@odata.type": "microsoft.graph.onenotePage"
            }
          ],
          "resources": [
            {
              "@odata.type": "microsoft.graph.onenoteResource"
            }
          ],
          "sectionGroups": [
            {
              "@odata.type": "microsoft.graph.sectionGroup"
            }
          ],
          "sections": [
            {
              "@odata.type": "microsoft.graph.onenoteSection"
            }
          ]
        }
      },
      "microsoft.graph.operation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "operation",
            "type": "object",
            "properties": {
              "createdDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The start time of the operation.",
                "format": "date-time",
                "nullable": true
              },
              "lastActionDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The time of the last action of the operation.",
                "format": "date-time",
                "nullable": true
              },
              "status": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.operationStatus"
                  }
                ],
                "description": "The current status of the operation: notStarted, running, completed, failed",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "createdDateTime": "string (timestamp)",
          "lastActionDateTime": "string (timestamp)",
          "status": {
            "@odata.type": "microsoft.graph.operationStatus"
          }
        }
      },
      "microsoft.graph.onenoteOperation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.operation"
          },
          {
            "title": "onenoteOperation",
            "type": "object",
            "properties": {
              "error": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.onenoteOperationError"
                  }
                ],
                "description": "The error returned by the operation.",
                "nullable": true
              },
              "resourceId": {
                "type": "string",
                "description": "The resource id.",
                "nullable": true
              },
              "resourceLocation": {
                "type": "string",
                "description": "The resource URI for the object. For example, the resource URI for a copied page or section.",
                "nullable": true
              },
              "percentComplete": {
                "type": "string",
                "description": "The operation percent complete if the operation is still in running status",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "createdDateTime": "string (timestamp)",
          "lastActionDateTime": "string (timestamp)",
          "status": {
            "@odata.type": "microsoft.graph.operationStatus"
          },
          "error": {
            "@odata.type": "microsoft.graph.onenoteOperationError"
          },
          "resourceId": "string",
          "resourceLocation": "string",
          "percentComplete": "string"
        }
      },
      "microsoft.graph.openTypeExtension": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.extension"
          },
          {
            "title": "openTypeExtension",
            "type": "object",
            "properties": {
              "extensionName": {
                "type": "string",
                "description": "A unique text identifier for an open type open extension. Required.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "extensionName": "string"
        }
      },
      "microsoft.graph.outlookCategory": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "outlookCategory",
            "type": "object",
            "properties": {
              "color": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.categoryColor"
                  }
                ],
                "description": "A pre-set color constant that characterizes a category, and that is mapped to one of 25 predefined colors. See the note below.",
                "nullable": true
              },
              "displayName": {
                "type": "string",
                "description": "A unique name that identifies a category in the user's mailbox. After a category is created, the name cannot be changed. Read-only.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "color": {
            "@odata.type": "microsoft.graph.categoryColor"
          },
          "displayName": "string"
        }
      },
      "microsoft.graph.outlookUser": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "outlookUser",
            "type": "object",
            "properties": {
              "masterCategories": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.outlookCategory"
                }
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "masterCategories": [
            {
              "@odata.type": "microsoft.graph.outlookCategory"
            }
          ]
        }
      },
      "microsoft.graph.onenotePage": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.onenoteEntitySchemaObjectModel"
          },
          {
            "title": "onenotePage",
            "type": "object",
            "properties": {
              "content": {
                "type": "string",
                "description": "The page's HTML content.",
                "format": "base64url",
                "nullable": true
              },
              "contentUrl": {
                "type": "string",
                "description": "The URL for the page's HTML content.  Read-only.",
                "nullable": true
              },
              "createdByAppId": {
                "type": "string",
                "description": "The unique identifier of the application that created the page. Read-only.",
                "nullable": true
              },
              "lastModifiedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The date and time when the page was last modified. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'. Read-only.",
                "format": "date-time",
                "nullable": true
              },
              "level": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The indentation level of the page. Read-only.",
                "format": "int32",
                "nullable": true
              },
              "links": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.pageLinks"
                  }
                ],
                "description": "Links for opening the page. The oneNoteClientURL link opens the page in the OneNote native client if it 's installed. The oneNoteWebUrl link opens the page in OneNote Online. Read-only.",
                "nullable": true
              },
              "order": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The order of the page within its parent section. Read-only.",
                "format": "int32",
                "nullable": true
              },
              "title": {
                "type": "string",
                "description": "The title of the page.",
                "nullable": true
              },
              "parentNotebook": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.notebook"
                  }
                ],
                "nullable": true
              },
              "parentSection": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.onenoteSection"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "self": "string",
          "createdDateTime": "string (timestamp)",
          "content": "string",
          "contentUrl": "string",
          "createdByAppId": "string",
          "lastModifiedDateTime": "string (timestamp)",
          "level": "integer",
          "links": {
            "@odata.type": "microsoft.graph.pageLinks"
          },
          "order": "integer",
          "title": "string",
          "parentNotebook": {
            "@odata.type": "microsoft.graph.notebook"
          },
          "parentSection": {
            "@odata.type": "microsoft.graph.onenoteSection"
          }
        }
      },
      "microsoft.graph.permission": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "permission",
            "type": "object",
            "properties": {
              "grantedTo": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.identitySet"
                  }
                ],
                "description": "For user type permissions, the details of the users & applications for this permission. Read-only.",
                "nullable": true
              },
              "inheritedFrom": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.itemReference"
                  }
                ],
                "description": "Provides a reference to the ancestor of the current permission, if it is inherited from an ancestor. Read-only.",
                "nullable": true
              },
              "invitation": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.sharingInvitation"
                  }
                ],
                "description": "Details of any associated sharing invitation for this permission. Read-only.",
                "nullable": true
              },
              "link": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.sharingLink"
                  }
                ],
                "description": "Provides the link details of the current permission, if it is a link type permissions. Read-only.",
                "nullable": true
              },
              "roles": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "The type of permission, e.g. read. See below for the full list of roles. Read-only."
              },
              "shareId": {
                "type": "string",
                "description": "A unique token that can be used to access this shared item via the **shares** API. Read-only.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "grantedTo": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "inheritedFrom": {
            "@odata.type": "microsoft.graph.itemReference"
          },
          "invitation": {
            "@odata.type": "microsoft.graph.sharingInvitation"
          },
          "link": {
            "@odata.type": "microsoft.graph.sharingLink"
          },
          "roles": [
            "string"
          ],
          "shareId": "string"
        }
      },
      "microsoft.graph.person": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "person",
            "type": "object",
            "properties": {
              "birthday": {
                "type": "string",
                "description": "The person's birthday.",
                "nullable": true
              },
              "companyName": {
                "type": "string",
                "description": "The name of the person's company.",
                "nullable": true
              },
              "department": {
                "type": "string",
                "description": "The person's department.",
                "nullable": true
              },
              "displayName": {
                "type": "string",
                "description": "The person's display name.",
                "nullable": true
              },
              "scoredEmailAddresses": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.scoredEmailAddress"
                    }
                  ],
                  "nullable": true
                },
                "description": "The person's email addresses."
              },
              "givenName": {
                "type": "string",
                "description": "The person's given name.",
                "nullable": true
              },
              "imAddress": {
                "type": "string",
                "description": "The instant message voice over IP (VOIP) session initiation protocol (SIP) address for the user. Read-only.",
                "nullable": true
              },
              "isFavorite": {
                "type": "boolean",
                "description": "true if the user has flagged this person as a favorite.",
                "nullable": true
              },
              "jobTitle": {
                "type": "string",
                "description": "The person's job title.",
                "nullable": true
              },
              "officeLocation": {
                "type": "string",
                "description": "The location of the person's office.",
                "nullable": true
              },
              "personNotes": {
                "type": "string",
                "description": "Free-form notes that the user has taken about this person.",
                "nullable": true
              },
              "personType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.personType"
                  }
                ],
                "description": "The type of person.",
                "nullable": true
              },
              "phones": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.phone"
                    }
                  ],
                  "nullable": true
                },
                "description": "The person's phone numbers."
              },
              "postalAddresses": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.location"
                    }
                  ],
                  "nullable": true
                },
                "description": "The person's addresses."
              },
              "profession": {
                "type": "string",
                "description": "The person's profession.",
                "nullable": true
              },
              "surname": {
                "type": "string",
                "description": "The person's surname.",
                "nullable": true
              },
              "userPrincipalName": {
                "type": "string",
                "description": "The user principal name (UPN) of the person. The UPN is an Internet-style login name for the person based on the Internet standard RFC 822. By convention, this should map to the person's email name. The general format is alias@domain.",
                "nullable": true
              },
              "websites": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.website"
                    }
                  ],
                  "nullable": true
                },
                "description": "The person's websites."
              },
              "yomiCompany": {
                "type": "string",
                "description": "The phonetic Japanese name of the person's company.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "birthday": "string",
          "companyName": "string",
          "department": "string",
          "displayName": "string",
          "scoredEmailAddresses": [
            {
              "@odata.type": "microsoft.graph.scoredEmailAddress"
            }
          ],
          "givenName": "string",
          "imAddress": "string",
          "isFavorite": true,
          "jobTitle": "string",
          "officeLocation": "string",
          "personNotes": "string",
          "personType": {
            "@odata.type": "microsoft.graph.personType"
          },
          "phones": [
            {
              "@odata.type": "microsoft.graph.phone"
            }
          ],
          "postalAddresses": [
            {
              "@odata.type": "microsoft.graph.location"
            }
          ],
          "profession": "string",
          "surname": "string",
          "userPrincipalName": "string",
          "websites": [
            {
              "@odata.type": "microsoft.graph.website"
            }
          ],
          "yomiCompany": "string"
        }
      },
      "microsoft.graph.planner": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "planner",
            "type": "object",
            "properties": {
              "buckets": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.plannerBucket"
                }
              },
              "plans": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.plannerPlan"
                }
              },
              "tasks": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.plannerTask"
                }
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "buckets": [
            {
              "@odata.type": "microsoft.graph.plannerBucket"
            }
          ],
          "plans": [
            {
              "@odata.type": "microsoft.graph.plannerPlan"
            }
          ],
          "tasks": [
            {
              "@odata.type": "microsoft.graph.plannerTask"
            }
          ]
        }
      },
      "microsoft.graph.plannerAssignedToTaskBoardTaskFormat": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "plannerAssignedToTaskBoardTaskFormat",
            "type": "object",
            "properties": {
              "orderHintsByAssignee": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.plannerOrderHintsByAssignee"
                  }
                ],
                "description": "Dictionary of hints used to order tasks on the AssignedTo view of the Task Board. The key of each entry is one of the users the task is assigned to and the value is the order hint. The format of each value is defined as outlined here.",
                "nullable": true
              },
              "unassignedOrderHint": {
                "type": "string",
                "description": "Hint value used to order the task on the AssignedTo view of the Task Board when the task is not assigned to anyone, or if the orderHintsByAssignee dictionary does not provide an order hint for the user the task is assigned to. The format is defined as outlined here.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "orderHintsByAssignee": {
            "@odata.type": "microsoft.graph.plannerOrderHintsByAssignee"
          },
          "unassignedOrderHint": "string"
        }
      },
      "microsoft.graph.plannerBucket": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "plannerBucket",
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the bucket.",
                "nullable": true
              },
              "orderHint": {
                "type": "string",
                "description": "Hint used to order items of this type in a list view. The format is defined as outlined here.",
                "nullable": true
              },
              "planId": {
                "type": "string",
                "description": "Plan ID to which the bucket belongs.",
                "nullable": true
              },
              "tasks": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.plannerTask"
                }
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "name": "string",
          "orderHint": "string",
          "planId": "string",
          "tasks": [
            {
              "@odata.type": "microsoft.graph.plannerTask"
            }
          ]
        }
      },
      "microsoft.graph.plannerBucketTaskBoardTaskFormat": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "plannerBucketTaskBoardTaskFormat",
            "type": "object",
            "properties": {
              "orderHint": {
                "type": "string",
                "description": "Hint used to order tasks in the Bucket view of the Task Board. The format is defined as outlined here.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "orderHint": "string"
        }
      },
      "microsoft.graph.plannerGroup": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "plannerGroup",
            "type": "object",
            "properties": {
              "plans": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.plannerPlan"
                }
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "plans": [
            {
              "@odata.type": "microsoft.graph.plannerPlan"
            }
          ]
        }
      },
      "microsoft.graph.plannerPlan": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "plannerPlan",
            "type": "object",
            "properties": {
              "createdBy": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.identitySet"
                  }
                ],
                "description": "Read-only. The user who created the plan.",
                "nullable": true
              },
              "createdDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Read-only. Date and time at which the plan is created. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'",
                "format": "date-time",
                "nullable": true
              },
              "owner": {
                "type": "string",
                "description": "ID of the Group that owns the plan. A valid group must exist before this field can be set. Once set, this can only be updated by the owner.",
                "nullable": true
              },
              "title": {
                "type": "string",
                "description": "Required. Title of the plan.",
                "nullable": true
              },
              "buckets": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.plannerBucket"
                }
              },
              "details": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.plannerPlanDetails"
                  }
                ],
                "nullable": true
              },
              "tasks": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.plannerTask"
                }
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "createdBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "createdDateTime": "string (timestamp)",
          "owner": "string",
          "title": "string",
          "buckets": [
            {
              "@odata.type": "microsoft.graph.plannerBucket"
            }
          ],
          "details": {
            "@odata.type": "microsoft.graph.plannerPlanDetails"
          },
          "tasks": [
            {
              "@odata.type": "microsoft.graph.plannerTask"
            }
          ]
        }
      },
      "microsoft.graph.plannerPlanDetails": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "plannerPlanDetails",
            "type": "object",
            "properties": {
              "categoryDescriptions": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.plannerCategoryDescriptions"
                  }
                ],
                "description": "An object that specifies the descriptions of the six categories that can be associated with tasks in the plan",
                "nullable": true
              },
              "sharedWith": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.plannerUserIds"
                  }
                ],
                "description": "Set of user ids that this plan is shared with. If you are leveraging Office 365 Groups, use the Groups API to manage group membership to share the group's plan. You can also add existing members of the group to this collection though it is not required for them to access the plan owned by the group.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "categoryDescriptions": {
            "@odata.type": "microsoft.graph.plannerCategoryDescriptions"
          },
          "sharedWith": {
            "@odata.type": "microsoft.graph.plannerUserIds"
          }
        }
      },
      "microsoft.graph.plannerProgressTaskBoardTaskFormat": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "plannerProgressTaskBoardTaskFormat",
            "type": "object",
            "properties": {
              "orderHint": {
                "type": "string",
                "description": "Hint value used to order the task on the Progress view of the Task Board. The format is defined as outlined here.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "orderHint": "string"
        }
      },
      "microsoft.graph.plannerTask": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "plannerTask",
            "type": "object",
            "properties": {
              "activeChecklistItemCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of checklist items with value set to 'false', representing incomplete items.",
                "format": "int32",
                "nullable": true
              },
              "appliedCategories": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.plannerAppliedCategories"
                  }
                ],
                "description": "The categories to which the task has been applied. See applied Categories for possible values.",
                "nullable": true
              },
              "assigneePriority": {
                "type": "string",
                "description": "Hint used to order items of this type in a list view. The format is defined as outlined here.",
                "nullable": true
              },
              "assignments": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.plannerAssignments"
                  }
                ],
                "description": "The set of assignees the task is assigned to.",
                "nullable": true
              },
              "bucketId": {
                "type": "string",
                "description": "Bucket ID to which the task belongs. The bucket needs to be in the plan that the task is in. It is 28 characters long and case-sensitive. Format validation is done on the service.",
                "nullable": true
              },
              "checklistItemCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of checklist items that are present on the task.",
                "format": "int32",
                "nullable": true
              },
              "completedBy": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.identitySet"
                  }
                ],
                "description": "Identity of the user that completed the task.",
                "nullable": true
              },
              "completedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Read-only. Date and time at which the 'percentComplete' of the task is set to '100'. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'",
                "format": "date-time",
                "nullable": true
              },
              "conversationThreadId": {
                "type": "string",
                "description": "Thread ID of the conversation on the task. This is the ID of the conversation thread object created in the group.",
                "nullable": true
              },
              "createdBy": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.identitySet"
                  }
                ],
                "description": "Identity of the user that created the task.",
                "nullable": true
              },
              "createdDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Read-only. Date and time at which the task is created. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'",
                "format": "date-time",
                "nullable": true
              },
              "dueDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Date and time at which the task is due. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'",
                "format": "date-time",
                "nullable": true
              },
              "hasDescription": {
                "type": "boolean",
                "description": "Read-only. Value is true if the details object of the task has a non-empty description and false otherwise.",
                "nullable": true
              },
              "orderHint": {
                "type": "string",
                "description": "Hint used to order items of this type in a list view. The format is defined as outlined here.",
                "nullable": true
              },
              "percentComplete": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Percentage of task completion. When set to 100, the task is considered completed.",
                "format": "int32",
                "nullable": true
              },
              "planId": {
                "type": "string",
                "description": "Plan ID to which the task belongs.",
                "nullable": true
              },
              "previewType": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.plannerPreviewType"
                  }
                ],
                "description": "This sets the type of preview that shows up on the task. The possible values are: automatic, noPreview, checklist, description, reference.",
                "nullable": true
              },
              "referenceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of external references that exist on the task.",
                "format": "int32",
                "nullable": true
              },
              "startDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Date and time at which the task starts. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'",
                "format": "date-time",
                "nullable": true
              },
              "title": {
                "type": "string",
                "description": "Title of the task.",
                "nullable": true
              },
              "assignedToTaskBoardFormat": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.plannerAssignedToTaskBoardTaskFormat"
                  }
                ],
                "nullable": true
              },
              "bucketTaskBoardFormat": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.plannerBucketTaskBoardTaskFormat"
                  }
                ],
                "nullable": true
              },
              "details": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.plannerTaskDetails"
                  }
                ],
                "nullable": true
              },
              "progressTaskBoardFormat": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.plannerProgressTaskBoardTaskFormat"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "activeChecklistItemCount": "integer",
          "appliedCategories": {
            "@odata.type": "microsoft.graph.plannerAppliedCategories"
          },
          "assigneePriority": "string",
          "assignments": {
            "@odata.type": "microsoft.graph.plannerAssignments"
          },
          "bucketId": "string",
          "checklistItemCount": "integer",
          "completedBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "completedDateTime": "string (timestamp)",
          "conversationThreadId": "string",
          "createdBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "createdDateTime": "string (timestamp)",
          "dueDateTime": "string (timestamp)",
          "hasDescription": true,
          "orderHint": "string",
          "percentComplete": "integer",
          "planId": "string",
          "previewType": {
            "@odata.type": "microsoft.graph.plannerPreviewType"
          },
          "referenceCount": "integer",
          "startDateTime": "string (timestamp)",
          "title": "string",
          "assignedToTaskBoardFormat": {
            "@odata.type": "microsoft.graph.plannerAssignedToTaskBoardTaskFormat"
          },
          "bucketTaskBoardFormat": {
            "@odata.type": "microsoft.graph.plannerBucketTaskBoardTaskFormat"
          },
          "details": {
            "@odata.type": "microsoft.graph.plannerTaskDetails"
          },
          "progressTaskBoardFormat": {
            "@odata.type": "microsoft.graph.plannerProgressTaskBoardTaskFormat"
          }
        }
      },
      "microsoft.graph.plannerTaskDetails": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "plannerTaskDetails",
            "type": "object",
            "properties": {
              "checklist": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.plannerChecklistItems"
                  }
                ],
                "description": "The collection of checklist items on the task.",
                "nullable": true
              },
              "description": {
                "type": "string",
                "description": "Description of the task",
                "nullable": true
              },
              "previewType": {
                "type": "string",
                "description": "This sets the type of preview that shows up on the task. The possible values are: automatic, noPreview, checklist, description, reference. When set to automatic the displayed preview is chosen by the app viewing the task.",
                "nullable": true
              },
              "references": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.plannerExternalReferences"
                  }
                ],
                "description": "The collection of references on the task.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "checklist": {
            "@odata.type": "microsoft.graph.plannerChecklistItems"
          },
          "description": "string",
          "previewType": "string",
          "references": {
            "@odata.type": "microsoft.graph.plannerExternalReferences"
          }
        }
      },
      "microsoft.graph.plannerUser": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "plannerUser",
            "type": "object",
            "properties": {
              "plans": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.plannerPlan"
                }
              },
              "tasks": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.plannerTask"
                }
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "plans": [
            {
              "@odata.type": "microsoft.graph.plannerPlan"
            }
          ],
          "tasks": [
            {
              "@odata.type": "microsoft.graph.plannerTask"
            }
          ]
        }
      },
      "microsoft.graph.post": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.outlookItem"
          },
          {
            "title": "post",
            "type": "object",
            "properties": {
              "body": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.itemBody"
                  }
                ],
                "description": "The contents of the post. This is a default property. This property can be null.",
                "nullable": true
              },
              "conversationId": {
                "type": "string",
                "description": "Unique ID of the conversation. Read-only.",
                "nullable": true
              },
              "conversationThreadId": {
                "type": "string",
                "description": "Unique ID of the conversation thread. Read-only.",
                "nullable": true
              },
              "from": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.recipient"
                  }
                ],
                "description": "Used in delegate access scenarios. Indicates who posted the message on behalf of another user. This is a default property.",
                "nullable": true
              },
              "hasAttachments": {
                "type": "boolean",
                "description": "Indicates whether the post has at least one attachment. This is a default property.",
                "nullable": true
              },
              "newParticipants": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.recipient"
                    }
                  ],
                  "nullable": true
                },
                "description": "Conversation participants that were added to the thread as part of this post."
              },
              "receivedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Specifies when the post was received. The DateTimeOffset type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'",
                "format": "date-time",
                "nullable": true
              },
              "sender": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.recipient"
                  }
                ],
                "description": "Contains the address of the sender. The value of Sender is assumed to be the address of the authenticated user in the case when Sender is not specified. This is a default property.",
                "nullable": true
              },
              "attachments": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.attachment"
                }
              },
              "extensions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.extension"
                }
              },
              "inReplyTo": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.post"
                  }
                ],
                "nullable": true
              },
              "multiValueExtendedProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.multiValueLegacyExtendedProperty"
                }
              },
              "singleValueExtendedProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.singleValueLegacyExtendedProperty"
                }
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "categories": [
            "string"
          ],
          "changeKey": "string",
          "createdDateTime": "string (timestamp)",
          "lastModifiedDateTime": "string (timestamp)",
          "body": {
            "@odata.type": "microsoft.graph.itemBody"
          },
          "conversationId": "string",
          "conversationThreadId": "string",
          "from": {
            "@odata.type": "microsoft.graph.recipient"
          },
          "hasAttachments": true,
          "newParticipants": [
            {
              "@odata.type": "microsoft.graph.recipient"
            }
          ],
          "receivedDateTime": "string (timestamp)",
          "sender": {
            "@odata.type": "microsoft.graph.recipient"
          },
          "attachments": [
            {
              "@odata.type": "microsoft.graph.attachment"
            }
          ],
          "extensions": [
            {
              "@odata.type": "microsoft.graph.extension"
            }
          ],
          "inReplyTo": {
            "@odata.type": "microsoft.graph.post"
          },
          "multiValueExtendedProperties": [
            {
              "@odata.type": "microsoft.graph.multiValueLegacyExtendedProperty"
            }
          ],
          "singleValueExtendedProperties": [
            {
              "@odata.type": "microsoft.graph.singleValueLegacyExtendedProperty"
            }
          ]
        }
      },
      "microsoft.graph.profilePhoto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "profilePhoto",
            "type": "object",
            "properties": {
              "height": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The height of the photo. Read-only.",
                "format": "int32",
                "nullable": true
              },
              "width": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The width of the photo. Read-only.",
                "format": "int32",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "height": "integer",
          "width": "integer"
        }
      },
      "microsoft.graph.userActivity": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "userActivity",
            "type": "object",
            "properties": {
              "appActivityId": {
                "type": "string",
                "description": "Required. The unique activity ID in the context of the app - supplied by caller and immutable thereafter.",
                "nullable": true
              },
              "activitySourceHost": {
                "type": "string",
                "description": "Required. URL for the domain representing the cross-platform identity mapping for the app. Mapping is stored either as a JSON file hosted on the domain or configurable via Windows Dev Center. The JSON file is named cross-platform-app-identifiers and is hosted at root of your HTTPS domain, either at the top level domain or include a sub domain. For example: https://contoso.com or https://myapp.contoso.com but NOT https://myapp.contoso.com/somepath. You must have a unique file and domain (or sub domain) per cross-platform app identity. For example, a separate file and domain is needed for Word vs. PowerPoint.",
                "nullable": true
              },
              "userTimezone": {
                "type": "string",
                "description": "Optional. The timezone in which the user's device used to generate the activity was located at activity creation time; values supplied as Olson IDs in order to support cross-platform representation.",
                "nullable": true
              },
              "appDisplayName": {
                "type": "string",
                "description": "Optional. Short text description of the app used to generate the activity for use in cases when the app is not installed on the user’s local device.",
                "nullable": true
              },
              "activationUrl": {
                "type": "string",
                "description": "Required. URL used to launch the activity in the best native experience represented by the appId. Might launch a web-based app if no native app exists.",
                "nullable": true
              },
              "contentUrl": {
                "type": "string",
                "description": "Optional. Used in the event the content can be rendered outside of a native or web-based app experience (for example, a pointer to an item in an RSS feed).",
                "nullable": true
              },
              "fallbackUrl": {
                "type": "string",
                "description": "Optional. URL used to launch the activity in a web-based app, if available.",
                "nullable": true
              },
              "createdDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Set by the server. DateTime in UTC when the object was created on the server.",
                "format": "date-time",
                "nullable": true
              },
              "lastModifiedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Set by the server. DateTime in UTC when the object was modified on the server.",
                "format": "date-time",
                "nullable": true
              },
              "expirationDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Set by the server. DateTime in UTC when the object expired on the server.",
                "format": "date-time",
                "nullable": true
              },
              "status": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.status"
                  }
                ],
                "description": "Set by the server. A status code used to identify valid objects. Values: active, updated, deleted, ignored.",
                "nullable": true
              },
              "contentInfo": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.Json"
                  }
                ],
                "description": "Optional. A custom piece of data - JSON-LD extensible description of content according to schema.org syntax.",
                "nullable": true
              },
              "visualElements": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.visualInfo"
                  }
                ],
                "description": "Required. The object containing information to render the activity in the UX.",
                "nullable": true
              },
              "historyItems": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.activityHistoryItem"
                }
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "appActivityId": "string",
          "activitySourceHost": "string",
          "userTimezone": "string",
          "appDisplayName": "string",
          "activationUrl": "string",
          "contentUrl": "string",
          "fallbackUrl": "string",
          "createdDateTime": "string (timestamp)",
          "lastModifiedDateTime": "string (timestamp)",
          "expirationDateTime": "string (timestamp)",
          "status": {
            "@odata.type": "microsoft.graph.status"
          },
          "contentInfo": {
            "@odata.type": "microsoft.graph.Json"
          },
          "visualElements": {
            "@odata.type": "microsoft.graph.visualInfo"
          },
          "historyItems": [
            {
              "@odata.type": "microsoft.graph.activityHistoryItem"
            }
          ]
        }
      },
      "microsoft.graph.activityHistoryItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "activityHistoryItem",
            "type": "object",
            "properties": {
              "status": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.status"
                  }
                ],
                "description": "Set by the server. A status code used to identify valid objects. Values: active, updated, deleted, ignored.",
                "nullable": true
              },
              "createdDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Set by the server. DateTime in UTC when the object was created on the server.",
                "format": "date-time",
                "nullable": true
              },
              "lastModifiedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Set by the server. DateTime in UTC when the object was modified on the server.",
                "format": "date-time",
                "nullable": true
              },
              "expirationDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Optional. UTC DateTime when the historyItem will undergo hard-delete. Can be set by the client.",
                "format": "date-time",
                "nullable": true
              },
              "startedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Required. UTC DateTime when the historyItem (activity session) was started. Required for timeline history.",
                "format": "date-time",
                "nullable": true
              },
              "userTimezone": {
                "type": "string",
                "description": "Optional. The timezone in which the user's device used to generate the activity was located at activity creation time. Values supplied as Olson IDs in order to support cross-platform representation.",
                "nullable": true
              },
              "lastActiveDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Optional. UTC DateTime when the historyItem (activity session) was last understood as active or finished - if null, historyItem status should be Ongoing.",
                "format": "date-time",
                "nullable": true
              },
              "activeDurationSeconds": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Optional. The duration of active user engagement. if not supplied, this is calculated from the startedDateTime and lastActiveDateTime.",
                "format": "int32",
                "nullable": true
              },
              "activity": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.userActivity"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "status": {
            "@odata.type": "microsoft.graph.status"
          },
          "createdDateTime": "string (timestamp)",
          "lastModifiedDateTime": "string (timestamp)",
          "expirationDateTime": "string (timestamp)",
          "startedDateTime": "string (timestamp)",
          "userTimezone": "string",
          "lastActiveDateTime": "string (timestamp)",
          "activeDurationSeconds": "integer",
          "activity": {
            "@odata.type": "microsoft.graph.userActivity"
          }
        }
      },
      "microsoft.graph.workbookRange": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookRange",
            "type": "object",
            "properties": {
              "address": {
                "type": "string",
                "description": "Represents the range reference in A1-style. Address value will contain the Sheet reference (e.g. Sheet1!A1:B4). Read-only.",
                "nullable": true
              },
              "addressLocal": {
                "type": "string",
                "description": "Represents range reference for the specified range in the language of the user. Read-only.",
                "nullable": true
              },
              "cellCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of cells in the range. Read-only.",
                "format": "int32",
                "nullable": true
              },
              "columnCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Represents the total number of columns in the range. Read-only.",
                "format": "int32",
                "nullable": true
              },
              "columnHidden": {
                "type": "boolean",
                "description": "Represents if all columns of the current range are hidden.",
                "nullable": true
              },
              "columnIndex": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Represents the column number of the first cell in the range. Zero-indexed. Read-only.",
                "format": "int32",
                "nullable": true
              },
              "formulas": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.Json"
                  }
                ],
                "description": "Represents the formula in A1-style notation.",
                "nullable": true
              },
              "formulasLocal": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.Json"
                  }
                ],
                "description": "Represents the formula in A1-style notation, in the user's language and number-formatting locale.  For example, the English '=SUM(A1, 1.5)' formula would become '=SUMME(A1; 1,5)' in German.",
                "nullable": true
              },
              "formulasR1C1": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.Json"
                  }
                ],
                "description": "Represents the formula in R1C1-style notation.",
                "nullable": true
              },
              "hidden": {
                "type": "boolean",
                "description": "Represents if all cells of the current range are hidden. Read-only.",
                "nullable": true
              },
              "numberFormat": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.Json"
                  }
                ],
                "description": "Represents Excel's number format code for the given cell.",
                "nullable": true
              },
              "rowCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Returns the total number of rows in the range. Read-only.",
                "format": "int32",
                "nullable": true
              },
              "rowHidden": {
                "type": "boolean",
                "description": "Represents if all rows of the current range are hidden.",
                "nullable": true
              },
              "rowIndex": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Returns the row number of the first cell in the range. Zero-indexed. Read-only.",
                "format": "int32",
                "nullable": true
              },
              "text": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.Json"
                  }
                ],
                "description": "Text values of the specified range. The Text value will not depend on the cell width. The # sign substitution that happens in Excel UI will not affect the text value returned by the API. Read-only.",
                "nullable": true
              },
              "valueTypes": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.Json"
                  }
                ],
                "description": "Represents the type of data of each cell. The possible values are: Unknown, Empty, String, Integer, Double, Boolean, Error. Read-only.",
                "nullable": true
              },
              "values": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.Json"
                  }
                ],
                "description": "Represents the raw values of the specified range. The data returned could be of type string, number, or a boolean. Cell that contain an error will return the error string.",
                "nullable": true
              },
              "format": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookRangeFormat"
                  }
                ],
                "nullable": true
              },
              "sort": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookRangeSort"
                  }
                ],
                "nullable": true
              },
              "worksheet": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookWorksheet"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "address": "string",
          "addressLocal": "string",
          "cellCount": "integer",
          "columnCount": "integer",
          "columnHidden": true,
          "columnIndex": "integer",
          "formulas": {
            "@odata.type": "microsoft.graph.Json"
          },
          "formulasLocal": {
            "@odata.type": "microsoft.graph.Json"
          },
          "formulasR1C1": {
            "@odata.type": "microsoft.graph.Json"
          },
          "hidden": true,
          "numberFormat": {
            "@odata.type": "microsoft.graph.Json"
          },
          "rowCount": "integer",
          "rowHidden": true,
          "rowIndex": "integer",
          "text": {
            "@odata.type": "microsoft.graph.Json"
          },
          "valueTypes": {
            "@odata.type": "microsoft.graph.Json"
          },
          "values": {
            "@odata.type": "microsoft.graph.Json"
          },
          "format": {
            "@odata.type": "microsoft.graph.workbookRangeFormat"
          },
          "sort": {
            "@odata.type": "microsoft.graph.workbookRangeSort"
          },
          "worksheet": {
            "@odata.type": "microsoft.graph.workbookWorksheet"
          }
        }
      },
      "microsoft.graph.workbookRangeBorder": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookRangeBorder",
            "type": "object",
            "properties": {
              "color": {
                "type": "string",
                "description": "HTML color code representing the color of the border line, of the form #RRGGBB (e.g. 'FFA500') or as a named HTML color (e.g. 'orange').",
                "nullable": true
              },
              "sideIndex": {
                "type": "string",
                "description": "Constant value that indicates the specific side of the border. The possible values are: EdgeTop, EdgeBottom, EdgeLeft, EdgeRight, InsideVertical, InsideHorizontal, DiagonalDown, DiagonalUp. Read-only.",
                "nullable": true
              },
              "style": {
                "type": "string",
                "description": "One of the constants of line style specifying the line style for the border. The possible values are: None, Continuous, Dash, DashDot, DashDotDot, Dot, Double, SlantDashDot.",
                "nullable": true
              },
              "weight": {
                "type": "string",
                "description": "Specifies the weight of the border around a range. The possible values are: Hairline, Thin, Medium, Thick.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "color": "string",
          "sideIndex": "string",
          "style": "string",
          "weight": "string"
        }
      },
      "microsoft.graph.workbookRangeFill": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookRangeFill",
            "type": "object",
            "properties": {
              "color": {
                "type": "string",
                "description": "HTML color code representing the color of the border line, of the form #RRGGBB (e.g. 'FFA500') or as a named HTML color (e.g. 'orange')",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "color": "string"
        }
      },
      "microsoft.graph.workbookRangeFont": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookRangeFont",
            "type": "object",
            "properties": {
              "bold": {
                "type": "boolean",
                "description": "Represents the bold status of font.",
                "nullable": true
              },
              "color": {
                "type": "string",
                "description": "HTML color code representation of the text color. E.g. #FF0000 represents Red.",
                "nullable": true
              },
              "italic": {
                "type": "boolean",
                "description": "Represents the italic status of the font.",
                "nullable": true
              },
              "name": {
                "type": "string",
                "description": "Font name (e.g. 'Calibri')",
                "nullable": true
              },
              "size": {
                "anyOf": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "string"
                  },
                  {
                    "enum": [
                      "-INF",
                      "INF",
                      "NaN"
                    ]
                  }
                ],
                "description": "Font size.",
                "format": "double",
                "nullable": true
              },
              "underline": {
                "type": "string",
                "description": "Type of underline applied to the font. The possible values are: None, Single, Double, SingleAccountant, DoubleAccountant.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "bold": true,
          "color": "string",
          "italic": true,
          "name": "string",
          "size": "double",
          "underline": "string"
        }
      },
      "microsoft.graph.workbookRangeFormat": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookRangeFormat",
            "type": "object",
            "properties": {
              "columnWidth": {
                "anyOf": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "string"
                  },
                  {
                    "enum": [
                      "-INF",
                      "INF",
                      "NaN"
                    ]
                  }
                ],
                "description": "Gets or sets the width of all colums within the range. If the column widths are not uniform, null will be returned.",
                "format": "double",
                "nullable": true
              },
              "horizontalAlignment": {
                "type": "string",
                "description": "Represents the horizontal alignment for the specified object. The possible values are: General, Left, Center, Right, Fill, Justify, CenterAcrossSelection, Distributed.",
                "nullable": true
              },
              "rowHeight": {
                "anyOf": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "string"
                  },
                  {
                    "enum": [
                      "-INF",
                      "INF",
                      "NaN"
                    ]
                  }
                ],
                "description": "Gets or sets the height of all rows in the range. If the row heights are not uniform null will be returned.",
                "format": "double",
                "nullable": true
              },
              "verticalAlignment": {
                "type": "string",
                "description": "Represents the vertical alignment for the specified object. The possible values are: Top, Center, Bottom, Justify, Distributed.",
                "nullable": true
              },
              "wrapText": {
                "type": "boolean",
                "description": "Indicates if Excel wraps the text in the object. A null value indicates that the entire range doesn't have uniform wrap setting",
                "nullable": true
              },
              "borders": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.workbookRangeBorder"
                }
              },
              "fill": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookRangeFill"
                  }
                ],
                "nullable": true
              },
              "font": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookRangeFont"
                  }
                ],
                "nullable": true
              },
              "protection": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookFormatProtection"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "columnWidth": "double",
          "horizontalAlignment": "string",
          "rowHeight": "double",
          "verticalAlignment": "string",
          "wrapText": true,
          "borders": [
            {
              "@odata.type": "microsoft.graph.workbookRangeBorder"
            }
          ],
          "fill": {
            "@odata.type": "microsoft.graph.workbookRangeFill"
          },
          "font": {
            "@odata.type": "microsoft.graph.workbookRangeFont"
          },
          "protection": {
            "@odata.type": "microsoft.graph.workbookFormatProtection"
          }
        }
      },
      "microsoft.graph.workbookRangeSort": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookRangeSort",
            "type": "object"
          }
        ],
        "example": {
          "id": "string (identifier)"
        }
      },
      "microsoft.graph.referenceAttachment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.attachment"
          },
          {
            "title": "referenceAttachment",
            "type": "object"
          }
        ],
        "example": {
          "id": "string (identifier)",
          "contentType": "string",
          "isInline": true,
          "lastModifiedDateTime": "string (timestamp)",
          "name": "string",
          "size": "integer"
        }
      },
      "microsoft.graph.onenoteResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.onenoteEntityBaseModel"
          },
          {
            "title": "onenoteResource",
            "type": "object",
            "properties": {
              "content": {
                "type": "string",
                "description": "The content stream",
                "format": "base64url",
                "nullable": true
              },
              "contentUrl": {
                "type": "string",
                "description": "The URL for downloading the content",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "self": "string",
          "content": "string",
          "contentUrl": "string"
        }
      },
      "microsoft.graph.schemaExtension": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "schemaExtension",
            "type": "object",
            "properties": {
              "description": {
                "type": "string",
                "description": "Description for the schema extension.",
                "nullable": true
              },
              "owner": {
                "type": "string",
                "description": "The appId of the application that is the owner of the schema extension. This property can be supplied on creation, to set the owner.  If not supplied, then the calling application's appId will be set as the owner. In either case, the signed-in user must be the owner of the application. Once set, this property is read-only and cannot be changed.",
                "nullable": true
              },
              "properties": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.extensionSchemaProperty"
                    }
                  ],
                  "nullable": true
                },
                "description": "The collection of property names and types that make up the schema extension definition."
              },
              "status": {
                "type": "string",
                "description": "The lifecycle state of the schema extension. Possible states are InDevelopment, Available, and Deprecated. Automatically set to InDevelopment on creation. Schema extensions provides more information on the possible state transitions and behaviors.",
                "nullable": true
              },
              "targetTypes": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "Set of Microsoft Graph types (that can support extensions) that the schema extension can be applied to. Select from contact, device, event, group, message, organization, post, or user."
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "description": "string",
          "owner": "string",
          "properties": [
            {
              "@odata.type": "microsoft.graph.extensionSchemaProperty"
            }
          ],
          "status": "string",
          "targetTypes": [
            "string"
          ]
        }
      },
      "microsoft.graph.onenoteSection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.onenoteEntityHierarchyModel"
          },
          {
            "title": "onenoteSection",
            "type": "object",
            "properties": {
              "isDefault": {
                "type": "boolean",
                "description": "Indicates whether this is the user's default section. Read-only.",
                "nullable": true
              },
              "links": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.sectionLinks"
                  }
                ],
                "description": "Links for opening the section. The oneNoteClientURL link opens the section in the OneNote native client if it's installed. The oneNoteWebURL link opens the section in OneNote Online.",
                "nullable": true
              },
              "pagesUrl": {
                "type": "string",
                "description": "The pages endpoint where you can get details for all the pages in the section. Read-only.",
                "nullable": true
              },
              "pages": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.onenotePage"
                }
              },
              "parentNotebook": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.notebook"
                  }
                ],
                "nullable": true
              },
              "parentSectionGroup": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.sectionGroup"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "self": "string",
          "createdDateTime": "string (timestamp)",
          "displayName": "string",
          "createdBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "lastModifiedBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "lastModifiedDateTime": "string (timestamp)",
          "isDefault": true,
          "links": {
            "@odata.type": "microsoft.graph.sectionLinks"
          },
          "pagesUrl": "string",
          "pages": [
            {
              "@odata.type": "microsoft.graph.onenotePage"
            }
          ],
          "parentNotebook": {
            "@odata.type": "microsoft.graph.notebook"
          },
          "parentSectionGroup": {
            "@odata.type": "microsoft.graph.sectionGroup"
          }
        }
      },
      "microsoft.graph.sectionGroup": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.onenoteEntityHierarchyModel"
          },
          {
            "title": "sectionGroup",
            "type": "object",
            "properties": {
              "sectionGroupsUrl": {
                "type": "string",
                "description": "The URL for the sectionGroups navigation property, which returns all the section groups in the section group. Read-only.",
                "nullable": true
              },
              "sectionsUrl": {
                "type": "string",
                "description": "The URL for the sections navigation property, which returns all the sections in the section group. Read-only.",
                "nullable": true
              },
              "parentNotebook": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.notebook"
                  }
                ],
                "nullable": true
              },
              "parentSectionGroup": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.sectionGroup"
                  }
                ],
                "nullable": true
              },
              "sectionGroups": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.sectionGroup"
                }
              },
              "sections": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.onenoteSection"
                }
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "self": "string",
          "createdDateTime": "string (timestamp)",
          "displayName": "string",
          "createdBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "lastModifiedBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "lastModifiedDateTime": "string (timestamp)",
          "sectionGroupsUrl": "string",
          "sectionsUrl": "string",
          "parentNotebook": {
            "@odata.type": "microsoft.graph.notebook"
          },
          "parentSectionGroup": {
            "@odata.type": "microsoft.graph.sectionGroup"
          },
          "sectionGroups": [
            {
              "@odata.type": "microsoft.graph.sectionGroup"
            }
          ],
          "sections": [
            {
              "@odata.type": "microsoft.graph.onenoteSection"
            }
          ]
        }
      },
      "microsoft.graph.security": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "security",
            "type": "object",
            "properties": {
              "alerts": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.alert"
                }
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "alerts": [
            {
              "@odata.type": "microsoft.graph.alert"
            }
          ]
        }
      },
      "microsoft.graph.sharedDriveItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.baseItem"
          },
          {
            "title": "sharedDriveItem",
            "type": "object",
            "properties": {
              "owner": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.identitySet"
                  }
                ],
                "description": "Information about the owner of the shared item being referenced.",
                "nullable": true
              },
              "driveItem": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.driveItem"
                  }
                ],
                "nullable": true
              },
              "items": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.driveItem"
                }
              },
              "list": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.list"
                  }
                ],
                "nullable": true
              },
              "listItem": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.listItem"
                  }
                ],
                "nullable": true
              },
              "root": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.driveItem"
                  }
                ],
                "nullable": true
              },
              "site": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.site"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "createdBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "createdDateTime": "string (timestamp)",
          "description": "string",
          "eTag": "string",
          "lastModifiedBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "lastModifiedDateTime": "string (timestamp)",
          "name": "string",
          "parentReference": {
            "@odata.type": "microsoft.graph.itemReference"
          },
          "webUrl": "string",
          "createdByUser": {
            "@odata.type": "microsoft.graph.user"
          },
          "lastModifiedByUser": {
            "@odata.type": "microsoft.graph.user"
          },
          "owner": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "driveItem": {
            "@odata.type": "microsoft.graph.driveItem"
          },
          "items": [
            {
              "@odata.type": "microsoft.graph.driveItem"
            }
          ],
          "list": {
            "@odata.type": "microsoft.graph.list"
          },
          "listItem": {
            "@odata.type": "microsoft.graph.listItem"
          },
          "root": {
            "@odata.type": "microsoft.graph.driveItem"
          },
          "site": {
            "@odata.type": "microsoft.graph.site"
          }
        }
      },
      "microsoft.graph.singleValueLegacyExtendedProperty": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "singleValueLegacyExtendedProperty",
            "type": "object",
            "properties": {
              "value": {
                "type": "string",
                "description": "A property value.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "value": "string"
        }
      },
      "microsoft.graph.site": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.baseItem"
          },
          {
            "title": "site",
            "type": "object",
            "properties": {
              "root": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.root"
                  }
                ],
                "description": "If present, indicates that this is the root site in the site collection. Read-only.",
                "nullable": true
              },
              "sharepointIds": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.sharepointIds"
                  }
                ],
                "description": "Returns identifiers useful for SharePoint REST compatibility. Read-only.",
                "nullable": true
              },
              "siteCollection": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.siteCollection"
                  }
                ],
                "description": "Provides details about the site's site collection. Available only on the root site. Read-only.",
                "nullable": true
              },
              "displayName": {
                "type": "string",
                "description": "The full title for the site. Read-only.",
                "nullable": true
              },
              "contentTypes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.contentType"
                }
              },
              "drive": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.drive"
                  }
                ],
                "nullable": true
              },
              "drives": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.drive"
                }
              },
              "items": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.baseItem"
                }
              },
              "lists": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.list"
                }
              },
              "sites": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.site"
                }
              },
              "columns": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.columnDefinition"
                }
              },
              "onenote": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.onenote"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "createdBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "createdDateTime": "string (timestamp)",
          "description": "string",
          "eTag": "string",
          "lastModifiedBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "lastModifiedDateTime": "string (timestamp)",
          "name": "string",
          "parentReference": {
            "@odata.type": "microsoft.graph.itemReference"
          },
          "webUrl": "string",
          "createdByUser": {
            "@odata.type": "microsoft.graph.user"
          },
          "lastModifiedByUser": {
            "@odata.type": "microsoft.graph.user"
          },
          "root": {
            "@odata.type": "microsoft.graph.root"
          },
          "sharepointIds": {
            "@odata.type": "microsoft.graph.sharepointIds"
          },
          "siteCollection": {
            "@odata.type": "microsoft.graph.siteCollection"
          },
          "displayName": "string",
          "contentTypes": [
            {
              "@odata.type": "microsoft.graph.contentType"
            }
          ],
          "drive": {
            "@odata.type": "microsoft.graph.drive"
          },
          "drives": [
            {
              "@odata.type": "microsoft.graph.drive"
            }
          ],
          "items": [
            {
              "@odata.type": "microsoft.graph.baseItem"
            }
          ],
          "lists": [
            {
              "@odata.type": "microsoft.graph.list"
            }
          ],
          "sites": [
            {
              "@odata.type": "microsoft.graph.site"
            }
          ],
          "columns": [
            {
              "@odata.type": "microsoft.graph.columnDefinition"
            }
          ],
          "onenote": {
            "@odata.type": "microsoft.graph.onenote"
          }
        }
      },
      "microsoft.graph.subscribedSku": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "subscribedSku",
            "type": "object",
            "properties": {
              "appliesTo": {
                "type": "string",
                "description": "For example, 'User' or 'Company'.",
                "nullable": true
              },
              "capabilityStatus": {
                "type": "string",
                "description": "For example, 'Enabled'.",
                "nullable": true
              },
              "consumedUnits": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The number of licenses that have been assigned.",
                "format": "int32",
                "nullable": true
              },
              "prepaidUnits": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.licenseUnitsDetail"
                  }
                ],
                "description": "Information about the number and status of prepaid licenses.",
                "nullable": true
              },
              "servicePlans": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.servicePlanInfo"
                    }
                  ],
                  "nullable": true
                },
                "description": "Information about the service plans that are available with the SKU. Not nullable"
              },
              "skuId": {
                "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                "type": "string",
                "description": "The unique identifier (GUID) for the service SKU.",
                "format": "uuid",
                "nullable": true
              },
              "skuPartNumber": {
                "type": "string",
                "description": "The SKU part number; for example: 'AAD_PREMIUM' or 'RMSBASIC'.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "appliesTo": "string",
          "capabilityStatus": "string",
          "consumedUnits": "integer",
          "prepaidUnits": {
            "@odata.type": "microsoft.graph.licenseUnitsDetail"
          },
          "servicePlans": [
            {
              "@odata.type": "microsoft.graph.servicePlanInfo"
            }
          ],
          "skuId": "string",
          "skuPartNumber": "string"
        }
      },
      "microsoft.graph.subscription": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "subscription",
            "type": "object",
            "properties": {
              "changeType": {
                "type": "string",
                "description": "Required. Indicates the type of change in the subscribed resource that will raise a notification. The supported values are: created, updated, deleted. Multiple values can be combined using a comma-separated list.Note: Drive root item notifications support only the updated changeType. User and group notifications support updated and deleted changeType.",
                "nullable": true
              },
              "notificationUrl": {
                "type": "string",
                "description": "Required. The URL of the endpoint that will receive the notifications. This URL must make use of the HTTPS protocol.",
                "nullable": true
              },
              "resource": {
                "type": "string",
                "description": "Required. Specifies the resource that will be monitored for changes. Do not include the base URL (https://graph.microsoft.com/v1.0/).",
                "nullable": true
              },
              "applicationId": {
                "type": "string",
                "description": "Identifier of the application used to create the subscription. Read-only.",
                "nullable": true
              },
              "expirationDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Required. Specifies the date and time when the webhook subscription expires. The time is in UTC, and can be an amount of time from subscription creation that varies for the resource subscribed to.  See the table below for maximum supported subscription length of time.",
                "format": "date-time",
                "nullable": true
              },
              "clientState": {
                "type": "string",
                "description": "Optional. Specifies the value of the clientState property sent by the service in each notification. The maximum length is 128 characters. The client can check that the notification came from the service by comparing the value of the clientState property sent with the subscription with the value of the clientState property received with each notification.",
                "nullable": true
              },
              "creatorId": {
                "type": "string",
                "description": "Identifier of the user or service principal that created the subscription. If the app used delegated permissions to create the subscription, this field contains the id of the signed-in user the app called on behalf of. If the app used application permissions, this field contains the id of the service principal corresponding to the app. Read-only.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "changeType": "string",
          "notificationUrl": "string",
          "resource": "string",
          "applicationId": "string",
          "expirationDateTime": "string (timestamp)",
          "clientState": "string",
          "creatorId": "string"
        }
      },
      "microsoft.graph.workbookTable": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookTable",
            "type": "object",
            "properties": {
              "highlightFirstColumn": {
                "type": "boolean",
                "description": "Indicates whether the first column contains special formatting.",
                "nullable": true
              },
              "highlightLastColumn": {
                "type": "boolean",
                "description": "Indicates whether the last column contains special formatting.",
                "nullable": true
              },
              "name": {
                "type": "string",
                "description": "Name of the table.",
                "nullable": true
              },
              "showBandedColumns": {
                "type": "boolean",
                "description": "Indicates whether the columns show banded formatting in which odd columns are highlighted differently from even ones to make reading the table easier.",
                "nullable": true
              },
              "showBandedRows": {
                "type": "boolean",
                "description": "Indicates whether the rows show banded formatting in which odd rows are highlighted differently from even ones to make reading the table easier.",
                "nullable": true
              },
              "showFilterButton": {
                "type": "boolean",
                "description": "Indicates whether the filter buttons are visible at the top of each column header. Setting this is only allowed if the table contains a header row.",
                "nullable": true
              },
              "showHeaders": {
                "type": "boolean",
                "description": "Indicates whether the header row is visible or not. This value can be set to show or remove the header row.",
                "nullable": true
              },
              "showTotals": {
                "type": "boolean",
                "description": "Indicates whether the total row is visible or not. This value can be set to show or remove the total row.",
                "nullable": true
              },
              "style": {
                "type": "string",
                "description": "Constant value that represents the Table style. The possible values are: TableStyleLight1 thru TableStyleLight21, TableStyleMedium1 thru TableStyleMedium28, TableStyleStyleDark1 thru TableStyleStyleDark11. A custom user-defined style present in the workbook can also be specified.",
                "nullable": true
              },
              "legacyId": {
                "type": "string",
                "description": "Legacy Id used in older Excle clients. The value of the identifier remains the same even when the table is renamed. This property should be interpreted as an opaque string value and should not be parsed to any other type. Read-only.",
                "nullable": true
              },
              "columns": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.workbookTableColumn"
                }
              },
              "rows": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.workbookTableRow"
                }
              },
              "sort": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookTableSort"
                  }
                ],
                "nullable": true
              },
              "worksheet": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookWorksheet"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "highlightFirstColumn": true,
          "highlightLastColumn": true,
          "name": "string",
          "showBandedColumns": true,
          "showBandedRows": true,
          "showFilterButton": true,
          "showHeaders": true,
          "showTotals": true,
          "style": "string",
          "legacyId": "string",
          "columns": [
            {
              "@odata.type": "microsoft.graph.workbookTableColumn"
            }
          ],
          "rows": [
            {
              "@odata.type": "microsoft.graph.workbookTableRow"
            }
          ],
          "sort": {
            "@odata.type": "microsoft.graph.workbookTableSort"
          },
          "worksheet": {
            "@odata.type": "microsoft.graph.workbookWorksheet"
          }
        }
      },
      "microsoft.graph.workbookTableColumn": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookTableColumn",
            "type": "object",
            "properties": {
              "index": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Returns the index number of the column within the columns collection of the table. Zero-indexed. Read-only.",
                "format": "int32",
                "nullable": true
              },
              "name": {
                "type": "string",
                "description": "Returns the name of the table column. Read-only.",
                "nullable": true
              },
              "values": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.Json"
                  }
                ],
                "description": "Represents the raw values of the specified range. The data returned could be of type string, number, or a boolean. Cell that contain an error will return the error string.",
                "nullable": true
              },
              "filter": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookFilter"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "index": "integer",
          "name": "string",
          "values": {
            "@odata.type": "microsoft.graph.Json"
          },
          "filter": {
            "@odata.type": "microsoft.graph.workbookFilter"
          }
        }
      },
      "microsoft.graph.workbookTableRow": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookTableRow",
            "type": "object",
            "properties": {
              "index": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Returns the index number of the row within the rows collection of the table. Zero-indexed. Read-only.",
                "format": "int32",
                "nullable": true
              },
              "values": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.Json"
                  }
                ],
                "description": "Represents the raw values of the specified range. The data returned could be of type string, number, or a boolean. Cell that contain an error will return the error string.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "index": "integer",
          "values": {
            "@odata.type": "microsoft.graph.Json"
          }
        }
      },
      "microsoft.graph.workbookTableSort": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookTableSort",
            "type": "object",
            "properties": {
              "matchCase": {
                "type": "boolean",
                "description": "Represents whether the casing impacted the last sort of the table. Read-only.",
                "nullable": true
              },
              "method": {
                "type": "string",
                "description": "Represents Chinese character ordering method last used to sort the table. The possible values are: PinYin, StrokeCount. Read-only.",
                "nullable": true
              },
              "fields": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/microsoft.graph.workbookSortField"
                    }
                  ],
                  "nullable": true
                },
                "description": "Represents the current conditions used to last sort the table. Read-only."
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "matchCase": true,
          "method": "string",
          "fields": [
            {
              "@odata.type": "microsoft.graph.workbookSortField"
            }
          ]
        }
      },
      "microsoft.graph.thumbnailSet": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "thumbnailSet",
            "type": "object",
            "properties": {
              "large": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.thumbnail"
                  }
                ],
                "description": "A 1920x1920 scaled thumbnail.",
                "nullable": true
              },
              "medium": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.thumbnail"
                  }
                ],
                "description": "A 176x176 scaled thumbnail.",
                "nullable": true
              },
              "small": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.thumbnail"
                  }
                ],
                "description": "A 48x48 cropped thumbnail.",
                "nullable": true
              },
              "source": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.thumbnail"
                  }
                ],
                "description": "A custom thumbnail image or the original image used to generate other thumbnails.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "large": {
            "@odata.type": "microsoft.graph.thumbnail"
          },
          "medium": {
            "@odata.type": "microsoft.graph.thumbnail"
          },
          "small": {
            "@odata.type": "microsoft.graph.thumbnail"
          },
          "source": {
            "@odata.type": "microsoft.graph.thumbnail"
          }
        }
      },
      "microsoft.graph.workbook": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbook",
            "type": "object",
            "properties": {
              "names": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.workbookNamedItem"
                }
              },
              "tables": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.workbookTable"
                }
              },
              "worksheets": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.workbookWorksheet"
                }
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "names": [
            {
              "@odata.type": "microsoft.graph.workbookNamedItem"
            }
          ],
          "tables": [
            {
              "@odata.type": "microsoft.graph.workbookTable"
            }
          ],
          "worksheets": [
            {
              "@odata.type": "microsoft.graph.workbookWorksheet"
            }
          ]
        }
      },
      "microsoft.graph.workbookPivotTable": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookPivotTable",
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the PivotTable.",
                "nullable": true
              },
              "worksheet": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookWorksheet"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "name": "string",
          "worksheet": {
            "@odata.type": "microsoft.graph.workbookWorksheet"
          }
        }
      },
      "microsoft.graph.workbookRangeView": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookRangeView",
            "type": "object",
            "properties": {
              "cellAddresses": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.Json"
                  }
                ],
                "description": "Represents the cell addresses",
                "nullable": true
              },
              "columnCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Returns the number of visible columns. Read-only.",
                "format": "int32",
                "nullable": true
              },
              "formulas": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.Json"
                  }
                ],
                "description": "Represents the formula in A1-style notation.",
                "nullable": true
              },
              "formulasLocal": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.Json"
                  }
                ],
                "description": "Represents the formula in A1-style notation, in the user's language and number-formatting locale. For example, the English '=SUM(A1, 1.5)' formula would become '=SUMME(A1; 1,5)' in German.",
                "nullable": true
              },
              "formulasR1C1": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.Json"
                  }
                ],
                "description": "Represents the formula in R1C1-style notation.",
                "nullable": true
              },
              "index": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Index of the range.",
                "format": "int32",
                "nullable": true
              },
              "numberFormat": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.Json"
                  }
                ],
                "description": "Represents Excel's number format code for the given cell. Read-only.",
                "nullable": true
              },
              "rowCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Returns the number of visible rows. Read-only.",
                "format": "int32",
                "nullable": true
              },
              "text": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.Json"
                  }
                ],
                "description": "Text values of the specified range. The Text value will not depend on the cell width. The # sign substitution that happens in Excel UI will not affect the text value returned by the API. Read-only.",
                "nullable": true
              },
              "valueTypes": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.Json"
                  }
                ],
                "description": "Represents the type of data of each cell. Read-only. The possible values are: Unknown, Empty, String, Integer, Double, Boolean, Error.",
                "nullable": true
              },
              "values": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.Json"
                  }
                ],
                "description": "Represents the raw values of the specified range view. The data returned could be of type string, number, or a boolean. Cell that contain an error will return the error string.",
                "nullable": true
              },
              "rows": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.workbookRangeView"
                }
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "cellAddresses": {
            "@odata.type": "microsoft.graph.Json"
          },
          "columnCount": "integer",
          "formulas": {
            "@odata.type": "microsoft.graph.Json"
          },
          "formulasLocal": {
            "@odata.type": "microsoft.graph.Json"
          },
          "formulasR1C1": {
            "@odata.type": "microsoft.graph.Json"
          },
          "index": "integer",
          "numberFormat": {
            "@odata.type": "microsoft.graph.Json"
          },
          "rowCount": "integer",
          "text": {
            "@odata.type": "microsoft.graph.Json"
          },
          "valueTypes": {
            "@odata.type": "microsoft.graph.Json"
          },
          "values": {
            "@odata.type": "microsoft.graph.Json"
          },
          "rows": [
            {
              "@odata.type": "microsoft.graph.workbookRangeView"
            }
          ]
        }
      },
      "microsoft.graph.workbookWorksheet": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookWorksheet",
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The display name of the worksheet.",
                "nullable": true
              },
              "position": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The zero-based position of the worksheet within the workbook.",
                "format": "int32",
                "nullable": true
              },
              "visibility": {
                "type": "string",
                "description": "The Visibility of the worksheet. The possible values are: Visible, Hidden, VeryHidden.",
                "nullable": true
              },
              "charts": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.workbookChart"
                }
              },
              "names": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.workbookNamedItem"
                }
              },
              "pivotTables": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.workbookPivotTable"
                }
              },
              "protection": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookWorksheetProtection"
                  }
                ],
                "nullable": true
              },
              "tables": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.workbookTable"
                }
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "name": "string",
          "position": "integer",
          "visibility": "string",
          "charts": [
            {
              "@odata.type": "microsoft.graph.workbookChart"
            }
          ],
          "names": [
            {
              "@odata.type": "microsoft.graph.workbookNamedItem"
            }
          ],
          "pivotTables": [
            {
              "@odata.type": "microsoft.graph.workbookPivotTable"
            }
          ],
          "protection": {
            "@odata.type": "microsoft.graph.workbookWorksheetProtection"
          },
          "tables": [
            {
              "@odata.type": "microsoft.graph.workbookTable"
            }
          ]
        }
      },
      "microsoft.graph.workbookWorksheetProtection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "workbookWorksheetProtection",
            "type": "object",
            "properties": {
              "protected": {
                "type": "boolean",
                "description": "Indicates if the worksheet is protected.  Read-only.",
                "nullable": true
              },
              "options": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.workbookWorksheetProtectionOptions"
                  }
                ],
                "description": "Sheet protection options. Read-only.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "id": "string (identifier)",
          "protected": true,
          "options": {
            "@odata.type": "microsoft.graph.workbookWorksheetProtectionOptions"
          }
        }
      },
      "microsoft.graph.driveItemUploadableProperties": {
        "title": "driveItemUploadableProperties",
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Provides a user-visible description of the item. Read-write. Only on OneDrive Personal",
            "nullable": true
          },
          "fileSystemInfo": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.fileSystemInfo"
              }
            ],
            "description": "File system information on client. Read-write.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The name of the item (filename and extension). Read-write.",
            "nullable": true
          }
        },
        "example": {
          "description": "string",
          "fileSystemInfo": {
            "@odata.type": "microsoft.graph.fileSystemInfo"
          },
          "name": "string"
        }
      },
      "microsoft.graph.alert": {
        "title": "alert",
        "type": "object",
        "properties": {
          "activityGroupName": {
            "type": "string",
            "description": "Name or alias of the activity group (attacker) this alert is attributed to.",
            "nullable": true
          },
          "assignedTo": {
            "type": "string",
            "description": "Name of the analyst the alert is assigned to for triage, investigation, or remediation (supports update).",
            "nullable": true
          },
          "azureSubscriptionId": {
            "type": "string",
            "description": "Azure subscription ID, present if this alert is related to an Azure resource.",
            "nullable": true
          },
          "azureTenantId": {
            "type": "string",
            "description": "Azure Active Directory tenant ID.",
            "nullable": true
          },
          "category": {
            "type": "string",
            "description": "Category of the alert (for example, credentialTheft, ransomware, etc.).",
            "nullable": true
          },
          "closedDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "description": "Time at which the alert was closed. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z' (supports update).",
            "format": "date-time",
            "nullable": true
          },
          "cloudAppStates": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.cloudAppSecurityState"
                }
              ],
              "nullable": true
            },
            "description": "Security-related stateful information generated by the provider about the cloud application/s related to this alert."
          },
          "comments": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true
            },
            "description": "Customer-provided comments on alert (for customer alert management) (supports update)."
          },
          "confidence": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Confidence of the detection logic (percentage between 1-100).",
            "format": "int32",
            "nullable": true
          },
          "createdDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "description": "Time at which the alert was created by the alert provider. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'.",
            "format": "date-time",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Alert description.",
            "nullable": true
          },
          "detectionIds": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true
            },
            "description": "Set of alerts related to this alert entity (each alert is pushed to the SIEM as a separate record)."
          },
          "eventDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "description": "Time at which the event(s) that served as the trigger(s) to generate the alert occurred. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'.",
            "format": "date-time",
            "nullable": true
          },
          "feedback": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.alertFeedback"
              }
            ],
            "description": "Analyst feedback on the alert. Possible values are: unknown, truePositive, falsePositive, benignPositive. (supports update)",
            "nullable": true
          },
          "fileStates": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.fileSecurityState"
                }
              ],
              "nullable": true
            },
            "description": "Security-related stateful information generated by the provider about the file(s) related to this alert."
          },
          "hostStates": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.hostSecurityState"
                }
              ],
              "nullable": true
            },
            "description": "Security-related stateful information generated by the provider about the host(s) related to this alert."
          },
          "id": {
            "type": "string",
            "description": "Provider-generated GUID/unique identifier. (Read-only)",
            "nullable": true
          },
          "lastModifiedDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "description": "Time at which the alert entity was last modified. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'.",
            "format": "date-time",
            "nullable": true
          },
          "malwareStates": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.malwareState"
                }
              ],
              "nullable": true
            },
            "description": "Threat Intelligence pertaining to malware related to this alert."
          },
          "networkConnections": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.networkConnection"
                }
              ],
              "nullable": true
            },
            "description": "Security-related stateful information generated by the provider about the network connection(s) related to this alert."
          },
          "processes": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.process"
                }
              ],
              "nullable": true
            },
            "description": "Security-related stateful information generated by the provider about the process or processes related to this alert."
          },
          "recommendedActions": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true
            },
            "description": "Vendor/provider recommended action(s) to take as a result of the alert (for example, isolate machine, enforce2FA, reimage host)."
          },
          "registryKeyStates": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.registryKeyState"
                }
              ],
              "nullable": true
            },
            "description": "Security-related stateful information generated by the provider about the registry keys related to this alert."
          },
          "severity": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.alertSeverity"
              }
            ],
            "description": "Alert severity - set by vendor/provider. Possible values are: unknown, informational, low, medium, high.",
            "nullable": true
          },
          "sourceMaterials": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true
            },
            "description": "Hyperlinks (URIs) to the source material related to the alert, for example, provider's user interface for alerts or log search, etc."
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.alertStatus"
              }
            ],
            "description": "Alert lifecycle status (stage). Possible values are: unknown, newAlert, inProgress, resolved. (supports update)",
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true
            },
            "description": "User-definable labels that can be applied to an alert and can serve as filter conditions (for example 'HVA', 'SAW', etc.) (supports update)."
          },
          "title": {
            "type": "string",
            "description": "Alert title.",
            "nullable": true
          },
          "triggers": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.alertTrigger"
                }
              ],
              "nullable": true
            },
            "description": "Security-related information about the specific properties that triggered the alert (properties appearing in the alert). Alerts might contain information about multiple users, hosts, files, ip addresses. This field indicates which properties triggered the alert generation."
          },
          "userStates": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.userSecurityState"
                }
              ],
              "nullable": true
            },
            "description": "Security-related stateful information generated by the provider about the user accounts related to this alert."
          },
          "vendorInformation": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.securityVendorInformation"
              }
            ],
            "description": "Complex type containing details about the security product/service vendor, provider, and subprovider (for example, vendor=Microsoft; provider=Windows Defender ATP; subProvider=AppLocker).",
            "nullable": true
          },
          "vulnerabilityStates": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.vulnerabilityState"
                }
              ],
              "nullable": true
            },
            "description": "Threat intelligence pertaining to one or more vulnerabilities related to this alert."
          }
        },
        "example": {
          "activityGroupName": "string",
          "assignedTo": "string",
          "azureSubscriptionId": "string",
          "azureTenantId": "string",
          "category": "string",
          "closedDateTime": "string (timestamp)",
          "cloudAppStates": [
            {
              "@odata.type": "microsoft.graph.cloudAppSecurityState"
            }
          ],
          "comments": [
            "string"
          ],
          "confidence": "integer",
          "createdDateTime": "string (timestamp)",
          "description": "string",
          "detectionIds": [
            "string"
          ],
          "eventDateTime": "string (timestamp)",
          "feedback": {
            "@odata.type": "microsoft.graph.alertFeedback"
          },
          "fileStates": [
            {
              "@odata.type": "microsoft.graph.fileSecurityState"
            }
          ],
          "hostStates": [
            {
              "@odata.type": "microsoft.graph.hostSecurityState"
            }
          ],
          "id": "string",
          "lastModifiedDateTime": "string (timestamp)",
          "malwareStates": [
            {
              "@odata.type": "microsoft.graph.malwareState"
            }
          ],
          "networkConnections": [
            {
              "@odata.type": "microsoft.graph.networkConnection"
            }
          ],
          "processes": [
            {
              "@odata.type": "microsoft.graph.process"
            }
          ],
          "recommendedActions": [
            "string"
          ],
          "registryKeyStates": [
            {
              "@odata.type": "microsoft.graph.registryKeyState"
            }
          ],
          "severity": {
            "@odata.type": "microsoft.graph.alertSeverity"
          },
          "sourceMaterials": [
            "string"
          ],
          "status": {
            "@odata.type": "microsoft.graph.alertStatus"
          },
          "tags": [
            "string"
          ],
          "title": "string",
          "triggers": [
            {
              "@odata.type": "microsoft.graph.alertTrigger"
            }
          ],
          "userStates": [
            {
              "@odata.type": "microsoft.graph.userSecurityState"
            }
          ],
          "vendorInformation": {
            "@odata.type": "microsoft.graph.securityVendorInformation"
          },
          "vulnerabilityStates": [
            {
              "@odata.type": "microsoft.graph.vulnerabilityState"
            }
          ]
        }
      },
      "microsoft.graph.alertTrigger": {
        "title": "alertTrigger",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the property serving as a detection trigger.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Type of the property in the key:value pair for interpretation. For example, String, Boolean, etc.",
            "nullable": true
          },
          "value": {
            "type": "string",
            "description": "Value of the property serving as a detection trigger.",
            "nullable": true
          }
        },
        "example": {
          "name": "string",
          "type": "string",
          "value": "string"
        }
      },
      "microsoft.graph.alternativeSecurityId": {
        "title": "alternativeSecurityId",
        "type": "object",
        "properties": {
          "type": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "For internal use only",
            "format": "int32",
            "nullable": true
          },
          "identityProvider": {
            "type": "string",
            "description": "For internal use only",
            "nullable": true
          },
          "key": {
            "type": "string",
            "description": "For internal use only",
            "format": "base64url",
            "nullable": true
          }
        },
        "example": {
          "type": "integer",
          "identityProvider": "string",
          "key": "string"
        }
      },
      "microsoft.graph.assignedLicense": {
        "title": "assignedLicense",
        "type": "object",
        "properties": {
          "disabledPlans": {
            "type": "array",
            "items": {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string",
              "format": "uuid",
              "nullable": true
            },
            "description": "A collection of the unique identifiers for plans that have been disabled."
          },
          "skuId": {
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "description": "The unique identifier for the SKU.",
            "format": "uuid",
            "nullable": true
          }
        },
        "example": {
          "disabledPlans": [
            "string"
          ],
          "skuId": "string"
        }
      },
      "microsoft.graph.assignedPlan": {
        "title": "assignedPlan",
        "type": "object",
        "properties": {
          "assignedDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "description": "The date and time at which the plan was assigned; for example: 2013-01-02T19:32:30Z. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'",
            "format": "date-time",
            "nullable": true
          },
          "capabilityStatus": {
            "type": "string",
            "description": "For example, 'Enabled'.",
            "nullable": true
          },
          "service": {
            "type": "string",
            "description": "The name of the service; for example, 'Exchange'.",
            "nullable": true
          },
          "servicePlanId": {
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "description": "A GUID that identifies the service plan.",
            "format": "uuid",
            "nullable": true
          }
        },
        "example": {
          "assignedDateTime": "string (timestamp)",
          "capabilityStatus": "string",
          "service": "string",
          "servicePlanId": "string"
        }
      },
      "microsoft.graph.recipient": {
        "title": "recipient",
        "type": "object",
        "properties": {
          "emailAddress": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.emailAddress"
              }
            ],
            "description": "The recipient's email address.",
            "nullable": true
          }
        },
        "example": {
          "emailAddress": {
            "@odata.type": "microsoft.graph.emailAddress"
          }
        }
      },
      "microsoft.graph.attendeeBase": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.recipient"
          },
          {
            "title": "attendeeBase",
            "type": "object",
            "properties": {
              "type": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.attendeeType"
                  }
                ],
                "description": "The type of attendee. The possible values are: required, optional, resource. Currently if the attendee is a person, findMeetingTimes always considers the person is of the Required type.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "emailAddress": {
            "@odata.type": "microsoft.graph.emailAddress"
          },
          "type": {
            "@odata.type": "microsoft.graph.attendeeType"
          }
        }
      },
      "microsoft.graph.attendee": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.attendeeBase"
          },
          {
            "title": "attendee",
            "type": "object",
            "properties": {
              "status": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.responseStatus"
                  }
                ],
                "description": "The attendee's response (none, accepted, declined, etc.) for the event and date-time that the response was sent.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "emailAddress": {
            "@odata.type": "microsoft.graph.emailAddress"
          },
          "type": {
            "@odata.type": "microsoft.graph.attendeeType"
          },
          "status": {
            "@odata.type": "microsoft.graph.responseStatus"
          }
        }
      },
      "microsoft.graph.attendeeAvailability": {
        "title": "attendeeAvailability",
        "type": "object",
        "properties": {
          "attendee": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.attendeeBase"
              }
            ],
            "description": "The type of attendee - whether it's a person or a resource, and whether required or optional if it's a person.",
            "nullable": true
          },
          "availability": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.freeBusyStatus"
              }
            ],
            "description": "The availability status of the attendee. The possible values are: free, tentative, busy, oof, workingElsewhere, unknown.",
            "nullable": true
          }
        },
        "example": {
          "attendee": {
            "@odata.type": "microsoft.graph.attendeeBase"
          },
          "availability": {
            "@odata.type": "microsoft.graph.freeBusyStatus"
          }
        }
      },
      "microsoft.graph.audio": {
        "title": "audio",
        "type": "object",
        "properties": {
          "album": {
            "type": "string",
            "description": "The title of the album for this audio file.",
            "nullable": true
          },
          "albumArtist": {
            "type": "string",
            "description": "The artist named on the album for the audio file.",
            "nullable": true
          },
          "artist": {
            "type": "string",
            "description": "The performing artist for the audio file.",
            "nullable": true
          },
          "bitrate": {
            "type": "integer",
            "description": "Bitrate expressed in kbps.",
            "format": "int64",
            "nullable": true
          },
          "composers": {
            "type": "string",
            "description": "The name of the composer of the audio file.",
            "nullable": true
          },
          "copyright": {
            "type": "string",
            "description": "Copyright information for the audio file.",
            "nullable": true
          },
          "disc": {
            "maximum": 32767,
            "minimum": -32768,
            "type": "integer",
            "description": "The number of the disc this audio file came from.",
            "format": "int16",
            "nullable": true
          },
          "discCount": {
            "maximum": 32767,
            "minimum": -32768,
            "type": "integer",
            "description": "The total number of discs in this album.",
            "format": "int16",
            "nullable": true
          },
          "duration": {
            "type": "integer",
            "description": "Duration of the audio file, expressed in milliseconds",
            "format": "int64",
            "nullable": true
          },
          "genre": {
            "type": "string",
            "description": "The genre of this audio file.",
            "nullable": true
          },
          "hasDrm": {
            "type": "boolean",
            "description": "Indicates if the file is protected with digital rights management.",
            "nullable": true
          },
          "isVariableBitrate": {
            "type": "boolean",
            "description": "Indicates if the file is encoded with a variable bitrate.",
            "nullable": true
          },
          "title": {
            "type": "string",
            "description": "The title of the audio file.",
            "nullable": true
          },
          "track": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "The number of the track on the original disc for this audio file.",
            "format": "int32",
            "nullable": true
          },
          "trackCount": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "The total number of tracks on the original disc for this audio file.",
            "format": "int32",
            "nullable": true
          },
          "year": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "The year the audio file was recorded.",
            "format": "int32",
            "nullable": true
          }
        },
        "example": {
          "album": "string",
          "albumArtist": "string",
          "artist": "string",
          "bitrate": "integer",
          "composers": "string",
          "copyright": "string",
          "disc": "integer",
          "discCount": "integer",
          "duration": "integer",
          "genre": "string",
          "hasDrm": true,
          "isVariableBitrate": true,
          "title": "string",
          "track": "integer",
          "trackCount": "integer",
          "year": "integer"
        }
      },
      "microsoft.graph.automaticRepliesMailTips": {
        "title": "automaticRepliesMailTips",
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "The automatic reply message.",
            "nullable": true
          },
          "messageLanguage": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.localeInfo"
              }
            ],
            "description": "The language that the automatic reply message is in.",
            "nullable": true
          },
          "scheduledEndTime": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.dateTimeTimeZone"
              }
            ],
            "description": "The date and time that automatic replies are set to end.",
            "nullable": true
          },
          "scheduledStartTime": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.dateTimeTimeZone"
              }
            ],
            "description": "The date and time that automatic replies are set to begin.",
            "nullable": true
          }
        },
        "example": {
          "message": "string",
          "messageLanguage": {
            "@odata.type": "microsoft.graph.localeInfo"
          },
          "scheduledEndTime": {
            "@odata.type": "microsoft.graph.dateTimeTimeZone"
          },
          "scheduledStartTime": {
            "@odata.type": "microsoft.graph.dateTimeTimeZone"
          }
        }
      },
      "microsoft.graph.automaticRepliesSetting": {
        "title": "automaticRepliesSetting",
        "type": "object",
        "properties": {
          "externalAudience": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.externalAudienceScope"
              }
            ],
            "description": "The set of audience external to the signed-in user's organization who will receive the ExternalReplyMessage, if Status is AlwaysEnabled or Scheduled. The possible values are: none, contactsOnly, all.",
            "nullable": true
          },
          "externalReplyMessage": {
            "type": "string",
            "description": "The automatic reply to send to the specified external audience, if Status is AlwaysEnabled or Scheduled.",
            "nullable": true
          },
          "internalReplyMessage": {
            "type": "string",
            "description": "The automatic reply to send to the audience internal to the signed-in user's organization, if Status is AlwaysEnabled or Scheduled.",
            "nullable": true
          },
          "scheduledEndDateTime": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.dateTimeTimeZone"
              }
            ],
            "description": "The date and time that automatic replies are set to end, if Status is set to Scheduled.",
            "nullable": true
          },
          "scheduledStartDateTime": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.dateTimeTimeZone"
              }
            ],
            "description": "The date and time that automatic replies are set to begin, if Status is set to Scheduled.",
            "nullable": true
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.automaticRepliesStatus"
              }
            ],
            "description": "Configurations status for automatic replies. The possible values are: disabled, alwaysEnabled, scheduled.",
            "nullable": true
          }
        },
        "example": {
          "externalAudience": {
            "@odata.type": "microsoft.graph.externalAudienceScope"
          },
          "externalReplyMessage": "string",
          "internalReplyMessage": "string",
          "scheduledEndDateTime": {
            "@odata.type": "microsoft.graph.dateTimeTimeZone"
          },
          "scheduledStartDateTime": {
            "@odata.type": "microsoft.graph.dateTimeTimeZone"
          },
          "status": {
            "@odata.type": "microsoft.graph.automaticRepliesStatus"
          }
        }
      },
      "microsoft.graph.booleanColumn": {
        "title": "booleanColumn",
        "type": "object"
      },
      "microsoft.graph.calculatedColumn": {
        "title": "calculatedColumn",
        "type": "object",
        "properties": {
          "format": {
            "type": "string",
            "description": "For dateTime output types, the format of the value. Must be one of dateOnly or dateTime.",
            "nullable": true
          },
          "formula": {
            "type": "string",
            "description": "The formula used to compute the value for this column.",
            "nullable": true
          },
          "outputType": {
            "type": "string",
            "description": "The output type used to format values in this column. Must be one of boolean, currency, dateTime, number, or text.",
            "nullable": true
          }
        },
        "example": {
          "format": "string",
          "formula": "string",
          "outputType": "string"
        }
      },
      "microsoft.graph.choiceColumn": {
        "title": "choiceColumn",
        "type": "object",
        "properties": {
          "allowTextEntry": {
            "type": "boolean",
            "description": "If true, allows custom values that aren't in the configured choices.",
            "nullable": true
          },
          "choices": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true
            },
            "description": "The list of values available for this column."
          },
          "displayAs": {
            "type": "string",
            "description": "How the choices are to be presented in the UX. Must be one of checkBoxes, dropDownMenu, or radioButtons",
            "nullable": true
          }
        },
        "example": {
          "allowTextEntry": true,
          "choices": [
            "string"
          ],
          "displayAs": "string"
        }
      },
      "microsoft.graph.cloudAppSecurityState": {
        "title": "cloudAppSecurityState",
        "type": "object",
        "properties": {
          "destinationServiceIp": {
            "type": "string",
            "description": "Destination IP Address of the connection to the cloud application/service.",
            "nullable": true
          },
          "destinationServiceName": {
            "type": "string",
            "description": "Cloud application/service name (for example 'Salesforce', 'DropBox', etc.).",
            "nullable": true
          },
          "riskScore": {
            "type": "string",
            "description": "Provider-generated/calculated risk score of the Cloud Application/Service. Recommended value range of 0-1, which equates to a percentage.",
            "nullable": true
          }
        },
        "example": {
          "destinationServiceIp": "string",
          "destinationServiceName": "string",
          "riskScore": "string"
        }
      },
      "microsoft.graph.contentTypeInfo": {
        "title": "contentTypeInfo",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The id of the content type.",
            "nullable": true
          }
        },
        "example": {
          "id": "string"
        }
      },
      "microsoft.graph.contentTypeOrder": {
        "title": "contentTypeOrder",
        "type": "object",
        "properties": {
          "default": {
            "type": "boolean",
            "description": "Whether this is the default Content Type",
            "nullable": true
          },
          "position": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Specifies the position in which the Content Type appears in the selection UI.",
            "format": "int32",
            "nullable": true
          }
        },
        "example": {
          "default": true,
          "position": "integer"
        }
      },
      "microsoft.graph.currencyColumn": {
        "title": "currencyColumn",
        "type": "object",
        "properties": {
          "locale": {
            "type": "string",
            "description": "Specifies the locale from which to infer the currency symbol.",
            "nullable": true
          }
        },
        "example": {
          "locale": "string"
        }
      },
      "microsoft.graph.timeZoneBase": {
        "title": "timeZoneBase",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of a time zone. It can be a standard time zone name such as 'Hawaii-Aleutian Standard Time', or 'Customized Time Zone' for a custom time zone.",
            "nullable": true
          }
        },
        "example": {
          "name": "string"
        }
      },
      "microsoft.graph.customTimeZone": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.timeZoneBase"
          },
          {
            "title": "customTimeZone",
            "type": "object",
            "properties": {
              "bias": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The time offset of the time zone from Coordinated Universal Time (UTC). This value is in minutes. Time zones that are ahead of UTC have a positive offset; time zones that are behind UTC have a negative offset.",
                "format": "int32",
                "nullable": true
              },
              "daylightOffset": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.daylightTimeZoneOffset"
                  }
                ],
                "description": "Specifies when the time zone switches from standard time to daylight saving time.",
                "nullable": true
              },
              "standardOffset": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/microsoft.graph.standardTimeZoneOffset"
                  }
                ],
                "description": "Specifies when the time zone switches from daylight saving time to standard time.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "name": "string",
          "bias": "integer",
          "daylightOffset": {
            "@odata.type": "microsoft.graph.daylightTimeZoneOffset"
          },
          "standardOffset": {
            "@odata.type": "microsoft.graph.standardTimeZoneOffset"
          }
        }
      },
      "microsoft.graph.dateTimeColumn": {
        "title": "dateTimeColumn",
        "type": "object",
        "properties": {
          "displayAs": {
            "type": "string",
            "description": "How the value should be presented in the UX. Must be one of default, friendly, or standard. See below for more details. If unspecified, treated as default.",
            "nullable": true
          },
          "format": {
            "type": "string",
            "description": "Indicates whether the value should be presented as a date only or a date and time. Must be one of dateOnly or dateTime",
            "nullable": true
          }
        },
        "example": {
          "displayAs": "string",
          "format": "string"
        }
      },
      "microsoft.graph.dateTimeTimeZone": {
        "title": "dateTimeTimeZone",
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "A single point of time in a combined date and time representation (<date>T<time>).",
            "nullable": true
          },
          "timeZone": {
            "type": "string",
            "description": "One of the following time zone names.",
            "nullable": true
          }
        },
        "example": {
          "dateTime": "string",
          "timeZone": "string"
        }
      },
      "microsoft.graph.standardTimeZoneOffset": {
        "title": "standardTimeZoneOffset",
        "type": "object",
        "properties": {
          "dayOccurrence": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Represents the nth occurrence of the day of week that the transition from daylight saving time to standard time occurs.",
            "format": "int32",
            "nullable": true
          },
          "dayOfWeek": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.dayOfWeek"
              }
            ],
            "description": "Represents the day of the week when the transition from daylight saving time to standard time.",
            "nullable": true
          },
          "month": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Represents the month of the year when the transition from daylight saving time to standard time occurs.",
            "format": "int32",
            "nullable": true
          },
          "time": {
            "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?$",
            "type": "string",
            "description": "Represents the time of day when the transition from daylight saving time to standard time occurs.",
            "format": "time",
            "nullable": true
          },
          "year": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Represents how frequently in terms of years the change from daylight saving time to standard time occurs. For example, a value of 0 means every year.",
            "format": "int32",
            "nullable": true
          }
        },
        "example": {
          "dayOccurrence": "integer",
          "dayOfWeek": {
            "@odata.type": "microsoft.graph.dayOfWeek"
          },
          "month": "integer",
          "time": "string (timestamp)",
          "year": "integer"
        }
      },
      "microsoft.graph.daylightTimeZoneOffset": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.standardTimeZoneOffset"
          },
          {
            "title": "daylightTimeZoneOffset",
            "type": "object",
            "properties": {
              "daylightBias": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The time offset from Coordinated Universal Time (UTC) for daylight saving time. This value is in minutes.",
                "format": "int32",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "dayOccurrence": "integer",
          "dayOfWeek": {
            "@odata.type": "microsoft.graph.dayOfWeek"
          },
          "month": "integer",
          "time": "string (timestamp)",
          "year": "integer",
          "daylightBias": "integer"
        }
      },
      "microsoft.graph.defaultColumnValue": {
        "title": "defaultColumnValue",
        "type": "object",
        "properties": {
          "formula": {
            "type": "string",
            "description": "The formula used to compute the default value for this column.",
            "nullable": true
          },
          "value": {
            "type": "string",
            "description": "The direct value to use as the default value for this column.",
            "nullable": true
          }
        },
        "example": {
          "formula": "string",
          "value": "string"
        }
      },
      "microsoft.graph.deleted": {
        "title": "deleted",
        "type": "object",
        "properties": {
          "state": {
            "type": "string",
            "description": "Represents the state of the deleted item.",
            "nullable": true
          }
        },
        "example": {
          "state": "string"
        }
      },
      "microsoft.graph.domainState": {
        "title": "domainState",
        "type": "object",
        "properties": {
          "lastActionDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "description": "Timestamp for when the last activity occurred. The value is updated when an operation is scheduled, the asynchronous task starts, and when the operation completes.",
            "format": "date-time",
            "nullable": true
          },
          "operation": {
            "type": "string",
            "description": "Type of asynchronous operation. The values can be ForceDelete or Verification",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Current status of the operation.  Scheduled - Operation has been scheduled but has not started.  InProgress - Task has started and is in progress.  Failed - Operation has failed.",
            "nullable": true
          }
        },
        "example": {
          "lastActionDateTime": "string (timestamp)",
          "operation": "string",
          "status": "string"
        }
      },
      "microsoft.graph.driveRecipient": {
        "title": "driveRecipient",
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "The email address for the recipient, if the recipient has an associated email address.",
            "nullable": true
          },
          "alias": {
            "type": "string",
            "description": "The alias of the domain object, for cases where an email address is unavailable (e.g. security groups).",
            "nullable": true
          },
          "objectId": {
            "type": "string",
            "description": "The unique identifier for the recipient in the directory.",
            "nullable": true
          }
        },
        "example": {
          "email": "string",
          "alias": "string",
          "objectId": "string"
        }
      },
      "microsoft.graph.educationStudent": {
        "title": "educationStudent",
        "type": "object",
        "properties": {
          "birthDate": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
            "type": "string",
            "description": "Birth date of the student.",
            "format": "date",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "description": "ID of the student in the source system.",
            "nullable": true
          },
          "gender": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.educationGender"
              }
            ],
            "description": "The possible values are: female, male, other, unknownFutureValue.",
            "nullable": true
          },
          "grade": {
            "type": "string",
            "description": "Current grade level of the student.",
            "nullable": true
          },
          "graduationYear": {
            "type": "string",
            "description": "Year the student is graduating from the school.",
            "nullable": true
          },
          "studentNumber": {
            "type": "string",
            "description": "Student Number.",
            "nullable": true
          }
        },
        "example": {
          "birthDate": "string (timestamp)",
          "externalId": "string",
          "gender": {
            "@odata.type": "microsoft.graph.educationGender"
          },
          "grade": "string",
          "graduationYear": "string",
          "studentNumber": "string"
        }
      },
      "microsoft.graph.educationTeacher": {
        "title": "educationTeacher",
        "type": "object",
        "properties": {
          "externalId": {
            "type": "string",
            "description": "ID of the teacher in the source system.",
            "nullable": true
          },
          "teacherNumber": {
            "type": "string",
            "description": "Teacher number.",
            "nullable": true
          }
        },
        "example": {
          "externalId": "string",
          "teacherNumber": "string"
        }
      },
      "microsoft.graph.educationTerm": {
        "title": "educationTerm",
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "description": "Display name of the term.",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "description": "ID of term in the syncing system.",
            "nullable": true
          },
          "startDate": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
            "type": "string",
            "description": "Start of the term.",
            "format": "date",
            "nullable": true
          },
          "endDate": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
            "type": "string",
            "description": "End of the term.",
            "format": "date",
            "nullable": true
          }
        },
        "example": {
          "displayName": "string",
          "externalId": "string",
          "startDate": "string (timestamp)",
          "endDate": "string (timestamp)"
        }
      },
      "microsoft.graph.emailAddress": {
        "title": "emailAddress",
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "description": "The email address of the person or entity.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The display name of the person or entity.",
            "nullable": true
          }
        },
        "example": {
          "address": "string",
          "name": "string"
        }
      },
      "microsoft.graph.extensionSchemaProperty": {
        "title": "extensionSchemaProperty",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the strongly-typed property defined as part of a schema extension.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "The type of the property that is defined as part of a schema extension.  Allowed values are Binary, Boolean, DateTime, Integer or String.  See the table below for more details.",
            "nullable": true
          }
        },
        "example": {
          "name": "string",
          "type": "string"
        }
      },
      "microsoft.graph.externalLink": {
        "title": "externalLink",
        "type": "object",
        "properties": {
          "href": {
            "type": "string",
            "description": "The url of the link.",
            "nullable": true
          }
        },
        "example": {
          "href": "string"
        }
      },
      "microsoft.graph.file": {
        "title": "file",
        "type": "object",
        "properties": {
          "hashes": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.hashes"
              }
            ],
            "description": "Hashes of the file's binary content, if available. Read-only.",
            "nullable": true
          },
          "mimeType": {
            "type": "string",
            "description": "The MIME type for the file. This is determined by logic on the server and might not be the value provided when the file was uploaded. Read-only.",
            "nullable": true
          }
        },
        "example": {
          "hashes": {
            "@odata.type": "microsoft.graph.hashes"
          },
          "mimeType": "string"
        }
      },
      "microsoft.graph.fileHash": {
        "title": "fileHash",
        "type": "object",
        "properties": {
          "hashType": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.fileHashType"
              }
            ],
            "description": "File hash type. Possible values are: unknown, sha1, sha256, md5, authenticodeHash256, lsHash, ctph, peSha1, peSha256.",
            "nullable": true
          },
          "hashValue": {
            "type": "string",
            "description": "Value of the file hash.",
            "nullable": true
          }
        },
        "example": {
          "hashType": {
            "@odata.type": "microsoft.graph.fileHashType"
          },
          "hashValue": "string"
        }
      },
      "microsoft.graph.fileSecurityState": {
        "title": "fileSecurityState",
        "type": "object",
        "properties": {
          "fileHash": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.fileHash"
              }
            ],
            "description": "Complex type containing file hashes (cryptographic and location-sensitive).",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "File name (without path).",
            "nullable": true
          },
          "path": {
            "type": "string",
            "description": "Full file path of the file/imageFile.",
            "nullable": true
          },
          "riskScore": {
            "type": "string",
            "description": "Provider generated/calculated risk score of the alert file. Recommended value range of 0-1, which equates to a percentage.",
            "nullable": true
          }
        },
        "example": {
          "fileHash": {
            "@odata.type": "microsoft.graph.fileHash"
          },
          "name": "string",
          "path": "string",
          "riskScore": "string"
        }
      },
      "microsoft.graph.fileSystemInfo": {
        "title": "fileSystemInfo",
        "type": "object",
        "properties": {
          "createdDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "description": "The UTC date and time the file was created on a client.",
            "format": "date-time",
            "nullable": true
          },
          "lastAccessedDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "description": "The UTC date and time the file was last accessed. Available for the recent file list only.",
            "format": "date-time",
            "nullable": true
          },
          "lastModifiedDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "description": "The UTC date and time the file was last modified on a client.",
            "format": "date-time",
            "nullable": true
          }
        },
        "example": {
          "createdDateTime": "string (timestamp)",
          "lastAccessedDateTime": "string (timestamp)",
          "lastModifiedDateTime": "string (timestamp)"
        }
      },
      "microsoft.graph.workbookFilterCriteria": {
        "title": "workbookFilterCriteria",
        "type": "object",
        "properties": {
          "color": {
            "type": "string",
            "nullable": true
          },
          "criterion1": {
            "type": "string",
            "nullable": true
          },
          "criterion2": {
            "type": "string",
            "nullable": true
          },
          "dynamicCriteria": {
            "type": "string",
            "nullable": true
          },
          "filterOn": {
            "type": "string",
            "nullable": true
          },
          "icon": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.workbookIcon"
              }
            ],
            "nullable": true
          },
          "values": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.Json"
              }
            ],
            "nullable": true
          }
        },
        "example": {
          "color": "string",
          "criterion1": "string",
          "criterion2": "string",
          "dynamicCriteria": "string",
          "filterOn": "string",
          "icon": {
            "@odata.type": "microsoft.graph.workbookIcon"
          },
          "values": {
            "@odata.type": "microsoft.graph.Json"
          }
        }
      },
      "microsoft.graph.workbookFilterDateTime": {
        "title": "workbookFilterDateTime",
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "description": "The date in ISO8601 format used to filter data.",
            "nullable": true
          },
          "specificity": {
            "type": "string",
            "description": "How specific the date should be used to keep data. For example, if the date is 2005-04-02 and the specifity is set to 'month', the filter operation will keep all rows with a date in the month of april 2009. The possible values are: Year, Monday, Day, Hour, Minute, Second.",
            "nullable": true
          }
        },
        "example": {
          "date": "string",
          "specificity": "string"
        }
      },
      "microsoft.graph.folder": {
        "title": "folder",
        "type": "object",
        "properties": {
          "childCount": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Number of children contained immediately within this container.",
            "format": "int32",
            "nullable": true
          },
          "view": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.folderView"
              }
            ],
            "description": "A collection of properties defining the recommended view for the folder.",
            "nullable": true
          }
        },
        "example": {
          "childCount": "integer",
          "view": {
            "@odata.type": "microsoft.graph.folderView"
          }
        }
      },
      "microsoft.graph.folderView": {
        "title": "folderView",
        "type": "object",
        "properties": {
          "sortBy": {
            "type": "string",
            "description": "The method by which the folder should be sorted.",
            "nullable": true
          },
          "sortOrder": {
            "type": "string",
            "description": "If true, indicates that items should be sorted in descending order. Otherwise, items should be sorted ascending.",
            "nullable": true
          },
          "viewType": {
            "type": "string",
            "description": "The type of view that should be used to represent the folder.",
            "nullable": true
          }
        },
        "example": {
          "sortBy": "string",
          "sortOrder": "string",
          "viewType": "string"
        }
      },
      "microsoft.graph.followupFlag": {
        "title": "followupFlag",
        "type": "object",
        "properties": {
          "completedDateTime": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.dateTimeTimeZone"
              }
            ],
            "description": "The date and time that the follow-up was finished.",
            "nullable": true
          },
          "dueDateTime": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.dateTimeTimeZone"
              }
            ],
            "description": "The date and time that the follow-up is to be finished.",
            "nullable": true
          },
          "flagStatus": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.followupFlagStatus"
              }
            ],
            "description": "The status for follow-up for an item. Possible values are notFlagged, complete, and flagged.",
            "nullable": true
          },
          "startDateTime": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.dateTimeTimeZone"
              }
            ],
            "description": "The date and time that the follow-up is to begin.",
            "nullable": true
          }
        },
        "example": {
          "completedDateTime": {
            "@odata.type": "microsoft.graph.dateTimeTimeZone"
          },
          "dueDateTime": {
            "@odata.type": "microsoft.graph.dateTimeTimeZone"
          },
          "flagStatus": {
            "@odata.type": "microsoft.graph.followupFlagStatus"
          },
          "startDateTime": {
            "@odata.type": "microsoft.graph.dateTimeTimeZone"
          }
        }
      },
      "microsoft.graph.geoCoordinates": {
        "title": "geoCoordinates",
        "type": "object",
        "properties": {
          "altitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "enum": [
                  "-INF",
                  "INF",
                  "NaN"
                ]
              }
            ],
            "description": "Optional. The altitude (height), in feet,  above sea level for the item. Read-only.",
            "format": "double",
            "nullable": true
          },
          "latitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "enum": [
                  "-INF",
                  "INF",
                  "NaN"
                ]
              }
            ],
            "description": "Optional. The latitude, in decimal, for the item. Read-only.",
            "format": "double",
            "nullable": true
          },
          "longitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "enum": [
                  "-INF",
                  "INF",
                  "NaN"
                ]
              }
            ],
            "description": "Optional. The longitude, in decimal, for the item. Read-only.",
            "format": "double",
            "nullable": true
          }
        },
        "example": {
          "altitude": "double",
          "latitude": "double",
          "longitude": "double"
        }
      },
      "microsoft.graph.hashes": {
        "title": "hashes",
        "type": "object",
        "properties": {
          "crc32Hash": {
            "type": "string",
            "description": "The CRC32 value of the file in little endian (if available). Read-only.",
            "nullable": true
          },
          "sha1Hash": {
            "type": "string",
            "description": "SHA1 hash for the contents of the file (if available). Read-only.",
            "nullable": true
          },
          "quickXorHash": {
            "type": "string",
            "description": "A proprietary hash of the file that can be used to determine if the contents of the file have changed (if available). Read-only.",
            "nullable": true
          }
        },
        "example": {
          "crc32Hash": "string",
          "sha1Hash": "string",
          "quickXorHash": "string"
        }
      },
      "microsoft.graph.hostSecurityState": {
        "title": "hostSecurityState",
        "type": "object",
        "properties": {
          "fqdn": {
            "type": "string",
            "description": "Host FQDN (Fully Qualified Domain Name) (for example, machine.company.com).",
            "nullable": true
          },
          "isAzureAadJoined": {
            "type": "boolean",
            "description": "True if the host is domain joined to Azure Active Directory Domain Services.",
            "nullable": true
          },
          "isAzureAadRegistered": {
            "type": "boolean",
            "description": "True if the host registered with Azure Active Directory Device Registration (BYOD devices - that is, not fully managed by enterprise).",
            "nullable": true
          },
          "isHybridAzureDomainJoined": {
            "type": "boolean",
            "description": "True if the host is domain joined to an on-premises Active Directory domain.",
            "nullable": true
          },
          "netBiosName": {
            "type": "string",
            "description": "The local host name, without the DNS domain name.",
            "nullable": true
          },
          "os": {
            "type": "string",
            "description": "Host Operating System. (For example, Windows10, MacOS, RHEL, etc.).",
            "nullable": true
          },
          "privateIpAddress": {
            "type": "string",
            "description": "Private (not routable) IPv4 or IPv6 address (see RFC 1918) at the time of the alert.",
            "nullable": true
          },
          "publicIpAddress": {
            "type": "string",
            "description": "Publicly routable IPv4 or IPv6 address (see RFC 1918) at time of the alert.",
            "nullable": true
          },
          "riskScore": {
            "type": "string",
            "description": "Provider-generated/calculated risk score of the host.  Recommended value range of 0-1, which equates to a percentage.",
            "nullable": true
          }
        },
        "example": {
          "fqdn": "string",
          "isAzureAadJoined": true,
          "isAzureAadRegistered": true,
          "isHybridAzureDomainJoined": true,
          "netBiosName": "string",
          "os": "string",
          "privateIpAddress": "string",
          "publicIpAddress": "string",
          "riskScore": "string"
        }
      },
      "microsoft.graph.workbookIcon": {
        "title": "workbookIcon",
        "type": "object",
        "properties": {
          "index": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Represents the index of the icon in the given set.",
            "format": "int32",
            "nullable": true
          },
          "set": {
            "type": "string",
            "description": "Represents the set that the icon is part of. The possible values are: Invalid, ThreeArrows, ThreeArrowsGray, ThreeFlags, ThreeTrafficLights1, ThreeTrafficLights2, ThreeSigns, ThreeSymbols, ThreeSymbols2, FourArrows, FourArrowsGray, FourRedToBlack, FourRating, FourTrafficLights, FiveArrows, FiveArrowsGray, FiveRating, FiveQuarters, ThreeStars, ThreeTriangles, FiveBoxes.",
            "nullable": true
          }
        },
        "example": {
          "index": "integer",
          "set": "string"
        }
      },
      "microsoft.graph.identity": {
        "title": "identity",
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "description": "The identity's display name. Note that this may not always be available or up to date. For example, if a user changes their display name, the API may show the new value in a future response, but the items associated with the user won't show up as having changed when using delta.",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "Unique identifier for the identity.",
            "nullable": true
          }
        },
        "example": {
          "displayName": "string",
          "id": "string"
        }
      },
      "microsoft.graph.identitySet": {
        "title": "identitySet",
        "type": "object",
        "properties": {
          "application": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.identity"
              }
            ],
            "description": "Optional. The application associated with this action.",
            "nullable": true
          },
          "device": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.identity"
              }
            ],
            "description": "Optional. The device associated with this action.",
            "nullable": true
          },
          "user": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.identity"
              }
            ],
            "description": "Optional. The user associated with this action.",
            "nullable": true
          }
        },
        "example": {
          "application": {
            "@odata.type": "microsoft.graph.identity"
          },
          "device": {
            "@odata.type": "microsoft.graph.identity"
          },
          "user": {
            "@odata.type": "microsoft.graph.identity"
          }
        }
      },
      "microsoft.graph.image": {
        "title": "image",
        "type": "object",
        "properties": {
          "width": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Optional. Width of the image, in pixels. Read-only.",
            "format": "int32",
            "nullable": true
          },
          "height": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Optional. Height of the image, in pixels. Read-only.",
            "format": "int32",
            "nullable": true
          }
        },
        "example": {
          "width": "integer",
          "height": "integer"
        }
      },
      "microsoft.graph.internetMessageHeader": {
        "title": "internetMessageHeader",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Represents the key in a key-value pair.",
            "nullable": true
          },
          "value": {
            "type": "string",
            "description": "The value in a key-value pair.",
            "nullable": true
          }
        },
        "example": {
          "name": "string",
          "value": "string"
        }
      },
      "microsoft.graph.androidMinimumOperatingSystem": {
        "title": "androidMinimumOperatingSystem",
        "type": "object",
        "properties": {
          "v4_0": {
            "type": "boolean",
            "description": "Version 4.0 or later.",
            "nullable": true
          },
          "v4_0_3": {
            "type": "boolean",
            "description": "Version 4.0.3 or later.",
            "nullable": true
          },
          "v4_1": {
            "type": "boolean",
            "description": "Version 4.1 or later.",
            "nullable": true
          },
          "v4_2": {
            "type": "boolean",
            "description": "Version 4.2 or later.",
            "nullable": true
          },
          "v4_3": {
            "type": "boolean",
            "description": "Version 4.3 or later.",
            "nullable": true
          },
          "v4_4": {
            "type": "boolean",
            "description": "Version 4.4 or later.",
            "nullable": true
          },
          "v5_0": {
            "type": "boolean",
            "description": "Version 5.0 or later.",
            "nullable": true
          },
          "v5_1": {
            "type": "boolean",
            "description": "Version 5.1 or later.",
            "nullable": true
          }
        },
        "example": {
          "v4_0": true,
          "v4_0_3": true,
          "v4_1": true,
          "v4_2": true,
          "v4_3": true,
          "v4_4": true,
          "v5_0": true,
          "v5_1": true
        }
      },
      "microsoft.graph.appConfigurationSettingItem": {
        "title": "appConfigurationSettingItem",
        "type": "object",
        "properties": {
          "appConfigKey": {
            "type": "string",
            "description": "app configuration key.",
            "nullable": true
          },
          "appConfigKeyType": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.mdmAppConfigKeyType"
              }
            ],
            "description": "app configuration key type. Possible values are: stringType, integerType, realType, booleanType, tokenType.",
            "nullable": true
          },
          "appConfigKeyValue": {
            "type": "string",
            "description": "app configuration key value.",
            "nullable": true
          }
        },
        "example": {
          "appConfigKey": "string",
          "appConfigKeyType": {
            "@odata.type": "microsoft.graph.mdmAppConfigKeyType"
          },
          "appConfigKeyValue": "string"
        }
      },
      "microsoft.graph.fileEncryptionInfo": {
        "title": "fileEncryptionInfo",
        "type": "object",
        "properties": {
          "encryptionKey": {
            "type": "string",
            "description": "The key used to encrypt the file content.",
            "format": "base64url",
            "nullable": true
          },
          "initializationVector": {
            "type": "string",
            "description": "The initialization vector used for the encryption algorithm.",
            "format": "base64url",
            "nullable": true
          },
          "mac": {
            "type": "string",
            "description": "The hash of the encrypted file content + IV (content hash).",
            "format": "base64url",
            "nullable": true
          },
          "macKey": {
            "type": "string",
            "description": "The key used to get mac.",
            "format": "base64url",
            "nullable": true
          },
          "profileIdentifier": {
            "type": "string",
            "description": "The the profile identifier.",
            "nullable": true
          },
          "fileDigest": {
            "type": "string",
            "description": "The file digest prior to encryption.",
            "format": "base64url",
            "nullable": true
          },
          "fileDigestAlgorithm": {
            "type": "string",
            "description": "The file digest algorithm.",
            "nullable": true
          }
        },
        "example": {
          "encryptionKey": "string",
          "initializationVector": "string",
          "mac": "string",
          "macKey": "string",
          "profileIdentifier": "string",
          "fileDigest": "string",
          "fileDigestAlgorithm": "string"
        }
      },
      "microsoft.graph.iosDeviceType": {
        "title": "iosDeviceType",
        "type": "object",
        "properties": {
          "iPad": {
            "type": "boolean",
            "description": "Whether the app should run on iPads.",
            "nullable": true
          },
          "iPhoneAndIPod": {
            "type": "boolean",
            "description": "Whether the app should run on iPhones and iPods.",
            "nullable": true
          }
        },
        "example": {
          "iPad": true,
          "iPhoneAndIPod": true
        }
      },
      "microsoft.graph.iosLobAppAssignmentSettings": {
        "title": "iosLobAppAssignmentSettings",
        "type": "object",
        "properties": {
          "vpnConfigurationId": {
            "type": "string",
            "description": "The VPN Configuration Id to apply for this app.",
            "nullable": true
          }
        },
        "example": {
          "vpnConfigurationId": "string"
        }
      },
      "microsoft.graph.iosMinimumOperatingSystem": {
        "title": "iosMinimumOperatingSystem",
        "type": "object",
        "properties": {
          "v8_0": {
            "type": "boolean",
            "description": "Version 8.0 or later.",
            "nullable": true
          },
          "v9_0": {
            "type": "boolean",
            "description": "Version 9.0 or later.",
            "nullable": true
          },
          "v10_0": {
            "type": "boolean",
            "description": "Version 10.0 or later.",
            "nullable": true
          },
          "v11_0": {
            "type": "boolean",
            "description": "Version 11.0 or later.",
            "nullable": true
          }
        },
        "example": {
          "v8_0": true,
          "v9_0": true,
          "v10_0": true,
          "v11_0": true
        }
      },
      "microsoft.graph.iosStoreAppAssignmentSettings": {
        "title": "iosStoreAppAssignmentSettings",
        "type": "object",
        "properties": {
          "vpnConfigurationId": {
            "type": "string",
            "description": "The VPN Configuration Id to apply for this app.",
            "nullable": true
          }
        },
        "example": {
          "vpnConfigurationId": "string"
        }
      },
      "microsoft.graph.iosVppAppAssignmentSettings": {
        "title": "iosVppAppAssignmentSettings",
        "type": "object",
        "properties": {
          "useDeviceLicensing": {
            "type": "boolean",
            "description": "Whether or not to use device licensing.",
            "nullable": true
          },
          "vpnConfigurationId": {
            "type": "string",
            "description": "The VPN Configuration Id to apply for this app.",
            "nullable": true
          }
        },
        "example": {
          "useDeviceLicensing": true,
          "vpnConfigurationId": "string"
        }
      },
      "microsoft.graph.microsoftStoreForBusinessAppAssignmentSettings": {
        "title": "microsoftStoreForBusinessAppAssignmentSettings",
        "type": "object",
        "properties": {
          "useDeviceContext": {
            "type": "boolean",
            "description": "Whether or not to use device execution context for Microsoft Store for Business mobile app.",
            "nullable": true
          }
        },
        "example": {
          "useDeviceContext": true
        }
      },
      "microsoft.graph.mobileAppAssignmentSettings": {
        "title": "mobileAppAssignmentSettings",
        "type": "object"
      },
      "microsoft.graph.vppLicensingType": {
        "title": "vppLicensingType",
        "type": "object",
        "properties": {
          "supportsUserLicensing": {
            "type": "boolean",
            "description": "Whether the program supports the user licensing type.",
            "nullable": true
          },
          "supportsDeviceLicensing": {
            "type": "boolean",
            "description": "Whether the program supports the device licensing type.",
            "nullable": true
          }
        },
        "example": {
          "supportsUserLicensing": true,
          "supportsDeviceLicensing": true
        }
      },
      "microsoft.graph.windowsMinimumOperatingSystem": {
        "title": "windowsMinimumOperatingSystem",
        "type": "object",
        "properties": {
          "v8_0": {
            "type": "boolean",
            "description": "Windows version 8.0 or later.",
            "nullable": true
          },
          "v8_1": {
            "type": "boolean",
            "description": "Windows version 8.1 or later.",
            "nullable": true
          },
          "v10_0": {
            "type": "boolean",
            "description": "Windows version 10.0 or later.",
            "nullable": true
          }
        },
        "example": {
          "v8_0": true,
          "v8_1": true,
          "v10_0": true
        }
      },
      "microsoft.graph.auditActor": {
        "title": "auditActor",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Actor Type.",
            "nullable": true
          },
          "userPermissions": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true
            },
            "description": "List of user permissions when the audit was performed."
          },
          "applicationId": {
            "type": "string",
            "description": "AAD Application Id.",
            "nullable": true
          },
          "applicationDisplayName": {
            "type": "string",
            "description": "Name of the Application.",
            "nullable": true
          },
          "userPrincipalName": {
            "type": "string",
            "description": "User Principal Name (UPN).",
            "nullable": true
          },
          "servicePrincipalName": {
            "type": "string",
            "description": "Service Principal Name (SPN).",
            "nullable": true
          },
          "ipAddress": {
            "type": "string",
            "description": "IPAddress.",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "description": "User Id.",
            "nullable": true
          }
        },
        "example": {
          "type": "string",
          "userPermissions": [
            "string"
          ],
          "applicationId": "string",
          "applicationDisplayName": "string",
          "userPrincipalName": "string",
          "servicePrincipalName": "string",
          "ipAddress": "string",
          "userId": "string"
        }
      },
      "microsoft.graph.auditProperty": {
        "title": "auditProperty",
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "description": "Display name.",
            "nullable": true
          },
          "oldValue": {
            "type": "string",
            "description": "Old value.",
            "nullable": true
          },
          "newValue": {
            "type": "string",
            "description": "New value.",
            "nullable": true
          }
        },
        "example": {
          "displayName": "string",
          "oldValue": "string",
          "newValue": "string"
        }
      },
      "microsoft.graph.auditResource": {
        "title": "auditResource",
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "description": "Display name.",
            "nullable": true
          },
          "modifiedProperties": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.auditProperty"
                }
              ],
              "nullable": true
            },
            "description": "List of modified properties."
          },
          "type": {
            "type": "string",
            "description": "Audit resource's type.",
            "nullable": true
          },
          "resourceId": {
            "type": "string",
            "description": "Audit resource's Id.",
            "nullable": true
          }
        },
        "example": {
          "displayName": "string",
          "modifiedProperties": [
            {
              "@odata.type": "microsoft.graph.auditProperty"
            }
          ],
          "type": "string",
          "resourceId": "string"
        }
      },
      "microsoft.graph.appListItem": {
        "title": "appListItem",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The application name",
            "nullable": true
          },
          "publisher": {
            "type": "string",
            "description": "The publisher of the application",
            "nullable": true
          },
          "appStoreUrl": {
            "type": "string",
            "description": "The Store URL of the application",
            "nullable": true
          },
          "appId": {
            "type": "string",
            "description": "The application or bundle identifier of the application",
            "nullable": true
          }
        },
        "example": {
          "name": "string",
          "publisher": "string",
          "appStoreUrl": "string",
          "appId": "string"
        }
      },
      "microsoft.graph.bitLockerRemovableDrivePolicy": {
        "title": "bitLockerRemovableDrivePolicy",
        "type": "object",
        "properties": {
          "encryptionMethod": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.bitLockerEncryptionMethod"
              }
            ],
            "description": "Select the encryption method for removable  drives. Possible values are: aesCbc128, aesCbc256, xtsAes128, xtsAes256.",
            "nullable": true
          },
          "requireEncryptionForWriteAccess": {
            "type": "boolean",
            "description": "Indicates whether to block write access to devices configured in another organization.  If requireEncryptionForWriteAccess is false, this value does not affect.",
            "nullable": true
          },
          "blockCrossOrganizationWriteAccess": {
            "type": "boolean",
            "description": "This policy setting determines whether BitLocker protection is required for removable data drives to be writable on a computer.",
            "nullable": true
          }
        },
        "example": {
          "encryptionMethod": {
            "@odata.type": "microsoft.graph.bitLockerEncryptionMethod"
          },
          "requireEncryptionForWriteAccess": true,
          "blockCrossOrganizationWriteAccess": true
        }
      },
      "microsoft.graph.defenderDetectedMalwareActions": {
        "title": "defenderDetectedMalwareActions",
        "type": "object",
        "properties": {
          "lowSeverity": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.defenderThreatAction"
              }
            ],
            "description": "Indicates a Defender action to take for low severity Malware threat detected. Possible values are: deviceDefault, clean, quarantine, remove, allow, userDefined, block.",
            "nullable": true
          },
          "moderateSeverity": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.defenderThreatAction"
              }
            ],
            "description": "Indicates a Defender action to take for moderate severity Malware threat detected. Possible values are: deviceDefault, clean, quarantine, remove, allow, userDefined, block.",
            "nullable": true
          },
          "highSeverity": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.defenderThreatAction"
              }
            ],
            "description": "Indicates a Defender action to take for high severity Malware threat detected. Possible values are: deviceDefault, clean, quarantine, remove, allow, userDefined, block.",
            "nullable": true
          },
          "severeSeverity": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.defenderThreatAction"
              }
            ],
            "description": "Indicates a Defender action to take for severe severity Malware threat detected. Possible values are: deviceDefault, clean, quarantine, remove, allow, userDefined, block.",
            "nullable": true
          }
        },
        "example": {
          "lowSeverity": {
            "@odata.type": "microsoft.graph.defenderThreatAction"
          },
          "moderateSeverity": {
            "@odata.type": "microsoft.graph.defenderThreatAction"
          },
          "highSeverity": {
            "@odata.type": "microsoft.graph.defenderThreatAction"
          },
          "severeSeverity": {
            "@odata.type": "microsoft.graph.defenderThreatAction"
          }
        }
      },
      "microsoft.graph.deviceCompliancePolicySettingState": {
        "title": "deviceCompliancePolicySettingState",
        "type": "object",
        "properties": {
          "setting": {
            "type": "string",
            "description": "The setting that is being reported",
            "nullable": true
          },
          "settingName": {
            "type": "string",
            "description": "Localized/user friendly setting name that is being reported",
            "nullable": true
          },
          "instanceDisplayName": {
            "type": "string",
            "description": "Name of setting instance that is being reported.",
            "nullable": true
          },
          "state": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.complianceStatus"
              }
            ],
            "description": "The compliance state of the setting. Possible values are: unknown, notApplicable, compliant, remediated, nonCompliant, error, conflict, notAssigned.",
            "nullable": true
          },
          "errorCode": {
            "type": "integer",
            "description": "Error code for the setting",
            "format": "int64",
            "nullable": true
          },
          "errorDescription": {
            "type": "string",
            "description": "Error description",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "description": "UserId",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "description": "UserName",
            "nullable": true
          },
          "userEmail": {
            "type": "string",
            "description": "UserEmail",
            "nullable": true
          },
          "userPrincipalName": {
            "type": "string",
            "description": "UserPrincipalName.",
            "nullable": true
          },
          "sources": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.settingSource"
                }
              ],
              "nullable": true
            },
            "description": "Contributing policies"
          },
          "currentValue": {
            "type": "string",
            "description": "Current value of setting on device",
            "nullable": true
          }
        },
        "example": {
          "setting": "string",
          "settingName": "string",
          "instanceDisplayName": "string",
          "state": {
            "@odata.type": "microsoft.graph.complianceStatus"
          },
          "errorCode": "integer",
          "errorDescription": "string",
          "userId": "string",
          "userName": "string",
          "userEmail": "string",
          "userPrincipalName": "string",
          "sources": [
            {
              "@odata.type": "microsoft.graph.settingSource"
            }
          ],
          "currentValue": "string"
        }
      },
      "microsoft.graph.deviceConfigurationSettingState": {
        "title": "deviceConfigurationSettingState",
        "type": "object",
        "properties": {
          "setting": {
            "type": "string",
            "description": "The setting that is being reported",
            "nullable": true
          },
          "settingName": {
            "type": "string",
            "description": "Localized/user friendly setting name that is being reported",
            "nullable": true
          },
          "instanceDisplayName": {
            "type": "string",
            "description": "Name of setting instance that is being reported.",
            "nullable": true
          },
          "state": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.complianceStatus"
              }
            ],
            "description": "The compliance state of the setting. Possible values are: unknown, notApplicable, compliant, remediated, nonCompliant, error, conflict, notAssigned.",
            "nullable": true
          },
          "errorCode": {
            "type": "integer",
            "description": "Error code for the setting",
            "format": "int64",
            "nullable": true
          },
          "errorDescription": {
            "type": "string",
            "description": "Error description",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "description": "UserId",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "description": "UserName",
            "nullable": true
          },
          "userEmail": {
            "type": "string",
            "description": "UserEmail",
            "nullable": true
          },
          "userPrincipalName": {
            "type": "string",
            "description": "UserPrincipalName.",
            "nullable": true
          },
          "sources": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.settingSource"
                }
              ],
              "nullable": true
            },
            "description": "Contributing policies"
          },
          "currentValue": {
            "type": "string",
            "description": "Current value of setting on device",
            "nullable": true
          }
        },
        "example": {
          "setting": "string",
          "settingName": "string",
          "instanceDisplayName": "string",
          "state": {
            "@odata.type": "microsoft.graph.complianceStatus"
          },
          "errorCode": "integer",
          "errorDescription": "string",
          "userId": "string",
          "userName": "string",
          "userEmail": "string",
          "userPrincipalName": "string",
          "sources": [
            {
              "@odata.type": "microsoft.graph.settingSource"
            }
          ],
          "currentValue": "string"
        }
      },
      "microsoft.graph.deviceManagementSettings": {
        "title": "deviceManagementSettings",
        "type": "object",
        "properties": {
          "deviceComplianceCheckinThresholdDays": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "The number of days a device is allowed to go without checking in to remain compliant. Valid values 0 to 120",
            "format": "int32",
            "nullable": true
          },
          "isScheduledActionEnabled": {
            "type": "boolean",
            "description": "Is feature enabled or not for scheduled action for rule.",
            "nullable": true
          },
          "secureByDefault": {
            "type": "boolean",
            "description": "Device should be noncompliant when there is no compliance policy targeted when this is true",
            "nullable": true
          }
        },
        "example": {
          "deviceComplianceCheckinThresholdDays": "integer",
          "isScheduledActionEnabled": true,
          "secureByDefault": true
        }
      },
      "microsoft.graph.edgeSearchEngine": {
        "title": "edgeSearchEngine",
        "type": "object",
        "properties": {
          "edgeSearchEngineType": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.edgeSearchEngineType"
              }
            ],
            "description": "Allows IT admins to set a predefined default search engine for MDM-Controlled devices. Possible values are: default, bing.",
            "nullable": true
          }
        },
        "example": {
          "edgeSearchEngineType": {
            "@odata.type": "microsoft.graph.edgeSearchEngineType"
          }
        }
      },
      "microsoft.graph.edgeSearchEngineBase": {
        "title": "edgeSearchEngineBase",
        "type": "object"
      },
      "microsoft.graph.edgeSearchEngineCustom": {
        "title": "edgeSearchEngineCustom",
        "type": "object",
        "properties": {
          "edgeSearchEngineOpenSearchXmlUrl": {
            "type": "string",
            "description": "Points to a https link containing the OpenSearch xml file that contains, at minimum, the short name and the URL to the search Engine.",
            "nullable": true
          }
        },
        "example": {
          "edgeSearchEngineOpenSearchXmlUrl": "string"
        }
      },
      "microsoft.graph.iosHomeScreenApp": {
        "title": "iosHomeScreenApp",
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "description": "Name of the app Inherited from iosHomeScreenItem",
            "nullable": true
          },
          "bundleID": {
            "type": "string",
            "description": "BundleID of app",
            "nullable": true
          }
        },
        "example": {
          "displayName": "string",
          "bundleID": "string"
        }
      },
      "microsoft.graph.iosHomeScreenFolder": {
        "title": "iosHomeScreenFolder",
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "description": "Name of the app Inherited from iosHomeScreenItem",
            "nullable": true
          },
          "pages": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.iosHomeScreenFolderPage"
                }
              ],
              "nullable": true
            },
            "description": "Pages of Home Screen Layout Icons which must be Application Type. This collection can contain a maximum of 500 elements."
          }
        },
        "example": {
          "displayName": "string",
          "pages": [
            {
              "@odata.type": "microsoft.graph.iosHomeScreenFolderPage"
            }
          ]
        }
      },
      "microsoft.graph.iosHomeScreenFolderPage": {
        "title": "iosHomeScreenFolderPage",
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "description": "Name of the folder page",
            "nullable": true
          },
          "apps": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.iosHomeScreenApp"
                }
              ],
              "nullable": true
            },
            "description": "A list of apps to appear on a page within a folder. This collection can contain a maximum of 500 elements."
          }
        },
        "example": {
          "displayName": "string",
          "apps": [
            {
              "@odata.type": "microsoft.graph.iosHomeScreenApp"
            }
          ]
        }
      },
      "microsoft.graph.iosHomeScreenItem": {
        "title": "iosHomeScreenItem",
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "description": "Name of the app",
            "nullable": true
          }
        },
        "example": {
          "displayName": "string"
        }
      },
      "microsoft.graph.iosHomeScreenPage": {
        "title": "iosHomeScreenPage",
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "description": "Name of the page",
            "nullable": true
          },
          "icons": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.iosHomeScreenItem"
                }
              ],
              "nullable": true
            },
            "description": "A list of apps and folders to appear on a page. This collection can contain a maximum of 500 elements."
          }
        },
        "example": {
          "displayName": "string",
          "icons": [
            {
              "@odata.type": "microsoft.graph.iosHomeScreenItem"
            }
          ]
        }
      },
      "microsoft.graph.iosNetworkUsageRule": {
        "title": "iosNetworkUsageRule",
        "type": "object",
        "properties": {
          "managedApps": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.appListItem"
                }
              ],
              "nullable": true
            },
            "description": "Information about the managed apps that this rule is going to apply to. This collection can contain a maximum of 500 elements."
          },
          "cellularDataBlockWhenRoaming": {
            "type": "boolean",
            "description": "If set to true, corresponding managed apps will not be allowed to use cellular data when roaming.",
            "nullable": true
          },
          "cellularDataBlocked": {
            "type": "boolean",
            "description": "If set to true, corresponding managed apps will not be allowed to use cellular data at any time.",
            "nullable": true
          }
        },
        "example": {
          "managedApps": [
            {
              "@odata.type": "microsoft.graph.appListItem"
            }
          ],
          "cellularDataBlockWhenRoaming": true,
          "cellularDataBlocked": true
        }
      },
      "microsoft.graph.iosNotificationSettings": {
        "title": "iosNotificationSettings",
        "type": "object",
        "properties": {
          "bundleID": {
            "type": "string",
            "description": "Bundle id of app to which to apply these notification settings.",
            "nullable": true
          },
          "appName": {
            "type": "string",
            "description": "Application name to be associated with the bundleID.",
            "nullable": true
          },
          "publisher": {
            "type": "string",
            "description": "Publisher to be associated with the bundleID.",
            "nullable": true
          },
          "enabled": {
            "type": "boolean",
            "description": "Indicates whether notifications are allowed for this app.",
            "nullable": true
          },
          "showInNotificationCenter": {
            "type": "boolean",
            "description": "Indicates whether notifications can be shown in notification center.",
            "nullable": true
          },
          "showOnLockScreen": {
            "type": "boolean",
            "description": "Indicates whether notifications can be shown on the lock screen.",
            "nullable": true
          },
          "alertType": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.iosNotificationAlertType"
              }
            ],
            "description": "Indicates the type of alert for notifications for this app. Possible values are: deviceDefault, banner, modal, none.",
            "nullable": true
          },
          "badgesEnabled": {
            "type": "boolean",
            "description": "Indicates whether badges are allowed for this app.",
            "nullable": true
          },
          "soundsEnabled": {
            "type": "boolean",
            "description": "Indicates whether sounds are allowed for this app.",
            "nullable": true
          }
        },
        "example": {
          "bundleID": "string",
          "appName": "string",
          "publisher": "string",
          "enabled": true,
          "showInNotificationCenter": true,
          "showOnLockScreen": true,
          "alertType": {
            "@odata.type": "microsoft.graph.iosNotificationAlertType"
          },
          "badgesEnabled": true,
          "soundsEnabled": true
        }
      },
      "microsoft.graph.mediaContentRatingAustralia": {
        "title": "mediaContentRatingAustralia",
        "type": "object",
        "properties": {
          "movieRating": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.ratingAustraliaMoviesType"
              }
            ],
            "description": "Movies rating selected for Australia. Possible values are: allAllowed, allBlocked, general, parentalGuidance, mature, agesAbove15, agesAbove18.",
            "nullable": true
          },
          "tvRating": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.ratingAustraliaTelevisionType"
              }
            ],
            "description": "TV rating selected for Australia. Possible values are: allAllowed, allBlocked, preschoolers, children, general, parentalGuidance, mature, agesAbove15, agesAbove15AdultViolence.",
            "nullable": true
          }
        },
        "example": {
          "movieRating": {
            "@odata.type": "microsoft.graph.ratingAustraliaMoviesType"
          },
          "tvRating": {
            "@odata.type": "microsoft.graph.ratingAustraliaTelevisionType"
          }
        }
      },
      "microsoft.graph.mediaContentRatingCanada": {
        "title": "mediaContentRatingCanada",
        "type": "object",
        "properties": {
          "movieRating": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.ratingCanadaMoviesType"
              }
            ],
            "description": "Movies rating selected for Canada. Possible values are: allAllowed, allBlocked, general, parentalGuidance, agesAbove14, agesAbove18, restricted.",
            "nullable": true
          },
          "tvRating": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.ratingCanadaTelevisionType"
              }
            ],
            "description": "TV rating selected for Canada. Possible values are: allAllowed, allBlocked, children, childrenAbove8, general, parentalGuidance, agesAbove14, agesAbove18.",
            "nullable": true
          }
        },
        "example": {
          "movieRating": {
            "@odata.type": "microsoft.graph.ratingCanadaMoviesType"
          },
          "tvRating": {
            "@odata.type": "microsoft.graph.ratingCanadaTelevisionType"
          }
        }
      },
      "microsoft.graph.mediaContentRatingFrance": {
        "title": "mediaContentRatingFrance",
        "type": "object",
        "properties": {
          "movieRating": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.ratingFranceMoviesType"
              }
            ],
            "description": "Movies rating selected for France. Possible values are: allAllowed, allBlocked, agesAbove10, agesAbove12, agesAbove16, agesAbove18.",
            "nullable": true
          },
          "tvRating": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.ratingFranceTelevisionType"
              }
            ],
            "description": "TV rating selected for France. Possible values are: allAllowed, allBlocked, agesAbove10, agesAbove12, agesAbove16, agesAbove18.",
            "nullable": true
          }
        },
        "example": {
          "movieRating": {
            "@odata.type": "microsoft.graph.ratingFranceMoviesType"
          },
          "tvRating": {
            "@odata.type": "microsoft.graph.ratingFranceTelevisionType"
          }
        }
      },
      "microsoft.graph.mediaContentRatingGermany": {
        "title": "mediaContentRatingGermany",
        "type": "object",
        "properties": {
          "movieRating": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.ratingGermanyMoviesType"
              }
            ],
            "description": "Movies rating selected for Germany. Possible values are: allAllowed, allBlocked, general, agesAbove6, agesAbove12, agesAbove16, adults.",
            "nullable": true
          },
          "tvRating": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.ratingGermanyTelevisionType"
              }
            ],
            "description": "TV rating selected for Germany. Possible values are: allAllowed, allBlocked, general, agesAbove6, agesAbove12, agesAbove16, adults.",
            "nullable": true
          }
        },
        "example": {
          "movieRating": {
            "@odata.type": "microsoft.graph.ratingGermanyMoviesType"
          },
          "tvRating": {
            "@odata.type": "microsoft.graph.ratingGermanyTelevisionType"
          }
        }
      },
      "microsoft.graph.mediaContentRatingIreland": {
        "title": "mediaContentRatingIreland",
        "type": "object",
        "properties": {
          "movieRating": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.ratingIrelandMoviesType"
              }
            ],
            "description": "Movies rating selected for Ireland. Possible values are: allAllowed, allBlocked, general, parentalGuidance, agesAbove12, agesAbove15, agesAbove16, adults.",
            "nullable": true
          },
          "tvRating": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.ratingIrelandTelevisionType"
              }
            ],
            "description": "TV rating selected for Ireland. Possible values are: allAllowed, allBlocked, general, children, youngAdults, parentalSupervision, mature.",
            "nullable": true
          }
        },
        "example": {
          "movieRating": {
            "@odata.type": "microsoft.graph.ratingIrelandMoviesType"
          },
          "tvRating": {
            "@odata.type": "microsoft.graph.ratingIrelandTelevisionType"
          }
        }
      },
      "microsoft.graph.mediaContentRatingJapan": {
        "title": "mediaContentRatingJapan",
        "type": "object",
        "properties": {
          "movieRating": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.ratingJapanMoviesType"
              }
            ],
            "description": "Movies rating selected for Japan. Possible values are: allAllowed, allBlocked, general, parentalGuidance, agesAbove15, agesAbove18.",
            "nullable": true
          },
          "tvRating": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.ratingJapanTelevisionType"
              }
            ],
            "description": "TV rating selected for Japan. Possible values are: allAllowed, allBlocked, explicitAllowed.",
            "nullable": true
          }
        },
        "example": {
          "movieRating": {
            "@odata.type": "microsoft.graph.ratingJapanMoviesType"
          },
          "tvRating": {
            "@odata.type": "microsoft.graph.ratingJapanTelevisionType"
          }
        }
      },
      "microsoft.graph.mediaContentRatingNewZealand": {
        "title": "mediaContentRatingNewZealand",
        "type": "object",
        "properties": {
          "movieRating": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.ratingNewZealandMoviesType"
              }
            ],
            "description": "Movies rating selected for New Zealand. Possible values are: allAllowed, allBlocked, general, parentalGuidance, mature, agesAbove13, agesAbove15, agesAbove16, agesAbove18, restricted, agesAbove16Restricted.",
            "nullable": true
          },
          "tvRating": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.ratingNewZealandTelevisionType"
              }
            ],
            "description": "TV rating selected for New Zealand. Possible values are: allAllowed, allBlocked, general, parentalGuidance, adults.",
            "nullable": true
          }
        },
        "example": {
          "movieRating": {
            "@odata.type": "microsoft.graph.ratingNewZealandMoviesType"
          },
          "tvRating": {
            "@odata.type": "microsoft.graph.ratingNewZealandTelevisionType"
          }
        }
      },
      "microsoft.graph.mediaContentRatingUnitedKingdom": {
        "title": "mediaContentRatingUnitedKingdom",
        "type": "object",
        "properties": {
          "movieRating": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.ratingUnitedKingdomMoviesType"
              }
            ],
            "description": "Movies rating selected for United Kingdom. Possible values are: allAllowed, allBlocked, general, universalChildren, parentalGuidance, agesAbove12Video, agesAbove12Cinema, agesAbove15, adults.",
            "nullable": true
          },
          "tvRating": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.ratingUnitedKingdomTelevisionType"
              }
            ],
            "description": "TV rating selected for United Kingdom. Possible values are: allAllowed, allBlocked, caution.",
            "nullable": true
          }
        },
        "example": {
          "movieRating": {
            "@odata.type": "microsoft.graph.ratingUnitedKingdomMoviesType"
          },
          "tvRating": {
            "@odata.type": "microsoft.graph.ratingUnitedKingdomTelevisionType"
          }
        }
      },
      "microsoft.graph.mediaContentRatingUnitedStates": {
        "title": "mediaContentRatingUnitedStates",
        "type": "object",
        "properties": {
          "movieRating": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.ratingUnitedStatesMoviesType"
              }
            ],
            "description": "Movies rating selected for United States. Possible values are: allAllowed, allBlocked, general, parentalGuidance, parentalGuidance13, restricted, adults.",
            "nullable": true
          },
          "tvRating": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.ratingUnitedStatesTelevisionType"
              }
            ],
            "description": "TV rating selected for United States. Possible values are: allAllowed, allBlocked, childrenAll, childrenAbove7, general, parentalGuidance, childrenAbove14, adults.",
            "nullable": true
          }
        },
        "example": {
          "movieRating": {
            "@odata.type": "microsoft.graph.ratingUnitedStatesMoviesType"
          },
          "tvRating": {
            "@odata.type": "microsoft.graph.ratingUnitedStatesTelevisionType"
          }
        }
      },
      "microsoft.graph.omaSetting": {
        "title": "omaSetting",
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "description": "Display Name.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description.",
            "nullable": true
          },
          "omaUri": {
            "type": "string",
            "description": "OMA.",
            "nullable": true
          }
        },
        "example": {
          "displayName": "string",
          "description": "string",
          "omaUri": "string"
        }
      },
      "microsoft.graph.omaSettingBase64": {
        "title": "omaSettingBase64",
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "description": "Display Name. Inherited from omaSetting",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description. Inherited from omaSetting",
            "nullable": true
          },
          "omaUri": {
            "type": "string",
            "description": "OMA. Inherited from omaSetting",
            "nullable": true
          },
          "fileName": {
            "type": "string",
            "description": "File name associated with the Value property (.cer",
            "nullable": true
          },
          "value": {
            "type": "string",
            "description": "Value. (Base64 encoded string)",
            "nullable": true
          }
        },
        "example": {
          "displayName": "string",
          "description": "string",
          "omaUri": "string",
          "fileName": "string",
          "value": "string"
        }
      },
      "microsoft.graph.omaSettingBoolean": {
        "title": "omaSettingBoolean",
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "description": "Display Name. Inherited from omaSetting",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description. Inherited from omaSetting",
            "nullable": true
          },
          "omaUri": {
            "type": "string",
            "description": "OMA. Inherited from omaSetting",
            "nullable": true
          },
          "value": {
            "type": "boolean",
            "description": "Value.",
            "nullable": true
          }
        },
        "example": {
          "displayName": "string",
          "description": "string",
          "omaUri": "string",
          "value": true
        }
      },
      "microsoft.graph.omaSettingDateTime": {
        "title": "omaSettingDateTime",
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "description": "Display Name. Inherited from omaSetting",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description. Inherited from omaSetting",
            "nullable": true
          },
          "omaUri": {
            "type": "string",
            "description": "OMA. Inherited from omaSetting",
            "nullable": true
          },
          "value": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "description": "Value.",
            "format": "date-time",
            "nullable": true
          }
        },
        "example": {
          "displayName": "string",
          "description": "string",
          "omaUri": "string",
          "value": "string (timestamp)"
        }
      },
      "microsoft.graph.omaSettingFloatingPoint": {
        "title": "omaSettingFloatingPoint",
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "description": "Display Name. Inherited from omaSetting",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description. Inherited from omaSetting",
            "nullable": true
          },
          "omaUri": {
            "type": "string",
            "description": "OMA. Inherited from omaSetting",
            "nullable": true
          },
          "value": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "enum": [
                  "-INF",
                  "INF",
                  "NaN"
                ]
              }
            ],
            "description": "Value.",
            "format": "float",
            "nullable": true
          }
        },
        "example": {
          "displayName": "string",
          "description": "string",
          "omaUri": "string",
          "value": "float"
        }
      },
      "microsoft.graph.omaSettingInteger": {
        "title": "omaSettingInteger",
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "description": "Display Name. Inherited from omaSetting",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description. Inherited from omaSetting",
            "nullable": true
          },
          "omaUri": {
            "type": "string",
            "description": "OMA. Inherited from omaSetting",
            "nullable": true
          },
          "value": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Value.",
            "format": "int32",
            "nullable": true
          }
        },
        "example": {
          "displayName": "string",
          "description": "string",
          "omaUri": "string",
          "value": "integer"
        }
      },
      "microsoft.graph.omaSettingString": {
        "title": "omaSettingString",
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "description": "Display Name. Inherited from omaSetting",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description. Inherited from omaSetting",
            "nullable": true
          },
          "omaUri": {
            "type": "string",
            "description": "OMA. Inherited from omaSetting",
            "nullable": true
          },
          "value": {
            "type": "string",
            "description": "Value.",
            "nullable": true
          }
        },
        "example": {
          "displayName": "string",
          "description": "string",
          "omaUri": "string",
          "value": "string"
        }
      },
      "microsoft.graph.omaSettingStringXml": {
        "title": "omaSettingStringXml",
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "description": "Display Name. Inherited from omaSetting",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description. Inherited from omaSetting",
            "nullable": true
          },
          "omaUri": {
            "type": "string",
            "description": "OMA. Inherited from omaSetting",
            "nullable": true
          },
          "fileName": {
            "type": "string",
            "description": "File name associated with the Value property (.xml).",
            "nullable": true
          },
          "value": {
            "type": "string",
            "description": "Value. (UTF8 encoded byte array)",
            "format": "base64url",
            "nullable": true
          }
        },
        "example": {
          "displayName": "string",
          "description": "string",
          "omaUri": "string",
          "fileName": "string",
          "value": "string"
        }
      },
      "microsoft.graph.sharedPCAccountManagerPolicy": {
        "title": "sharedPCAccountManagerPolicy",
        "type": "object",
        "properties": {
          "accountDeletionPolicy": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.sharedPCAccountDeletionPolicyType"
              }
            ],
            "description": "Configures when accounts are deleted. Possible values are: immediate, diskSpaceThreshold, diskSpaceThresholdOrInactiveThreshold.",
            "nullable": true
          },
          "cacheAccountsAboveDiskFreePercentage": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Sets the percentage of available disk space a PC should have before it stops deleting cached shared PC accounts. Only applies when AccountDeletionPolicy is DiskSpaceThreshold or DiskSpaceThresholdOrInactiveThreshold. Valid values 0 to 100",
            "format": "int32",
            "nullable": true
          },
          "inactiveThresholdDays": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Specifies when the accounts will start being deleted when they have not been logged on during the specified period, given as number of days. Only applies when AccountDeletionPolicy is DiskSpaceThreshold or DiskSpaceThresholdOrInactiveThreshold.",
            "format": "int32",
            "nullable": true
          },
          "removeAccountsBelowDiskFreePercentage": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Sets the percentage of disk space remaining on a PC before cached accounts will be deleted to free disk space. Accounts that have been inactive the longest will be deleted first. Only applies when AccountDeletionPolicy is DiskSpaceThresholdOrInactiveThreshold. Valid values 0 to 100",
            "format": "int32",
            "nullable": true
          }
        },
        "example": {
          "accountDeletionPolicy": {
            "@odata.type": "microsoft.graph.sharedPCAccountDeletionPolicyType"
          },
          "cacheAccountsAboveDiskFreePercentage": "integer",
          "inactiveThresholdDays": "integer",
          "removeAccountsBelowDiskFreePercentage": "integer"
        }
      },
      "microsoft.graph.windows10NetworkProxyServer": {
        "title": "windows10NetworkProxyServer",
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "description": "Address to the proxy server. Specify an address in the format [':']",
            "nullable": true
          },
          "exceptions": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true
            },
            "description": "Addresses that should not use the proxy server. The system will not use the proxy server for addresses beginning with what is specified in this node."
          },
          "useForLocalAddresses": {
            "type": "boolean",
            "description": "Specifies whether the proxy server should be used for local (intranet) addresses.",
            "nullable": true
          }
        },
        "example": {
          "address": "string",
          "exceptions": [
            "string"
          ],
          "useForLocalAddresses": true
        }
      },
      "microsoft.graph.windowsFirewallNetworkProfile": {
        "title": "windowsFirewallNetworkProfile",
        "type": "object",
        "properties": {
          "firewallEnabled": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.stateManagementSetting"
              }
            ],
            "description": "Configures the host device to allow or block the firewall and advanced security enforcement for the network profile. Possible values are: notConfigured, blocked, allowed.",
            "nullable": true
          },
          "stealthModeBlocked": {
            "type": "boolean",
            "description": "Prevent the server from operating in stealth mode. When StealthModeRequired and StealthModeBlocked are both true, StealthModeBlocked takes priority.",
            "nullable": true
          },
          "incomingTrafficBlocked": {
            "type": "boolean",
            "description": "Configures the firewall to block all incoming traffic regardless of other policy settings. When IncomingTrafficRequired and IncomingTrafficBlocked are both true, IncomingTrafficBlocked takes priority.",
            "nullable": true
          },
          "unicastResponsesToMulticastBroadcastsBlocked": {
            "type": "boolean",
            "description": "Configures the firewall to block unicast responses to multicast broadcast traffic. When UnicastResponsesToMulticastBroadcastsRequired and UnicastResponsesToMulticastBroadcastsBlocked are both true, UnicastResponsesToMulticastBroadcastsBlocked takes priority.",
            "nullable": true
          },
          "inboundNotificationsBlocked": {
            "type": "boolean",
            "description": "Prevents the firewall from displaying notifications when an application is blocked from listening on a port. When InboundNotificationsRequired and InboundNotificationsBlocked are both true, InboundNotificationsBlocked takes priority.",
            "nullable": true
          },
          "authorizedApplicationRulesFromGroupPolicyMerged": {
            "type": "boolean",
            "description": "Configures the firewall to merge authorized application rules from group policy with those from local store instead of ignoring the local store rules. When AuthorizedApplicationRulesFromGroupPolicyNotMerged and AuthorizedApplicationRulesFromGroupPolicyMerged are both true, AuthorizedApplicationRulesFromGroupPolicyMerged takes priority.",
            "nullable": true
          },
          "globalPortRulesFromGroupPolicyMerged": {
            "type": "boolean",
            "description": "Configures the firewall to merge global port rules from group policy with those from local store instead of ignoring the local store rules. When GlobalPortRulesFromGroupPolicyNotMerged and GlobalPortRulesFromGroupPolicyMerged are both true, GlobalPortRulesFromGroupPolicyMerged takes priority.",
            "nullable": true
          },
          "connectionSecurityRulesFromGroupPolicyMerged": {
            "type": "boolean",
            "description": "Configures the firewall to merge connection security rules from group policy with those from local store instead of ignoring the local store rules. When ConnectionSecurityRulesFromGroupPolicyNotMerged and ConnectionSecurityRulesFromGroupPolicyMerged are both true, ConnectionSecurityRulesFromGroupPolicyMerged takes priority.",
            "nullable": true
          },
          "outboundConnectionsBlocked": {
            "type": "boolean",
            "description": "Configures the firewall to block all outgoing connections by default. When OutboundConnectionsRequired and OutboundConnectionsBlocked are both true, OutboundConnectionsBlocked takes priority.",
            "nullable": true
          },
          "inboundConnectionsBlocked": {
            "type": "boolean",
            "description": "Configures the firewall to block all incoming connections by default. When InboundConnectionsRequired and InboundConnectionsBlocked are both true, InboundConnectionsBlocked takes priority.",
            "nullable": true
          },
          "securedPacketExemptionAllowed": {
            "type": "boolean",
            "description": "Configures the firewall to allow the host computer to respond to unsolicited network traffic of that traffic is secured by IPSec even when stealthModeBlocked is set to true. When SecuredPacketExemptionBlocked and SecuredPacketExemptionAllowed are both true, SecuredPacketExemptionAllowed takes priority.",
            "nullable": true
          },
          "policyRulesFromGroupPolicyMerged": {
            "type": "boolean",
            "description": "Configures the firewall to merge Firewall Rule policies from group policy with those from local store instead of ignoring the local store rules. When PolicyRulesFromGroupPolicyNotMerged and PolicyRulesFromGroupPolicyMerged are both true, PolicyRulesFromGroupPolicyMerged takes priority.",
            "nullable": true
          }
        },
        "example": {
          "firewallEnabled": {
            "@odata.type": "microsoft.graph.stateManagementSetting"
          },
          "stealthModeBlocked": true,
          "incomingTrafficBlocked": true,
          "unicastResponsesToMulticastBroadcastsBlocked": true,
          "inboundNotificationsBlocked": true,
          "authorizedApplicationRulesFromGroupPolicyMerged": true,
          "globalPortRulesFromGroupPolicyMerged": true,
          "connectionSecurityRulesFromGroupPolicyMerged": true,
          "outboundConnectionsBlocked": true,
          "inboundConnectionsBlocked": true,
          "securedPacketExemptionAllowed": true,
          "policyRulesFromGroupPolicyMerged": true
        }
      },
      "microsoft.graph.windowsUpdateActiveHoursInstall": {
        "title": "windowsUpdateActiveHoursInstall",
        "type": "object",
        "properties": {
          "activeHoursStart": {
            "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?$",
            "type": "string",
            "description": "Active Hours Start",
            "format": "time",
            "nullable": true
          },
          "activeHoursEnd": {
            "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?$",
            "type": "string",
            "description": "Active Hours End",
            "format": "time",
            "nullable": true
          }
        },
        "example": {
          "activeHoursStart": "string (timestamp)",
          "activeHoursEnd": "string (timestamp)"
        }
      },
      "microsoft.graph.windowsUpdateInstallScheduleType": {
        "title": "windowsUpdateInstallScheduleType",
        "type": "object"
      },
      "microsoft.graph.windowsUpdateScheduledInstall": {
        "title": "windowsUpdateScheduledInstall",
        "type": "object",
        "properties": {
          "scheduledInstallDay": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.weeklySchedule"
              }
            ],
            "description": "Scheduled Install Day in week. Possible values are: userDefined, everyday, sunday, monday, tuesday, wednesday, thursday, friday, saturday.",
            "nullable": true
          },
          "scheduledInstallTime": {
            "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?$",
            "type": "string",
            "description": "Scheduled Install Time during day",
            "format": "time",
            "nullable": true
          }
        },
        "example": {
          "scheduledInstallDay": {
            "@odata.type": "microsoft.graph.weeklySchedule"
          },
          "scheduledInstallTime": "string (timestamp)"
        }
      },
      "microsoft.graph.configurationManagerClientEnabledFeatures": {
        "title": "configurationManagerClientEnabledFeatures",
        "type": "object",
        "properties": {
          "inventory": {
            "type": "boolean",
            "description": "Whether inventory is managed by Intune",
            "nullable": true
          },
          "modernApps": {
            "type": "boolean",
            "description": "Whether modern application is managed by Intune",
            "nullable": true
          },
          "resourceAccess": {
            "type": "boolean",
            "description": "Whether resource access is managed by Intune",
            "nullable": true
          },
          "deviceConfiguration": {
            "type": "boolean",
            "description": "Whether device configuration is managed by Intune",
            "nullable": true
          },
          "compliancePolicy": {
            "type": "boolean",
            "description": "Whether compliance policy is managed by Intune",
            "nullable": true
          },
          "windowsUpdateForBusiness": {
            "type": "boolean",
            "description": "Whether Windows Update for Business is managed by Intune",
            "nullable": true
          }
        },
        "example": {
          "inventory": true,
          "modernApps": true,
          "resourceAccess": true,
          "deviceConfiguration": true,
          "compliancePolicy": true,
          "windowsUpdateForBusiness": true
        }
      },
      "microsoft.graph.deleteUserFromSharedAppleDeviceActionResult": {
        "title": "deleteUserFromSharedAppleDeviceActionResult",
        "type": "object",
        "properties": {
          "actionName": {
            "type": "string",
            "description": "Action name Inherited from deviceActionResult",
            "nullable": true
          },
          "actionState": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.actionState"
              }
            ],
            "description": "State of the action Inherited from deviceActionResult. Possible values are: none, pending, canceled, active, done, failed, notSupported.",
            "nullable": true
          },
          "startDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "description": "Time the action was initiated Inherited from deviceActionResult",
            "format": "date-time",
            "nullable": true
          },
          "lastUpdatedDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "description": "Time the action state was last updated Inherited from deviceActionResult",
            "format": "date-time",
            "nullable": true
          },
          "userPrincipalName": {
            "type": "string",
            "description": "User principal name of the user to be deleted",
            "nullable": true
          }
        },
        "example": {
          "actionName": "string",
          "actionState": {
            "@odata.type": "microsoft.graph.actionState"
          },
          "startDateTime": "string (timestamp)",
          "lastUpdatedDateTime": "string (timestamp)",
          "userPrincipalName": "string"
        }
      },
      "microsoft.graph.deviceActionResult": {
        "title": "deviceActionResult",
        "type": "object",
        "properties": {
          "actionName": {
            "type": "string",
            "description": "Action name",
            "nullable": true
          },
          "actionState": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.actionState"
              }
            ],
            "description": "State of the action. Possible values are: none, pending, canceled, active, done, failed, notSupported.",
            "nullable": true
          },
          "startDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "description": "Time the action was initiated",
            "format": "date-time",
            "nullable": true
          },
          "lastUpdatedDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "description": "Time the action state was last updated",
            "format": "date-time",
            "nullable": true
          }
        },
        "example": {
          "actionName": "string",
          "actionState": {
            "@odata.type": "microsoft.graph.actionState"
          },
          "startDateTime": "string (timestamp)",
          "lastUpdatedDateTime": "string (timestamp)"
        }
      },
      "microsoft.graph.deviceExchangeAccessStateSummary": {
        "title": "deviceExchangeAccessStateSummary",
        "type": "object",
        "properties": {
          "allowedDeviceCount": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Total count of devices with Exchange Access State: Allowed.",
            "format": "int32",
            "nullable": true
          },
          "blockedDeviceCount": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Total count of devices with Exchange Access State: Blocked.",
            "format": "int32",
            "nullable": true
          },
          "quarantinedDeviceCount": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Total count of devices with Exchange Access State: Quarantined.",
            "format": "int32",
            "nullable": true
          },
          "unknownDeviceCount": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Total count of devices with Exchange Access State: Unknown.",
            "format": "int32",
            "nullable": true
          },
          "unavailableDeviceCount": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Total count of devices for which no Exchange Access State could be found.",
            "format": "int32",
            "nullable": true
          }
        },
        "example": {
          "allowedDeviceCount": "integer",
          "blockedDeviceCount": "integer",
          "quarantinedDeviceCount": "integer",
          "unknownDeviceCount": "integer",
          "unavailableDeviceCount": "integer"
        }
      },
      "microsoft.graph.deviceGeoLocation": {
        "title": "deviceGeoLocation",
        "type": "object",
        "properties": {
          "lastCollectedDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "description": "Time at which location was recorded, relative to UTC",
            "format": "date-time",
            "nullable": true
          },
          "longitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "enum": [
                  "-INF",
                  "INF",
                  "NaN"
                ]
              }
            ],
            "description": "Longitude coordinate of the device's location",
            "format": "double",
            "nullable": true
          },
          "latitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "enum": [
                  "-INF",
                  "INF",
                  "NaN"
                ]
              }
            ],
            "description": "Latitude coordinate of the device's location",
            "format": "double",
            "nullable": true
          },
          "altitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "enum": [
                  "-INF",
                  "INF",
                  "NaN"
                ]
              }
            ],
            "description": "Altitude, given in meters above sea level",
            "format": "double",
            "nullable": true
          },
          "horizontalAccuracy": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "enum": [
                  "-INF",
                  "INF",
                  "NaN"
                ]
              }
            ],
            "description": "Accuracy of longitude and latitude in meters",
            "format": "double",
            "nullable": true
          },
          "verticalAccuracy": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "enum": [
                  "-INF",
                  "INF",
                  "NaN"
                ]
              }
            ],
            "description": "Accuracy of altitude in meters",
            "format": "double",
            "nullable": true
          },
          "heading": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "enum": [
                  "-INF",
                  "INF",
                  "NaN"
                ]
              }
            ],
            "description": "Heading in degrees from true north",
            "format": "double",
            "nullable": true
          },
          "speed": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "enum": [
                  "-INF",
                  "INF",
                  "NaN"
                ]
              }
            ],
            "description": "Speed the device is traveling in meters per second",
            "format": "double",
            "nullable": true
          }
        },
        "example": {
          "lastCollectedDateTime": "string (timestamp)",
          "longitude": "double",
          "latitude": "double",
          "altitude": "double",
          "horizontalAccuracy": "double",
          "verticalAccuracy": "double",
          "heading": "double",
          "speed": "double"
        }
      },
      "microsoft.graph.deviceHealthAttestationState": {
        "title": "deviceHealthAttestationState",
        "type": "object",
        "properties": {
          "lastUpdateDateTime": {
            "type": "string",
            "description": "The Timestamp of the last update.",
            "nullable": true
          },
          "contentNamespaceUrl": {
            "type": "string",
            "description": "The DHA report version. (Namespace version)",
            "nullable": true
          },
          "deviceHealthAttestationStatus": {
            "type": "string",
            "description": "The DHA report version. (Namespace version)",
            "nullable": true
          },
          "contentVersion": {
            "type": "string",
            "description": "The HealthAttestation state schema version",
            "nullable": true
          },
          "issuedDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "description": "The DateTime when device was evaluated or issued to MDM",
            "format": "date-time",
            "nullable": true
          },
          "attestationIdentityKey": {
            "type": "string",
            "description": "TWhen an Attestation Identity Key (AIK) is present on a device, it indicates that the device has an endorsement key (EK) certificate.",
            "nullable": true
          },
          "resetCount": {
            "type": "integer",
            "description": "The number of times a PC device has hibernated or resumed",
            "format": "int64",
            "nullable": true
          },
          "restartCount": {
            "type": "integer",
            "description": "The number of times a PC device has rebooted",
            "format": "int64",
            "nullable": true
          },
          "dataExcutionPolicy": {
            "type": "string",
            "description": "DEP Policy defines a set of hardware and software technologies that perform additional checks on memory",
            "nullable": true
          },
          "bitLockerStatus": {
            "type": "string",
            "description": "On or Off of BitLocker Drive Encryption",
            "nullable": true
          },
          "bootManagerVersion": {
            "type": "string",
            "description": "The version of the Boot Manager",
            "nullable": true
          },
          "codeIntegrityCheckVersion": {
            "type": "string",
            "description": "The version of the Boot Manager",
            "nullable": true
          },
          "secureBoot": {
            "type": "string",
            "description": "When Secure Boot is enabled, the core components must have the correct cryptographic signatures",
            "nullable": true
          },
          "bootDebugging": {
            "type": "string",
            "description": "When bootDebugging is enabled, the device is used in development and testing",
            "nullable": true
          },
          "operatingSystemKernelDebugging": {
            "type": "string",
            "description": "When operatingSystemKernelDebugging is enabled, the device is used in development and testing",
            "nullable": true
          },
          "codeIntegrity": {
            "type": "string",
            "description": "When code integrity is enabled, code execution is restricted to integrity verified code",
            "nullable": true
          },
          "testSigning": {
            "type": "string",
            "description": "When test signing is allowed, the device does not enforce signature validation during boot",
            "nullable": true
          },
          "safeMode": {
            "type": "string",
            "description": "Safe mode is a troubleshooting option for Windows that starts your computer in a limited state",
            "nullable": true
          },
          "windowsPE": {
            "type": "string",
            "description": "Operating system running with limited services that is used to prepare a computer for Windows",
            "nullable": true
          },
          "earlyLaunchAntiMalwareDriverProtection": {
            "type": "string",
            "description": "ELAM provides protection for the computers in your network when they start up",
            "nullable": true
          },
          "virtualSecureMode": {
            "type": "string",
            "description": "VSM is a container that protects high value assets from a compromised kernel",
            "nullable": true
          },
          "pcrHashAlgorithm": {
            "type": "string",
            "description": "Informational attribute that identifies the HASH algorithm that was used by TPM",
            "nullable": true
          },
          "bootAppSecurityVersion": {
            "type": "string",
            "description": "The security version number of the Boot Application",
            "nullable": true
          },
          "bootManagerSecurityVersion": {
            "type": "string",
            "description": "The security version number of the Boot Application",
            "nullable": true
          },
          "tpmVersion": {
            "type": "string",
            "description": "The security version number of the Boot Application",
            "nullable": true
          },
          "pcr0": {
            "type": "string",
            "description": "The measurement that is captured in PCR[0]",
            "nullable": true
          },
          "secureBootConfigurationPolicyFingerPrint": {
            "type": "string",
            "description": "Fingerprint of the Custom Secure Boot Configuration Policy",
            "nullable": true
          },
          "codeIntegrityPolicy": {
            "type": "string",
            "description": "The Code Integrity policy that is controlling the security of the boot environment",
            "nullable": true
          },
          "bootRevisionListInfo": {
            "type": "string",
            "description": "The Boot Revision List that was loaded during initial boot on the attested device",
            "nullable": true
          },
          "operatingSystemRevListInfo": {
            "type": "string",
            "description": "The Operating System Revision List that was loaded during initial boot on the attested device",
            "nullable": true
          },
          "healthStatusMismatchInfo": {
            "type": "string",
            "description": "This attribute appears if DHA-Service detects an integrity issue",
            "nullable": true
          },
          "healthAttestationSupportedStatus": {
            "type": "string",
            "description": "This attribute indicates if DHA is supported for the device",
            "nullable": true
          }
        },
        "example": {
          "lastUpdateDateTime": "string",
          "contentNamespaceUrl": "string",
          "deviceHealthAttestationStatus": "string",
          "contentVersion": "string",
          "issuedDateTime": "string (timestamp)",
          "attestationIdentityKey": "string",
          "resetCount": "integer",
          "restartCount": "integer",
          "dataExcutionPolicy": "string",
          "bitLockerStatus": "string",
          "bootManagerVersion": "string",
          "codeIntegrityCheckVersion": "string",
          "secureBoot": "string",
          "bootDebugging": "string",
          "operatingSystemKernelDebugging": "string",
          "codeIntegrity": "string",
          "testSigning": "string",
          "safeMode": "string",
          "windowsPE": "string",
          "earlyLaunchAntiMalwareDriverProtection": "string",
          "virtualSecureMode": "string",
          "pcrHashAlgorithm": "string",
          "bootAppSecurityVersion": "string",
          "bootManagerSecurityVersion": "string",
          "tpmVersion": "string",
          "pcr0": "string",
          "secureBootConfigurationPolicyFingerPrint": "string",
          "codeIntegrityPolicy": "string",
          "bootRevisionListInfo": "string",
          "operatingSystemRevListInfo": "string",
          "healthStatusMismatchInfo": "string",
          "healthAttestationSupportedStatus": "string"
        }
      },
      "microsoft.graph.deviceOperatingSystemSummary": {
        "title": "deviceOperatingSystemSummary",
        "type": "object",
        "properties": {
          "androidCount": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Number of android device count.",
            "format": "int32",
            "nullable": true
          },
          "iosCount": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Number of iOS device count.",
            "format": "int32",
            "nullable": true
          },
          "macOSCount": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Number of Mac OS X device count.",
            "format": "int32",
            "nullable": true
          },
          "windowsMobileCount": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Number of Windows mobile device count.",
            "format": "int32",
            "nullable": true
          },
          "windowsCount": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Number of Windows device count.",
            "format": "int32",
            "nullable": true
          },
          "unknownCount": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Number of unknown device count.",
            "format": "int32",
            "nullable": true
          }
        },
        "example": {
          "androidCount": "integer",
          "iosCount": "integer",
          "macOSCount": "integer",
          "windowsMobileCount": "integer",
          "windowsCount": "integer",
          "unknownCount": "integer"
        }
      },
      "microsoft.graph.locateDeviceActionResult": {
        "title": "locateDeviceActionResult",
        "type": "object",
        "properties": {
          "actionName": {
            "type": "string",
            "description": "Action name Inherited from deviceActionResult",
            "nullable": true
          },
          "actionState": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.actionState"
              }
            ],
            "description": "State of the action Inherited from deviceActionResult. Possible values are: none, pending, canceled, active, done, failed, notSupported.",
            "nullable": true
          },
          "startDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "description": "Time the action was initiated Inherited from deviceActionResult",
            "format": "date-time",
            "nullable": true
          },
          "lastUpdatedDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "description": "Time the action state was last updated Inherited from deviceActionResult",
            "format": "date-time",
            "nullable": true
          },
          "deviceLocation": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.deviceGeoLocation"
              }
            ],
            "description": "device location",
            "nullable": true
          }
        },
        "example": {
          "actionName": "string",
          "actionState": {
            "@odata.type": "microsoft.graph.actionState"
          },
          "startDateTime": "string (timestamp)",
          "lastUpdatedDateTime": "string (timestamp)",
          "deviceLocation": {
            "@odata.type": "microsoft.graph.deviceGeoLocation"
          }
        }
      },
      "microsoft.graph.remoteLockActionResult": {
        "title": "remoteLockActionResult",
        "type": "object",
        "properties": {
          "actionName": {
            "type": "string",
            "description": "Action name Inherited from deviceActionResult",
            "nullable": true
          },
          "actionState": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.actionState"
              }
            ],
            "description": "State of the action Inherited from deviceActionResult. Possible values are: none, pending, canceled, active, done, failed, notSupported.",
            "nullable": true
          },
          "startDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "description": "Time the action was initiated Inherited from deviceActionResult",
            "format": "date-time",
            "nullable": true
          },
          "lastUpdatedDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "description": "Time the action state was last updated Inherited from deviceActionResult",
            "format": "date-time",
            "nullable": true
          },
          "unlockPin": {
            "type": "string",
            "description": "Pin to unlock the client",
            "nullable": true
          }
        },
        "example": {
          "actionName": "string",
          "actionState": {
            "@odata.type": "microsoft.graph.actionState"
          },
          "startDateTime": "string (timestamp)",
          "lastUpdatedDateTime": "string (timestamp)",
          "unlockPin": "string"
        }
      },
      "microsoft.graph.resetPasscodeActionResult": {
        "title": "resetPasscodeActionResult",
        "type": "object",
        "properties": {
          "actionName": {
            "type": "string",
            "description": "Action name Inherited from deviceActionResult",
            "nullable": true
          },
          "actionState": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.actionState"
              }
            ],
            "description": "State of the action Inherited from deviceActionResult. Possible values are: none, pending, canceled, active, done, failed, notSupported.",
            "nullable": true
          },
          "startDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "description": "Time the action was initiated Inherited from deviceActionResult",
            "format": "date-time",
            "nullable": true
          },
          "lastUpdatedDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "description": "Time the action state was last updated Inherited from deviceActionResult",
            "format": "date-time",
            "nullable": true
          },
          "passcode": {
            "type": "string",
            "description": "Newly generated passcode for the device",
            "nullable": true
          }
        },
        "example": {
          "actionName": "string",
          "actionState": {
            "@odata.type": "microsoft.graph.actionState"
          },
          "startDateTime": "string (timestamp)",
          "lastUpdatedDateTime": "string (timestamp)",
          "passcode": "string"
        }
      },
      "microsoft.graph.updateWindowsDeviceAccountActionParameter": {
        "title": "updateWindowsDeviceAccountActionParameter",
        "type": "object",
        "properties": {
          "deviceAccount": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.windowsDeviceAccount"
              }
            ],
            "description": "Not yet documented",
            "nullable": true
          },
          "passwordRotationEnabled": {
            "type": "boolean",
            "description": "Not yet documented",
            "nullable": true
          },
          "calendarSyncEnabled": {
            "type": "boolean",
            "description": "Not yet documented",
            "nullable": true
          },
          "deviceAccountEmail": {
            "type": "string",
            "description": "Not yet documented",
            "nullable": true
          },
          "exchangeServer": {
            "type": "string",
            "description": "Not yet documented",
            "nullable": true
          },
          "sessionInitiationProtocalAddress": {
            "type": "string",
            "description": "Not yet documented",
            "nullable": true
          }
        },
        "example": {
          "deviceAccount": {
            "@odata.type": "microsoft.graph.windowsDeviceAccount"
          },
          "passwordRotationEnabled": true,
          "calendarSyncEnabled": true,
          "deviceAccountEmail": "string",
          "exchangeServer": "string",
          "sessionInitiationProtocalAddress": "string"
        }
      },
      "microsoft.graph.windowsDefenderScanActionResult": {
        "title": "windowsDefenderScanActionResult",
        "type": "object",
        "properties": {
          "actionName": {
            "type": "string",
            "description": "Action name Inherited from deviceActionResult",
            "nullable": true
          },
          "actionState": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.actionState"
              }
            ],
            "description": "State of the action Inherited from deviceActionResult. Possible values are: none, pending, canceled, active, done, failed, notSupported.",
            "nullable": true
          },
          "startDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "description": "Time the action was initiated Inherited from deviceActionResult",
            "format": "date-time",
            "nullable": true
          },
          "lastUpdatedDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "description": "Time the action state was last updated Inherited from deviceActionResult",
            "format": "date-time",
            "nullable": true
          },
          "scanType": {
            "type": "string",
            "description": "Scan type either full scan or quick scan",
            "nullable": true
          }
        },
        "example": {
          "actionName": "string",
          "actionState": {
            "@odata.type": "microsoft.graph.actionState"
          },
          "startDateTime": "string (timestamp)",
          "lastUpdatedDateTime": "string (timestamp)",
          "scanType": "string"
        }
      },
      "microsoft.graph.windowsDeviceAccount": {
        "title": "windowsDeviceAccount",
        "type": "object",
        "properties": {
          "password": {
            "type": "string",
            "description": "Not yet documented",
            "nullable": true
          }
        },
        "example": {
          "password": "string"
        }
      },
      "microsoft.graph.windowsDeviceADAccount": {
        "title": "windowsDeviceADAccount",
        "type": "object",
        "properties": {
          "password": {
            "type": "string",
            "description": "Not yet documented Inherited from windowsDeviceAccount",
            "nullable": true
          },
          "domainName": {
            "type": "string",
            "description": "Not yet documented",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "description": "Not yet documented",
            "nullable": true
          }
        },
        "example": {
          "password": "string",
          "domainName": "string",
          "userName": "string"
        }
      },
      "microsoft.graph.windowsDeviceAzureADAccount": {
        "title": "windowsDeviceAzureADAccount",
        "type": "object",
        "properties": {
          "password": {
            "type": "string",
            "description": "Not yet documented Inherited from windowsDeviceAccount",
            "nullable": true
          },
          "userPrincipalName": {
            "type": "string",
            "description": "Not yet documented",
            "nullable": true
          }
        },
        "example": {
          "password": "string",
          "userPrincipalName": "string"
        }
      },
      "microsoft.graph.importedWindowsAutopilotDeviceIdentityState": {
        "title": "importedWindowsAutopilotDeviceIdentityState",
        "type": "object",
        "properties": {
          "deviceImportStatus": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.importedWindowsAutopilotDeviceIdentityImportStatus"
              }
            ],
            "description": "Device status reported by Device Directory Service(DDS). Possible values are: unknown, pending, partial, complete, error.",
            "nullable": true
          },
          "deviceRegistrationId": {
            "type": "string",
            "description": "Device Registration ID for successfully added device reported by Device Directory Service(DDS).",
            "nullable": true
          },
          "deviceErrorCode": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Device error code reported by Device Directory Service(DDS).",
            "format": "int32",
            "nullable": true
          },
          "deviceErrorName": {
            "type": "string",
            "description": "Device error name reported by Device Directory Service(DDS).",
            "nullable": true
          }
        },
        "example": {
          "deviceImportStatus": {
            "@odata.type": "microsoft.graph.importedWindowsAutopilotDeviceIdentityImportStatus"
          },
          "deviceRegistrationId": "string",
          "deviceErrorCode": "integer",
          "deviceErrorName": "string"
        }
      },
      "microsoft.graph.androidMobileAppIdentifier": {
        "title": "androidMobileAppIdentifier",
        "type": "object",
        "properties": {
          "packageId": {
            "type": "string",
            "description": "The identifier for an app, as specified in the play store.",
            "nullable": true
          }
        },
        "example": {
          "packageId": "string"
        }
      },
      "microsoft.graph.iosMobileAppIdentifier": {
        "title": "iosMobileAppIdentifier",
        "type": "object",
        "properties": {
          "bundleId": {
            "type": "string",
            "description": "The identifier for an app, as specified in the app store.",
            "nullable": true
          }
        },
        "example": {
          "bundleId": "string"
        }
      },
      "microsoft.graph.ipRange": {
        "title": "ipRange",
        "type": "object"
      },
      "microsoft.graph.iPv4Range": {
        "title": "iPv4Range",
        "type": "object",
        "properties": {
          "lowerAddress": {
            "type": "string",
            "description": "Lower IP Address",
            "nullable": true
          },
          "upperAddress": {
            "type": "string",
            "description": "Upper IP Address",
            "nullable": true
          }
        },
        "example": {
          "lowerAddress": "string",
          "upperAddress": "string"
        }
      },
      "microsoft.graph.iPv6Range": {
        "title": "iPv6Range",
        "type": "object",
        "properties": {
          "lowerAddress": {
            "type": "string",
            "description": "Lower IP Address",
            "nullable": true
          },
          "upperAddress": {
            "type": "string",
            "description": "Upper IP Address",
            "nullable": true
          }
        },
        "example": {
          "lowerAddress": "string",
          "upperAddress": "string"
        }
      },
      "microsoft.graph.keyValuePair": {
        "title": "keyValuePair",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name for this key-value pair",
            "nullable": true
          },
          "value": {
            "type": "string",
            "description": "Value for this key-value pair",
            "nullable": true
          }
        },
        "example": {
          "name": "string",
          "value": "string"
        }
      },
      "microsoft.graph.managedAppDiagnosticStatus": {
        "title": "managedAppDiagnosticStatus",
        "type": "object",
        "properties": {
          "validationName": {
            "type": "string",
            "description": "The validation friendly name",
            "nullable": true
          },
          "state": {
            "type": "string",
            "description": "The state of the operation",
            "nullable": true
          },
          "mitigationInstruction": {
            "type": "string",
            "description": "Instruction on how to mitigate a failed validation",
            "nullable": true
          }
        },
        "example": {
          "validationName": "string",
          "state": "string",
          "mitigationInstruction": "string"
        }
      },
      "microsoft.graph.managedAppPolicyDeploymentSummaryPerApp": {
        "title": "managedAppPolicyDeploymentSummaryPerApp",
        "type": "object",
        "properties": {
          "mobileAppIdentifier": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.mobileAppIdentifier"
              }
            ],
            "description": "Deployment of an app.",
            "nullable": true
          },
          "configurationAppliedUserCount": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Number of users the policy is applied.",
            "format": "int32",
            "nullable": true
          }
        },
        "example": {
          "mobileAppIdentifier": {
            "@odata.type": "microsoft.graph.mobileAppIdentifier"
          },
          "configurationAppliedUserCount": "integer"
        }
      },
      "microsoft.graph.mobileAppIdentifier": {
        "title": "mobileAppIdentifier",
        "type": "object"
      },
      "microsoft.graph.proxiedDomain": {
        "title": "proxiedDomain",
        "type": "object",
        "properties": {
          "ipAddressOrFQDN": {
            "type": "string",
            "description": "The IP address or FQDN",
            "nullable": true
          },
          "proxy": {
            "type": "string",
            "description": "Proxy IP",
            "nullable": true
          }
        },
        "example": {
          "ipAddressOrFQDN": "string",
          "proxy": "string"
        }
      },
      "microsoft.graph.windowsInformationProtectionApp": {
        "title": "windowsInformationProtectionApp",
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "description": "App display name.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "The app's description.",
            "nullable": true
          },
          "publisherName": {
            "type": "string",
            "description": "The publisher name",
            "nullable": true
          },
          "productName": {
            "type": "string",
            "description": "The product name.",
            "nullable": true
          },
          "denied": {
            "type": "boolean",
            "description": "If true, app is denied protection or exemption.",
            "nullable": true
          }
        },
        "example": {
          "displayName": "string",
          "description": "string",
          "publisherName": "string",
          "productName": "string",
          "denied": true
        }
      },
      "microsoft.graph.windowsInformationProtectionDataRecoveryCertificate": {
        "title": "windowsInformationProtectionDataRecoveryCertificate",
        "type": "object",
        "properties": {
          "subjectName": {
            "type": "string",
            "description": "Data recovery Certificate subject name",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Data recovery Certificate description",
            "nullable": true
          },
          "expirationDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "description": "Data recovery Certificate expiration datetime",
            "format": "date-time",
            "nullable": true
          },
          "certificate": {
            "type": "string",
            "description": "Data recovery Certificate",
            "format": "base64url",
            "nullable": true
          }
        },
        "example": {
          "subjectName": "string",
          "description": "string",
          "expirationDateTime": "string (timestamp)",
          "certificate": "string"
        }
      },
      "microsoft.graph.windowsInformationProtectionDesktopApp": {
        "title": "windowsInformationProtectionDesktopApp",
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "description": "App display name. Inherited from windowsInformationProtectionApp",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "The app's description. Inherited from windowsInformationProtectionApp",
            "nullable": true
          },
          "publisherName": {
            "type": "string",
            "description": "The publisher name Inherited from windowsInformationProtectionApp",
            "nullable": true
          },
          "productName": {
            "type": "string",
            "description": "The product name. Inherited from windowsInformationProtectionApp",
            "nullable": true
          },
          "denied": {
            "type": "boolean",
            "description": "If true, app is denied protection or exemption. Inherited from windowsInformationProtectionApp",
            "nullable": true
          },
          "binaryName": {
            "type": "string",
            "description": "The binary name.",
            "nullable": true
          },
          "binaryVersionLow": {
            "type": "string",
            "description": "The lower binary version.",
            "nullable": true
          },
          "binaryVersionHigh": {
            "type": "string",
            "description": "The high binary version.",
            "nullable": true
          }
        },
        "example": {
          "displayName": "string",
          "description": "string",
          "publisherName": "string",
          "productName": "string",
          "denied": true,
          "binaryName": "string",
          "binaryVersionLow": "string",
          "binaryVersionHigh": "string"
        }
      },
      "microsoft.graph.windowsInformationProtectionIPRangeCollection": {
        "title": "windowsInformationProtectionIPRangeCollection",
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "description": "Display name",
            "nullable": true
          },
          "ranges": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.ipRange"
                }
              ],
              "nullable": true
            },
            "description": "Collection of IP ranges"
          }
        },
        "example": {
          "displayName": "string",
          "ranges": [
            {
              "@odata.type": "microsoft.graph.ipRange"
            }
          ]
        }
      },
      "microsoft.graph.windowsInformationProtectionProxiedDomainCollection": {
        "title": "windowsInformationProtectionProxiedDomainCollection",
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "description": "Display name",
            "nullable": true
          },
          "proxiedDomains": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.proxiedDomain"
                }
              ],
              "nullable": true
            },
            "description": "Collection of proxied domains"
          }
        },
        "example": {
          "displayName": "string",
          "proxiedDomains": [
            {
              "@odata.type": "microsoft.graph.proxiedDomain"
            }
          ]
        }
      },
      "microsoft.graph.windowsInformationProtectionResourceCollection": {
        "title": "windowsInformationProtectionResourceCollection",
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "description": "Display name",
            "nullable": true
          },
          "resources": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true
            },
            "description": "Collection of resources"
          }
        },
        "example": {
          "displayName": "string",
          "resources": [
            "string"
          ]
        }
      },
      "microsoft.graph.windowsInformationProtectionStoreApp": {
        "title": "windowsInformationProtectionStoreApp",
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "description": "App display name. Inherited from windowsInformationProtectionApp",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "The app's description. Inherited from windowsInformationProtectionApp",
            "nullable": true
          },
          "publisherName": {
            "type": "string",
            "description": "The publisher name Inherited from windowsInformationProtectionApp",
            "nullable": true
          },
          "productName": {
            "type": "string",
            "description": "The product name. Inherited from windowsInformationProtectionApp",
            "nullable": true
          },
          "denied": {
            "type": "boolean",
            "description": "If true, app is denied protection or exemption. Inherited from windowsInformationProtectionApp",
            "nullable": true
          }
        },
        "example": {
          "displayName": "string",
          "description": "string",
          "publisherName": "string",
          "productName": "string",
          "denied": true
        }
      },
      "microsoft.graph.deviceEnrollmentPlatformRestriction": {
        "title": "deviceEnrollmentPlatformRestriction",
        "type": "object",
        "properties": {
          "platformBlocked": {
            "type": "boolean",
            "description": "Block the platform from enrolling",
            "nullable": true
          },
          "personalDeviceEnrollmentBlocked": {
            "type": "boolean",
            "description": "Block personally owned devices from enrolling",
            "nullable": true
          },
          "osMinimumVersion": {
            "type": "string",
            "description": "Min OS version supported",
            "nullable": true
          },
          "osMaximumVersion": {
            "type": "string",
            "description": "Max OS version supported",
            "nullable": true
          }
        },
        "example": {
          "platformBlocked": true,
          "personalDeviceEnrollmentBlocked": true,
          "osMinimumVersion": "string",
          "osMaximumVersion": "string"
        }
      },
      "microsoft.graph.intuneBrand": {
        "title": "intuneBrand",
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "description": "Company/organization name that is displayed to end users.",
            "nullable": true
          },
          "contactITName": {
            "type": "string",
            "description": "Name of the person/organization responsible for IT support.",
            "nullable": true
          },
          "contactITPhoneNumber": {
            "type": "string",
            "description": "Phone number of the person/organization responsible for IT support.",
            "nullable": true
          },
          "contactITEmailAddress": {
            "type": "string",
            "description": "Email address of the person/organization responsible for IT support.",
            "nullable": true
          },
          "contactITNotes": {
            "type": "string",
            "description": "Text comments regarding the person/organization responsible for IT support.",
            "nullable": true
          },
          "privacyUrl": {
            "type": "string",
            "description": "URL to the company/organization’s privacy policy.",
            "nullable": true
          },
          "onlineSupportSiteUrl": {
            "type": "string",
            "description": "URL to the company/organization’s IT helpdesk site.",
            "nullable": true
          },
          "onlineSupportSiteName": {
            "type": "string",
            "description": "Display name of the company/organization’s IT helpdesk site.",
            "nullable": true
          },
          "themeColor": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.rgbColor"
              }
            ],
            "description": "Primary theme color used in the Company Portal applications and web portal.",
            "nullable": true
          },
          "showLogo": {
            "type": "boolean",
            "description": "Boolean that represents whether the administrator-supplied logo images are shown or not shown.",
            "nullable": true
          },
          "lightBackgroundLogo": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.mimeContent"
              }
            ],
            "description": "Logo image displayed in Company Portal apps which have a light background behind the logo.",
            "nullable": true
          },
          "darkBackgroundLogo": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.mimeContent"
              }
            ],
            "description": "Logo image displayed in Company Portal apps which have a dark background behind the logo.",
            "nullable": true
          },
          "showNameNextToLogo": {
            "type": "boolean",
            "description": "Boolean that represents whether the administrator-supplied display name will be shown next to the logo image.",
            "nullable": true
          },
          "showDisplayNameNextToLogo": {
            "type": "boolean",
            "description": "Boolean that represents whether the administrator-supplied display name will be shown next to the logo image.",
            "nullable": true
          }
        },
        "example": {
          "displayName": "string",
          "contactITName": "string",
          "contactITPhoneNumber": "string",
          "contactITEmailAddress": "string",
          "contactITNotes": "string",
          "privacyUrl": "string",
          "onlineSupportSiteUrl": "string",
          "onlineSupportSiteName": "string",
          "themeColor": {
            "@odata.type": "microsoft.graph.rgbColor"
          },
          "showLogo": true,
          "lightBackgroundLogo": {
            "@odata.type": "microsoft.graph.mimeContent"
          },
          "darkBackgroundLogo": {
            "@odata.type": "microsoft.graph.mimeContent"
          },
          "showNameNextToLogo": true,
          "showDisplayNameNextToLogo": true
        }
      },
      "microsoft.graph.rgbColor": {
        "title": "rgbColor",
        "type": "object",
        "properties": {
          "r": {
            "type": "integer",
            "description": "Red value",
            "format": "uint8",
            "nullable": true
          },
          "g": {
            "type": "integer",
            "description": "Green value",
            "format": "uint8",
            "nullable": true
          },
          "b": {
            "type": "integer",
            "description": "Blue value",
            "format": "uint8",
            "nullable": true
          }
        },
        "example": {
          "r": "integer",
          "g": "integer",
          "b": "integer"
        }
      },
      "microsoft.graph.resourceAction": {
        "title": "resourceAction",
        "type": "object",
        "properties": {
          "allowedResourceActions": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true
            },
            "description": "Allowed Actions"
          },
          "notAllowedResourceActions": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true
            },
            "description": "Not Allowed Actions"
          }
        },
        "example": {
          "allowedResourceActions": [
            "string"
          ],
          "notAllowedResourceActions": [
            "string"
          ]
        }
      },
      "microsoft.graph.rolePermission": {
        "title": "rolePermission",
        "type": "object",
        "properties": {
          "resourceActions": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.resourceAction"
                }
              ],
              "nullable": true
            },
            "description": "Actions"
          }
        },
        "example": {
          "resourceActions": [
            {
              "@odata.type": "microsoft.graph.resourceAction"
            }
          ]
        }
      },
      "microsoft.graph.allDevicesAssignmentTarget": {
        "title": "allDevicesAssignmentTarget",
        "type": "object"
      },
      "microsoft.graph.allLicensedUsersAssignmentTarget": {
        "title": "allLicensedUsersAssignmentTarget",
        "type": "object"
      },
      "microsoft.graph.deviceAndAppManagementAssignmentTarget": {
        "title": "deviceAndAppManagementAssignmentTarget",
        "type": "object"
      },
      "microsoft.graph.exclusionGroupAssignmentTarget": {
        "title": "exclusionGroupAssignmentTarget",
        "type": "object",
        "properties": {
          "groupId": {
            "type": "string",
            "description": "The group Id that is the target of the assignment. Inherited from groupAssignmentTarget",
            "nullable": true
          }
        },
        "example": {
          "groupId": "string"
        }
      },
      "microsoft.graph.groupAssignmentTarget": {
        "title": "groupAssignmentTarget",
        "type": "object",
        "properties": {
          "groupId": {
            "type": "string",
            "description": "The group Id that is the target of the assignment.",
            "nullable": true
          }
        },
        "example": {
          "groupId": "string"
        }
      },
      "microsoft.graph.mimeContent": {
        "title": "mimeContent",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Indicates the content mime type.",
            "nullable": true
          },
          "value": {
            "type": "string",
            "description": "The byte array that contains the actual content.",
            "format": "base64url",
            "nullable": true
          }
        },
        "example": {
          "type": "string",
          "value": "string"
        }
      },
      "microsoft.graph.report": {
        "title": "report",
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "description": "Not yet documented",
            "format": "base64url",
            "nullable": true
          }
        },
        "example": {
          "content": "string"
        }
      },
      "microsoft.graph.uri": {
        "title": "uri",
        "type": "object",
        "properties": {
          "segments": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true
            },
            "description": "Not yet documented"
          }
        },
        "example": {
          "segments": [
            "string"
          ]
        }
      },
      "microsoft.graph.invitedUserMessageInfo": {
        "title": "invitedUserMessageInfo",
        "type": "object",
        "properties": {
          "ccRecipients": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.recipient"
                }
              ],
              "nullable": true
            },
            "description": "Additional recipients the invitation message should be sent to. Currently only 1 additional recipient is supported."
          },
          "customizedMessageBody": {
            "type": "string",
            "description": "Customized message body you want to send if you don't want the default message.",
            "nullable": true
          },
          "messageLanguage": {
            "type": "string",
            "description": "The language you want to send the default message in. If the customizedMessageBody is specified, this property is ignored, and the message is sent using the customizedMessageBody. The language format should be in ISO 639. The default is en-US.",
            "nullable": true
          }
        },
        "example": {
          "ccRecipients": [
            {
              "@odata.type": "microsoft.graph.recipient"
            }
          ],
          "customizedMessageBody": "string",
          "messageLanguage": "string"
        }
      },
      "microsoft.graph.itemBody": {
        "title": "itemBody",
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "description": "The content of the item.",
            "nullable": true
          },
          "contentType": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.bodyType"
              }
            ],
            "description": "The type of the content. Possible values are Text and HTML.",
            "nullable": true
          }
        },
        "example": {
          "content": "string",
          "contentType": {
            "@odata.type": "microsoft.graph.bodyType"
          }
        }
      },
      "microsoft.graph.itemReference": {
        "title": "itemReference",
        "type": "object",
        "properties": {
          "driveId": {
            "type": "string",
            "description": "Unique identifier of the drive instance that contains the item. Read-only.",
            "nullable": true
          },
          "driveType": {
            "type": "string",
            "description": "Identifies the type of drive. See [drive][] resource for values.",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "Unique identifier of the item in the drive. Read-only.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The name of the item being referenced. Read-only.",
            "nullable": true
          },
          "path": {
            "type": "string",
            "description": "Path that can be used to navigate to the item. Read-only.",
            "nullable": true
          },
          "shareId": {
            "type": "string",
            "description": "A unique identifier for a shared resource that can be accessed via the [Shares][] API.",
            "nullable": true
          },
          "sharepointIds": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.sharepointIds"
              }
            ],
            "description": "Returns identifiers useful for SharePoint REST compatibility. Read-only.",
            "nullable": true
          }
        },
        "example": {
          "driveId": "string",
          "driveType": "string",
          "id": "string",
          "name": "string",
          "path": "string",
          "shareId": "string",
          "sharepointIds": {
            "@odata.type": "microsoft.graph.sharepointIds"
          }
        }
      },
      "microsoft.graph.Json": {
        "title": "Json",
        "type": "object"
      },
      "microsoft.graph.licenseUnitsDetail": {
        "title": "licenseUnitsDetail",
        "type": "object",
        "properties": {
          "enabled": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "The number of units that are enabled.",
            "format": "int32",
            "nullable": true
          },
          "suspended": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "The number of units that are suspended.",
            "format": "int32",
            "nullable": true
          },
          "warning": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "The number of units that are in warning status.",
            "format": "int32",
            "nullable": true
          }
        },
        "example": {
          "enabled": "integer",
          "suspended": "integer",
          "warning": "integer"
        }
      },
      "microsoft.graph.listInfo": {
        "title": "listInfo",
        "type": "object",
        "properties": {
          "contentTypesEnabled": {
            "type": "boolean",
            "description": "If true, indicates that content types are enabled for this list.",
            "nullable": true
          },
          "hidden": {
            "type": "boolean",
            "description": "If true, indicates that the list is not normally visible in the SharePoint user experience.",
            "nullable": true
          },
          "template": {
            "type": "string",
            "description": "An enumerated value that represents the base list template used in creating the list. Possible values include documentLibrary, genericList, task, survey, announcements, contacts, and more.",
            "nullable": true
          }
        },
        "example": {
          "contentTypesEnabled": true,
          "hidden": true,
          "template": "string"
        }
      },
      "microsoft.graph.localeInfo": {
        "title": "localeInfo",
        "type": "object",
        "properties": {
          "locale": {
            "type": "string",
            "description": "A locale representation for the user, which includes the user's preferred language and country/region. For example, 'en-us'. The language component follows 2-letter codes as defined in ISO 639-1, and the country component follows 2-letter codes as defined in ISO 3166-1 alpha-2.",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "description": "A name representing the user's locale in natural language, for example, 'English (United States)'.",
            "nullable": true
          }
        },
        "example": {
          "locale": "string",
          "displayName": "string"
        }
      },
      "microsoft.graph.location": {
        "title": "location",
        "type": "object",
        "properties": {
          "address": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.physicalAddress"
              }
            ],
            "description": "The street address of the location.",
            "nullable": true
          },
          "coordinates": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.outlookGeoCoordinates"
              }
            ],
            "description": "The geographic coordinates and elevation of the location.",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "description": "The name associated with the location.",
            "nullable": true
          },
          "locationEmailAddress": {
            "type": "string",
            "description": "Optional email address of the location.",
            "nullable": true
          },
          "locationUri": {
            "type": "string",
            "description": "Optional URI representing the location.",
            "nullable": true
          },
          "locationType": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.locationType"
              }
            ],
            "description": "The type of location. The possible values are: default, conferenceRoom, homeAddress, businessAddress,geoCoordinates, streetAddress, hotel, restaurant, localBusiness, postalAddress. Read-only.",
            "nullable": true
          },
          "uniqueId": {
            "type": "string",
            "description": "For internal use only.",
            "nullable": true
          },
          "uniqueIdType": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.locationUniqueIdType"
              }
            ],
            "description": "For internal use only.",
            "nullable": true
          }
        },
        "example": {
          "address": {
            "@odata.type": "microsoft.graph.physicalAddress"
          },
          "coordinates": {
            "@odata.type": "microsoft.graph.outlookGeoCoordinates"
          },
          "displayName": "string",
          "locationEmailAddress": "string",
          "locationUri": "string",
          "locationType": {
            "@odata.type": "microsoft.graph.locationType"
          },
          "uniqueId": "string",
          "uniqueIdType": {
            "@odata.type": "microsoft.graph.locationUniqueIdType"
          }
        }
      },
      "microsoft.graph.locationConstraint": {
        "title": "locationConstraint",
        "type": "object",
        "properties": {
          "isRequired": {
            "type": "boolean",
            "description": "The client requests the service to include in the response a meeting location for the meeting. If this is true and all the resources are busy, findMeetingTimes will not return any meeting time suggestions. If this is false and all the resources are busy, findMeetingTimes would still look for meeting times without locations.",
            "nullable": true
          },
          "locations": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.locationConstraintItem"
                }
              ],
              "nullable": true
            },
            "description": "Constraint information for one or more locations that the client requests for the meeting."
          },
          "suggestLocation": {
            "type": "boolean",
            "description": "The client requests the service to suggest one or more meeting locations.",
            "nullable": true
          }
        },
        "example": {
          "isRequired": true,
          "locations": [
            {
              "@odata.type": "microsoft.graph.locationConstraintItem"
            }
          ],
          "suggestLocation": true
        }
      },
      "microsoft.graph.locationConstraintItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.location"
          },
          {
            "title": "locationConstraintItem",
            "type": "object",
            "properties": {
              "resolveAvailability": {
                "type": "boolean",
                "description": "If set to true and the specified resource is busy, findMeetingTimes looks for another resource that is free. If set to false and the specified resource is busy, findMeetingTimes returns the resource best ranked in the user's cache without checking if it's free. Default is true.",
                "nullable": true
              }
            }
          }
        ],
        "example": {
          "address": {
            "@odata.type": "microsoft.graph.physicalAddress"
          },
          "coordinates": {
            "@odata.type": "microsoft.graph.outlookGeoCoordinates"
          },
          "displayName": "string",
          "locationEmailAddress": "string",
          "locationUri": "string",
          "locationType": {
            "@odata.type": "microsoft.graph.locationType"
          },
          "uniqueId": "string",
          "uniqueIdType": {
            "@odata.type": "microsoft.graph.locationUniqueIdType"
          },
          "resolveAvailability": true
        }
      },
      "microsoft.graph.lookupColumn": {
        "title": "lookupColumn",
        "type": "object",
        "properties": {
          "allowMultipleValues": {
            "type": "boolean",
            "description": "Indicates whether multiple values can be selected from the source.",
            "nullable": true
          },
          "allowUnlimitedLength": {
            "type": "boolean",
            "description": "Indicates whether values in the column should be able to exceed the standard limit of 255 characters.",
            "nullable": true
          },
          "columnName": {
            "type": "string",
            "description": "The name of the lookup source column.",
            "nullable": true
          },
          "listId": {
            "type": "string",
            "description": "The unique identifier of the lookup source list.",
            "nullable": true
          },
          "primaryLookupColumnId": {
            "type": "string",
            "description": "If specified, this column is a secondary lookup, pulling an additional field from the list item looked up by the primary lookup. Use the list item looked up by the primary as the source for the column named here.",
            "nullable": true
          }
        },
        "example": {
          "allowMultipleValues": true,
          "allowUnlimitedLength": true,
          "columnName": "string",
          "listId": "string",
          "primaryLookupColumnId": "string"
        }
      },
      "microsoft.graph.mailboxSettings": {
        "title": "mailboxSettings",
        "type": "object",
        "properties": {
          "archiveFolder": {
            "type": "string",
            "description": "Folder ID of an archive folder for the user.",
            "nullable": true
          },
          "automaticRepliesSetting": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.automaticRepliesSetting"
              }
            ],
            "description": "Configuration settings to automatically notify the sender of an incoming email with a message from the signed-in user.",
            "nullable": true
          },
          "language": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.localeInfo"
              }
            ],
            "description": "The locale information for the user, including the preferred language and country/region.",
            "nullable": true
          },
          "timeZone": {
            "type": "string",
            "description": "The default time zone for the user's mailbox.",
            "nullable": true
          },
          "workingHours": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.workingHours"
              }
            ],
            "description": "The days of the week and hours in a specific time zone that the user works.",
            "nullable": true
          }
        },
        "example": {
          "archiveFolder": "string",
          "automaticRepliesSetting": {
            "@odata.type": "microsoft.graph.automaticRepliesSetting"
          },
          "language": {
            "@odata.type": "microsoft.graph.localeInfo"
          },
          "timeZone": "string",
          "workingHours": {
            "@odata.type": "microsoft.graph.workingHours"
          }
        }
      },
      "microsoft.graph.mailTips": {
        "title": "mailTips",
        "type": "object",
        "properties": {
          "automaticReplies": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.automaticRepliesMailTips"
              }
            ],
            "description": "Mail tips for automatic reply if it has been set up by the recipient.",
            "nullable": true
          },
          "customMailTip": {
            "type": "string",
            "description": "A custom mail tip that can be set on the recipient's mailbox.",
            "nullable": true
          },
          "deliveryRestricted": {
            "type": "boolean",
            "description": "Whether the recipient's mailbox is restricted, for example, accepting messages from only a predefined list of senders, rejecting messages from a predefined list of senders, or accepting messages from only authenticated senders.",
            "nullable": true
          },
          "emailAddress": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.emailAddress"
              }
            ],
            "description": "The email address of the recipient to get mailtips for.",
            "nullable": true
          },
          "error": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.mailTipsError"
              }
            ],
            "description": "Errors that occur during the getMailTips action.",
            "nullable": true
          },
          "externalMemberCount": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "The number of external members if the recipient is a distribution list.",
            "format": "int32",
            "nullable": true
          },
          "isModerated": {
            "type": "boolean",
            "description": "Whether sending messages to the recipient requires approval. For example, if the recipient is a large distribution list and a moderator has been set up to approve messages sent to that distribution list, or if sending messages to a recipient requires approval of the recipient's manager.",
            "nullable": true
          },
          "mailboxFull": {
            "type": "boolean",
            "description": "The mailbox full status of the recipient.",
            "nullable": true
          },
          "maxMessageSize": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "The maximum message size that has been configured for the recipient's organization or mailbox.",
            "format": "int32",
            "nullable": true
          },
          "recipientScope": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.recipientScopeType"
              }
            ],
            "description": "The scope of the recipient. Possible values are: none, internal, external, externalPartner, externalNonParther. For example, an administrator can set another organization to be its 'partner'. The scope is useful if an administrator wants certain mailtips to be accessible to certain scopes. It's also useful to senders to inform them that their message may leave the organization, helping them make the correct decisions about wording, tone and content.",
            "nullable": true
          },
          "recipientSuggestions": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.recipient"
                }
              ],
              "nullable": true
            },
            "description": "Recipients suggested based on previous contexts where they appear in the same message."
          },
          "totalMemberCount": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "The number of members if the recipient is a distribution list.",
            "format": "int32",
            "nullable": true
          }
        },
        "example": {
          "automaticReplies": {
            "@odata.type": "microsoft.graph.automaticRepliesMailTips"
          },
          "customMailTip": "string",
          "deliveryRestricted": true,
          "emailAddress": {
            "@odata.type": "microsoft.graph.emailAddress"
          },
          "error": {
            "@odata.type": "microsoft.graph.mailTipsError"
          },
          "externalMemberCount": "integer",
          "isModerated": true,
          "mailboxFull": true,
          "maxMessageSize": "integer",
          "recipientScope": {
            "@odata.type": "microsoft.graph.recipientScopeType"
          },
          "recipientSuggestions": [
            {
              "@odata.type": "microsoft.graph.recipient"
            }
          ],
          "totalMemberCount": "integer"
        }
      },
      "microsoft.graph.mailTipsError": {
        "title": "mailTipsError",
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "The error message.",
            "nullable": true
          },
          "code": {
            "type": "string",
            "description": "The error code.",
            "nullable": true
          }
        },
        "example": {
          "message": "string",
          "code": "string"
        }
      },
      "microsoft.graph.malwareState": {
        "title": "malwareState",
        "type": "object",
        "properties": {
          "category": {
            "type": "string",
            "description": "Provider-generated malware category (for example, trojan, ransomware, etc.).",
            "nullable": true
          },
          "family": {
            "type": "string",
            "description": "Provider-generated malware family (for example, 'wannacry', 'notpetya', etc.).",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Provider-generated malware variant name (for example, Trojan:Win32/Powessere.H).",
            "nullable": true
          },
          "severity": {
            "type": "string",
            "description": "Provider-determined severity of this malware.",
            "nullable": true
          },
          "wasRunning": {
            "type": "boolean",
            "description": "Indicates whether the detected file (malware/vulnerability) was running at the time of detection or was detected at rest on the disk.",
            "nullable": true
          }
        },
        "example": {
          "category": "string",
          "family": "string",
          "name": "string",
          "severity": "string",
          "wasRunning": true
        }
      },
      "microsoft.graph.meetingTimeSuggestion": {
        "title": "meetingTimeSuggestion",
        "type": "object",
        "properties": {
          "attendeeAvailability": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.attendeeAvailability"
                }
              ],
              "nullable": true
            },
            "description": "An array that shows the availability status of each attendee for this meeting suggestion."
          },
          "confidence": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "enum": [
                  "-INF",
                  "INF",
                  "NaN"
                ]
              }
            ],
            "description": "A percentage that represents the likelhood of all the attendees attending.",
            "format": "double",
            "nullable": true
          },
          "locations": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.location"
                }
              ],
              "nullable": true
            },
            "description": "An array that specifies the name and geographic location of each meeting location for this meeting suggestion."
          },
          "meetingTimeSlot": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.timeSlot"
              }
            ],
            "description": "A time period suggested for the meeting.",
            "nullable": true
          },
          "organizerAvailability": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.freeBusyStatus"
              }
            ],
            "description": "Availability of the meeting organizer for this meeting suggestion. The possible values are: free, tentative, busy, oof, workingElsewhere, unknown.",
            "nullable": true
          },
          "suggestionReason": {
            "type": "string",
            "description": "Reason for suggesting the meeting time.",
            "nullable": true
          }
        },
        "example": {
          "attendeeAvailability": [
            {
              "@odata.type": "microsoft.graph.attendeeAvailability"
            }
          ],
          "confidence": "double",
          "locations": [
            {
              "@odata.type": "microsoft.graph.location"
            }
          ],
          "meetingTimeSlot": {
            "@odata.type": "microsoft.graph.timeSlot"
          },
          "organizerAvailability": {
            "@odata.type": "microsoft.graph.freeBusyStatus"
          },
          "suggestionReason": "string"
        }
      },
      "microsoft.graph.meetingTimeSuggestionsResult": {
        "title": "meetingTimeSuggestionsResult",
        "type": "object",
        "properties": {
          "emptySuggestionsReason": {
            "type": "string",
            "description": "A reason for not returning any meeting suggestions. The possible values are: attendeesUnavailable, attendeesUnavailableOrUnknown, locationsUnavailable, organizerUnavailable, or unknown. This property is an empty string if the meetingTimeSuggestions property does include any meeting suggestions.",
            "nullable": true
          },
          "meetingTimeSuggestions": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.meetingTimeSuggestion"
                }
              ],
              "nullable": true
            },
            "description": "An array of meeting suggestions."
          }
        },
        "example": {
          "emptySuggestionsReason": "string",
          "meetingTimeSuggestions": [
            {
              "@odata.type": "microsoft.graph.meetingTimeSuggestion"
            }
          ]
        }
      },
      "microsoft.graph.messageRuleActions": {
        "title": "messageRuleActions",
        "type": "object",
        "properties": {
          "assignCategories": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true
            },
            "description": "A list of categories to be assigned to a message."
          },
          "copyToFolder": {
            "type": "string",
            "description": "The ID of a folder that a message is to be copied to.",
            "nullable": true
          },
          "delete": {
            "type": "boolean",
            "description": "Indicates whether a message should be moved to the Deleted Items folder.",
            "nullable": true
          },
          "forwardAsAttachmentTo": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.recipient"
                }
              ],
              "nullable": true
            },
            "description": "The email addresses of the recipients to which a message should be forwarded as an attachment."
          },
          "forwardTo": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.recipient"
                }
              ],
              "nullable": true
            },
            "description": "The email addresses of the recipients to which a message should be forwarded."
          },
          "markAsRead": {
            "type": "boolean",
            "description": "Indicates whether a message should be marked as read.",
            "nullable": true
          },
          "markImportance": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.importance"
              }
            ],
            "description": "Sets the importance of the message, which can be: low, normal, high.",
            "nullable": true
          },
          "moveToFolder": {
            "type": "string",
            "description": "The ID of the folder that a message will be moved to.",
            "nullable": true
          },
          "permanentDelete": {
            "type": "boolean",
            "description": "Indicates whether a message should be permanently deleted and not saved to the Deleted Items folder.",
            "nullable": true
          },
          "redirectTo": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.recipient"
                }
              ],
              "nullable": true
            },
            "description": "The email addresses to which a message should be redirected."
          },
          "stopProcessingRules": {
            "type": "boolean",
            "description": "Indicates whether subsequent rules should be evaluated.",
            "nullable": true
          }
        },
        "example": {
          "assignCategories": [
            "string"
          ],
          "copyToFolder": "string",
          "delete": true,
          "forwardAsAttachmentTo": [
            {
              "@odata.type": "microsoft.graph.recipient"
            }
          ],
          "forwardTo": [
            {
              "@odata.type": "microsoft.graph.recipient"
            }
          ],
          "markAsRead": true,
          "markImportance": {
            "@odata.type": "microsoft.graph.importance"
          },
          "moveToFolder": "string",
          "permanentDelete": true,
          "redirectTo": [
            {
              "@odata.type": "microsoft.graph.recipient"
            }
          ],
          "stopProcessingRules": true
        }
      },
      "microsoft.graph.messageRulePredicates": {
        "title": "messageRulePredicates",
        "type": "object",
        "properties": {
          "bodyContains": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true
            },
            "description": "Represents the strings that should appear in the body of an incoming message in order for the condition or exception to apply."
          },
          "bodyOrSubjectContains": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true
            },
            "description": "Represents the strings that should appear in the body or subject of an incoming message in order for the condition or exception to apply."
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true
            },
            "description": "Represents the categories that an incoming message should be labeled with in order for the condition or exception to apply."
          },
          "fromAddresses": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.recipient"
                }
              ],
              "nullable": true
            },
            "description": "Represents the specific sender email addresses of an incoming message in order for the condition or exception to apply."
          },
          "hasAttachments": {
            "type": "boolean",
            "description": "Indicates whether an incoming message must have attachments in order for the condition or exception to apply.",
            "nullable": true
          },
          "headerContains": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true
            },
            "description": "Represents the strings that appear in the headers of an incoming message in order for the condition or exception to apply."
          },
          "importance": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.importance"
              }
            ],
            "description": "The importance that is stamped on an incoming message in order for the condition or exception to apply: low, normal, high.",
            "nullable": true
          },
          "isApprovalRequest": {
            "type": "boolean",
            "description": "Indicates whether an incoming message must be an approval request in order for the condition or exception to apply.",
            "nullable": true
          },
          "isAutomaticForward": {
            "type": "boolean",
            "description": "Indicates whether an incoming message must be automatically forwarded in order for the condition or exception to apply.",
            "nullable": true
          },
          "isAutomaticReply": {
            "type": "boolean",
            "description": "Indicates whether an incoming message must be an auto reply in order for the condition or exception to apply.",
            "nullable": true
          },
          "isEncrypted": {
            "type": "boolean",
            "description": "Indicates whether an incoming message must be encrypted in order for the condition or exception to apply.",
            "nullable": true
          },
          "isMeetingRequest": {
            "type": "boolean",
            "description": "Indicates whether an incoming message must be a meeting request in order for the condition or exception to apply.",
            "nullable": true
          },
          "isMeetingResponse": {
            "type": "boolean",
            "description": "Indicates whether an incoming message must be a meeting response in order for the condition or exception to apply.",
            "nullable": true
          },
          "isNonDeliveryReport": {
            "type": "boolean",
            "description": "Indicates whether an incoming message must be a non-delivery report in order for the condition or exception to apply.",
            "nullable": true
          },
          "isPermissionControlled": {
            "type": "boolean",
            "description": "Indicates whether an incoming message must be permission controlled (RMS-protected) in order for the condition or exception to apply.",
            "nullable": true
          },
          "isReadReceipt": {
            "type": "boolean",
            "description": "Indicates whether an incoming message must be a read receipt in order for the condition or exception to apply.",
            "nullable": true
          },
          "isSigned": {
            "type": "boolean",
            "description": "Indicates whether an incoming message must be S/MIME-signed in order for the condition or exception to apply.",
            "nullable": true
          },
          "isVoicemail": {
            "type": "boolean",
            "description": "Indicates whether an incoming message must be a voice mail in order for the condition or exception to apply.",
            "nullable": true
          },
          "messageActionFlag": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.messageActionFlag"
              }
            ],
            "description": "Represents the flag-for-action value that appears on an incoming message in order for the condition or exception to apply. The possible values are: any, call, doNotForward, followUp, fyi, forward, noResponseNecessary, read, reply, replyToAll, review.",
            "nullable": true
          },
          "notSentToMe": {
            "type": "boolean",
            "description": "Indicates whether the owner of the mailbox must not be a recipient of an incoming message in order for the condition or exception to apply.",
            "nullable": true
          },
          "recipientContains": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true
            },
            "description": "Represents the strings that appear in either the toRecipients or ccRecipients properties of an incoming message in order for the condition or exception to apply."
          },
          "senderContains": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true
            },
            "description": "Represents the strings that appear in the from property of an incoming message in order for the condition or exception to apply."
          },
          "sensitivity": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.sensitivity"
              }
            ],
            "description": "Represents the sensitivity level that must be stamped on an incoming message in order for the condition or exception to apply. The possible values are: normal, personal, private, confidential.",
            "nullable": true
          },
          "sentCcMe": {
            "type": "boolean",
            "description": "Indicates whether the owner of the mailbox must be in the ccRecipients property of an incoming message in order for the condition or exception to apply.",
            "nullable": true
          },
          "sentOnlyToMe": {
            "type": "boolean",
            "description": "Indicates whether the owner of the mailbox must be the only recipient in an incoming message in order for the condition or exception to apply.",
            "nullable": true
          },
          "sentToAddresses": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.recipient"
                }
              ],
              "nullable": true
            },
            "description": "Represents the email addresses that an incoming message must have been sent to in order for the condition or exception to apply."
          },
          "sentToMe": {
            "type": "boolean",
            "description": "Indicates whether the owner of the mailbox must be in the toRecipients property of an incoming message in order for the condition or exception to apply.",
            "nullable": true
          },
          "sentToOrCcMe": {
            "type": "boolean",
            "description": "Indicates whether the owner of the mailbox must be in either a toRecipients or ccRecipients property of an incoming message in order for the condition or exception to apply.",
            "nullable": true
          },
          "subjectContains": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true
            },
            "description": "Represents the strings that appear in the subject of an incoming message in order for the condition or exception to apply."
          },
          "withinSizeRange": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.sizeRange"
              }
            ],
            "description": "Represents the minimum and maximum sizes (in kilobytes) that an incoming message must fall in between in order for the condition or exception to apply.",
            "nullable": true
          }
        },
        "example": {
          "bodyContains": [
            "string"
          ],
          "bodyOrSubjectContains": [
            "string"
          ],
          "categories": [
            "string"
          ],
          "fromAddresses": [
            {
              "@odata.type": "microsoft.graph.recipient"
            }
          ],
          "hasAttachments": true,
          "headerContains": [
            "string"
          ],
          "importance": {
            "@odata.type": "microsoft.graph.importance"
          },
          "isApprovalRequest": true,
          "isAutomaticForward": true,
          "isAutomaticReply": true,
          "isEncrypted": true,
          "isMeetingRequest": true,
          "isMeetingResponse": true,
          "isNonDeliveryReport": true,
          "isPermissionControlled": true,
          "isReadReceipt": true,
          "isSigned": true,
          "isVoicemail": true,
          "messageActionFlag": {
            "@odata.type": "microsoft.graph.messageActionFlag"
          },
          "notSentToMe": true,
          "recipientContains": [
            "string"
          ],
          "senderContains": [
            "string"
          ],
          "sensitivity": {
            "@odata.type": "microsoft.graph.sensitivity"
          },
          "sentCcMe": true,
          "sentOnlyToMe": true,
          "sentToAddresses": [
            {
              "@odata.type": "microsoft.graph.recipient"
            }
          ],
          "sentToMe": true,
          "sentToOrCcMe": true,
          "subjectContains": [
            "string"
          ],
          "withinSizeRange": {
            "@odata.type": "microsoft.graph.sizeRange"
          }
        }
      },
      "microsoft.graph.networkConnection": {
        "title": "networkConnection",
        "type": "object",
        "properties": {
          "applicationName": {
            "type": "string",
            "description": "Name of the application managing the network connection (for example, Facebook, SMTP, etc.).",
            "nullable": true
          },
          "destinationAddress": {
            "type": "string",
            "description": "Destination IP address (of the network connection).",
            "nullable": true
          },
          "destinationDomain": {
            "type": "string",
            "description": "Destination domain portion of the destination URL. (for example 'www.contoso.com').",
            "nullable": true
          },
          "destinationPort": {
            "type": "string",
            "description": "Destination port (of the network connection).",
            "nullable": true
          },
          "destinationUrl": {
            "type": "string",
            "description": "Network connection URL/URI string - excluding parameters. (for example 'www.contoso.com/products/default.html')",
            "nullable": true
          },
          "direction": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.connectionDirection"
              }
            ],
            "description": "Network connection direction. Possible values are: unknown, inbound, outbound.",
            "nullable": true
          },
          "domainRegisteredDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "description": "Date when the destination domain was registered. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'",
            "format": "date-time",
            "nullable": true
          },
          "localDnsName": {
            "type": "string",
            "description": "The local DNS name resolution as it appears in the host's local DNS cache (for example, in case the 'hosts' file was tampered with).",
            "nullable": true
          },
          "natDestinationAddress": {
            "type": "string",
            "description": "Network Address Translation destination IP address.",
            "nullable": true
          },
          "natDestinationPort": {
            "type": "string",
            "description": "Network Address Translation destination port.",
            "nullable": true
          },
          "natSourceAddress": {
            "type": "string",
            "description": "Network Address Translation source IP address.",
            "nullable": true
          },
          "natSourcePort": {
            "type": "string",
            "description": "Network Address Translation source port.",
            "nullable": true
          },
          "protocol": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.securityNetworkProtocol"
              }
            ],
            "description": "Network protocol. Possible values are: unknown, ip, icmp, igmp, ggp, ipv4, tcp, pup, udp, idp, ipv6, ipv6RoutingHeader, ipv6FragmentHeader, ipSecEncapsulatingSecurityPayload, ipSecAuthenticationHeader, icmpV6, ipv6NoNextHeader, ipv6DestinationOptions, nd, raw, ipx, spx, spxII.",
            "nullable": true
          },
          "riskScore": {
            "type": "string",
            "description": "Provider generated/calculated risk score of the network connection. Recommended value range of 0-1, which equates to a percentage.",
            "nullable": true
          },
          "sourceAddress": {
            "type": "string",
            "description": "Source (i.e. origin) IP address (of the network connection).",
            "nullable": true
          },
          "sourcePort": {
            "type": "string",
            "description": "Source (i.e. origin) IP port (of the network connection).",
            "nullable": true
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.connectionStatus"
              }
            ],
            "description": "Network connection status. Possible values are: unknown, attempted, succeeded, blocked, failed.",
            "nullable": true
          },
          "urlParameters": {
            "type": "string",
            "description": "Parameters (suffix) of the destination URL.",
            "nullable": true
          }
        },
        "example": {
          "applicationName": "string",
          "destinationAddress": "string",
          "destinationDomain": "string",
          "destinationPort": "string",
          "destinationUrl": "string",
          "direction": {
            "@odata.type": "microsoft.graph.connectionDirection"
          },
          "domainRegisteredDateTime": "string (timestamp)",
          "localDnsName": "string",
          "natDestinationAddress": "string",
          "natDestinationPort": "string",
          "natSourceAddress": "string",
          "natSourcePort": "string",
          "protocol": {
            "@odata.type": "microsoft.graph.securityNetworkProtocol"
          },
          "riskScore": "string",
          "sourceAddress": "string",
          "sourcePort": "string",
          "status": {
            "@odata.type": "microsoft.graph.connectionStatus"
          },
          "urlParameters": "string"
        }
      },
      "microsoft.graph.notebookLinks": {
        "title": "notebookLinks",
        "type": "object",
        "properties": {
          "oneNoteClientUrl": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.externalLink"
              }
            ],
            "description": "Opens the notebook in the OneNote native client if it's installed.",
            "nullable": true
          },
          "oneNoteWebUrl": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.externalLink"
              }
            ],
            "description": "Opens the notebook in OneNote Online.",
            "nullable": true
          }
        },
        "example": {
          "oneNoteClientUrl": {
            "@odata.type": "microsoft.graph.externalLink"
          },
          "oneNoteWebUrl": {
            "@odata.type": "microsoft.graph.externalLink"
          }
        }
      },
      "microsoft.graph.numberColumn": {
        "title": "numberColumn",
        "type": "object",
        "properties": {
          "decimalPlaces": {
            "type": "string",
            "description": "How many decimal places to display. See below for information about the possible values.",
            "nullable": true
          },
          "displayAs": {
            "type": "string",
            "description": "How the value should be presented in the UX. Must be one of number or percentage. If unspecified, treated as number.",
            "nullable": true
          },
          "maximum": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "enum": [
                  "-INF",
                  "INF",
                  "NaN"
                ]
              }
            ],
            "description": "The maximum permitted value.",
            "format": "double",
            "nullable": true
          },
          "minimum": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "enum": [
                  "-INF",
                  "INF",
                  "NaN"
                ]
              }
            ],
            "description": "The minimum permitted value.",
            "format": "double",
            "nullable": true
          }
        },
        "example": {
          "decimalPlaces": "string",
          "displayAs": "string",
          "maximum": "double",
          "minimum": "double"
        }
      },
      "microsoft.graph.onenoteOperationError": {
        "title": "onenoteOperationError",
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "The error code.",
            "nullable": true
          },
          "message": {
            "type": "string",
            "description": "The error message.",
            "nullable": true
          }
        },
        "example": {
          "code": "string",
          "message": "string"
        }
      },
      "microsoft.graph.onPremisesExtensionAttributes": {
        "title": "onPremisesExtensionAttributes",
        "type": "object",
        "properties": {
          "extensionAttribute1": {
            "type": "string",
            "description": "First customizable extension attribute.",
            "nullable": true
          },
          "extensionAttribute2": {
            "type": "string",
            "description": "Second customizable extension attribute.",
            "nullable": true
          },
          "extensionAttribute3": {
            "type": "string",
            "description": "Third customizable extension attribute.",
            "nullable": true
          },
          "extensionAttribute4": {
            "type": "string",
            "description": "Fourth customizable extension attribute.",
            "nullable": true
          },
          "extensionAttribute5": {
            "type": "string",
            "description": "Fifth customizable extension attribute.",
            "nullable": true
          },
          "extensionAttribute6": {
            "type": "string",
            "description": "Sixth customizable extension attribute.",
            "nullable": true
          },
          "extensionAttribute7": {
            "type": "string",
            "description": "Seventh customizable extension attribute.",
            "nullable": true
          },
          "extensionAttribute8": {
            "type": "string",
            "description": "Eighth customizable extension attribute.",
            "nullable": true
          },
          "extensionAttribute9": {
            "type": "string",
            "description": "Ninth customizable extension attribute.",
            "nullable": true
          },
          "extensionAttribute10": {
            "type": "string",
            "description": "Tenth customizable extension attribute.",
            "nullable": true
          },
          "extensionAttribute11": {
            "type": "string",
            "description": "Eleventh customizable extension attribute.",
            "nullable": true
          },
          "extensionAttribute12": {
            "type": "string",
            "description": "Twelfth customizable extension attribute.",
            "nullable": true
          },
          "extensionAttribute13": {
            "type": "string",
            "description": "Thirteenth customizable extension attribute.",
            "nullable": true
          },
          "extensionAttribute14": {
            "type": "string",
            "description": "Fourteenth customizable extension attribute.",
            "nullable": true
          },
          "extensionAttribute15": {
            "type": "string",
            "description": "Fifteenth customizable extension attribute.",
            "nullable": true
          }
        },
        "example": {
          "extensionAttribute1": "string",
          "extensionAttribute2": "string",
          "extensionAttribute3": "string",
          "extensionAttribute4": "string",
          "extensionAttribute5": "string",
          "extensionAttribute6": "string",
          "extensionAttribute7": "string",
          "extensionAttribute8": "string",
          "extensionAttribute9": "string",
          "extensionAttribute10": "string",
          "extensionAttribute11": "string",
          "extensionAttribute12": "string",
          "extensionAttribute13": "string",
          "extensionAttribute14": "string",
          "extensionAttribute15": "string"
        }
      },
      "microsoft.graph.onPremisesProvisioningError": {
        "title": "onPremisesProvisioningError",
        "type": "object",
        "properties": {
          "category": {
            "type": "string",
            "description": "Category of the provisioning error. Note: Currently, there is only one possible value. Possible value: PropertyConflict - indicates a property value is not unique. Other objects contain the same value for the property.",
            "nullable": true
          },
          "occurredDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "description": "The date and time at which the error occurred.",
            "format": "date-time",
            "nullable": true
          },
          "propertyCausingError": {
            "type": "string",
            "description": "Name of the directory property causing the error. Current possible values: UserPrincipalName or ProxyAddress",
            "nullable": true
          },
          "value": {
            "type": "string",
            "description": "Value of the property causing the error.",
            "nullable": true
          }
        },
        "example": {
          "category": "string",
          "occurredDateTime": "string (timestamp)",
          "propertyCausingError": "string",
          "value": "string"
        }
      },
      "microsoft.graph.outlookGeoCoordinates": {
        "title": "outlookGeoCoordinates",
        "type": "object",
        "properties": {
          "accuracy": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "enum": [
                  "-INF",
                  "INF",
                  "NaN"
                ]
              }
            ],
            "description": "The accuracy of the latitude and longitude. As an example, the accuracy can be measured in meters, such as the latitude and longitude are accurate to within 50 meters.",
            "format": "double",
            "nullable": true
          },
          "altitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "enum": [
                  "-INF",
                  "INF",
                  "NaN"
                ]
              }
            ],
            "description": "The altitude of the location.",
            "format": "double",
            "nullable": true
          },
          "altitudeAccuracy": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "enum": [
                  "-INF",
                  "INF",
                  "NaN"
                ]
              }
            ],
            "description": "The accuracy of the altitude.",
            "format": "double",
            "nullable": true
          },
          "latitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "enum": [
                  "-INF",
                  "INF",
                  "NaN"
                ]
              }
            ],
            "description": "The latitude of the location.",
            "format": "double",
            "nullable": true
          },
          "longitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "enum": [
                  "-INF",
                  "INF",
                  "NaN"
                ]
              }
            ],
            "description": "The longitude of the location.",
            "format": "double",
            "nullable": true
          }
        },
        "example": {
          "accuracy": "double",
          "altitude": "double",
          "altitudeAccuracy": "double",
          "latitude": "double",
          "longitude": "double"
        }
      },
      "microsoft.graph.package": {
        "title": "package",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "A string indicating the type of package. While oneNote is the only currently defined value, you should expect other package types to be returned and handle them accordingly.",
            "nullable": true
          }
        },
        "example": {
          "type": "string"
        }
      },
      "microsoft.graph.pageLinks": {
        "title": "pageLinks",
        "type": "object",
        "properties": {
          "oneNoteClientUrl": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.externalLink"
              }
            ],
            "description": "Opens the page in the OneNote native client if it's installed.",
            "nullable": true
          },
          "oneNoteWebUrl": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.externalLink"
              }
            ],
            "description": "Opens the page in OneNote Online.",
            "nullable": true
          }
        },
        "example": {
          "oneNoteClientUrl": {
            "@odata.type": "microsoft.graph.externalLink"
          },
          "oneNoteWebUrl": {
            "@odata.type": "microsoft.graph.externalLink"
          }
        }
      },
      "microsoft.graph.passwordProfile": {
        "title": "passwordProfile",
        "type": "object",
        "properties": {
          "forceChangePasswordNextSignIn": {
            "type": "boolean",
            "description": "true if the user must change her password on the next login; otherwise false.",
            "nullable": true
          },
          "password": {
            "type": "string",
            "description": "The password for the user. This property is required when a user is created. It can be updated, but the user will be required to change the password on the next login. The password must satisfy minimum requirements as specified by the user’s passwordPolicies property. By default, a strong password is required.",
            "nullable": true
          }
        },
        "example": {
          "forceChangePasswordNextSignIn": true,
          "password": "string"
        }
      },
      "microsoft.graph.onenotePatchContentCommand": {
        "title": "onenotePatchContentCommand",
        "type": "object",
        "properties": {
          "action": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.onenotePatchActionType"
              }
            ],
            "description": "The action to perform on the target element. The possible values are: replace, append, delete, insert, or prepend.",
            "nullable": true
          },
          "content": {
            "type": "string",
            "description": "A string of well-formed HTML to add to the page, and any image or file binary data. If the content contains binary data, the request must be sent using the multipart/form-data content type with a 'Commands' part.",
            "nullable": true
          },
          "position": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.onenotePatchInsertPosition"
              }
            ],
            "description": "The location to add the supplied content, relative to the target element. The possible values are: after (default) or before.",
            "nullable": true
          },
          "target": {
            "type": "string",
            "description": "The element to update. Must be the #<data-id> or the generated <id> of the element, or the body or title keyword.",
            "nullable": true
          }
        },
        "example": {
          "action": {
            "@odata.type": "microsoft.graph.onenotePatchActionType"
          },
          "content": "string",
          "position": {
            "@odata.type": "microsoft.graph.onenotePatchInsertPosition"
          },
          "target": "string"
        }
      },
      "microsoft.graph.patternedRecurrence": {
        "title": "patternedRecurrence",
        "type": "object",
        "properties": {
          "pattern": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.recurrencePattern"
              }
            ],
            "description": "The frequency of an event.",
            "nullable": true
          },
          "range": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.recurrenceRange"
              }
            ],
            "description": "The duration of an event.",
            "nullable": true
          }
        },
        "example": {
          "pattern": {
            "@odata.type": "microsoft.graph.recurrencePattern"
          },
          "range": {
            "@odata.type": "microsoft.graph.recurrenceRange"
          }
        }
      },
      "microsoft.graph.personOrGroupColumn": {
        "title": "personOrGroupColumn",
        "type": "object",
        "properties": {
          "allowMultipleSelection": {
            "type": "boolean",
            "description": "Indicates whether multiple values can be selected from the source.",
            "nullable": true
          },
          "displayAs": {
            "type": "string",
            "description": "How to display the information about the person or group chosen. See below.",
            "nullable": true
          },
          "chooseFromType": {
            "type": "string",
            "description": "Whether to allow selection of people only, or people and groups. Must be one of peopleAndGroups or peopleOnly.",
            "nullable": true
          }
        },
        "example": {
          "allowMultipleSelection": true,
          "displayAs": "string",
          "chooseFromType": "string"
        }
      },
      "microsoft.graph.personType": {
        "title": "personType",
        "type": "object",
        "properties": {
          "class": {
            "type": "string",
            "description": "The type of data source, such as Person.",
            "nullable": true
          },
          "subclass": {
            "type": "string",
            "description": "The secondary type of data source, such as OrganizationUser.",
            "nullable": true
          }
        },
        "example": {
          "class": "string",
          "subclass": "string"
        }
      },
      "microsoft.graph.phone": {
        "title": "phone",
        "type": "object",
        "properties": {
          "number": {
            "type": "string",
            "description": "The phone number.",
            "nullable": true
          },
          "type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.phoneType"
              }
            ],
            "description": "The type of phone number. The possible values are: home, business, mobile, other, assistant, homeFax, businessFax, otherFax, pager, radio.",
            "nullable": true
          }
        },
        "example": {
          "number": "string",
          "type": {
            "@odata.type": "microsoft.graph.phoneType"
          }
        }
      },
      "microsoft.graph.photo": {
        "title": "photo",
        "type": "object",
        "properties": {
          "cameraMake": {
            "type": "string",
            "description": "Camera manufacturer. Read-only.",
            "nullable": true
          },
          "cameraModel": {
            "type": "string",
            "description": "Camera model. Read-only.",
            "nullable": true
          },
          "exposureDenominator": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "enum": [
                  "-INF",
                  "INF",
                  "NaN"
                ]
              }
            ],
            "description": "The denominator for the exposure time fraction from the camera. Read-only.",
            "format": "double",
            "nullable": true
          },
          "exposureNumerator": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "enum": [
                  "-INF",
                  "INF",
                  "NaN"
                ]
              }
            ],
            "description": "The numerator for the exposure time fraction from the camera. Read-only.",
            "format": "double",
            "nullable": true
          },
          "fNumber": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "enum": [
                  "-INF",
                  "INF",
                  "NaN"
                ]
              }
            ],
            "description": "The F-stop value from the camera. Read-only.",
            "format": "double",
            "nullable": true
          },
          "focalLength": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "enum": [
                  "-INF",
                  "INF",
                  "NaN"
                ]
              }
            ],
            "description": "The focal length from the camera. Read-only.",
            "format": "double",
            "nullable": true
          },
          "iso": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "The ISO value from the camera. Read-only.",
            "format": "int32",
            "nullable": true
          },
          "takenDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "description": "Represents the date and time the photo was taken. Read-only.",
            "format": "date-time",
            "nullable": true
          }
        },
        "example": {
          "cameraMake": "string",
          "cameraModel": "string",
          "exposureDenominator": "double",
          "exposureNumerator": "double",
          "fNumber": "double",
          "focalLength": "double",
          "iso": "integer",
          "takenDateTime": "string (timestamp)"
        }
      },
      "microsoft.graph.physicalAddress": {
        "title": "physicalAddress",
        "type": "object",
        "properties": {
          "city": {
            "type": "string",
            "description": "The city.",
            "nullable": true
          },
          "countryOrRegion": {
            "type": "string",
            "description": "The country or region. It's a free-format string value, for example, 'United States'.",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "description": "The postal code.",
            "nullable": true
          },
          "state": {
            "type": "string",
            "description": "The state.",
            "nullable": true
          },
          "street": {
            "type": "string",
            "description": "The street.",
            "nullable": true
          }
        },
        "example": {
          "city": "string",
          "countryOrRegion": "string",
          "postalCode": "string",
          "state": "string",
          "street": "string"
        }
      },
      "microsoft.graph.plannerAppliedCategories": {
        "title": "plannerAppliedCategories",
        "type": "object"
      },
      "microsoft.graph.plannerAssignment": {
        "title": "plannerAssignment",
        "type": "object",
        "properties": {
          "assignedBy": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.identitySet"
              }
            ],
            "description": "The identity of the user that performed the assignment of the task, i.e. the assignor.",
            "nullable": true
          },
          "assignedDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "description": "The time at which the task was assigned. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'",
            "format": "date-time",
            "nullable": true
          },
          "orderHint": {
            "type": "string",
            "description": "Hint used to order assignees in a task. The format is defined as outlined here.",
            "nullable": true
          }
        },
        "example": {
          "assignedBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "assignedDateTime": "string (timestamp)",
          "orderHint": "string"
        }
      },
      "microsoft.graph.plannerAssignments": {
        "title": "plannerAssignments",
        "type": "object"
      },
      "microsoft.graph.plannerCategoryDescriptions": {
        "title": "plannerCategoryDescriptions",
        "type": "object",
        "properties": {
          "category1": {
            "type": "string",
            "description": "The label associated with Category 1",
            "nullable": true
          },
          "category2": {
            "type": "string",
            "description": "The label associated with Category 2",
            "nullable": true
          },
          "category3": {
            "type": "string",
            "description": "The label associated with Category 3",
            "nullable": true
          },
          "category4": {
            "type": "string",
            "description": "The label associated with Category 4",
            "nullable": true
          },
          "category5": {
            "type": "string",
            "description": "The label associated with Category 5",
            "nullable": true
          },
          "category6": {
            "type": "string",
            "description": "The label associated with Category 6",
            "nullable": true
          }
        },
        "example": {
          "category1": "string",
          "category2": "string",
          "category3": "string",
          "category4": "string",
          "category5": "string",
          "category6": "string"
        }
      },
      "microsoft.graph.plannerChecklistItem": {
        "title": "plannerChecklistItem",
        "type": "object",
        "properties": {
          "isChecked": {
            "type": "boolean",
            "description": "Value is true if the item is checked and false otherwise.",
            "nullable": true
          },
          "lastModifiedBy": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.identitySet"
              }
            ],
            "description": "Read-only. User ID by which this is last modified.",
            "nullable": true
          },
          "lastModifiedDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "description": "Read-only. Date and time at which this is last modified. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'",
            "format": "date-time",
            "nullable": true
          },
          "orderHint": {
            "type": "string",
            "description": "Used to set the relative order of items in the checklist. The format is defined as outlined here.",
            "nullable": true
          },
          "title": {
            "type": "string",
            "description": "Title of the checklist item",
            "nullable": true
          }
        },
        "example": {
          "isChecked": true,
          "lastModifiedBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "lastModifiedDateTime": "string (timestamp)",
          "orderHint": "string",
          "title": "string"
        }
      },
      "microsoft.graph.plannerChecklistItems": {
        "title": "plannerChecklistItems",
        "type": "object"
      },
      "microsoft.graph.plannerExternalReference": {
        "title": "plannerExternalReference",
        "type": "object",
        "properties": {
          "alias": {
            "type": "string",
            "description": "A name alias to describe the reference.",
            "nullable": true
          },
          "lastModifiedBy": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.identitySet"
              }
            ],
            "description": "Read-only. User ID by which this is last modified.",
            "nullable": true
          },
          "lastModifiedDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "description": "Read-only. Date and time at which this is last modified. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'",
            "format": "date-time",
            "nullable": true
          },
          "previewPriority": {
            "type": "string",
            "description": "Used to set the relative priority order in which the reference will be shown as a preview on the task.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Used to describe the type of the reference. Types include: PowerPoint, Word, Excel, Other.",
            "nullable": true
          }
        },
        "example": {
          "alias": "string",
          "lastModifiedBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "lastModifiedDateTime": "string (timestamp)",
          "previewPriority": "string",
          "type": "string"
        }
      },
      "microsoft.graph.plannerExternalReferences": {
        "title": "plannerExternalReferences",
        "type": "object"
      },
      "microsoft.graph.plannerOrderHintsByAssignee": {
        "title": "plannerOrderHintsByAssignee",
        "type": "object"
      },
      "microsoft.graph.plannerUserIds": {
        "title": "plannerUserIds",
        "type": "object"
      },
      "microsoft.graph.privacyProfile": {
        "title": "privacyProfile",
        "type": "object",
        "properties": {
          "contactEmail": {
            "type": "string",
            "description": "A valid smtp email address for the privacy statement contact. Not required.",
            "nullable": true
          },
          "statementUrl": {
            "type": "string",
            "description": "A valid URL format that begins with http:// or https://. Maximum length is 255 characters. The URL that directs to the company's privacy statement. Not required.",
            "nullable": true
          }
        },
        "example": {
          "contactEmail": "string",
          "statementUrl": "string"
        }
      },
      "microsoft.graph.process": {
        "title": "process",
        "type": "object",
        "properties": {
          "accountName": {
            "type": "string",
            "description": "User account identifier (user account context the process ran under) for example, AccountName, SID, and so on.",
            "nullable": true
          },
          "commandLine": {
            "type": "string",
            "description": "The full process invocation commandline including all parameters.",
            "nullable": true
          },
          "createdDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "description": "Time at which the process was started. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'.",
            "format": "date-time",
            "nullable": true
          },
          "fileHash": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.fileHash"
              }
            ],
            "description": "Complex type containing file hashes (cryptographic and location-sensitive).",
            "nullable": true
          },
          "integrityLevel": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.processIntegrityLevel"
              }
            ],
            "description": "The integrity level of the process. Possible values are: unknown, untrusted, low, medium, high, system.",
            "nullable": true
          },
          "isElevated": {
            "type": "boolean",
            "description": "True if the process is elevated.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The name of the process' Image file.",
            "nullable": true
          },
          "parentProcessCreatedDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "description": "DateTime at which the parent process was started. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'.",
            "format": "date-time",
            "nullable": true
          },
          "parentProcessId": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "The Process ID (PID) of the parent process.",
            "format": "int32",
            "nullable": true
          },
          "parentProcessName": {
            "type": "string",
            "description": "The name of the image file of the parent process.",
            "nullable": true
          },
          "path": {
            "type": "string",
            "description": "Full path, including filename.",
            "nullable": true
          },
          "processId": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "The Process ID (PID) of the process.",
            "format": "int32",
            "nullable": true
          }
        },
        "example": {
          "accountName": "string",
          "commandLine": "string",
          "createdDateTime": "string (timestamp)",
          "fileHash": {
            "@odata.type": "microsoft.graph.fileHash"
          },
          "integrityLevel": {
            "@odata.type": "microsoft.graph.processIntegrityLevel"
          },
          "isElevated": true,
          "name": "string",
          "parentProcessCreatedDateTime": "string (timestamp)",
          "parentProcessId": "integer",
          "parentProcessName": "string",
          "path": "string",
          "processId": "integer"
        }
      },
      "microsoft.graph.imageInfo": {
        "title": "imageInfo",
        "type": "object",
        "properties": {
          "iconUrl": {
            "type": "string",
            "description": "Optional; URI that points to an icon which represents the application used to generate the activity",
            "nullable": true
          },
          "alternateText": {
            "type": "string",
            "description": "Optional; alt-text accessible content for the image",
            "nullable": true
          },
          "addImageQuery": {
            "type": "boolean",
            "description": "Optional; parameter used to indicate the server is able to render image dynamically in response to parameterization. For example – a high contrast image",
            "nullable": true
          }
        },
        "example": {
          "iconUrl": "string",
          "alternateText": "string",
          "addImageQuery": true
        }
      },
      "microsoft.graph.visualInfo": {
        "title": "visualInfo",
        "type": "object",
        "properties": {
          "attribution": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.imageInfo"
              }
            ],
            "description": "Optional. JSON object used to represent an icon which represents the application used to generate the activity",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Optional. Longer text description of the user's unique activity (example: document name, first sentence, and/or metadata)",
            "nullable": true
          },
          "backgroundColor": {
            "type": "string",
            "description": "Optional. Background color used to render the activity in the UI - brand color for the application source of the activity. Must be a valid hex color",
            "nullable": true
          },
          "displayText": {
            "type": "string",
            "description": "Required. Short text description of the user's unique activity (for example, document name in cases where an activity refers to document creation)",
            "nullable": true
          },
          "content": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.Json"
              }
            ],
            "description": "Optional. Custom piece of data - JSON object used to provide custom content to render the activity in the Windows Shell UI",
            "nullable": true
          }
        },
        "example": {
          "attribution": {
            "@odata.type": "microsoft.graph.imageInfo"
          },
          "description": "string",
          "backgroundColor": "string",
          "displayText": "string",
          "content": {
            "@odata.type": "microsoft.graph.Json"
          }
        }
      },
      "microsoft.graph.provisionedPlan": {
        "title": "provisionedPlan",
        "type": "object",
        "properties": {
          "capabilityStatus": {
            "type": "string",
            "description": "For example, 'Enabled'.",
            "nullable": true
          },
          "provisioningStatus": {
            "type": "string",
            "description": "For example, 'Success'.",
            "nullable": true
          },
          "service": {
            "type": "string",
            "description": "The name of the service; for example, 'AccessControlS2S'",
            "nullable": true
          }
        },
        "example": {
          "capabilityStatus": "string",
          "provisioningStatus": "string",
          "service": "string"
        }
      },
      "microsoft.graph.publicationFacet": {
        "title": "publicationFacet",
        "type": "object",
        "properties": {
          "level": {
            "type": "string",
            "description": "The state of publication for this document. Either published or checkout. Read-only.",
            "nullable": true
          },
          "versionId": {
            "type": "string",
            "description": "The unique identifier for the version that is visible to the current caller. Read-only.",
            "nullable": true
          }
        },
        "example": {
          "level": "string",
          "versionId": "string"
        }
      },
      "microsoft.graph.quota": {
        "title": "quota",
        "type": "object",
        "properties": {
          "deleted": {
            "type": "integer",
            "description": "Total space consumed by files in the recycle bin, in bytes. Read-only.",
            "format": "int64",
            "nullable": true
          },
          "remaining": {
            "type": "integer",
            "description": "Total space remaining before reaching the quota limit, in bytes. Read-only.",
            "format": "int64",
            "nullable": true
          },
          "state": {
            "type": "string",
            "description": "Enumeration value that indicates the state of the storage space. Read-only.",
            "nullable": true
          },
          "total": {
            "type": "integer",
            "description": "Total allowed storage space, in bytes. Read-only.",
            "format": "int64",
            "nullable": true
          },
          "used": {
            "type": "integer",
            "description": "Total space used, in bytes. Read-only.",
            "format": "int64",
            "nullable": true
          }
        },
        "example": {
          "deleted": "integer",
          "remaining": "integer",
          "state": "string",
          "total": "integer",
          "used": "integer"
        }
      },
      "microsoft.graph.recentNotebook": {
        "title": "recentNotebook",
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "description": "The name of the notebook.",
            "nullable": true
          },
          "lastAccessedTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "description": "The date and time when the notebook was last modified. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'. Read-only.",
            "format": "date-time",
            "nullable": true
          },
          "links": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.recentNotebookLinks"
              }
            ],
            "description": "Links for opening the notebook. The oneNoteClientURL link opens the notebook in the OneNote client, if it's installed. The oneNoteWebURL link opens the notebook in OneNote Online.",
            "nullable": true
          },
          "sourceService": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.onenoteSourceService"
              }
            ],
            "description": "The backend store where the Notebook resides, either OneDriveForBusiness or OneDrive.",
            "nullable": true
          }
        },
        "example": {
          "displayName": "string",
          "lastAccessedTime": "string (timestamp)",
          "links": {
            "@odata.type": "microsoft.graph.recentNotebookLinks"
          },
          "sourceService": {
            "@odata.type": "microsoft.graph.onenoteSourceService"
          }
        }
      },
      "microsoft.graph.recentNotebookLinks": {
        "title": "recentNotebookLinks",
        "type": "object",
        "properties": {
          "oneNoteClientUrl": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.externalLink"
              }
            ],
            "description": "Opens the notebook in the OneNote native client if it's installed.",
            "nullable": true
          },
          "oneNoteWebUrl": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.externalLink"
              }
            ],
            "description": "Opens the notebook in OneNote Online.",
            "nullable": true
          }
        },
        "example": {
          "oneNoteClientUrl": {
            "@odata.type": "microsoft.graph.externalLink"
          },
          "oneNoteWebUrl": {
            "@odata.type": "microsoft.graph.externalLink"
          }
        }
      },
      "microsoft.graph.recurrencePattern": {
        "title": "recurrencePattern",
        "type": "object",
        "properties": {
          "dayOfMonth": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "The day of the month on which the event occurs. Required if type is absoluteMonthly or absoluteYearly.",
            "format": "int32",
            "nullable": true
          },
          "daysOfWeek": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.dayOfWeek"
                }
              ],
              "nullable": true
            },
            "description": "A collection of the days of the week on which the event occurs. The possible values are: sunday, monday, tuesday, wednesday, thursday, friday, saturday. If type is relativeMonthly or relativeYearly, and daysOfWeek specifies more than one day, the event falls on the first day that satisfies the pattern.  Required if type is weekly, relativeMonthly, or relativeYearly."
          },
          "firstDayOfWeek": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.dayOfWeek"
              }
            ],
            "description": "The first day of the week. The possible values are: sunday, monday, tuesday, wednesday, thursday, friday, saturday. Default is sunday. Required if type is weekly.",
            "nullable": true
          },
          "index": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.weekIndex"
              }
            ],
            "description": "Specifies on which instance of the allowed days specified in daysOfsWeek the event occurs, counted from the first instance in the month. The possible values are: first, second, third, fourth, last. Default is first. Optional and used if type is relativeMonthly or relativeYearly.",
            "nullable": true
          },
          "interval": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "The number of units between occurrences, where units can be in days, weeks, months, or years, depending on the type. Required.",
            "format": "int32",
            "nullable": true
          },
          "month": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "The month in which the event occurs.  This is a number from 1 to 12.",
            "format": "int32",
            "nullable": true
          },
          "type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.recurrencePatternType"
              }
            ],
            "description": "The recurrence pattern type: daily, weekly, absoluteMonthly, relativeMonthly, absoluteYearly, relativeYearly. Required.",
            "nullable": true
          }
        },
        "example": {
          "dayOfMonth": "integer",
          "daysOfWeek": [
            {
              "@odata.type": "microsoft.graph.dayOfWeek"
            }
          ],
          "firstDayOfWeek": {
            "@odata.type": "microsoft.graph.dayOfWeek"
          },
          "index": {
            "@odata.type": "microsoft.graph.weekIndex"
          },
          "interval": "integer",
          "month": "integer",
          "type": {
            "@odata.type": "microsoft.graph.recurrencePatternType"
          }
        }
      },
      "microsoft.graph.recurrenceRange": {
        "title": "recurrenceRange",
        "type": "object",
        "properties": {
          "endDate": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
            "type": "string",
            "description": "The date to stop applying the recurrence pattern. Depending on the recurrence pattern of the event, the last occurrence of the meeting may not be this date. Required if type is endDate.",
            "format": "date",
            "nullable": true
          },
          "numberOfOccurrences": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "The number of times to repeat the event. Required and must be positive if type is numbered.",
            "format": "int32",
            "nullable": true
          },
          "recurrenceTimeZone": {
            "type": "string",
            "description": "Time zone for the startDate and endDate properties. Optional. If not specified, the time zone of the event is used.",
            "nullable": true
          },
          "startDate": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
            "type": "string",
            "description": "The date to start applying the recurrence pattern. The first occurrence of the meeting may be this date or later, depending on the recurrence pattern of the event. Must be the same value as the start property of the recurring event. Required.",
            "format": "date",
            "nullable": true
          },
          "type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.recurrenceRangeType"
              }
            ],
            "description": "The recurrence range. The possible values are: endDate, noEnd, numbered. Required.",
            "nullable": true
          }
        },
        "example": {
          "endDate": "string (timestamp)",
          "numberOfOccurrences": "integer",
          "recurrenceTimeZone": "string",
          "startDate": "string (timestamp)",
          "type": {
            "@odata.type": "microsoft.graph.recurrenceRangeType"
          }
        }
      },
      "microsoft.graph.registryKeyState": {
        "title": "registryKeyState",
        "type": "object",
        "properties": {
          "hive": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.registryHive"
              }
            ],
            "description": "A Windows registry hive : HKEY_CURRENT_CONFIG HKEY_CURRENT_USER HKEY_LOCAL_MACHINE/SAM HKEY_LOCAL_MACHINE/Security HKEY_LOCAL_MACHINE/Software HKEY_LOCAL_MACHINE/System HKEY_USERS/.Default. Possible values are: unknown, currentConfig, currentUser, localMachineSam, localMachineSamSoftware, localMachineSystem, usersDefault.",
            "nullable": true
          },
          "key": {
            "type": "string",
            "description": "Current (i.e. changed) registry key (excludes HIVE).",
            "nullable": true
          },
          "oldKey": {
            "type": "string",
            "description": "Previous (i.e. before changed) registry key (excludes HIVE).",
            "nullable": true
          },
          "oldValueData": {
            "type": "string",
            "description": "Previous (i.e. before changed) registry key value data (contents).",
            "nullable": true
          },
          "oldValueName": {
            "type": "string",
            "description": "Previous (i.e. before changed) registry key value name.",
            "nullable": true
          },
          "operation": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.registryOperation"
              }
            ],
            "description": "Operation that changed the registry key name and/or value. Possible values are: unknown, create, modify, delete.",
            "nullable": true
          },
          "processId": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Process ID (PID) of the process that modified the registry key (process details will appear in the alert 'processes' collection).",
            "format": "int32",
            "nullable": true
          },
          "valueData": {
            "type": "string",
            "description": "Current (i.e. changed) registry key value data (contents).",
            "nullable": true
          },
          "valueName": {
            "type": "string",
            "description": "Current (i.e. changed) registry key value name",
            "nullable": true
          },
          "valueType": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.registryValueType"
              }
            ],
            "description": "Registry key value type REG_BINARY REG_DWORD REG_DWORD_LITTLE_ENDIAN REG_DWORD_BIG_ENDIANREG_EXPAND_SZ REG_LINK REG_MULTI_SZ REG_NONE REG_QWORD REG_QWORD_LITTLE_ENDIAN REG_SZ Possible values are: unknown, binary, dword, dwordLittleEndian, dwordBigEndian, expandSz, link, multiSz, none, qword, qwordlittleEndian, sz.",
            "nullable": true
          }
        },
        "example": {
          "hive": {
            "@odata.type": "microsoft.graph.registryHive"
          },
          "key": "string",
          "oldKey": "string",
          "oldValueData": "string",
          "oldValueName": "string",
          "operation": {
            "@odata.type": "microsoft.graph.registryOperation"
          },
          "processId": "integer",
          "valueData": "string",
          "valueName": "string",
          "valueType": {
            "@odata.type": "microsoft.graph.registryValueType"
          }
        }
      },
      "microsoft.graph.reminder": {
        "title": "reminder",
        "type": "object",
        "properties": {
          "changeKey": {
            "type": "string",
            "description": "Identifies the version of the reminder. Every time the reminder is changed, changeKey changes as well. This allows Exchange to apply changes to the correct version of the object.",
            "nullable": true
          },
          "eventEndTime": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.dateTimeTimeZone"
              }
            ],
            "description": "The date, time and time zone that the event ends.",
            "nullable": true
          },
          "eventId": {
            "type": "string",
            "description": "The unique ID of the event. Read only.",
            "nullable": true
          },
          "eventLocation": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.location"
              }
            ],
            "description": "The location of the event.",
            "nullable": true
          },
          "eventStartTime": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.dateTimeTimeZone"
              }
            ],
            "description": "The date, time, and time zone that the event starts.",
            "nullable": true
          },
          "eventSubject": {
            "type": "string",
            "description": "The text of the event's subject line.",
            "nullable": true
          },
          "eventWebLink": {
            "type": "string",
            "description": "The URL to open the event in Outlook on the web.The event will open in the browser if you are logged in to your mailbox via Outlook on the web. You will be prompted to login if you are not already logged in with the browser.This URL can be accessed from within an iFrame.",
            "nullable": true
          },
          "reminderFireTime": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.dateTimeTimeZone"
              }
            ],
            "description": "The date, time, and time zone that the reminder is set to occur.",
            "nullable": true
          }
        },
        "example": {
          "changeKey": "string",
          "eventEndTime": {
            "@odata.type": "microsoft.graph.dateTimeTimeZone"
          },
          "eventId": "string",
          "eventLocation": {
            "@odata.type": "microsoft.graph.location"
          },
          "eventStartTime": {
            "@odata.type": "microsoft.graph.dateTimeTimeZone"
          },
          "eventSubject": "string",
          "eventWebLink": "string",
          "reminderFireTime": {
            "@odata.type": "microsoft.graph.dateTimeTimeZone"
          }
        }
      },
      "microsoft.graph.remoteItem": {
        "title": "remoteItem",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the remote item in its drive. Read-only.",
            "nullable": true
          },
          "createdBy": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.identitySet"
              }
            ],
            "description": "Identity of the user, device, and application which created the item. Read-only.",
            "nullable": true
          },
          "createdDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "description": "Date and time of item creation. Read-only.",
            "format": "date-time",
            "nullable": true
          },
          "file": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.file"
              }
            ],
            "description": "Indicates that the remote item is a file. Read-only.",
            "nullable": true
          },
          "fileSystemInfo": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.fileSystemInfo"
              }
            ],
            "description": "Information about the remote item from the local file system. Read-only.",
            "nullable": true
          },
          "folder": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.folder"
              }
            ],
            "description": "Indicates that the remote item is a folder. Read-only.",
            "nullable": true
          },
          "lastModifiedBy": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.identitySet"
              }
            ],
            "description": "Identity of the user, device, and application which last modified the item. Read-only.",
            "nullable": true
          },
          "lastModifiedDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "description": "Date and time the item was last modified. Read-only.",
            "format": "date-time",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Optional. Filename of the remote item. Read-only.",
            "nullable": true
          },
          "package": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.package"
              }
            ],
            "description": "If present, indicates that this item is a package instead of a folder or file. Packages are treated like files in some contexts and folders in others. Read-only.",
            "nullable": true
          },
          "parentReference": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.itemReference"
              }
            ],
            "description": "Properties of the parent of the remote item. Read-only.",
            "nullable": true
          },
          "shared": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.shared"
              }
            ],
            "description": "Indicates that the item has been shared with others and provides information about the shared state of the item. Read-only.",
            "nullable": true
          },
          "sharepointIds": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.sharepointIds"
              }
            ],
            "description": "Provides interop between items in OneDrive for Business and SharePoint with the full set of item identifiers. Read-only.",
            "nullable": true
          },
          "specialFolder": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.specialFolder"
              }
            ],
            "description": "If the current item is also available as a special folder, this facet is returned. Read-only.",
            "nullable": true
          },
          "size": {
            "type": "integer",
            "description": "Size of the remote item. Read-only.",
            "format": "int64",
            "nullable": true
          },
          "webDavUrl": {
            "type": "string",
            "description": "DAV compatible URL for the item.",
            "nullable": true
          },
          "webUrl": {
            "type": "string",
            "description": "URL that displays the resource in the browser. Read-only.",
            "nullable": true
          }
        },
        "example": {
          "id": "string",
          "createdBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "createdDateTime": "string (timestamp)",
          "file": {
            "@odata.type": "microsoft.graph.file"
          },
          "fileSystemInfo": {
            "@odata.type": "microsoft.graph.fileSystemInfo"
          },
          "folder": {
            "@odata.type": "microsoft.graph.folder"
          },
          "lastModifiedBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "lastModifiedDateTime": "string (timestamp)",
          "name": "string",
          "package": {
            "@odata.type": "microsoft.graph.package"
          },
          "parentReference": {
            "@odata.type": "microsoft.graph.itemReference"
          },
          "shared": {
            "@odata.type": "microsoft.graph.shared"
          },
          "sharepointIds": {
            "@odata.type": "microsoft.graph.sharepointIds"
          },
          "specialFolder": {
            "@odata.type": "microsoft.graph.specialFolder"
          },
          "size": "integer",
          "webDavUrl": "string",
          "webUrl": "string"
        }
      },
      "microsoft.graph.responseStatus": {
        "title": "responseStatus",
        "type": "object",
        "properties": {
          "response": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.responseType"
              }
            ],
            "description": "The response type. The possible values are: None, Organizer, TentativelyAccepted, Accepted, Declined, NotResponded.",
            "nullable": true
          },
          "time": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "description": "The date and time that the response was returned. It uses ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'",
            "format": "date-time",
            "nullable": true
          }
        },
        "example": {
          "response": {
            "@odata.type": "microsoft.graph.responseType"
          },
          "time": "string (timestamp)"
        }
      },
      "microsoft.graph.root": {
        "title": "root",
        "type": "object"
      },
      "microsoft.graph.scoredEmailAddress": {
        "title": "scoredEmailAddress",
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "description": "The email address.",
            "nullable": true
          },
          "relevanceScore": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "enum": [
                  "-INF",
                  "INF",
                  "NaN"
                ]
              }
            ],
            "description": "The relevance score of the email address. A relevance score is used as a sort key, in relation to the other returned results. A higher relevance score value corresponds to a more relevant result. Relevance is determined by the user’s communication and collaboration patterns and business relationships.",
            "format": "double",
            "nullable": true
          }
        },
        "example": {
          "address": "string",
          "relevanceScore": "double"
        }
      },
      "microsoft.graph.searchResult": {
        "title": "searchResult",
        "type": "object",
        "properties": {
          "onClickTelemetryUrl": {
            "type": "string",
            "description": "A callback URL that can be used to record telemetry information. The application should issue a GET on this URL if the user interacts with this item to improve the quality of results.",
            "nullable": true
          }
        },
        "example": {
          "onClickTelemetryUrl": "string"
        }
      },
      "microsoft.graph.sectionLinks": {
        "title": "sectionLinks",
        "type": "object",
        "properties": {
          "oneNoteClientUrl": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.externalLink"
              }
            ],
            "description": "Opens the section in the OneNote native client if it's installed.",
            "nullable": true
          },
          "oneNoteWebUrl": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.externalLink"
              }
            ],
            "description": "Opens the section in OneNote Online.",
            "nullable": true
          }
        },
        "example": {
          "oneNoteClientUrl": {
            "@odata.type": "microsoft.graph.externalLink"
          },
          "oneNoteWebUrl": {
            "@odata.type": "microsoft.graph.externalLink"
          }
        }
      },
      "microsoft.graph.securityVendorInformation": {
        "title": "securityVendorInformation",
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "description": "Specific provider (product/service - not vendor company); for example, WindowsDefenderATP.",
            "nullable": true
          },
          "providerVersion": {
            "type": "string",
            "description": "Version of the provider or subprovider, if it exists, that generated the alert.",
            "nullable": true
          },
          "subProvider": {
            "type": "string",
            "description": "Specific subprovider (under aggregating provider); for example, WindowsDefenderATP.SmartScreen.",
            "nullable": true
          },
          "vendor": {
            "type": "string",
            "description": "Name of the alert vendor (for example, Microsoft, Dell, FireEye).",
            "nullable": true
          }
        },
        "example": {
          "provider": "string",
          "providerVersion": "string",
          "subProvider": "string",
          "vendor": "string"
        }
      },
      "microsoft.graph.servicePlanInfo": {
        "title": "servicePlanInfo",
        "type": "object",
        "properties": {
          "appliesTo": {
            "type": "string",
            "description": "The object the service plan can be assigned to. Possible values:'User' - service plan can be assigned to individual users.'Company' - service plan can be assigned to the entire tenant.",
            "nullable": true
          },
          "provisioningStatus": {
            "type": "string",
            "description": "The provisioning status of the service plan. Possible values:'Success' - Service is fully provisioned.'Disabled' - Service has been disabled.'PendingInput' - Service is not yet provisioned; awaiting service confirmation.'PendingActivation' - Service is provisioned but requires explicit activation by administrator (for example, Intune_O365 service plan)'PendingProvisioning' - Microsoft has added a new service to the product SKU and it has not been activated in the tenant, yet.",
            "nullable": true
          },
          "servicePlanId": {
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string",
            "description": "The unique identifier of the service plan.",
            "format": "uuid",
            "nullable": true
          },
          "servicePlanName": {
            "type": "string",
            "description": "The name of the service plan.",
            "nullable": true
          }
        },
        "example": {
          "appliesTo": "string",
          "provisioningStatus": "string",
          "servicePlanId": "string",
          "servicePlanName": "string"
        }
      },
      "microsoft.graph.settingTemplateValue": {
        "title": "settingTemplateValue",
        "type": "object",
        "properties": {
          "defaultValue": {
            "type": "string",
            "description": "Default value for the setting.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description of the setting.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Name of the setting.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Type of the setting.",
            "nullable": true
          }
        },
        "example": {
          "defaultValue": "string",
          "description": "string",
          "name": "string",
          "type": "string"
        }
      },
      "microsoft.graph.settingValue": {
        "title": "settingValue",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the setting (as defined by the groupSettingTemplate).",
            "nullable": true
          },
          "value": {
            "type": "string",
            "description": "Value of the setting.",
            "nullable": true
          }
        },
        "example": {
          "name": "string",
          "value": "string"
        }
      },
      "microsoft.graph.shared": {
        "title": "shared",
        "type": "object",
        "properties": {
          "owner": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.identitySet"
              }
            ],
            "description": "The identity of the owner of the shared item. Read-only.",
            "nullable": true
          },
          "scope": {
            "type": "string",
            "description": "Indicates the scope of how the item is shared: anonymous, organization, or users. Read-only.",
            "nullable": true
          },
          "sharedBy": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.identitySet"
              }
            ],
            "description": "The identity of the user who shared the item. Read-only.",
            "nullable": true
          },
          "sharedDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "description": "The UTC date and time when the item was shared. Read-only.",
            "format": "date-time",
            "nullable": true
          }
        },
        "example": {
          "owner": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "scope": "string",
          "sharedBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "sharedDateTime": "string (timestamp)"
        }
      },
      "microsoft.graph.sharepointIds": {
        "title": "sharepointIds",
        "type": "object",
        "properties": {
          "listId": {
            "type": "string",
            "description": "The unique identifier (guid) for the item's list in SharePoint.",
            "nullable": true
          },
          "listItemId": {
            "type": "string",
            "description": "An integer identifier for the item within the containing list.",
            "nullable": true
          },
          "listItemUniqueId": {
            "type": "string",
            "description": "The unique identifier (guid) for the item within OneDrive for Business or a SharePoint site.",
            "nullable": true
          },
          "siteId": {
            "type": "string",
            "description": "The unique identifier (guid) for the item's site collection (SPSite).",
            "nullable": true
          },
          "siteUrl": {
            "type": "string",
            "description": "The SharePoint URL for the site that contains the item.",
            "nullable": true
          },
          "webId": {
            "type": "string",
            "description": "The unique identifier (guid) for the item's site (SPWeb).",
            "nullable": true
          }
        },
        "example": {
          "listId": "string",
          "listItemId": "string",
          "listItemUniqueId": "string",
          "siteId": "string",
          "siteUrl": "string",
          "webId": "string"
        }
      },
      "microsoft.graph.sharingInvitation": {
        "title": "sharingInvitation",
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "The email address provided for the recipient of the sharing invitation. Read-only.",
            "nullable": true
          },
          "invitedBy": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.identitySet"
              }
            ],
            "description": "Provides information about who sent the invitation that created this permission, if that information is available. Read-only.",
            "nullable": true
          },
          "signInRequired": {
            "type": "boolean",
            "description": "If true the recipient of the invitation needs to sign in in order to access the shared item. Read-only.",
            "nullable": true
          }
        },
        "example": {
          "email": "string",
          "invitedBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "signInRequired": true
        }
      },
      "microsoft.graph.sharingLink": {
        "title": "sharingLink",
        "type": "object",
        "properties": {
          "application": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.identity"
              }
            ],
            "description": "The app the link is associated with.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "The type of the link created.",
            "nullable": true
          },
          "scope": {
            "type": "string",
            "description": "The scope of the link represented by this permission. Value anonymous indicates the link is usable by anyone, organization indicates the link is only usable for users signed into the same tenant.",
            "nullable": true
          },
          "webHtml": {
            "type": "string",
            "description": "For embed links, this property contains the HTML code for an <iframe> element that will embed the item in a webpage.",
            "nullable": true
          },
          "webUrl": {
            "type": "string",
            "description": "A URL that opens the item in the browser on the OneDrive website.",
            "nullable": true
          }
        },
        "example": {
          "application": {
            "@odata.type": "microsoft.graph.identity"
          },
          "type": "string",
          "scope": "string",
          "webHtml": "string",
          "webUrl": "string"
        }
      },
      "microsoft.graph.siteCollection": {
        "title": "siteCollection",
        "type": "object",
        "properties": {
          "hostname": {
            "type": "string",
            "description": "The hostname for the site collection. Read-only.",
            "nullable": true
          },
          "root": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.root"
              }
            ],
            "description": "If present, indicates that this is a root site collection in SharePoint. Read-only.",
            "nullable": true
          }
        },
        "example": {
          "hostname": "string",
          "root": {
            "@odata.type": "microsoft.graph.root"
          }
        }
      },
      "microsoft.graph.sizeRange": {
        "title": "sizeRange",
        "type": "object",
        "properties": {
          "maximumSize": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "The maximum size (in kilobytes) that an incoming message must have in order for a condition or exception to apply.",
            "format": "int32",
            "nullable": true
          },
          "minimumSize": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "The minimum size (in kilobytes) that an incoming message must have in order for a condition or exception to apply.",
            "format": "int32",
            "nullable": true
          }
        },
        "example": {
          "maximumSize": "integer",
          "minimumSize": "integer"
        }
      },
      "microsoft.graph.workbookSortField": {
        "title": "workbookSortField",
        "type": "object",
        "properties": {
          "ascending": {
            "type": "boolean",
            "description": "Represents whether the sorting is done in an ascending fashion.",
            "nullable": true
          },
          "color": {
            "type": "string",
            "description": "Represents the color that is the target of the condition if the sorting is on font or cell color.",
            "nullable": true
          },
          "dataOption": {
            "type": "string",
            "description": "Represents additional sorting options for this field. The possible values are: Normal, TextAsNumber.",
            "nullable": true
          },
          "key": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Represents the column (or row, depending on the sort orientation) that the condition is on. Represented as an offset from the first column (or row).",
            "format": "int32",
            "nullable": true
          },
          "sortOn": {
            "type": "string",
            "description": "Represents the type of sorting of this condition. The possible values are: Value, CellColor, FontColor, Icon.",
            "nullable": true
          },
          "icon": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.workbookIcon"
              }
            ],
            "description": "Represents the icon that is the target of the condition if the sorting is on the cell's icon.",
            "nullable": true
          }
        },
        "example": {
          "ascending": true,
          "color": "string",
          "dataOption": "string",
          "key": "integer",
          "sortOn": "string",
          "icon": {
            "@odata.type": "microsoft.graph.workbookIcon"
          }
        }
      },
      "microsoft.graph.specialFolder": {
        "title": "specialFolder",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The unique identifier for this item in the /drive/special collection",
            "nullable": true
          }
        },
        "example": {
          "name": "string"
        }
      },
      "microsoft.graph.systemFacet": {
        "title": "systemFacet",
        "type": "object"
      },
      "microsoft.graph.textColumn": {
        "title": "textColumn",
        "type": "object",
        "properties": {
          "allowMultipleLines": {
            "type": "boolean",
            "description": "Whether to allow multiple lines of text.",
            "nullable": true
          },
          "appendChangesToExistingText": {
            "type": "boolean",
            "description": "Whether updates to this column should replace existing text, or append to it.",
            "nullable": true
          },
          "linesForEditing": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "The size of the text box.",
            "format": "int32",
            "nullable": true
          },
          "maxLength": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "The maximum number of characters for the value.",
            "format": "int32",
            "nullable": true
          },
          "textType": {
            "type": "string",
            "description": "The type of text being stored. Must be one of plain or richText",
            "nullable": true
          }
        },
        "example": {
          "allowMultipleLines": true,
          "appendChangesToExistingText": true,
          "linesForEditing": "integer",
          "maxLength": "integer",
          "textType": "string"
        }
      },
      "microsoft.graph.thumbnail": {
        "title": "thumbnail",
        "type": "object",
        "properties": {
          "height": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "The height of the thumbnail, in pixels.",
            "format": "int32",
            "nullable": true
          },
          "sourceItemId": {
            "type": "string",
            "description": "The unique identifier of the item that provided the thumbnail. This is only available when a folder thumbnail is requested.",
            "nullable": true
          },
          "url": {
            "type": "string",
            "description": "The URL used to fetch the thumbnail content.",
            "nullable": true
          },
          "width": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "The width of the thumbnail, in pixels.",
            "format": "int32",
            "nullable": true
          },
          "content": {
            "type": "string",
            "description": "The content stream for the thumbnail.",
            "format": "base64url",
            "nullable": true
          }
        },
        "example": {
          "height": "integer",
          "sourceItemId": "string",
          "url": "string",
          "width": "integer",
          "content": "string"
        }
      },
      "microsoft.graph.timeConstraint": {
        "title": "timeConstraint",
        "type": "object",
        "properties": {
          "activityDomain": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.activityDomain"
              }
            ],
            "description": "The nature of the activity, optional. The possible values are: work, personal, unrestricted, or unknown.",
            "nullable": true
          },
          "timeslots": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.timeSlot"
                }
              ],
              "nullable": true
            },
            "description": "An array of time periods."
          }
        },
        "example": {
          "activityDomain": {
            "@odata.type": "microsoft.graph.activityDomain"
          },
          "timeslots": [
            {
              "@odata.type": "microsoft.graph.timeSlot"
            }
          ]
        }
      },
      "microsoft.graph.timeSlot": {
        "title": "timeSlot",
        "type": "object",
        "properties": {
          "end": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.dateTimeTimeZone"
              }
            ],
            "description": "The time a period begins.",
            "nullable": true
          },
          "start": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.dateTimeTimeZone"
              }
            ],
            "description": "The time the period ends.",
            "nullable": true
          }
        },
        "example": {
          "end": {
            "@odata.type": "microsoft.graph.dateTimeTimeZone"
          },
          "start": {
            "@odata.type": "microsoft.graph.dateTimeTimeZone"
          }
        }
      },
      "microsoft.graph.timeStamp": {
        "title": "timeStamp",
        "type": "object",
        "properties": {
          "date": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
            "type": "string",
            "description": "The date portion of the timestamp.",
            "format": "date",
            "nullable": true
          },
          "time": {
            "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?$",
            "type": "string",
            "description": "The time portion of the timestamp.",
            "format": "time",
            "nullable": true
          },
          "timeZone": {
            "type": "string",
            "description": "The timezone portion of the timestamp, which is one of the 24 longitudinal areas in the world.",
            "nullable": true
          }
        },
        "example": {
          "date": "string (timestamp)",
          "time": "string (timestamp)",
          "timeZone": "string"
        }
      },
      "microsoft.graph.timeZoneInformation": {
        "title": "timeZoneInformation",
        "type": "object",
        "properties": {
          "alias": {
            "type": "string",
            "description": "An identifier for the time zone.",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "description": "A display string that represents the time zone.",
            "nullable": true
          }
        },
        "example": {
          "alias": "string",
          "displayName": "string"
        }
      },
      "microsoft.graph.uploadSession": {
        "title": "uploadSession",
        "type": "object",
        "properties": {
          "uploadUrl": {
            "type": "string",
            "description": "The URL endpoint that accepts PUT requests for byte ranges of the file.",
            "nullable": true
          },
          "expirationDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "description": "The date and time in UTC that the upload session will expire. The complete file must be uploaded before this expiration time is reached.",
            "format": "date-time",
            "nullable": true
          },
          "nextExpectedRanges": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true
            },
            "description": "A collection of byte ranges that the server is missing for the file. These ranges are zero indexed and of the format 'start-end' (e.g. '0-26' to indicate the first 27 bytes of the file)."
          }
        },
        "example": {
          "uploadUrl": "string",
          "expirationDateTime": "string (timestamp)",
          "nextExpectedRanges": [
            "string"
          ]
        }
      },
      "microsoft.graph.userSecurityState": {
        "title": "userSecurityState",
        "type": "object",
        "properties": {
          "aadUserId": {
            "type": "string",
            "description": "AAD User object identifier (GUID) - represents the physical/multi-account user entity.",
            "nullable": true
          },
          "accountName": {
            "type": "string",
            "description": "Account name of user account (without Active Directory domain or DNS domain) - (also called mailNickName).",
            "nullable": true
          },
          "domainName": {
            "type": "string",
            "description": "NetBIOS/Active Directory domain of user account (that is, domain/account format).",
            "nullable": true
          },
          "emailRole": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.emailRole"
              }
            ],
            "description": "For email-related alerts - user account's email 'role'. Possible values are: unknown, sender, recipient.",
            "nullable": true
          },
          "isVpn": {
            "type": "boolean",
            "description": "Indicates whether the user logged on through a VPN.",
            "nullable": true
          },
          "logonDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "description": "Time at which the sign-in occurred. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'.",
            "format": "date-time",
            "nullable": true
          },
          "logonId": {
            "type": "string",
            "description": "User sign-in ID.",
            "nullable": true
          },
          "logonIp": {
            "type": "string",
            "description": "IP Address the sign-in request originated from.",
            "nullable": true
          },
          "logonLocation": {
            "type": "string",
            "description": "Location (by IP address mapping) associated with a user sign-in event by this user.",
            "nullable": true
          },
          "logonType": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.logonType"
              }
            ],
            "description": "Method of user sign in. Possible values are: unknown, interactive, remoteInteractive, network, batch, service.",
            "nullable": true
          },
          "onPremisesSecurityIdentifier": {
            "type": "string",
            "description": "Active Directory (on-premises) Security Identifier (SID) of the user.",
            "nullable": true
          },
          "riskScore": {
            "type": "string",
            "description": "Provider-generated/calculated risk score of the user account. Recommended value range of 0-1, which equates to a percentage.",
            "nullable": true
          },
          "userAccountType": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.userAccountSecurityType"
              }
            ],
            "description": "User account type (group membership), per Windows definition. Possible values are: unknown, standard, power, administrator.",
            "nullable": true
          },
          "userPrincipalName": {
            "type": "string",
            "description": "User sign-in name - internet format: (user account name)@(user account DNS domain name).",
            "nullable": true
          }
        },
        "example": {
          "aadUserId": "string",
          "accountName": "string",
          "domainName": "string",
          "emailRole": {
            "@odata.type": "microsoft.graph.emailRole"
          },
          "isVpn": true,
          "logonDateTime": "string (timestamp)",
          "logonId": "string",
          "logonIp": "string",
          "logonLocation": "string",
          "logonType": {
            "@odata.type": "microsoft.graph.logonType"
          },
          "onPremisesSecurityIdentifier": "string",
          "riskScore": "string",
          "userAccountType": {
            "@odata.type": "microsoft.graph.userAccountSecurityType"
          },
          "userPrincipalName": "string"
        }
      },
      "microsoft.graph.verifiedDomain": {
        "title": "verifiedDomain",
        "type": "object",
        "properties": {
          "capabilities": {
            "type": "string",
            "description": "For example, 'Email', 'OfficeCommunicationsOnline'.",
            "nullable": true
          },
          "isDefault": {
            "type": "boolean",
            "description": "true if this is the default domain associated with the tenant; otherwise, false.",
            "nullable": true
          },
          "isInitial": {
            "type": "boolean",
            "description": "true if this is the initial domain associated with the tenant; otherwise, false",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The domain name; for example, 'contoso.onmicrosoft.com'",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "For example, 'Managed'.",
            "nullable": true
          }
        },
        "example": {
          "capabilities": "string",
          "isDefault": true,
          "isInitial": true,
          "name": "string",
          "type": "string"
        }
      },
      "microsoft.graph.video": {
        "title": "video",
        "type": "object",
        "properties": {
          "audioBitsPerSample": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Number of audio bits per sample.",
            "format": "int32",
            "nullable": true
          },
          "audioChannels": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Number of audio channels.",
            "format": "int32",
            "nullable": true
          },
          "audioFormat": {
            "type": "string",
            "description": "Name of the audio format (AAC, MP3, etc.).",
            "nullable": true
          },
          "audioSamplesPerSecond": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Number of audio samples per second.",
            "format": "int32",
            "nullable": true
          },
          "bitrate": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Bit rate of the video in bits per second.",
            "format": "int32",
            "nullable": true
          },
          "duration": {
            "type": "integer",
            "description": "Duration of the file in milliseconds.",
            "format": "int64",
            "nullable": true
          },
          "fourCC": {
            "type": "string",
            "description": "'Four character code' name of the video format.",
            "nullable": true
          },
          "frameRate": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "enum": [
                  "-INF",
                  "INF",
                  "NaN"
                ]
              }
            ],
            "description": "Frame rate of the video.",
            "format": "double",
            "nullable": true
          },
          "height": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Height of the video, in pixels.",
            "format": "int32",
            "nullable": true
          },
          "width": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Width of the video, in pixels.",
            "format": "int32",
            "nullable": true
          }
        },
        "example": {
          "audioBitsPerSample": "integer",
          "audioChannels": "integer",
          "audioFormat": "string",
          "audioSamplesPerSecond": "integer",
          "bitrate": "integer",
          "duration": "integer",
          "fourCC": "string",
          "frameRate": "double",
          "height": "integer",
          "width": "integer"
        }
      },
      "microsoft.graph.vulnerabilityState": {
        "title": "vulnerabilityState",
        "type": "object",
        "properties": {
          "cve": {
            "type": "string",
            "description": "Common Vulnerabilities and Exposures (CVE) for the vulnerability.",
            "nullable": true
          },
          "severity": {
            "type": "string",
            "description": "Base Common Vulnerability Scoring System (CVSS) severity score for this vulnerability.",
            "nullable": true
          },
          "wasRunning": {
            "type": "boolean",
            "description": "Indicates whether the detected vulnerability (file) was running at the time of detection or was the file detected at rest on the disk.",
            "nullable": true
          }
        },
        "example": {
          "cve": "string",
          "severity": "string",
          "wasRunning": true
        }
      },
      "microsoft.graph.website": {
        "title": "website",
        "type": "object",
        "properties": {
          "type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.websiteType"
              }
            ],
            "description": "The possible values are: other, home, work, blog, profile.",
            "nullable": true
          },
          "address": {
            "type": "string",
            "description": "The URL of the website.",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "description": "The display name of the web site.",
            "nullable": true
          }
        },
        "example": {
          "type": {
            "@odata.type": "microsoft.graph.websiteType"
          },
          "address": "string",
          "displayName": "string"
        }
      },
      "microsoft.graph.workbookSessionInfo": {
        "title": "workbookSessionInfo",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id of the workbook session.",
            "nullable": true
          },
          "persistChanges": {
            "type": "boolean",
            "description": "true for persistent session. false for non-persistent session (view mode)",
            "nullable": true
          }
        },
        "example": {
          "id": "string",
          "persistChanges": true
        }
      },
      "microsoft.graph.workingHours": {
        "title": "workingHours",
        "type": "object",
        "properties": {
          "daysOfWeek": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/microsoft.graph.dayOfWeek"
                }
              ],
              "nullable": true
            },
            "description": "The days of the week on which the user works."
          },
          "startTime": {
            "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?$",
            "type": "string",
            "description": "The time of the day that the user starts working.",
            "format": "time",
            "nullable": true
          },
          "endTime": {
            "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?$",
            "type": "string",
            "description": "The time of the day that the user stops working.",
            "format": "time",
            "nullable": true
          },
          "timeZone": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/microsoft.graph.timeZoneBase"
              }
            ],
            "description": "The time zone to which the working hours apply.",
            "nullable": true
          }
        },
        "example": {
          "daysOfWeek": [
            {
              "@odata.type": "microsoft.graph.dayOfWeek"
            }
          ],
          "startTime": "string (timestamp)",
          "endTime": "string (timestamp)",
          "timeZone": {
            "@odata.type": "microsoft.graph.timeZoneBase"
          }
        }
      },
      "microsoft.graph.workbookWorksheetProtectionOptions": {
        "title": "workbookWorksheetProtectionOptions",
        "type": "object",
        "properties": {
          "allowAutoFilter": {
            "type": "boolean",
            "description": "Represents the worksheet protection option of allowing using auto filter feature.",
            "nullable": true
          },
          "allowDeleteColumns": {
            "type": "boolean",
            "description": "Represents the worksheet protection option of allowing deleting columns.",
            "nullable": true
          },
          "allowDeleteRows": {
            "type": "boolean",
            "description": "Represents the worksheet protection option of allowing deleting rows.",
            "nullable": true
          },
          "allowFormatCells": {
            "type": "boolean",
            "description": "Represents the worksheet protection option of allowing formatting cells.",
            "nullable": true
          },
          "allowFormatColumns": {
            "type": "boolean",
            "description": "Represents the worksheet protection option of allowing formatting columns.",
            "nullable": true
          },
          "allowFormatRows": {
            "type": "boolean",
            "description": "Represents the worksheet protection option of allowing formatting rows.",
            "nullable": true
          },
          "allowInsertColumns": {
            "type": "boolean",
            "description": "Represents the worksheet protection option of allowing inserting columns.",
            "nullable": true
          },
          "allowInsertHyperlinks": {
            "type": "boolean",
            "description": "Represents the worksheet protection option of allowing inserting hyperlinks.",
            "nullable": true
          },
          "allowInsertRows": {
            "type": "boolean",
            "description": "Represents the worksheet protection option of allowing inserting rows.",
            "nullable": true
          },
          "allowPivotTables": {
            "type": "boolean",
            "description": "Represents the worksheet protection option of allowing using pivot table feature.",
            "nullable": true
          },
          "allowSort": {
            "type": "boolean",
            "description": "Represents the worksheet protection option of allowing using sort feature.",
            "nullable": true
          }
        },
        "example": {
          "allowAutoFilter": true,
          "allowDeleteColumns": true,
          "allowDeleteRows": true,
          "allowFormatCells": true,
          "allowFormatColumns": true,
          "allowFormatRows": true,
          "allowInsertColumns": true,
          "allowInsertHyperlinks": true,
          "allowInsertRows": true,
          "allowPivotTables": true,
          "allowSort": true
        }
      },
      "microsoft.graph.timeZoneStandard": {
        "title": "timeZoneStandard",
        "enum": [
          "windows",
          "iana"
        ],
        "type": "string"
      },
      "microsoft.graph.freeBusyStatus": {
        "title": "freeBusyStatus",
        "enum": [
          "free",
          "tentative",
          "busy",
          "oof",
          "workingElsewhere",
          "unknown"
        ],
        "type": "string"
      },
      "microsoft.graph.attendeeType": {
        "title": "attendeeType",
        "enum": [
          "required",
          "optional",
          "resource"
        ],
        "type": "string"
      },
      "microsoft.graph.externalAudienceScope": {
        "title": "externalAudienceScope",
        "enum": [
          "none",
          "contactsOnly",
          "all"
        ],
        "type": "string"
      },
      "microsoft.graph.automaticRepliesStatus": {
        "title": "automaticRepliesStatus",
        "enum": [
          "disabled",
          "alwaysEnabled",
          "scheduled"
        ],
        "type": "string"
      },
      "microsoft.graph.calendarColor": {
        "title": "calendarColor",
        "enum": [
          "auto",
          "lightBlue",
          "lightGreen",
          "lightOrange",
          "lightGray",
          "lightYellow",
          "lightTeal",
          "lightPink",
          "lightBrown",
          "lightRed",
          "maxColor"
        ],
        "type": "string"
      },
      "microsoft.graph.educationExternalSource": {
        "title": "educationExternalSource",
        "enum": [
          "sis",
          "manual",
          "unknownFutureValue"
        ],
        "type": "string"
      },
      "microsoft.graph.educationGender": {
        "title": "educationGender",
        "enum": [
          "female",
          "male",
          "other",
          "unknownFutureValue"
        ],
        "type": "string"
      },
      "microsoft.graph.eventType": {
        "title": "eventType",
        "enum": [
          "singleInstance",
          "occurrence",
          "exception",
          "seriesMaster"
        ],
        "type": "string"
      },
      "microsoft.graph.sensitivity": {
        "title": "sensitivity",
        "enum": [
          "normal",
          "personal",
          "private",
          "confidential"
        ],
        "type": "string"
      },
      "microsoft.graph.importance": {
        "title": "importance",
        "enum": [
          "low",
          "normal",
          "high"
        ],
        "type": "string"
      },
      "microsoft.graph.educationUserRole": {
        "title": "educationUserRole",
        "enum": [
          "student",
          "teacher",
          "none",
          "unknownFutureValue"
        ],
        "type": "string"
      },
      "microsoft.graph.meetingMessageType": {
        "title": "meetingMessageType",
        "enum": [
          "none",
          "meetingRequest",
          "meetingCancelled",
          "meetingAccepted",
          "meetingTentativelyAccepted",
          "meetingDeclined"
        ],
        "type": "string"
      },
      "microsoft.graph.followupFlagStatus": {
        "title": "followupFlagStatus",
        "enum": [
          "notFlagged",
          "complete",
          "flagged"
        ],
        "type": "string"
      },
      "microsoft.graph.inferenceClassificationType": {
        "title": "inferenceClassificationType",
        "enum": [
          "focused",
          "other"
        ],
        "type": "string"
      },
      "microsoft.graph.iosNotificationAlertType": {
        "title": "iosNotificationAlertType",
        "enum": [
          "deviceDefault",
          "banner",
          "modal",
          "none"
        ],
        "type": "string"
      },
      "microsoft.graph.deviceEnrollmentFailureReason": {
        "title": "deviceEnrollmentFailureReason",
        "enum": [
          "unknown",
          "authentication",
          "authorization",
          "accountValidation",
          "userValidation",
          "deviceNotSupported",
          "inMaintenance",
          "badRequest",
          "featureNotSupported",
          "enrollmentRestrictionsEnforced",
          "clientDisconnected",
          "userAbandonment"
        ],
        "type": "string"
      },
      "microsoft.graph.bodyType": {
        "title": "bodyType",
        "enum": [
          "text",
          "html"
        ],
        "type": "string"
      },
      "microsoft.graph.locationType": {
        "title": "locationType",
        "enum": [
          "default",
          "conferenceRoom",
          "homeAddress",
          "businessAddress",
          "geoCoordinates",
          "streetAddress",
          "hotel",
          "restaurant",
          "localBusiness",
          "postalAddress"
        ],
        "type": "string"
      },
      "microsoft.graph.locationUniqueIdType": {
        "title": "locationUniqueIdType",
        "enum": [
          "unknown",
          "locationStore",
          "directory",
          "private",
          "bing"
        ],
        "type": "string"
      },
      "microsoft.graph.messageActionFlag": {
        "title": "messageActionFlag",
        "enum": [
          "any",
          "call",
          "doNotForward",
          "followUp",
          "fyi",
          "forward",
          "noResponseNecessary",
          "read",
          "reply",
          "replyToAll",
          "review"
        ],
        "type": "string"
      },
      "microsoft.graph.onenoteUserRole": {
        "title": "onenoteUserRole",
        "enum": [
          "Owner",
          "Contributor",
          "Reader",
          "None"
        ],
        "type": "string"
      },
      "microsoft.graph.operationStatus": {
        "title": "operationStatus",
        "enum": [
          "NotStarted",
          "Running",
          "Completed",
          "Failed"
        ],
        "type": "string"
      },
      "microsoft.graph.onenotePatchActionType": {
        "title": "onenotePatchActionType",
        "enum": [
          "Replace",
          "Append",
          "Delete",
          "Insert",
          "Prepend"
        ],
        "type": "string"
      },
      "microsoft.graph.onenotePatchInsertPosition": {
        "title": "onenotePatchInsertPosition",
        "enum": [
          "After",
          "Before"
        ],
        "type": "string"
      },
      "microsoft.graph.phoneType": {
        "title": "phoneType",
        "enum": [
          "home",
          "business",
          "mobile",
          "other",
          "assistant",
          "homeFax",
          "businessFax",
          "otherFax",
          "pager",
          "radio"
        ],
        "type": "string"
      },
      "microsoft.graph.plannerPreviewType": {
        "title": "plannerPreviewType",
        "enum": [
          "automatic",
          "noPreview",
          "checklist",
          "description",
          "reference"
        ],
        "type": "string"
      },
      "microsoft.graph.status": {
        "title": "status",
        "enum": [
          "active",
          "updated",
          "deleted",
          "ignored",
          "unknownFutureValue"
        ],
        "type": "string"
      },
      "microsoft.graph.weekIndex": {
        "title": "weekIndex",
        "enum": [
          "first",
          "second",
          "third",
          "fourth",
          "last"
        ],
        "type": "string"
      },
      "microsoft.graph.dayOfWeek": {
        "title": "dayOfWeek",
        "enum": [
          "sunday",
          "monday",
          "tuesday",
          "wednesday",
          "thursday",
          "friday",
          "saturday"
        ],
        "type": "string"
      },
      "microsoft.graph.recurrencePatternType": {
        "title": "recurrencePatternType",
        "enum": [
          "daily",
          "weekly",
          "absoluteMonthly",
          "relativeMonthly",
          "absoluteYearly",
          "relativeYearly"
        ],
        "type": "string"
      },
      "microsoft.graph.recurrenceRangeType": {
        "title": "recurrenceRangeType",
        "enum": [
          "endDate",
          "noEnd",
          "numbered"
        ],
        "type": "string"
      },
      "microsoft.graph.onenoteSourceService": {
        "title": "onenoteSourceService",
        "enum": [
          "Unknown",
          "OneDrive",
          "OneDriveForBusiness",
          "OnPremOneDriveForBusiness"
        ],
        "type": "string"
      },
      "microsoft.graph.responseType": {
        "title": "responseType",
        "enum": [
          "none",
          "organizer",
          "tentativelyAccepted",
          "accepted",
          "declined",
          "notResponded"
        ],
        "type": "string"
      },
      "microsoft.graph.activityDomain": {
        "title": "activityDomain",
        "enum": [
          "unknown",
          "work",
          "personal",
          "unrestricted"
        ],
        "type": "string"
      },
      "microsoft.graph.websiteType": {
        "title": "websiteType",
        "enum": [
          "other",
          "home",
          "work",
          "blog",
          "profile"
        ],
        "type": "string"
      },
      "microsoft.graph.categoryColor": {
        "title": "categoryColor",
        "enum": [
          "none",
          "preset0",
          "preset1",
          "preset2",
          "preset3",
          "preset4",
          "preset5",
          "preset6",
          "preset7",
          "preset8",
          "preset9",
          "preset10",
          "preset11",
          "preset12",
          "preset13",
          "preset14",
          "preset15",
          "preset16",
          "preset17",
          "preset18",
          "preset19",
          "preset20",
          "preset21",
          "preset22",
          "preset23",
          "preset24"
        ],
        "type": "string"
      },
      "microsoft.graph.alertFeedback": {
        "title": "alertFeedback",
        "enum": [
          "unknown",
          "truePositive",
          "falsePositive",
          "benignPositive"
        ],
        "type": "string"
      },
      "microsoft.graph.fileHashType": {
        "title": "fileHashType",
        "enum": [
          "unknown",
          "sha1",
          "sha256",
          "md5",
          "authenticodeHash256",
          "lsHash",
          "ctph",
          "peSha1",
          "peSha256"
        ],
        "type": "string"
      },
      "microsoft.graph.connectionDirection": {
        "title": "connectionDirection",
        "enum": [
          "unknown",
          "inbound",
          "outbound"
        ],
        "type": "string"
      },
      "microsoft.graph.connectionStatus": {
        "title": "connectionStatus",
        "enum": [
          "unknown",
          "attempted",
          "succeeded",
          "blocked",
          "failed"
        ],
        "type": "string"
      },
      "microsoft.graph.processIntegrityLevel": {
        "title": "processIntegrityLevel",
        "enum": [
          "unknown",
          "untrusted",
          "low",
          "medium",
          "high",
          "system"
        ],
        "type": "string"
      },
      "microsoft.graph.registryHive": {
        "title": "registryHive",
        "enum": [
          "unknown",
          "currentConfig",
          "currentUser",
          "localMachineSam",
          "localMachineSamSoftware",
          "localMachineSystem",
          "usersDefault"
        ],
        "type": "string"
      },
      "microsoft.graph.registryOperation": {
        "title": "registryOperation",
        "enum": [
          "unknown",
          "create",
          "modify",
          "delete"
        ],
        "type": "string"
      },
      "microsoft.graph.registryValueType": {
        "title": "registryValueType",
        "enum": [
          "unknown",
          "binary",
          "dword",
          "dwordLittleEndian",
          "dwordBigEndian",
          "expandSz",
          "link",
          "multiSz",
          "none",
          "qword",
          "qwordlittleEndian",
          "sz"
        ],
        "type": "string"
      },
      "microsoft.graph.alertSeverity": {
        "title": "alertSeverity",
        "enum": [
          "unknown",
          "informational",
          "low",
          "medium",
          "high"
        ],
        "type": "string"
      },
      "microsoft.graph.alertStatus": {
        "title": "alertStatus",
        "enum": [
          "unknown",
          "newAlert",
          "inProgress",
          "resolved"
        ],
        "type": "string"
      },
      "microsoft.graph.emailRole": {
        "title": "emailRole",
        "enum": [
          "unknown",
          "sender",
          "recipient"
        ],
        "type": "string"
      },
      "microsoft.graph.logonType": {
        "title": "logonType",
        "enum": [
          "unknown",
          "interactive",
          "remoteInteractive",
          "network",
          "batch",
          "service"
        ],
        "type": "string"
      },
      "microsoft.graph.userAccountSecurityType": {
        "title": "userAccountSecurityType",
        "enum": [
          "unknown",
          "standard",
          "power",
          "administrator"
        ],
        "type": "string"
      },
      "microsoft.graph.managedAppAvailability": {
        "title": "managedAppAvailability",
        "enum": [
          "global",
          "lineOfBusiness"
        ],
        "type": "string"
      },
      "microsoft.graph.mdmAppConfigKeyType": {
        "title": "mdmAppConfigKeyType",
        "enum": [
          "stringType",
          "integerType",
          "realType",
          "booleanType",
          "tokenType"
        ],
        "type": "string"
      },
      "microsoft.graph.microsoftStoreForBusinessLicenseType": {
        "title": "microsoftStoreForBusinessLicenseType",
        "enum": [
          "offline",
          "online"
        ],
        "type": "string"
      },
      "microsoft.graph.mobileAppContentFileUploadState": {
        "title": "mobileAppContentFileUploadState",
        "enum": [
          "success",
          "transientError",
          "error",
          "unknown",
          "azureStorageUriRequestSuccess",
          "azureStorageUriRequestPending",
          "azureStorageUriRequestFailed",
          "azureStorageUriRequestTimedOut",
          "azureStorageUriRenewalSuccess",
          "azureStorageUriRenewalPending",
          "azureStorageUriRenewalFailed",
          "azureStorageUriRenewalTimedOut",
          "commitFileSuccess",
          "commitFilePending",
          "commitFileFailed",
          "commitFileTimedOut"
        ],
        "type": "string"
      },
      "microsoft.graph.mobileAppPublishingState": {
        "title": "mobileAppPublishingState",
        "enum": [
          "notPublished",
          "processing",
          "published"
        ],
        "type": "string"
      },
      "microsoft.graph.windowsArchitecture": {
        "title": "windowsArchitecture",
        "enum": [
          "none",
          "x86",
          "x64",
          "arm",
          "neutral"
        ],
        "type": "string"
      },
      "microsoft.graph.windowsDeviceType": {
        "title": "windowsDeviceType",
        "enum": [
          "none",
          "desktop",
          "mobile",
          "holographic",
          "team"
        ],
        "type": "string"
      },
      "microsoft.graph.installState": {
        "title": "installState",
        "enum": [
          "notApplicable",
          "installed",
          "failed",
          "notInstalled",
          "uninstallFailed",
          "unknown"
        ],
        "type": "string"
      },
      "microsoft.graph.androidRequiredPasswordType": {
        "title": "androidRequiredPasswordType",
        "enum": [
          "deviceDefault",
          "alphabetic",
          "alphanumeric",
          "alphanumericWithSymbols",
          "lowSecurityBiometric",
          "numeric",
          "numericComplex",
          "any"
        ],
        "type": "string"
      },
      "microsoft.graph.androidWorkProfileCrossProfileDataSharingType": {
        "title": "androidWorkProfileCrossProfileDataSharingType",
        "enum": [
          "deviceDefault",
          "preventAny",
          "allowPersonalToWork",
          "noRestrictions"
        ],
        "type": "string"
      },
      "microsoft.graph.androidWorkProfileDefaultAppPermissionPolicyType": {
        "title": "androidWorkProfileDefaultAppPermissionPolicyType",
        "enum": [
          "deviceDefault",
          "prompt",
          "autoGrant",
          "autoDeny"
        ],
        "type": "string"
      },
      "microsoft.graph.androidWorkProfileRequiredPasswordType": {
        "title": "androidWorkProfileRequiredPasswordType",
        "enum": [
          "deviceDefault",
          "lowSecurityBiometric",
          "required",
          "atLeastNumeric",
          "numericComplex",
          "atLeastAlphabetic",
          "atLeastAlphanumeric",
          "alphanumericWithSymbols"
        ],
        "type": "string"
      },
      "microsoft.graph.applicationGuardBlockClipboardSharingType": {
        "title": "applicationGuardBlockClipboardSharingType",
        "enum": [
          "notConfigured",
          "blockBoth",
          "blockHostToContainer",
          "blockContainerToHost",
          "blockNone"
        ],
        "type": "string"
      },
      "microsoft.graph.applicationGuardBlockFileTransferType": {
        "title": "applicationGuardBlockFileTransferType",
        "enum": [
          "notConfigured",
          "blockImageAndTextFile",
          "blockImageFile",
          "blockNone",
          "blockTextFile"
        ],
        "type": "string"
      },
      "microsoft.graph.appListType": {
        "title": "appListType",
        "enum": [
          "none",
          "appsInListCompliant",
          "appsNotInListCompliant"
        ],
        "type": "string"
      },
      "microsoft.graph.appLockerApplicationControlType": {
        "title": "appLockerApplicationControlType",
        "enum": [
          "notConfigured",
          "enforceComponentsAndStoreApps",
          "auditComponentsAndStoreApps",
          "enforceComponentsStoreAppsAndSmartlocker",
          "auditComponentsStoreAppsAndSmartlocker"
        ],
        "type": "string"
      },
      "microsoft.graph.automaticUpdateMode": {
        "title": "automaticUpdateMode",
        "enum": [
          "userDefined",
          "notifyDownload",
          "autoInstallAtMaintenanceTime",
          "autoInstallAndRebootAtMaintenanceTime",
          "autoInstallAndRebootAtScheduledTime",
          "autoInstallAndRebootWithoutEndUserControl"
        ],
        "type": "string"
      },
      "microsoft.graph.bitLockerEncryptionMethod": {
        "title": "bitLockerEncryptionMethod",
        "enum": [
          "aesCbc128",
          "aesCbc256",
          "xtsAes128",
          "xtsAes256"
        ],
        "type": "string"
      },
      "microsoft.graph.defenderCloudBlockLevelType": {
        "title": "defenderCloudBlockLevelType",
        "enum": [
          "notConfigured",
          "high",
          "highPlus",
          "zeroTolerance"
        ],
        "type": "string"
      },
      "microsoft.graph.defenderMonitorFileActivity": {
        "title": "defenderMonitorFileActivity",
        "enum": [
          "userDefined",
          "disable",
          "monitorAllFiles",
          "monitorIncomingFilesOnly",
          "monitorOutgoingFilesOnly"
        ],
        "type": "string"
      },
      "microsoft.graph.defenderPromptForSampleSubmission": {
        "title": "defenderPromptForSampleSubmission",
        "enum": [
          "userDefined",
          "alwaysPrompt",
          "promptBeforeSendingPersonalData",
          "neverSendData",
          "sendAllDataWithoutPrompting"
        ],
        "type": "string"
      },
      "microsoft.graph.defenderScanType": {
        "title": "defenderScanType",
        "enum": [
          "userDefined",
          "disabled",
          "quick",
          "full"
        ],
        "type": "string"
      },
      "microsoft.graph.defenderThreatAction": {
        "title": "defenderThreatAction",
        "enum": [
          "deviceDefault",
          "clean",
          "quarantine",
          "remove",
          "allow",
          "userDefined",
          "block"
        ],
        "type": "string"
      },
      "microsoft.graph.deviceComplianceActionType": {
        "title": "deviceComplianceActionType",
        "enum": [
          "noAction",
          "notification",
          "block",
          "retire",
          "wipe",
          "removeResourceAccessProfiles",
          "pushNotification"
        ],
        "type": "string"
      },
      "microsoft.graph.deviceThreatProtectionLevel": {
        "title": "deviceThreatProtectionLevel",
        "enum": [
          "unavailable",
          "secured",
          "low",
          "medium",
          "high",
          "notSet"
        ],
        "type": "string"
      },
      "microsoft.graph.diagnosticDataSubmissionMode": {
        "title": "diagnosticDataSubmissionMode",
        "enum": [
          "userDefined",
          "none",
          "basic",
          "enhanced",
          "full"
        ],
        "type": "string"
      },
      "microsoft.graph.edgeCookiePolicy": {
        "title": "edgeCookiePolicy",
        "enum": [
          "userDefined",
          "allow",
          "blockThirdParty",
          "blockAll"
        ],
        "type": "string"
      },
      "microsoft.graph.edgeSearchEngineType": {
        "title": "edgeSearchEngineType",
        "enum": [
          "default",
          "bing"
        ],
        "type": "string"
      },
      "microsoft.graph.editionUpgradeLicenseType": {
        "title": "editionUpgradeLicenseType",
        "enum": [
          "productKey",
          "licenseFile"
        ],
        "type": "string"
      },
      "microsoft.graph.firewallCertificateRevocationListCheckMethodType": {
        "title": "firewallCertificateRevocationListCheckMethodType",
        "enum": [
          "deviceDefault",
          "none",
          "attempt",
          "require"
        ],
        "type": "string"
      },
      "microsoft.graph.firewallPacketQueueingMethodType": {
        "title": "firewallPacketQueueingMethodType",
        "enum": [
          "deviceDefault",
          "disabled",
          "queueInbound",
          "queueOutbound",
          "queueBoth"
        ],
        "type": "string"
      },
      "microsoft.graph.firewallPreSharedKeyEncodingMethodType": {
        "title": "firewallPreSharedKeyEncodingMethodType",
        "enum": [
          "deviceDefault",
          "none",
          "utF8"
        ],
        "type": "string"
      },
      "microsoft.graph.internetSiteSecurityLevel": {
        "title": "internetSiteSecurityLevel",
        "enum": [
          "userDefined",
          "medium",
          "mediumHigh",
          "high"
        ],
        "type": "string"
      },
      "microsoft.graph.iosUpdatesInstallStatus": {
        "title": "iosUpdatesInstallStatus",
        "enum": [
          "success",
          "available",
          "idle",
          "unknown",
          "downloading",
          "downloadFailed",
          "downloadRequiresComputer",
          "downloadInsufficientSpace",
          "downloadInsufficientPower",
          "downloadInsufficientNetwork",
          "installing",
          "installInsufficientSpace",
          "installInsufficientPower",
          "installPhoneCallInProgress",
          "installFailed",
          "notSupportedOperation",
          "sharedDeviceUserLoggedInError"
        ],
        "type": "string"
      },
      "microsoft.graph.miracastChannel": {
        "title": "miracastChannel",
        "enum": [
          "userDefined",
          "one",
          "two",
          "three",
          "four",
          "five",
          "six",
          "seven",
          "eight",
          "nine",
          "ten",
          "eleven",
          "thirtySix",
          "forty",
          "fortyFour",
          "fortyEight",
          "oneHundredFortyNine",
          "oneHundredFiftyThree",
          "oneHundredFiftySeven",
          "oneHundredSixtyOne",
          "oneHundredSixtyFive"
        ],
        "type": "string"
      },
      "microsoft.graph.policyPlatformType": {
        "title": "policyPlatformType",
        "enum": [
          "android",
          "iOS",
          "macOS",
          "windowsPhone81",
          "windows81AndLater",
          "windows10AndLater",
          "androidWorkProfile",
          "all"
        ],
        "type": "string"
      },
      "microsoft.graph.prereleaseFeatures": {
        "title": "prereleaseFeatures",
        "enum": [
          "userDefined",
          "settingsOnly",
          "settingsAndExperimentations",
          "notAllowed"
        ],
        "type": "string"
      },
      "microsoft.graph.ratingAppsType": {
        "title": "ratingAppsType",
        "enum": [
          "allAllowed",
          "allBlocked",
          "agesAbove4",
          "agesAbove9",
          "agesAbove12",
          "agesAbove17"
        ],
        "type": "string"
      },
      "microsoft.graph.ratingAustraliaMoviesType": {
        "title": "ratingAustraliaMoviesType",
        "enum": [
          "allAllowed",
          "allBlocked",
          "general",
          "parentalGuidance",
          "mature",
          "agesAbove15",
          "agesAbove18"
        ],
        "type": "string"
      },
      "microsoft.graph.ratingAustraliaTelevisionType": {
        "title": "ratingAustraliaTelevisionType",
        "enum": [
          "allAllowed",
          "allBlocked",
          "preschoolers",
          "children",
          "general",
          "parentalGuidance",
          "mature",
          "agesAbove15",
          "agesAbove15AdultViolence"
        ],
        "type": "string"
      },
      "microsoft.graph.ratingCanadaMoviesType": {
        "title": "ratingCanadaMoviesType",
        "enum": [
          "allAllowed",
          "allBlocked",
          "general",
          "parentalGuidance",
          "agesAbove14",
          "agesAbove18",
          "restricted"
        ],
        "type": "string"
      },
      "microsoft.graph.ratingCanadaTelevisionType": {
        "title": "ratingCanadaTelevisionType",
        "enum": [
          "allAllowed",
          "allBlocked",
          "children",
          "childrenAbove8",
          "general",
          "parentalGuidance",
          "agesAbove14",
          "agesAbove18"
        ],
        "type": "string"
      },
      "microsoft.graph.ratingFranceMoviesType": {
        "title": "ratingFranceMoviesType",
        "enum": [
          "allAllowed",
          "allBlocked",
          "agesAbove10",
          "agesAbove12",
          "agesAbove16",
          "agesAbove18"
        ],
        "type": "string"
      },
      "microsoft.graph.ratingFranceTelevisionType": {
        "title": "ratingFranceTelevisionType",
        "enum": [
          "allAllowed",
          "allBlocked",
          "agesAbove10",
          "agesAbove12",
          "agesAbove16",
          "agesAbove18"
        ],
        "type": "string"
      },
      "microsoft.graph.ratingGermanyMoviesType": {
        "title": "ratingGermanyMoviesType",
        "enum": [
          "allAllowed",
          "allBlocked",
          "general",
          "agesAbove6",
          "agesAbove12",
          "agesAbove16",
          "adults"
        ],
        "type": "string"
      },
      "microsoft.graph.ratingGermanyTelevisionType": {
        "title": "ratingGermanyTelevisionType",
        "enum": [
          "allAllowed",
          "allBlocked",
          "general",
          "agesAbove6",
          "agesAbove12",
          "agesAbove16",
          "adults"
        ],
        "type": "string"
      },
      "microsoft.graph.ratingIrelandMoviesType": {
        "title": "ratingIrelandMoviesType",
        "enum": [
          "allAllowed",
          "allBlocked",
          "general",
          "parentalGuidance",
          "agesAbove12",
          "agesAbove15",
          "agesAbove16",
          "adults"
        ],
        "type": "string"
      },
      "microsoft.graph.ratingIrelandTelevisionType": {
        "title": "ratingIrelandTelevisionType",
        "enum": [
          "allAllowed",
          "allBlocked",
          "general",
          "children",
          "youngAdults",
          "parentalSupervision",
          "mature"
        ],
        "type": "string"
      },
      "microsoft.graph.ratingJapanMoviesType": {
        "title": "ratingJapanMoviesType",
        "enum": [
          "allAllowed",
          "allBlocked",
          "general",
          "parentalGuidance",
          "agesAbove15",
          "agesAbove18"
        ],
        "type": "string"
      },
      "microsoft.graph.ratingJapanTelevisionType": {
        "title": "ratingJapanTelevisionType",
        "enum": [
          "allAllowed",
          "allBlocked",
          "explicitAllowed"
        ],
        "type": "string"
      },
      "microsoft.graph.ratingNewZealandMoviesType": {
        "title": "ratingNewZealandMoviesType",
        "enum": [
          "allAllowed",
          "allBlocked",
          "general",
          "parentalGuidance",
          "mature",
          "agesAbove13",
          "agesAbove15",
          "agesAbove16",
          "agesAbove18",
          "restricted",
          "agesAbove16Restricted"
        ],
        "type": "string"
      },
      "microsoft.graph.ratingNewZealandTelevisionType": {
        "title": "ratingNewZealandTelevisionType",
        "enum": [
          "allAllowed",
          "allBlocked",
          "general",
          "parentalGuidance",
          "adults"
        ],
        "type": "string"
      },
      "microsoft.graph.ratingUnitedKingdomMoviesType": {
        "title": "ratingUnitedKingdomMoviesType",
        "enum": [
          "allAllowed",
          "allBlocked",
          "general",
          "universalChildren",
          "parentalGuidance",
          "agesAbove12Video",
          "agesAbove12Cinema",
          "agesAbove15",
          "adults"
        ],
        "type": "string"
      },
      "microsoft.graph.ratingUnitedKingdomTelevisionType": {
        "title": "ratingUnitedKingdomTelevisionType",
        "enum": [
          "allAllowed",
          "allBlocked",
          "caution"
        ],
        "type": "string"
      },
      "microsoft.graph.ratingUnitedStatesMoviesType": {
        "title": "ratingUnitedStatesMoviesType",
        "enum": [
          "allAllowed",
          "allBlocked",
          "general",
          "parentalGuidance",
          "parentalGuidance13",
          "restricted",
          "adults"
        ],
        "type": "string"
      },
      "microsoft.graph.ratingUnitedStatesTelevisionType": {
        "title": "ratingUnitedStatesTelevisionType",
        "enum": [
          "allAllowed",
          "allBlocked",
          "childrenAll",
          "childrenAbove7",
          "general",
          "parentalGuidance",
          "childrenAbove14",
          "adults"
        ],
        "type": "string"
      },
      "microsoft.graph.requiredPasswordType": {
        "title": "requiredPasswordType",
        "enum": [
          "deviceDefault",
          "alphanumeric",
          "numeric"
        ],
        "type": "string"
      },
      "microsoft.graph.safeSearchFilterType": {
        "title": "safeSearchFilterType",
        "enum": [
          "userDefined",
          "strict",
          "moderate"
        ],
        "type": "string"
      },
      "microsoft.graph.sharedPCAccountDeletionPolicyType": {
        "title": "sharedPCAccountDeletionPolicyType",
        "enum": [
          "immediate",
          "diskSpaceThreshold",
          "diskSpaceThresholdOrInactiveThreshold"
        ],
        "type": "string"
      },
      "microsoft.graph.sharedPCAllowedAccountType": {
        "title": "sharedPCAllowedAccountType",
        "enum": [
          "guest",
          "domain"
        ],
        "type": "string"
      },
      "microsoft.graph.siteSecurityLevel": {
        "title": "siteSecurityLevel",
        "enum": [
          "userDefined",
          "low",
          "mediumLow",
          "medium",
          "mediumHigh",
          "high"
        ],
        "type": "string"
      },
      "microsoft.graph.stateManagementSetting": {
        "title": "stateManagementSetting",
        "enum": [
          "notConfigured",
          "blocked",
          "allowed"
        ],
        "type": "string"
      },
      "microsoft.graph.visibilitySetting": {
        "title": "visibilitySetting",
        "enum": [
          "notConfigured",
          "hide",
          "show"
        ],
        "type": "string"
      },
      "microsoft.graph.webBrowserCookieSettings": {
        "title": "webBrowserCookieSettings",
        "enum": [
          "browserDefault",
          "blockAlways",
          "allowCurrentWebSite",
          "allowFromWebsitesVisited",
          "allowAlways"
        ],
        "type": "string"
      },
      "microsoft.graph.weeklySchedule": {
        "title": "weeklySchedule",
        "enum": [
          "userDefined",
          "everyday",
          "sunday",
          "monday",
          "tuesday",
          "wednesday",
          "thursday",
          "friday",
          "saturday"
        ],
        "type": "string"
      },
      "microsoft.graph.welcomeScreenMeetingInformation": {
        "title": "welcomeScreenMeetingInformation",
        "enum": [
          "userDefined",
          "showOrganizerAndTimeOnly",
          "showOrganizerAndTimeAndSubject"
        ],
        "type": "string"
      },
      "microsoft.graph.windows10EditionType": {
        "title": "windows10EditionType",
        "enum": [
          "windows10Enterprise",
          "windows10EnterpriseN",
          "windows10Education",
          "windows10EducationN",
          "windows10MobileEnterprise",
          "windows10HolographicEnterprise",
          "windows10Professional",
          "windows10ProfessionalN",
          "windows10ProfessionalEducation",
          "windows10ProfessionalEducationN",
          "windows10ProfessionalWorkstation",
          "windows10ProfessionalWorkstationN"
        ],
        "type": "string"
      },
      "microsoft.graph.windowsDeliveryOptimizationMode": {
        "title": "windowsDeliveryOptimizationMode",
        "enum": [
          "userDefined",
          "httpOnly",
          "httpWithPeeringNat",
          "httpWithPeeringPrivateGroup",
          "httpWithInternetPeering",
          "simpleDownload",
          "bypassMode"
        ],
        "type": "string"
      },
      "microsoft.graph.windowsSpotlightEnablementSettings": {
        "title": "windowsSpotlightEnablementSettings",
        "enum": [
          "notConfigured",
          "disabled",
          "enabled"
        ],
        "type": "string"
      },
      "microsoft.graph.windowsStartMenuAppListVisibilityType": {
        "title": "windowsStartMenuAppListVisibilityType",
        "enum": [
          "userDefined",
          "collapse",
          "remove",
          "disableSettingsApp"
        ],
        "type": "string"
      },
      "microsoft.graph.windowsStartMenuModeType": {
        "title": "windowsStartMenuModeType",
        "enum": [
          "userDefined",
          "fullScreen",
          "nonFullScreen"
        ],
        "type": "string"
      },
      "microsoft.graph.windowsUpdateType": {
        "title": "windowsUpdateType",
        "enum": [
          "userDefined",
          "all",
          "businessReadyOnly",
          "windowsInsiderBuildFast",
          "windowsInsiderBuildSlow",
          "windowsInsiderBuildRelease"
        ],
        "type": "string"
      },
      "microsoft.graph.windowsUserAccountControlSettings": {
        "title": "windowsUserAccountControlSettings",
        "enum": [
          "userDefined",
          "alwaysNotify",
          "notifyOnAppChanges",
          "notifyOnAppChangesWithoutDimming",
          "neverNotify"
        ],
        "type": "string"
      },
      "microsoft.graph.actionState": {
        "title": "actionState",
        "enum": [
          "none",
          "pending",
          "canceled",
          "active",
          "done",
          "failed",
          "notSupported"
        ],
        "type": "string"
      },
      "microsoft.graph.complianceState": {
        "title": "complianceState",
        "enum": [
          "unknown",
          "compliant",
          "noncompliant",
          "conflict",
          "error",
          "inGracePeriod",
          "configManager"
        ],
        "type": "string"
      },
      "microsoft.graph.deviceManagementExchangeAccessState": {
        "title": "deviceManagementExchangeAccessState",
        "enum": [
          "none",
          "unknown",
          "allowed",
          "blocked",
          "quarantined"
        ],
        "type": "string"
      },
      "microsoft.graph.deviceManagementExchangeAccessStateReason": {
        "title": "deviceManagementExchangeAccessStateReason",
        "enum": [
          "none",
          "unknown",
          "exchangeGlobalRule",
          "exchangeIndividualRule",
          "exchangeDeviceRule",
          "exchangeUpgrade",
          "exchangeMailboxPolicy",
          "other",
          "compliant",
          "notCompliant",
          "notEnrolled",
          "unknownLocation",
          "mfaRequired",
          "azureADBlockDueToAccessPolicy",
          "compromisedPassword",
          "deviceNotKnownWithManagedApp"
        ],
        "type": "string"
      },
      "microsoft.graph.deviceManagementSubscriptionState": {
        "title": "deviceManagementSubscriptionState",
        "enum": [
          "pending",
          "active",
          "warning",
          "disabled",
          "deleted",
          "blocked",
          "lockedOut"
        ],
        "type": "string"
      },
      "microsoft.graph.deviceRegistrationState": {
        "title": "deviceRegistrationState",
        "enum": [
          "notRegistered",
          "registered",
          "revoked",
          "keyConflict",
          "approvalPending",
          "certificateReset",
          "notRegisteredPendingEnrollment",
          "unknown"
        ],
        "type": "string"
      },
      "microsoft.graph.managedDeviceOwnerType": {
        "title": "managedDeviceOwnerType",
        "enum": [
          "unknown",
          "company",
          "personal"
        ],
        "type": "string"
      },
      "microsoft.graph.managedDevicePartnerReportedHealthState": {
        "title": "managedDevicePartnerReportedHealthState",
        "enum": [
          "unknown",
          "activated",
          "deactivated",
          "secured",
          "lowSeverity",
          "mediumSeverity",
          "highSeverity",
          "unresponsive",
          "compromised",
          "misconfigured"
        ],
        "type": "string"
      },
      "microsoft.graph.managementAgentType": {
        "title": "managementAgentType",
        "enum": [
          "eas",
          "mdm",
          "easMdm",
          "intuneClient",
          "easIntuneClient",
          "configurationManagerClient",
          "configurationManagerClientMdm",
          "configurationManagerClientMdmEas",
          "unknown",
          "jamf",
          "googleCloudDevicePolicyController"
        ],
        "type": "string"
      },
      "microsoft.graph.importedWindowsAutopilotDeviceIdentityImportStatus": {
        "title": "importedWindowsAutopilotDeviceIdentityImportStatus",
        "enum": [
          "unknown",
          "pending",
          "partial",
          "complete",
          "error"
        ],
        "type": "string"
      },
      "microsoft.graph.importedWindowsAutopilotDeviceIdentityUploadStatus": {
        "title": "importedWindowsAutopilotDeviceIdentityUploadStatus",
        "enum": [
          "noUpload",
          "pending",
          "complete",
          "error"
        ],
        "type": "string"
      },
      "microsoft.graph.managedAppClipboardSharingLevel": {
        "title": "managedAppClipboardSharingLevel",
        "enum": [
          "allApps",
          "managedAppsWithPasteIn",
          "managedApps",
          "blocked"
        ],
        "type": "string"
      },
      "microsoft.graph.managedAppDataEncryptionType": {
        "title": "managedAppDataEncryptionType",
        "enum": [
          "useDeviceSettings",
          "afterDeviceRestart",
          "whenDeviceLockedExceptOpenFiles",
          "whenDeviceLocked"
        ],
        "type": "string"
      },
      "microsoft.graph.managedAppDataStorageLocation": {
        "title": "managedAppDataStorageLocation",
        "enum": [
          "oneDriveForBusiness",
          "sharePoint",
          "localStorage"
        ],
        "type": "string"
      },
      "microsoft.graph.managedAppDataTransferLevel": {
        "title": "managedAppDataTransferLevel",
        "enum": [
          "allApps",
          "managedApps",
          "none"
        ],
        "type": "string"
      },
      "microsoft.graph.managedAppFlaggedReason": {
        "title": "managedAppFlaggedReason",
        "enum": [
          "none",
          "rootedDevice"
        ],
        "type": "string"
      },
      "microsoft.graph.managedAppPinCharacterSet": {
        "title": "managedAppPinCharacterSet",
        "enum": [
          "numeric",
          "alphanumericAndSymbol"
        ],
        "type": "string"
      },
      "microsoft.graph.windowsInformationProtectionEnforcementLevel": {
        "title": "windowsInformationProtectionEnforcementLevel",
        "enum": [
          "noProtection",
          "encryptAndAuditOnly",
          "encryptAuditAndPrompt",
          "encryptAuditAndBlock"
        ],
        "type": "string"
      },
      "microsoft.graph.windowsInformationProtectionPinCharacterRequirements": {
        "title": "windowsInformationProtectionPinCharacterRequirements",
        "enum": [
          "notAllow",
          "requireAtLeastOne",
          "allow"
        ],
        "type": "string"
      },
      "microsoft.graph.notificationTemplateBrandingOptions": {
        "title": "notificationTemplateBrandingOptions",
        "enum": [
          "none",
          "includeCompanyLogo",
          "includeCompanyName",
          "includeContactInformation"
        ],
        "type": "string"
      },
      "microsoft.graph.deviceManagementExchangeConnectorStatus": {
        "title": "deviceManagementExchangeConnectorStatus",
        "enum": [
          "none",
          "connectionPending",
          "connected",
          "disconnected"
        ],
        "type": "string"
      },
      "microsoft.graph.deviceManagementExchangeConnectorSyncType": {
        "title": "deviceManagementExchangeConnectorSyncType",
        "enum": [
          "fullSync",
          "deltaSync"
        ],
        "type": "string"
      },
      "microsoft.graph.deviceManagementExchangeConnectorType": {
        "title": "deviceManagementExchangeConnectorType",
        "enum": [
          "onPremises",
          "hosted",
          "serviceToService",
          "dedicated"
        ],
        "type": "string"
      },
      "microsoft.graph.deviceManagementPartnerAppType": {
        "title": "deviceManagementPartnerAppType",
        "enum": [
          "unknown",
          "singleTenantApp",
          "multiTenantApp"
        ],
        "type": "string"
      },
      "microsoft.graph.deviceManagementPartnerTenantState": {
        "title": "deviceManagementPartnerTenantState",
        "enum": [
          "unknown",
          "unavailable",
          "enabled",
          "terminated",
          "rejected",
          "unresponsive"
        ],
        "type": "string"
      },
      "microsoft.graph.enablement": {
        "title": "enablement",
        "enum": [
          "notConfigured",
          "enabled",
          "disabled"
        ],
        "type": "string"
      },
      "microsoft.graph.mdmAuthority": {
        "title": "mdmAuthority",
        "enum": [
          "unknown",
          "intune",
          "sccm",
          "office365"
        ],
        "type": "string"
      },
      "microsoft.graph.mobileThreatPartnerTenantState": {
        "title": "mobileThreatPartnerTenantState",
        "enum": [
          "unavailable",
          "available",
          "enabled",
          "unresponsive"
        ],
        "type": "string"
      },
      "microsoft.graph.vppTokenState": {
        "title": "vppTokenState",
        "enum": [
          "unknown",
          "valid",
          "expired",
          "invalid",
          "assignedToExternalMDM"
        ],
        "type": "string"
      },
      "microsoft.graph.vppTokenSyncStatus": {
        "title": "vppTokenSyncStatus",
        "enum": [
          "none",
          "inProgress",
          "completed",
          "failed"
        ],
        "type": "string"
      },
      "microsoft.graph.windowsHelloForBusinessPinUsage": {
        "title": "windowsHelloForBusinessPinUsage",
        "enum": [
          "allowed",
          "required",
          "disallowed"
        ],
        "type": "string"
      },
      "microsoft.graph.remoteAssistanceOnboardingStatus": {
        "title": "remoteAssistanceOnboardingStatus",
        "enum": [
          "notOnboarded",
          "onboarding",
          "onboarded"
        ],
        "type": "string"
      },
      "microsoft.graph.complianceStatus": {
        "title": "complianceStatus",
        "enum": [
          "unknown",
          "notApplicable",
          "compliant",
          "remediated",
          "nonCompliant",
          "error",
          "conflict",
          "notAssigned"
        ],
        "type": "string"
      },
      "microsoft.graph.deviceEnrollmentType": {
        "title": "deviceEnrollmentType",
        "enum": [
          "unknown",
          "userEnrollment",
          "deviceEnrollmentManager",
          "appleBulkWithUser",
          "appleBulkWithoutUser",
          "windowsAzureADJoin",
          "windowsBulkUserless",
          "windowsAutoEnrollment",
          "windowsBulkAzureDomainJoin",
          "windowsCoManagement"
        ],
        "type": "string"
      },
      "microsoft.graph.installIntent": {
        "title": "installIntent",
        "enum": [
          "available",
          "required",
          "uninstall",
          "availableWithoutEnrollment"
        ],
        "type": "string"
      },
      "microsoft.graph.savedUIStateGenerationOptions": {
        "title": "savedUIStateGenerationOptions",
        "enum": [
          "none",
          "omitSilverlightPolicyReferences"
        ],
        "type": "string"
      },
      "microsoft.graph.vppTokenAccountType": {
        "title": "vppTokenAccountType",
        "enum": [
          "business",
          "education"
        ],
        "type": "string"
      },
      "microsoft.graph.applicationType": {
        "title": "applicationType",
        "enum": [
          "universal",
          "desktop"
        ],
        "type": "string"
      },
      "microsoft.graph.recipientScopeType": {
        "title": "recipientScopeType",
        "enum": [
          "none",
          "internal",
          "external",
          "externalPartner",
          "externalNonPartner"
        ],
        "type": "string"
      },
      "microsoft.graph.securityNetworkProtocol": {
        "title": "securityNetworkProtocol",
        "enum": [
          "unknown",
          "ip",
          "icmp",
          "igmp",
          "ggp",
          "ipv4",
          "tcp",
          "pup",
          "udp",
          "idp",
          "ipv6",
          "ipv6RoutingHeader",
          "ipv6FragmentHeader",
          "ipSecEncapsulatingSecurityPayload",
          "ipSecAuthenticationHeader",
          "icmpV6",
          "ipv6NoNextHeader",
          "ipv6DestinationOptions",
          "nd",
          "raw",
          "ipx",
          "spx",
          "spxII"
        ],
        "type": "string"
      },
      "odata.error": {
        "required": [
          "error"
        ],
        "type": "object",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/odata.error.main"
          }
        }
      },
      "odata.error.main": {
        "required": [
          "code",
          "message"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "target": {
            "type": "string"
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/odata.error.detail"
            }
          },
          "innererror": {
            "type": "object",
            "description": "The structure of this object is service-specific"
          }
        }
      },
      "odata.error.detail": {
        "required": [
          "code",
          "message"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "target": {
            "type": "string"
          }
        }
      }
    },
    "responses": {
      "error": {
        "description": "error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/odata.error"
            }
          }
        }
      }
    },
    "parameters": {
      "top": {
        "name": "$top",
        "in": "query",
        "description": "Show only the first n items",
        "schema": {
          "minimum": 0,
          "type": "integer"
        },
        "example": 50
      },
      "skip": {
        "name": "$skip",
        "in": "query",
        "description": "Skip the first n items",
        "schema": {
          "minimum": 0,
          "type": "integer"
        }
      },
      "count": {
        "name": "$count",
        "in": "query",
        "description": "Include count of items",
        "schema": {
          "type": "boolean"
        }
      },
      "filter": {
        "name": "$filter",
        "in": "query",
        "description": "Filter items by property values",
        "schema": {
          "type": "string"
        }
      },
      "search": {
        "name": "$search",
        "in": "query",
        "description": "Search items by search phrases",
        "schema": {
          "type": "string"
        }
      }
    },
    "examples": {
      "microsoft.graph.entity": {
        "value": {
          "id": "String (identifier)"
        }
      },
      "microsoft.graph.attachment": {
        "value": {
          "contentType": "String",
          "isInline": true,
          "lastModifiedDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "name": "String",
          "size": 0
        }
      },
      "microsoft.graph.baseItem": {
        "value": {
          "createdBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "createdByUser": {
            "@odata.type": "microsoft.graph.user"
          },
          "createdDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "description": "String",
          "eTag": "String",
          "lastModifiedBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "lastModifiedByUser": {
            "@odata.type": "microsoft.graph.user"
          },
          "lastModifiedDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "name": "String",
          "parentReference": {
            "@odata.type": "microsoft.graph.itemReference"
          },
          "webUrl": "String"
        }
      },
      "microsoft.graph.baseItemVersion": {
        "value": {
          "lastModifiedBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "lastModifiedDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "publication": {
            "@odata.type": "microsoft.graph.publicationFacet"
          }
        }
      },
      "microsoft.graph.calendar": {
        "value": {
          "calendarView": [
            {
              "@odata.type": "microsoft.graph.event"
            }
          ],
          "canEdit": true,
          "canShare": true,
          "canViewPrivateItems": true,
          "changeKey": "String",
          "color": {
            "@odata.type": "microsoft.graph.calendarColor"
          },
          "events": [
            {
              "@odata.type": "microsoft.graph.event"
            }
          ],
          "multiValueExtendedProperties": [
            {
              "@odata.type": "microsoft.graph.multiValueLegacyExtendedProperty"
            }
          ],
          "name": "String",
          "owner": {
            "@odata.type": "microsoft.graph.emailAddress"
          },
          "singleValueExtendedProperties": [
            {
              "@odata.type": "microsoft.graph.singleValueLegacyExtendedProperty"
            }
          ]
        }
      },
      "microsoft.graph.calendarGroup": {
        "value": {
          "calendars": [
            {
              "@odata.type": "microsoft.graph.calendar"
            }
          ],
          "changeKey": "String",
          "classId": "00000000-0000-0000-0000-000000000000",
          "name": "String"
        }
      },
      "microsoft.graph.workbookChart": {
        "value": {
          "axes": {
            "@odata.type": "microsoft.graph.workbookChartAxes"
          },
          "dataLabels": {
            "@odata.type": "microsoft.graph.workbookChartDataLabels"
          },
          "format": {
            "@odata.type": "microsoft.graph.workbookChartAreaFormat"
          },
          "height": 0,
          "left": 0,
          "legend": {
            "@odata.type": "microsoft.graph.workbookChartLegend"
          },
          "name": "String",
          "series": [
            {
              "@odata.type": "microsoft.graph.workbookChartSeries"
            }
          ],
          "title": {
            "@odata.type": "microsoft.graph.workbookChartTitle"
          },
          "top": 0,
          "width": 0,
          "worksheet": {
            "@odata.type": "microsoft.graph.workbookWorksheet"
          }
        }
      },
      "microsoft.graph.workbookChartAreaFormat": {
        "value": {
          "fill": {
            "@odata.type": "microsoft.graph.workbookChartFill"
          },
          "font": {
            "@odata.type": "microsoft.graph.workbookChartFont"
          }
        }
      },
      "microsoft.graph.workbookChartAxes": {
        "value": {
          "categoryAxis": {
            "@odata.type": "microsoft.graph.workbookChartAxis"
          },
          "seriesAxis": {
            "@odata.type": "microsoft.graph.workbookChartAxis"
          },
          "valueAxis": {
            "@odata.type": "microsoft.graph.workbookChartAxis"
          }
        }
      },
      "microsoft.graph.workbookChartAxis": {
        "value": {
          "format": {
            "@odata.type": "microsoft.graph.workbookChartAxisFormat"
          },
          "majorGridlines": {
            "@odata.type": "microsoft.graph.workbookChartGridlines"
          },
          "majorUnit": {
            "@odata.type": "microsoft.graph.Json"
          },
          "maximum": {
            "@odata.type": "microsoft.graph.Json"
          },
          "minimum": {
            "@odata.type": "microsoft.graph.Json"
          },
          "minorGridlines": {
            "@odata.type": "microsoft.graph.workbookChartGridlines"
          },
          "minorUnit": {
            "@odata.type": "microsoft.graph.Json"
          },
          "title": {
            "@odata.type": "microsoft.graph.workbookChartAxisTitle"
          }
        }
      },
      "microsoft.graph.workbookChartAxisFormat": {
        "value": {
          "font": {
            "@odata.type": "microsoft.graph.workbookChartFont"
          },
          "line": {
            "@odata.type": "microsoft.graph.workbookChartLineFormat"
          }
        }
      },
      "microsoft.graph.workbookChartAxisTitle": {
        "value": {
          "format": {
            "@odata.type": "microsoft.graph.workbookChartAxisTitleFormat"
          },
          "text": "String",
          "visible": true
        }
      },
      "microsoft.graph.workbookChartAxisTitleFormat": {
        "value": {
          "font": {
            "@odata.type": "microsoft.graph.workbookChartFont"
          }
        }
      },
      "microsoft.graph.workbookChartDataLabelFormat": {
        "value": {
          "fill": {
            "@odata.type": "microsoft.graph.workbookChartFill"
          },
          "font": {
            "@odata.type": "microsoft.graph.workbookChartFont"
          }
        }
      },
      "microsoft.graph.workbookChartDataLabels": {
        "value": {
          "format": {
            "@odata.type": "microsoft.graph.workbookChartDataLabelFormat"
          },
          "position": "String",
          "separator": "String",
          "showBubbleSize": true,
          "showCategoryName": true,
          "showLegendKey": true,
          "showPercentage": true,
          "showSeriesName": true,
          "showValue": true
        }
      },
      "microsoft.graph.workbookChartFill": { },
      "microsoft.graph.workbookChartFont": {
        "value": {
          "bold": true,
          "color": "String",
          "italic": true,
          "name": "String",
          "size": 0,
          "underline": "String"
        }
      },
      "microsoft.graph.workbookChartGridlines": {
        "value": {
          "format": {
            "@odata.type": "microsoft.graph.workbookChartGridlinesFormat"
          },
          "visible": true
        }
      },
      "microsoft.graph.workbookChartGridlinesFormat": {
        "value": {
          "line": {
            "@odata.type": "microsoft.graph.workbookChartLineFormat"
          }
        }
      },
      "microsoft.graph.workbookChartLegend": {
        "value": {
          "format": {
            "@odata.type": "microsoft.graph.workbookChartLegendFormat"
          },
          "overlay": true,
          "position": "String",
          "visible": true
        }
      },
      "microsoft.graph.workbookChartLegendFormat": {
        "value": {
          "fill": {
            "@odata.type": "microsoft.graph.workbookChartFill"
          },
          "font": {
            "@odata.type": "microsoft.graph.workbookChartFont"
          }
        }
      },
      "microsoft.graph.workbookChartLineFormat": {
        "value": {
          "color": "String"
        }
      },
      "microsoft.graph.workbookChartPoint": {
        "value": {
          "format": {
            "@odata.type": "microsoft.graph.workbookChartPointFormat"
          },
          "value": {
            "@odata.type": "microsoft.graph.Json"
          }
        }
      },
      "microsoft.graph.workbookChartPointFormat": {
        "value": {
          "fill": {
            "@odata.type": "microsoft.graph.workbookChartFill"
          }
        }
      },
      "microsoft.graph.workbookChartSeries": {
        "value": {
          "format": {
            "@odata.type": "microsoft.graph.workbookChartSeriesFormat"
          },
          "name": "String",
          "points": [
            {
              "@odata.type": "microsoft.graph.workbookChartPoint"
            }
          ]
        }
      },
      "microsoft.graph.workbookChartSeriesFormat": {
        "value": {
          "fill": {
            "@odata.type": "microsoft.graph.workbookChartFill"
          },
          "line": {
            "@odata.type": "microsoft.graph.workbookChartLineFormat"
          }
        }
      },
      "microsoft.graph.workbookChartTitle": {
        "value": {
          "format": {
            "@odata.type": "microsoft.graph.workbookChartTitleFormat"
          },
          "overlay": true,
          "text": "String",
          "visible": true
        }
      },
      "microsoft.graph.workbookChartTitleFormat": {
        "value": {
          "fill": {
            "@odata.type": "microsoft.graph.workbookChartFill"
          },
          "font": {
            "@odata.type": "microsoft.graph.workbookChartFont"
          }
        }
      },
      "microsoft.graph.columnDefinition": {
        "value": {
          "boolean": {
            "@odata.type": "microsoft.graph.booleanColumn"
          },
          "calculated": {
            "@odata.type": "microsoft.graph.calculatedColumn"
          },
          "choice": {
            "@odata.type": "microsoft.graph.choiceColumn"
          },
          "columnGroup": "String",
          "currency": {
            "@odata.type": "microsoft.graph.currencyColumn"
          },
          "dateTime": {
            "@odata.type": "microsoft.graph.dateTimeColumn"
          },
          "defaultValue": {
            "@odata.type": "microsoft.graph.defaultColumnValue"
          },
          "description": "String",
          "displayName": "String",
          "enforceUniqueValues": true,
          "hidden": true,
          "indexed": true,
          "lookup": {
            "@odata.type": "microsoft.graph.lookupColumn"
          },
          "name": "String",
          "number": {
            "@odata.type": "microsoft.graph.numberColumn"
          },
          "personOrGroup": {
            "@odata.type": "microsoft.graph.personOrGroupColumn"
          },
          "readOnly": true,
          "required": true,
          "text": {
            "@odata.type": "microsoft.graph.textColumn"
          }
        }
      },
      "microsoft.graph.columnLink": {
        "value": {
          "name": "String"
        }
      },
      "microsoft.graph.outlookItem": {
        "value": {
          "categories": [
            "String"
          ],
          "changeKey": "String",
          "createdDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "lastModifiedDateTime": "0001-01-01T00:00:00.0000000+00:00"
        }
      },
      "microsoft.graph.contact": {
        "value": {
          "assistantName": "String",
          "birthday": "0001-01-01T00:00:00.0000000+00:00",
          "businessAddress": {
            "@odata.type": "microsoft.graph.physicalAddress"
          },
          "businessHomePage": "String",
          "businessPhones": [
            "String"
          ],
          "children": [
            "String"
          ],
          "companyName": "String",
          "department": "String",
          "displayName": "String",
          "emailAddresses": [
            {
              "@odata.type": "microsoft.graph.emailAddress"
            }
          ],
          "extensions": [
            {
              "@odata.type": "microsoft.graph.extension"
            }
          ],
          "fileAs": "String",
          "flag": {
            "@odata.type": "microsoft.graph.followupFlag"
          },
          "generation": "String",
          "givenName": "String",
          "homeAddress": {
            "@odata.type": "microsoft.graph.physicalAddress"
          },
          "homePhones": [
            "String"
          ],
          "imAddresses": [
            "String"
          ],
          "initials": "String",
          "jobTitle": "String",
          "manager": "String",
          "middleName": "String",
          "mobilePhone": "String",
          "multiValueExtendedProperties": [
            {
              "@odata.type": "microsoft.graph.multiValueLegacyExtendedProperty"
            }
          ],
          "nickName": "String",
          "officeLocation": "String",
          "otherAddress": {
            "@odata.type": "microsoft.graph.physicalAddress"
          },
          "parentFolderId": "String",
          "personalNotes": "String",
          "photo": {
            "@odata.type": "microsoft.graph.profilePhoto"
          },
          "profession": "String",
          "singleValueExtendedProperties": [
            {
              "@odata.type": "microsoft.graph.singleValueLegacyExtendedProperty"
            }
          ],
          "spouseName": "String",
          "surname": "String",
          "title": "String",
          "yomiCompanyName": "String",
          "yomiGivenName": "String",
          "yomiSurname": "String"
        }
      },
      "microsoft.graph.contactFolder": {
        "value": {
          "childFolders": [
            {
              "@odata.type": "microsoft.graph.contactFolder"
            }
          ],
          "contacts": [
            {
              "@odata.type": "microsoft.graph.contact"
            }
          ],
          "displayName": "String",
          "multiValueExtendedProperties": [
            {
              "@odata.type": "microsoft.graph.multiValueLegacyExtendedProperty"
            }
          ],
          "parentFolderId": "String",
          "singleValueExtendedProperties": [
            {
              "@odata.type": "microsoft.graph.singleValueLegacyExtendedProperty"
            }
          ]
        }
      },
      "microsoft.graph.contentType": {
        "value": {
          "columnLinks": [
            {
              "@odata.type": "microsoft.graph.columnLink"
            }
          ],
          "description": "String",
          "group": "String",
          "hidden": true,
          "inheritedFrom": {
            "@odata.type": "microsoft.graph.itemReference"
          },
          "name": "String",
          "order": {
            "@odata.type": "microsoft.graph.contentTypeOrder"
          },
          "parentId": "String",
          "readOnly": true,
          "sealed": true
        }
      },
      "microsoft.graph.directoryObject": { },
      "microsoft.graph.contract": {
        "value": {
          "contractType": "String",
          "customerId": "00000000-0000-0000-0000-000000000000",
          "defaultDomainName": "String",
          "displayName": "String"
        }
      },
      "microsoft.graph.conversation": {
        "value": {
          "hasAttachments": true,
          "lastDeliveredDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "preview": "String",
          "threads": [
            {
              "@odata.type": "microsoft.graph.conversationThread"
            }
          ],
          "topic": "String",
          "uniqueSenders": [
            "String"
          ]
        }
      },
      "microsoft.graph.conversationThread": {
        "value": {
          "ccRecipients": [
            {
              "@odata.type": "microsoft.graph.recipient"
            }
          ],
          "hasAttachments": true,
          "isLocked": true,
          "lastDeliveredDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "posts": [
            {
              "@odata.type": "microsoft.graph.post"
            }
          ],
          "preview": "String",
          "topic": "String",
          "toRecipients": [
            {
              "@odata.type": "microsoft.graph.recipient"
            }
          ],
          "uniqueSenders": [
            "String"
          ]
        }
      },
      "microsoft.graph.device": {
        "value": {
          "accountEnabled": true,
          "alternativeSecurityIds": [
            {
              "@odata.type": "microsoft.graph.alternativeSecurityId"
            }
          ],
          "approximateLastSignInDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "deviceId": "String",
          "deviceMetadata": "String",
          "deviceVersion": 0,
          "displayName": "String",
          "extensions": [
            {
              "@odata.type": "microsoft.graph.extension"
            }
          ],
          "isCompliant": true,
          "isManaged": true,
          "onPremisesLastSyncDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "onPremisesSyncEnabled": true,
          "operatingSystem": "String",
          "operatingSystemVersion": "String",
          "physicalIds": [
            "String"
          ],
          "registeredOwners": [
            {
              "@odata.type": "microsoft.graph.directoryObject"
            }
          ],
          "registeredUsers": [
            {
              "@odata.type": "microsoft.graph.directoryObject"
            }
          ],
          "trustType": "String"
        }
      },
      "microsoft.graph.directory": {
        "value": {
          "deletedItems": [
            {
              "@odata.type": "microsoft.graph.directoryObject"
            }
          ]
        }
      },
      "microsoft.graph.directoryRole": {
        "value": {
          "description": "String",
          "displayName": "String",
          "members": [
            {
              "@odata.type": "microsoft.graph.directoryObject"
            }
          ],
          "roleTemplateId": "String"
        }
      },
      "microsoft.graph.directoryRoleTemplate": {
        "value": {
          "description": "String",
          "displayName": "String"
        }
      },
      "microsoft.graph.domain": {
        "value": {
          "authenticationType": "String",
          "availabilityStatus": "String",
          "domainNameReferences": [
            {
              "@odata.type": "microsoft.graph.directoryObject"
            }
          ],
          "isAdminManaged": true,
          "isDefault": true,
          "isInitial": true,
          "isRoot": true,
          "isVerified": true,
          "serviceConfigurationRecords": [
            {
              "@odata.type": "microsoft.graph.domainDnsRecord"
            }
          ],
          "state": {
            "@odata.type": "microsoft.graph.domainState"
          },
          "supportedServices": [
            "String"
          ],
          "verificationDnsRecords": [
            {
              "@odata.type": "microsoft.graph.domainDnsRecord"
            }
          ]
        }
      },
      "microsoft.graph.domainDnsRecord": {
        "value": {
          "isOptional": true,
          "label": "String",
          "recordType": "String",
          "supportedService": "String",
          "ttl": 0
        }
      },
      "microsoft.graph.domainDnsCnameRecord": {
        "value": {
          "canonicalName": "String"
        }
      },
      "microsoft.graph.domainDnsMxRecord": {
        "value": {
          "mailExchange": "String",
          "preference": 0
        }
      },
      "microsoft.graph.domainDnsSrvRecord": {
        "value": {
          "nameTarget": "String",
          "port": 0,
          "priority": 0,
          "protocol": "String",
          "service": "String",
          "weight": 0
        }
      },
      "microsoft.graph.domainDnsTxtRecord": {
        "value": {
          "text": "String"
        }
      },
      "microsoft.graph.domainDnsUnavailableRecord": {
        "value": {
          "description": "String"
        }
      },
      "microsoft.graph.drive": {
        "value": {
          "driveType": "String",
          "items": [
            {
              "@odata.type": "microsoft.graph.driveItem"
            }
          ],
          "list": {
            "@odata.type": "microsoft.graph.list"
          },
          "owner": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "quota": {
            "@odata.type": "microsoft.graph.quota"
          },
          "root": {
            "@odata.type": "microsoft.graph.driveItem"
          },
          "sharepointIds": {
            "@odata.type": "microsoft.graph.sharepointIds"
          },
          "special": [
            {
              "@odata.type": "microsoft.graph.driveItem"
            }
          ],
          "system": {
            "@odata.type": "microsoft.graph.systemFacet"
          }
        }
      },
      "microsoft.graph.driveItem": {
        "value": {
          "audio": {
            "@odata.type": "microsoft.graph.audio"
          },
          "children": [
            {
              "@odata.type": "microsoft.graph.driveItem"
            }
          ],
          "content": "Stream",
          "cTag": "String",
          "deleted": {
            "@odata.type": "microsoft.graph.deleted"
          },
          "file": {
            "@odata.type": "microsoft.graph.file"
          },
          "fileSystemInfo": {
            "@odata.type": "microsoft.graph.fileSystemInfo"
          },
          "folder": {
            "@odata.type": "microsoft.graph.folder"
          },
          "image": {
            "@odata.type": "microsoft.graph.image"
          },
          "listItem": {
            "@odata.type": "microsoft.graph.listItem"
          },
          "location": {
            "@odata.type": "microsoft.graph.geoCoordinates"
          },
          "package": {
            "@odata.type": "microsoft.graph.package"
          },
          "permissions": [
            {
              "@odata.type": "microsoft.graph.permission"
            }
          ],
          "photo": {
            "@odata.type": "microsoft.graph.photo"
          },
          "publication": {
            "@odata.type": "microsoft.graph.publicationFacet"
          },
          "remoteItem": {
            "@odata.type": "microsoft.graph.remoteItem"
          },
          "root": {
            "@odata.type": "microsoft.graph.root"
          },
          "searchResult": {
            "@odata.type": "microsoft.graph.searchResult"
          },
          "shared": {
            "@odata.type": "microsoft.graph.shared"
          },
          "sharepointIds": {
            "@odata.type": "microsoft.graph.sharepointIds"
          },
          "size": 0,
          "specialFolder": {
            "@odata.type": "microsoft.graph.specialFolder"
          },
          "thumbnails": [
            {
              "@odata.type": "microsoft.graph.thumbnailSet"
            }
          ],
          "versions": [
            {
              "@odata.type": "microsoft.graph.driveItemVersion"
            }
          ],
          "video": {
            "@odata.type": "microsoft.graph.video"
          },
          "webDavUrl": "String",
          "workbook": {
            "@odata.type": "microsoft.graph.workbook"
          }
        }
      },
      "microsoft.graph.driveItemVersion": {
        "value": {
          "content": "Stream",
          "size": 0
        }
      },
      "microsoft.graph.educationClass": {
        "value": {
          "classCode": "String",
          "createdBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "description": "String",
          "displayName": "String",
          "externalId": "String",
          "externalName": "String",
          "externalSource": {
            "@odata.type": "microsoft.graph.educationExternalSource"
          },
          "group": {
            "@odata.type": "microsoft.graph.group"
          },
          "mailNickname": "String",
          "members": [
            {
              "@odata.type": "microsoft.graph.educationUser"
            }
          ],
          "schools": [
            {
              "@odata.type": "microsoft.graph.educationSchool"
            }
          ],
          "teachers": [
            {
              "@odata.type": "microsoft.graph.educationUser"
            }
          ],
          "term": {
            "@odata.type": "microsoft.graph.educationTerm"
          }
        }
      },
      "microsoft.graph.educationOrganization": {
        "value": {
          "description": "String",
          "displayName": "String",
          "externalSource": {
            "@odata.type": "microsoft.graph.educationExternalSource"
          }
        }
      },
      "microsoft.graph.educationRoot": {
        "value": {
          "classes": [
            {
              "@odata.type": "microsoft.graph.educationClass"
            }
          ],
          "me": {
            "@odata.type": "microsoft.graph.educationUser"
          },
          "schools": [
            {
              "@odata.type": "microsoft.graph.educationSchool"
            }
          ],
          "users": [
            {
              "@odata.type": "microsoft.graph.educationUser"
            }
          ]
        }
      },
      "microsoft.graph.educationSchool": {
        "value": {
          "address": {
            "@odata.type": "microsoft.graph.physicalAddress"
          },
          "classes": [
            {
              "@odata.type": "microsoft.graph.educationClass"
            }
          ],
          "createdBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "externalId": "String",
          "externalPrincipalId": "String",
          "fax": "String",
          "highestGrade": "String",
          "lowestGrade": "String",
          "phone": "String",
          "principalEmail": "String",
          "principalName": "String",
          "schoolNumber": "String",
          "status": "String",
          "users": [
            {
              "@odata.type": "microsoft.graph.educationUser"
            }
          ]
        }
      },
      "microsoft.graph.educationUser": {
        "value": {
          "accountEnabled": true,
          "assignedLicenses": [
            {
              "@odata.type": "microsoft.graph.assignedLicense"
            }
          ],
          "assignedPlans": [
            {
              "@odata.type": "microsoft.graph.assignedPlan"
            }
          ],
          "assignments": {
            "@odata.type": "microsoft.graph.educationAssignment"
          },
          "businessPhones": [
            "String"
          ],
          "classes": [
            {
              "@odata.type": "microsoft.graph.educationClass"
            }
          ],
          "createdBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "department": "String",
          "displayName": "String",
          "externalSource": {
            "@odata.type": "microsoft.graph.educationExternalSource"
          },
          "givenName": "String",
          "mail": "String",
          "mailingAddress": {
            "@odata.type": "microsoft.graph.physicalAddress"
          },
          "mailNickname": "String",
          "middleName": "String",
          "mobilePhone": "String",
          "passwordPolicies": "String",
          "passwordProfile": {
            "@odata.type": "microsoft.graph.passwordProfile"
          },
          "preferredLanguage": "String",
          "primaryRole": {
            "@odata.type": "microsoft.graph.educationUserRole"
          },
          "provisionedPlans": [
            {
              "@odata.type": "microsoft.graph.provisionedPlan"
            }
          ],
          "residenceAddress": {
            "@odata.type": "microsoft.graph.physicalAddress"
          },
          "schools": [
            {
              "@odata.type": "microsoft.graph.educationSchool"
            }
          ],
          "student": {
            "@odata.type": "microsoft.graph.educationStudent"
          },
          "surname": "String",
          "teacher": {
            "@odata.type": "microsoft.graph.educationTeacher"
          },
          "usageLocation": "String",
          "user": {
            "@odata.type": "microsoft.graph.user"
          },
          "userPrincipalName": "String",
          "userType": "String"
        }
      },
      "microsoft.graph.event": {
        "value": {
          "attachments": [
            {
              "@odata.type": "microsoft.graph.attachment"
            }
          ],
          "attendees": [
            {
              "@odata.type": "microsoft.graph.attendee"
            }
          ],
          "body": {
            "@odata.type": "microsoft.graph.itemBody"
          },
          "bodyPreview": "String",
          "calendar": {
            "@odata.type": "microsoft.graph.calendar"
          },
          "end": {
            "@odata.type": "microsoft.graph.dateTimeTimeZone"
          },
          "extensions": [
            {
              "@odata.type": "microsoft.graph.extension"
            }
          ],
          "hasAttachments": true,
          "iCalUId": "String",
          "importance": {
            "@odata.type": "microsoft.graph.importance"
          },
          "instances": [
            {
              "@odata.type": "microsoft.graph.event"
            }
          ],
          "isAllDay": true,
          "isCancelled": true,
          "isOrganizer": true,
          "isReminderOn": true,
          "location": {
            "@odata.type": "microsoft.graph.location"
          },
          "locations": [
            {
              "@odata.type": "microsoft.graph.location"
            }
          ],
          "multiValueExtendedProperties": [
            {
              "@odata.type": "microsoft.graph.multiValueLegacyExtendedProperty"
            }
          ],
          "onlineMeetingUrl": "String",
          "organizer": {
            "@odata.type": "microsoft.graph.recipient"
          },
          "originalEndTimeZone": "String",
          "originalStart": "0001-01-01T00:00:00.0000000+00:00",
          "originalStartTimeZone": "String",
          "recurrence": {
            "@odata.type": "microsoft.graph.patternedRecurrence"
          },
          "reminderMinutesBeforeStart": 0,
          "responseRequested": true,
          "responseStatus": {
            "@odata.type": "microsoft.graph.responseStatus"
          },
          "sensitivity": {
            "@odata.type": "microsoft.graph.sensitivity"
          },
          "seriesMasterId": "String",
          "showAs": {
            "@odata.type": "microsoft.graph.freeBusyStatus"
          },
          "singleValueExtendedProperties": [
            {
              "@odata.type": "microsoft.graph.singleValueLegacyExtendedProperty"
            }
          ],
          "start": {
            "@odata.type": "microsoft.graph.dateTimeTimeZone"
          },
          "subject": "String",
          "type": {
            "@odata.type": "microsoft.graph.eventType"
          },
          "webLink": "String"
        }
      },
      "microsoft.graph.message": {
        "value": {
          "attachments": [
            {
              "@odata.type": "microsoft.graph.attachment"
            }
          ],
          "bccRecipients": [
            {
              "@odata.type": "microsoft.graph.recipient"
            }
          ],
          "body": {
            "@odata.type": "microsoft.graph.itemBody"
          },
          "bodyPreview": "String",
          "ccRecipients": [
            {
              "@odata.type": "microsoft.graph.recipient"
            }
          ],
          "conversationId": "String",
          "extensions": [
            {
              "@odata.type": "microsoft.graph.extension"
            }
          ],
          "flag": {
            "@odata.type": "microsoft.graph.followupFlag"
          },
          "from": {
            "@odata.type": "microsoft.graph.recipient"
          },
          "hasAttachments": true,
          "importance": {
            "@odata.type": "microsoft.graph.importance"
          },
          "inferenceClassification": {
            "@odata.type": "microsoft.graph.inferenceClassificationType"
          },
          "internetMessageHeaders": [
            {
              "@odata.type": "microsoft.graph.internetMessageHeader"
            }
          ],
          "internetMessageId": "String",
          "isDeliveryReceiptRequested": true,
          "isDraft": true,
          "isRead": true,
          "isReadReceiptRequested": true,
          "multiValueExtendedProperties": [
            {
              "@odata.type": "microsoft.graph.multiValueLegacyExtendedProperty"
            }
          ],
          "parentFolderId": "String",
          "receivedDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "replyTo": [
            {
              "@odata.type": "microsoft.graph.recipient"
            }
          ],
          "sender": {
            "@odata.type": "microsoft.graph.recipient"
          },
          "sentDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "singleValueExtendedProperties": [
            {
              "@odata.type": "microsoft.graph.singleValueLegacyExtendedProperty"
            }
          ],
          "subject": "String",
          "toRecipients": [
            {
              "@odata.type": "microsoft.graph.recipient"
            }
          ],
          "uniqueBody": {
            "@odata.type": "microsoft.graph.itemBody"
          },
          "webLink": "String"
        }
      },
      "microsoft.graph.eventMessage": {
        "value": {
          "event": {
            "@odata.type": "microsoft.graph.event"
          },
          "meetingMessageType": {
            "@odata.type": "microsoft.graph.meetingMessageType"
          }
        }
      },
      "microsoft.graph.extension": { },
      "microsoft.graph.fieldValueSet": { },
      "microsoft.graph.fileAttachment": {
        "value": {
          "contentBytes": "AA==",
          "contentId": "String",
          "contentLocation": "String"
        }
      },
      "microsoft.graph.workbookFilter": {
        "value": {
          "criteria": {
            "@odata.type": "microsoft.graph.workbookFilterCriteria"
          }
        }
      },
      "microsoft.graph.workbookFormatProtection": {
        "value": {
          "formulaHidden": true,
          "locked": true
        }
      },
      "microsoft.graph.group": {
        "value": {
          "acceptedSenders": [
            {
              "@odata.type": "microsoft.graph.directoryObject"
            }
          ],
          "allowExternalSenders": true,
          "autoSubscribeNewMembers": true,
          "calendar": {
            "@odata.type": "microsoft.graph.calendar"
          },
          "calendarView": [
            {
              "@odata.type": "microsoft.graph.event"
            }
          ],
          "classification": "String",
          "conversations": [
            {
              "@odata.type": "microsoft.graph.conversation"
            }
          ],
          "createdDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "createdOnBehalfOf": {
            "@odata.type": "microsoft.graph.directoryObject"
          },
          "description": "String",
          "displayName": "String",
          "drive": {
            "@odata.type": "microsoft.graph.drive"
          },
          "drives": [
            {
              "@odata.type": "microsoft.graph.drive"
            }
          ],
          "events": [
            {
              "@odata.type": "microsoft.graph.event"
            }
          ],
          "extensions": [
            {
              "@odata.type": "microsoft.graph.extension"
            }
          ],
          "groupLifecyclePolicies": [
            {
              "@odata.type": "microsoft.graph.groupLifecyclePolicy"
            }
          ],
          "groupTypes": [
            "String"
          ],
          "isSubscribedByMail": true,
          "mail": "String",
          "mailEnabled": true,
          "mailNickname": "String",
          "memberOf": [
            {
              "@odata.type": "microsoft.graph.directoryObject"
            }
          ],
          "members": [
            {
              "@odata.type": "microsoft.graph.directoryObject"
            }
          ],
          "onenote": {
            "@odata.type": "microsoft.graph.onenote"
          },
          "onPremisesLastSyncDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "onPremisesProvisioningErrors": [
            {
              "@odata.type": "microsoft.graph.onPremisesProvisioningError"
            }
          ],
          "onPremisesSecurityIdentifier": "String",
          "onPremisesSyncEnabled": true,
          "owners": [
            {
              "@odata.type": "microsoft.graph.directoryObject"
            }
          ],
          "photo": {
            "@odata.type": "microsoft.graph.profilePhoto"
          },
          "photos": [
            {
              "@odata.type": "microsoft.graph.profilePhoto"
            }
          ],
          "planner": {
            "@odata.type": "microsoft.graph.plannerGroup"
          },
          "proxyAddresses": [
            "String"
          ],
          "rejectedSenders": [
            {
              "@odata.type": "microsoft.graph.directoryObject"
            }
          ],
          "renewedDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "securityEnabled": true,
          "settings": [
            {
              "@odata.type": "microsoft.graph.groupSetting"
            }
          ],
          "sites": [
            {
              "@odata.type": "microsoft.graph.site"
            }
          ],
          "threads": [
            {
              "@odata.type": "microsoft.graph.conversationThread"
            }
          ],
          "unseenCount": 0,
          "visibility": "String"
        }
      },
      "microsoft.graph.groupLifecyclePolicy": {
        "value": {
          "alternateNotificationEmails": "String",
          "groupLifetimeInDays": 0,
          "managedGroupTypes": "String"
        }
      },
      "microsoft.graph.groupSetting": {
        "value": {
          "displayName": "String",
          "templateId": "String",
          "values": [
            {
              "@odata.type": "microsoft.graph.settingValue"
            }
          ]
        }
      },
      "microsoft.graph.groupSettingTemplate": {
        "value": {
          "description": "String",
          "displayName": "String",
          "values": [
            {
              "@odata.type": "microsoft.graph.settingTemplateValue"
            }
          ]
        }
      },
      "microsoft.graph.inferenceClassification": {
        "value": {
          "overrides": [
            {
              "@odata.type": "microsoft.graph.inferenceClassificationOverride"
            }
          ]
        }
      },
      "microsoft.graph.inferenceClassificationOverride": {
        "value": {
          "classifyAs": {
            "@odata.type": "microsoft.graph.inferenceClassificationType"
          },
          "senderEmailAddress": {
            "@odata.type": "microsoft.graph.emailAddress"
          }
        }
      },
      "microsoft.graph.mobileApp": {
        "value": {
          "assignments": [
            {
              "@odata.type": "microsoft.graph.mobileAppAssignment"
            }
          ],
          "categories": [
            {
              "@odata.type": "microsoft.graph.mobileAppCategory"
            }
          ],
          "createdDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "description": "String",
          "developer": "String",
          "displayName": "String",
          "informationUrl": "String",
          "isFeatured": true,
          "largeIcon": {
            "@odata.type": "microsoft.graph.mimeContent"
          },
          "lastModifiedDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "notes": "String",
          "owner": "String",
          "privacyInformationUrl": "String",
          "publisher": "String",
          "publishingState": {
            "@odata.type": "microsoft.graph.mobileAppPublishingState"
          }
        }
      },
      "microsoft.graph.mobileLobApp": {
        "value": {
          "committedContentVersion": "String",
          "contentVersions": [
            {
              "@odata.type": "microsoft.graph.mobileAppContent"
            }
          ],
          "fileName": "String",
          "size": 0
        }
      },
      "microsoft.graph.androidLobApp": {
        "value": {
          "minimumSupportedOperatingSystem": {
            "@odata.type": "microsoft.graph.androidMinimumOperatingSystem"
          },
          "packageId": "String",
          "versionCode": "String",
          "versionName": "String"
        }
      },
      "microsoft.graph.androidStoreApp": {
        "value": {
          "appStoreUrl": "String",
          "minimumSupportedOperatingSystem": {
            "@odata.type": "microsoft.graph.androidMinimumOperatingSystem"
          },
          "packageId": "String"
        }
      },
      "microsoft.graph.iosLobApp": {
        "value": {
          "applicableDeviceType": {
            "@odata.type": "microsoft.graph.iosDeviceType"
          },
          "buildNumber": "String",
          "bundleId": "String",
          "expirationDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "minimumSupportedOperatingSystem": {
            "@odata.type": "microsoft.graph.iosMinimumOperatingSystem"
          },
          "versionNumber": "String"
        }
      },
      "microsoft.graph.managedDeviceMobileAppConfiguration": {
        "value": {
          "assignments": [
            {
              "@odata.type": "microsoft.graph.managedDeviceMobileAppConfigurationAssignment"
            }
          ],
          "createdDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "description": "String",
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.managedDeviceMobileAppConfigurationDeviceStatus"
            }
          ],
          "deviceStatusSummary": {
            "@odata.type": "microsoft.graph.managedDeviceMobileAppConfigurationDeviceSummary"
          },
          "displayName": "String",
          "lastModifiedDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "targetedMobileApps": [
            "String"
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.managedDeviceMobileAppConfigurationUserStatus"
            }
          ],
          "userStatusSummary": {
            "@odata.type": "microsoft.graph.managedDeviceMobileAppConfigurationUserSummary"
          },
          "version": 0
        }
      },
      "microsoft.graph.iosMobileAppConfiguration": {
        "value": {
          "encodedSettingXml": "AA==",
          "settings": [
            {
              "@odata.type": "microsoft.graph.appConfigurationSettingItem"
            }
          ]
        }
      },
      "microsoft.graph.iosStoreApp": {
        "value": {
          "applicableDeviceType": {
            "@odata.type": "microsoft.graph.iosDeviceType"
          },
          "appStoreUrl": "String",
          "bundleId": "String",
          "minimumSupportedOperatingSystem": {
            "@odata.type": "microsoft.graph.iosMinimumOperatingSystem"
          }
        }
      },
      "microsoft.graph.iosVppApp": {
        "value": {
          "applicableDeviceType": {
            "@odata.type": "microsoft.graph.iosDeviceType"
          },
          "appStoreUrl": "String",
          "bundleId": "String",
          "licensingType": {
            "@odata.type": "microsoft.graph.vppLicensingType"
          },
          "releaseDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "totalLicenseCount": 0,
          "usedLicenseCount": 0,
          "vppTokenAccountType": {
            "@odata.type": "microsoft.graph.vppTokenAccountType"
          },
          "vppTokenAppleId": "String",
          "vppTokenOrganizationName": "String"
        }
      },
      "microsoft.graph.macOSOfficeSuiteApp": { },
      "microsoft.graph.managedApp": {
        "value": {
          "appAvailability": {
            "@odata.type": "microsoft.graph.managedAppAvailability"
          },
          "version": "String"
        }
      },
      "microsoft.graph.managedMobileLobApp": {
        "value": {
          "committedContentVersion": "String",
          "contentVersions": [
            {
              "@odata.type": "microsoft.graph.mobileAppContent"
            }
          ],
          "fileName": "String",
          "size": 0
        }
      },
      "microsoft.graph.managedAndroidLobApp": {
        "value": {
          "minimumSupportedOperatingSystem": {
            "@odata.type": "microsoft.graph.androidMinimumOperatingSystem"
          },
          "packageId": "String",
          "versionCode": "String",
          "versionName": "String"
        }
      },
      "microsoft.graph.managedAndroidStoreApp": {
        "value": {
          "appStoreUrl": "String",
          "minimumSupportedOperatingSystem": {
            "@odata.type": "microsoft.graph.androidMinimumOperatingSystem"
          },
          "packageId": "String"
        }
      },
      "microsoft.graph.managedDeviceMobileAppConfigurationAssignment": {
        "value": {
          "target": {
            "@odata.type": "microsoft.graph.deviceAndAppManagementAssignmentTarget"
          }
        }
      },
      "microsoft.graph.managedDeviceMobileAppConfigurationDeviceStatus": {
        "value": {
          "complianceGracePeriodExpirationDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "deviceDisplayName": "String",
          "deviceModel": "String",
          "lastReportedDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "status": {
            "@odata.type": "microsoft.graph.complianceStatus"
          },
          "userName": "String",
          "userPrincipalName": "String"
        }
      },
      "microsoft.graph.managedDeviceMobileAppConfigurationDeviceSummary": {
        "value": {
          "configurationVersion": 0,
          "errorCount": 0,
          "failedCount": 0,
          "lastUpdateDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "notApplicableCount": 0,
          "pendingCount": 0,
          "successCount": 0
        }
      },
      "microsoft.graph.managedDeviceMobileAppConfigurationUserStatus": {
        "value": {
          "devicesCount": 0,
          "lastReportedDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "status": {
            "@odata.type": "microsoft.graph.complianceStatus"
          },
          "userDisplayName": "String",
          "userPrincipalName": "String"
        }
      },
      "microsoft.graph.managedDeviceMobileAppConfigurationUserSummary": {
        "value": {
          "configurationVersion": 0,
          "errorCount": 0,
          "failedCount": 0,
          "lastUpdateDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "notApplicableCount": 0,
          "pendingCount": 0,
          "successCount": 0
        }
      },
      "microsoft.graph.managedIOSLobApp": {
        "value": {
          "applicableDeviceType": {
            "@odata.type": "microsoft.graph.iosDeviceType"
          },
          "buildNumber": "String",
          "bundleId": "String",
          "expirationDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "minimumSupportedOperatingSystem": {
            "@odata.type": "microsoft.graph.iosMinimumOperatingSystem"
          },
          "versionNumber": "String"
        }
      },
      "microsoft.graph.managedIOSStoreApp": {
        "value": {
          "applicableDeviceType": {
            "@odata.type": "microsoft.graph.iosDeviceType"
          },
          "appStoreUrl": "String",
          "bundleId": "String",
          "minimumSupportedOperatingSystem": {
            "@odata.type": "microsoft.graph.iosMinimumOperatingSystem"
          }
        }
      },
      "microsoft.graph.microsoftStoreForBusinessApp": {
        "value": {
          "licenseType": {
            "@odata.type": "microsoft.graph.microsoftStoreForBusinessLicenseType"
          },
          "packageIdentityName": "String",
          "productKey": "String",
          "totalLicenseCount": 0,
          "usedLicenseCount": 0
        }
      },
      "microsoft.graph.mobileAppAssignment": {
        "value": {
          "intent": {
            "@odata.type": "microsoft.graph.installIntent"
          },
          "settings": {
            "@odata.type": "microsoft.graph.mobileAppAssignmentSettings"
          },
          "target": {
            "@odata.type": "microsoft.graph.deviceAndAppManagementAssignmentTarget"
          }
        }
      },
      "microsoft.graph.mobileAppCategory": {
        "value": {
          "displayName": "String",
          "lastModifiedDateTime": "0001-01-01T00:00:00.0000000+00:00"
        }
      },
      "microsoft.graph.mobileAppContent": {
        "value": {
          "files": [
            {
              "@odata.type": "microsoft.graph.mobileAppContentFile"
            }
          ]
        }
      },
      "microsoft.graph.mobileAppContentFile": {
        "value": {
          "azureStorageUri": "String",
          "azureStorageUriExpirationDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "createdDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "isCommitted": true,
          "manifest": "AA==",
          "name": "String",
          "size": 0,
          "sizeEncrypted": 0,
          "uploadState": {
            "@odata.type": "microsoft.graph.mobileAppContentFileUploadState"
          }
        }
      },
      "microsoft.graph.webApp": {
        "value": {
          "appUrl": "String",
          "useManagedBrowser": true
        }
      },
      "microsoft.graph.windowsMobileMSI": {
        "value": {
          "commandLine": "String",
          "ignoreVersionDetection": true,
          "productCode": "String",
          "productVersion": "String"
        }
      },
      "microsoft.graph.windowsUniversalAppX": {
        "value": {
          "applicableArchitectures": {
            "@odata.type": "microsoft.graph.windowsArchitecture"
          },
          "applicableDeviceTypes": {
            "@odata.type": "microsoft.graph.windowsDeviceType"
          },
          "identityName": "String",
          "identityPublisherHash": "String",
          "identityResourceIdentifier": "String",
          "identityVersion": "String",
          "isBundle": true,
          "minimumSupportedOperatingSystem": {
            "@odata.type": "microsoft.graph.windowsMinimumOperatingSystem"
          }
        }
      },
      "microsoft.graph.auditEvent": {
        "value": {
          "activity": "String",
          "activityDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "activityOperationType": "String",
          "activityResult": "String",
          "activityType": "String",
          "actor": {
            "@odata.type": "microsoft.graph.auditActor"
          },
          "category": "String",
          "componentName": "String",
          "correlationId": "00000000-0000-0000-0000-000000000000",
          "displayName": "String",
          "id": "String (identifier)",
          "resources": [
            {
              "@odata.type": "microsoft.graph.auditResource"
            }
          ]
        }
      },
      "microsoft.graph.deviceInstallState": {
        "value": {
          "deviceId": "String",
          "deviceName": "String",
          "errorCode": "String",
          "installState": {
            "@odata.type": "microsoft.graph.installState"
          },
          "lastSyncDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "osDescription": "String",
          "osVersion": "String",
          "userName": "String"
        }
      },
      "microsoft.graph.eBookInstallSummary": {
        "value": {
          "failedDeviceCount": 0,
          "failedUserCount": 0,
          "installedDeviceCount": 0,
          "installedUserCount": 0,
          "notInstalledDeviceCount": 0,
          "notInstalledUserCount": 0
        }
      },
      "microsoft.graph.managedEBook": {
        "value": {
          "assignments": [
            {
              "@odata.type": "microsoft.graph.managedEBookAssignment"
            }
          ],
          "createdDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "description": "String",
          "deviceStates": [
            {
              "@odata.type": "microsoft.graph.deviceInstallState"
            }
          ],
          "displayName": "String",
          "informationUrl": "String",
          "installSummary": {
            "@odata.type": "microsoft.graph.eBookInstallSummary"
          },
          "largeCover": {
            "@odata.type": "microsoft.graph.mimeContent"
          },
          "lastModifiedDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "privacyInformationUrl": "String",
          "publishedDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "publisher": "String",
          "userStateSummary": [
            {
              "@odata.type": "microsoft.graph.userInstallStateSummary"
            }
          ]
        }
      },
      "microsoft.graph.iosVppEBook": {
        "value": {
          "appleId": "String",
          "genres": [
            "String"
          ],
          "language": "String",
          "seller": "String",
          "totalLicenseCount": 0,
          "usedLicenseCount": 0,
          "vppOrganizationName": "String",
          "vppTokenId": "00000000-0000-0000-0000-000000000000"
        }
      },
      "microsoft.graph.managedEBookAssignment": {
        "value": {
          "installIntent": {
            "@odata.type": "microsoft.graph.installIntent"
          },
          "target": {
            "@odata.type": "microsoft.graph.deviceAndAppManagementAssignmentTarget"
          }
        }
      },
      "microsoft.graph.iosVppEBookAssignment": { },
      "microsoft.graph.userInstallStateSummary": {
        "value": {
          "deviceStates": [
            {
              "@odata.type": "microsoft.graph.deviceInstallState"
            }
          ],
          "failedDeviceCount": 0,
          "installedDeviceCount": 0,
          "notInstalledDeviceCount": 0,
          "userName": "String"
        }
      },
      "microsoft.graph.termsAndConditions": {
        "value": {
          "acceptanceStatement": "String",
          "acceptanceStatuses": [
            {
              "@odata.type": "microsoft.graph.termsAndConditionsAcceptanceStatus"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.termsAndConditionsAssignment"
            }
          ],
          "bodyText": "String",
          "createdDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "description": "String",
          "displayName": "String",
          "lastModifiedDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "title": "String",
          "version": 0
        }
      },
      "microsoft.graph.termsAndConditionsAcceptanceStatus": {
        "value": {
          "acceptedDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "acceptedVersion": 0,
          "termsAndConditions": {
            "@odata.type": "microsoft.graph.termsAndConditions"
          },
          "userDisplayName": "String"
        }
      },
      "microsoft.graph.termsAndConditionsAssignment": {
        "value": {
          "target": {
            "@odata.type": "microsoft.graph.deviceAndAppManagementAssignmentTarget"
          }
        }
      },
      "microsoft.graph.deviceCompliancePolicy": {
        "value": {
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceCompliancePolicyAssignment"
            }
          ],
          "createdDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "description": "String",
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceComplianceDeviceStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceComplianceDeviceOverview"
          },
          "displayName": "String",
          "lastModifiedDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "scheduledActionsForRule": [
            {
              "@odata.type": "microsoft.graph.deviceComplianceScheduledActionForRule"
            }
          ],
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceComplianceUserStatus"
            }
          ],
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceComplianceUserOverview"
          },
          "version": 0
        }
      },
      "microsoft.graph.androidCompliancePolicy": {
        "value": {
          "deviceThreatProtectionEnabled": true,
          "deviceThreatProtectionRequiredSecurityLevel": {
            "@odata.type": "microsoft.graph.deviceThreatProtectionLevel"
          },
          "minAndroidSecurityPatchLevel": "String",
          "osMaximumVersion": "String",
          "osMinimumVersion": "String",
          "passwordExpirationDays": 0,
          "passwordMinimumLength": 0,
          "passwordMinutesOfInactivityBeforeLock": 0,
          "passwordPreviousPasswordBlockCount": 0,
          "passwordRequired": true,
          "passwordRequiredType": {
            "@odata.type": "microsoft.graph.androidRequiredPasswordType"
          },
          "securityBlockJailbrokenDevices": true,
          "securityDisableUsbDebugging": true,
          "securityPreventInstallAppsFromUnknownSources": true,
          "securityRequireCompanyPortalAppIntegrity": true,
          "securityRequireGooglePlayServices": true,
          "securityRequireSafetyNetAttestationBasicIntegrity": true,
          "securityRequireSafetyNetAttestationCertifiedDevice": true,
          "securityRequireUpToDateSecurityProviders": true,
          "securityRequireVerifyApps": true,
          "storageRequireEncryption": true
        }
      },
      "microsoft.graph.deviceConfiguration": {
        "value": {
          "assignments": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
            }
          ],
          "createdDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "description": "String",
          "deviceSettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.settingStateDeviceSummary"
            }
          ],
          "deviceStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
            }
          ],
          "deviceStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
          },
          "displayName": "String",
          "lastModifiedDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "userStatuses": [
            {
              "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
            }
          ],
          "userStatusOverview": {
            "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
          },
          "version": 0
        }
      },
      "microsoft.graph.androidCustomConfiguration": {
        "value": {
          "omaSettings": [
            {
              "@odata.type": "microsoft.graph.omaSetting"
            }
          ]
        }
      },
      "microsoft.graph.androidGeneralDeviceConfiguration": {
        "value": {
          "appsBlockClipboardSharing": true,
          "appsBlockCopyPaste": true,
          "appsBlockYouTube": true,
          "appsHideList": [
            {
              "@odata.type": "microsoft.graph.appListItem"
            }
          ],
          "appsInstallAllowList": [
            {
              "@odata.type": "microsoft.graph.appListItem"
            }
          ],
          "appsLaunchBlockList": [
            {
              "@odata.type": "microsoft.graph.appListItem"
            }
          ],
          "bluetoothBlocked": true,
          "cameraBlocked": true,
          "cellularBlockDataRoaming": true,
          "cellularBlockMessaging": true,
          "cellularBlockVoiceRoaming": true,
          "cellularBlockWiFiTethering": true,
          "compliantAppListType": {
            "@odata.type": "microsoft.graph.appListType"
          },
          "compliantAppsList": [
            {
              "@odata.type": "microsoft.graph.appListItem"
            }
          ],
          "deviceSharingAllowed": true,
          "diagnosticDataBlockSubmission": true,
          "factoryResetBlocked": true,
          "googleAccountBlockAutoSync": true,
          "googlePlayStoreBlocked": true,
          "kioskModeApps": [
            {
              "@odata.type": "microsoft.graph.appListItem"
            }
          ],
          "kioskModeBlockSleepButton": true,
          "kioskModeBlockVolumeButtons": true,
          "locationServicesBlocked": true,
          "nfcBlocked": true,
          "passwordBlockFingerprintUnlock": true,
          "passwordBlockTrustAgents": true,
          "passwordExpirationDays": 0,
          "passwordMinimumLength": 0,
          "passwordMinutesOfInactivityBeforeScreenTimeout": 0,
          "passwordPreviousPasswordBlockCount": 0,
          "passwordRequired": true,
          "passwordRequiredType": {
            "@odata.type": "microsoft.graph.androidRequiredPasswordType"
          },
          "passwordSignInFailureCountBeforeFactoryReset": 0,
          "powerOffBlocked": true,
          "screenCaptureBlocked": true,
          "securityRequireVerifyApps": true,
          "storageBlockGoogleBackup": true,
          "storageBlockRemovableStorage": true,
          "storageRequireDeviceEncryption": true,
          "storageRequireRemovableStorageEncryption": true,
          "voiceAssistantBlocked": true,
          "voiceDialingBlocked": true,
          "webBrowserBlockAutofill": true,
          "webBrowserBlocked": true,
          "webBrowserBlockJavaScript": true,
          "webBrowserBlockPopups": true,
          "webBrowserCookieSettings": {
            "@odata.type": "microsoft.graph.webBrowserCookieSettings"
          },
          "wiFiBlocked": true
        }
      },
      "microsoft.graph.androidWorkProfileCompliancePolicy": {
        "value": {
          "deviceThreatProtectionEnabled": true,
          "deviceThreatProtectionRequiredSecurityLevel": {
            "@odata.type": "microsoft.graph.deviceThreatProtectionLevel"
          },
          "minAndroidSecurityPatchLevel": "String",
          "osMaximumVersion": "String",
          "osMinimumVersion": "String",
          "passwordExpirationDays": 0,
          "passwordMinimumLength": 0,
          "passwordMinutesOfInactivityBeforeLock": 0,
          "passwordPreviousPasswordBlockCount": 0,
          "passwordRequired": true,
          "passwordRequiredType": {
            "@odata.type": "microsoft.graph.androidRequiredPasswordType"
          },
          "securityBlockJailbrokenDevices": true,
          "securityDisableUsbDebugging": true,
          "securityPreventInstallAppsFromUnknownSources": true,
          "securityRequireCompanyPortalAppIntegrity": true,
          "securityRequireGooglePlayServices": true,
          "securityRequireSafetyNetAttestationBasicIntegrity": true,
          "securityRequireSafetyNetAttestationCertifiedDevice": true,
          "securityRequireUpToDateSecurityProviders": true,
          "securityRequireVerifyApps": true,
          "storageRequireEncryption": true
        }
      },
      "microsoft.graph.androidWorkProfileCustomConfiguration": {
        "value": {
          "omaSettings": [
            {
              "@odata.type": "microsoft.graph.omaSetting"
            }
          ]
        }
      },
      "microsoft.graph.androidWorkProfileGeneralDeviceConfiguration": {
        "value": {
          "passwordBlockFingerprintUnlock": true,
          "passwordBlockTrustAgents": true,
          "passwordExpirationDays": 0,
          "passwordMinimumLength": 0,
          "passwordMinutesOfInactivityBeforeScreenTimeout": 0,
          "passwordPreviousPasswordBlockCount": 0,
          "passwordRequiredType": {
            "@odata.type": "microsoft.graph.androidWorkProfileRequiredPasswordType"
          },
          "passwordSignInFailureCountBeforeFactoryReset": 0,
          "securityRequireVerifyApps": true,
          "workProfileBlockAddingAccounts": true,
          "workProfileBlockCamera": true,
          "workProfileBlockCrossProfileCallerId": true,
          "workProfileBlockCrossProfileContactsSearch": true,
          "workProfileBlockCrossProfileCopyPaste": true,
          "workProfileBlockNotificationsWhileDeviceLocked": true,
          "workProfileBlockScreenCapture": true,
          "workProfileBluetoothEnableContactSharing": true,
          "workProfileDataSharingType": {
            "@odata.type": "microsoft.graph.androidWorkProfileCrossProfileDataSharingType"
          },
          "workProfileDefaultAppPermissionPolicy": {
            "@odata.type": "microsoft.graph.androidWorkProfileDefaultAppPermissionPolicyType"
          },
          "workProfilePasswordBlockFingerprintUnlock": true,
          "workProfilePasswordBlockTrustAgents": true,
          "workProfilePasswordExpirationDays": 0,
          "workProfilePasswordMinimumLength": 0,
          "workProfilePasswordMinLetterCharacters": 0,
          "workProfilePasswordMinLowerCaseCharacters": 0,
          "workProfilePasswordMinNonLetterCharacters": 0,
          "workProfilePasswordMinNumericCharacters": 0,
          "workProfilePasswordMinSymbolCharacters": 0,
          "workProfilePasswordMinUpperCaseCharacters": 0,
          "workProfilePasswordMinutesOfInactivityBeforeScreenTimeout": 0,
          "workProfilePasswordPreviousPasswordBlockCount": 0,
          "workProfilePasswordRequiredType": {
            "@odata.type": "microsoft.graph.androidWorkProfileRequiredPasswordType"
          },
          "workProfilePasswordSignInFailureCountBeforeFactoryReset": 0,
          "workProfileRequirePassword": true
        }
      },
      "microsoft.graph.appleDeviceFeaturesConfigurationBase": { },
      "microsoft.graph.deviceComplianceActionItem": {
        "value": {
          "actionType": {
            "@odata.type": "microsoft.graph.deviceComplianceActionType"
          },
          "gracePeriodHours": 0,
          "notificationMessageCCList": [
            "String"
          ],
          "notificationTemplateId": "String"
        }
      },
      "microsoft.graph.deviceComplianceDeviceOverview": {
        "value": {
          "configurationVersion": 0,
          "errorCount": 0,
          "failedCount": 0,
          "lastUpdateDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "notApplicableCount": 0,
          "pendingCount": 0,
          "successCount": 0
        }
      },
      "microsoft.graph.deviceComplianceDeviceStatus": {
        "value": {
          "complianceGracePeriodExpirationDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "deviceDisplayName": "String",
          "deviceModel": "String",
          "lastReportedDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "status": {
            "@odata.type": "microsoft.graph.complianceStatus"
          },
          "userName": "String",
          "userPrincipalName": "String"
        }
      },
      "microsoft.graph.deviceCompliancePolicyAssignment": {
        "value": {
          "target": {
            "@odata.type": "microsoft.graph.deviceAndAppManagementAssignmentTarget"
          }
        }
      },
      "microsoft.graph.deviceCompliancePolicyDeviceStateSummary": {
        "value": {
          "compliantDeviceCount": 0,
          "configManagerCount": 0,
          "conflictDeviceCount": 0,
          "errorDeviceCount": 0,
          "inGracePeriodCount": 0,
          "nonCompliantDeviceCount": 0,
          "notApplicableDeviceCount": 0,
          "remediatedDeviceCount": 0,
          "unknownDeviceCount": 0
        }
      },
      "microsoft.graph.deviceCompliancePolicySettingStateSummary": {
        "value": {
          "compliantDeviceCount": 0,
          "conflictDeviceCount": 0,
          "deviceComplianceSettingStates": [
            {
              "@odata.type": "microsoft.graph.deviceComplianceSettingState"
            }
          ],
          "errorDeviceCount": 0,
          "nonCompliantDeviceCount": 0,
          "notApplicableDeviceCount": 0,
          "platformType": {
            "@odata.type": "microsoft.graph.policyPlatformType"
          },
          "remediatedDeviceCount": 0,
          "setting": "String",
          "settingName": "String",
          "unknownDeviceCount": 0
        }
      },
      "microsoft.graph.deviceComplianceScheduledActionForRule": {
        "value": {
          "ruleName": "String",
          "scheduledActionConfigurations": [
            {
              "@odata.type": "microsoft.graph.deviceComplianceActionItem"
            }
          ]
        }
      },
      "microsoft.graph.deviceComplianceSettingState": {
        "value": {
          "complianceGracePeriodExpirationDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "deviceId": "String",
          "deviceModel": "String",
          "deviceName": "String",
          "setting": "String",
          "settingName": "String",
          "state": {
            "@odata.type": "microsoft.graph.complianceStatus"
          },
          "userEmail": "String",
          "userId": "String",
          "userName": "String",
          "userPrincipalName": "String"
        }
      },
      "microsoft.graph.deviceComplianceUserOverview": {
        "value": {
          "configurationVersion": 0,
          "errorCount": 0,
          "failedCount": 0,
          "lastUpdateDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "notApplicableCount": 0,
          "pendingCount": 0,
          "successCount": 0
        }
      },
      "microsoft.graph.deviceComplianceUserStatus": {
        "value": {
          "devicesCount": 0,
          "lastReportedDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "status": {
            "@odata.type": "microsoft.graph.complianceStatus"
          },
          "userDisplayName": "String",
          "userPrincipalName": "String"
        }
      },
      "microsoft.graph.deviceConfigurationAssignment": {
        "value": {
          "target": {
            "@odata.type": "microsoft.graph.deviceAndAppManagementAssignmentTarget"
          }
        }
      },
      "microsoft.graph.deviceConfigurationDeviceOverview": {
        "value": {
          "configurationVersion": 0,
          "errorCount": 0,
          "failedCount": 0,
          "lastUpdateDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "notApplicableCount": 0,
          "pendingCount": 0,
          "successCount": 0
        }
      },
      "microsoft.graph.deviceConfigurationDeviceStateSummary": {
        "value": {
          "compliantDeviceCount": 0,
          "conflictDeviceCount": 0,
          "errorDeviceCount": 0,
          "nonCompliantDeviceCount": 0,
          "notApplicableDeviceCount": 0,
          "remediatedDeviceCount": 0,
          "unknownDeviceCount": 0
        }
      },
      "microsoft.graph.deviceConfigurationDeviceStatus": {
        "value": {
          "complianceGracePeriodExpirationDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "deviceDisplayName": "String",
          "deviceModel": "String",
          "lastReportedDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "status": {
            "@odata.type": "microsoft.graph.complianceStatus"
          },
          "userName": "String",
          "userPrincipalName": "String"
        }
      },
      "microsoft.graph.deviceConfigurationUserOverview": {
        "value": {
          "configurationVersion": 0,
          "errorCount": 0,
          "failedCount": 0,
          "lastUpdateDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "notApplicableCount": 0,
          "pendingCount": 0,
          "successCount": 0
        }
      },
      "microsoft.graph.deviceConfigurationUserStatus": {
        "value": {
          "devicesCount": 0,
          "lastReportedDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "status": {
            "@odata.type": "microsoft.graph.complianceStatus"
          },
          "userDisplayName": "String",
          "userPrincipalName": "String"
        }
      },
      "microsoft.graph.editionUpgradeConfiguration": {
        "value": {
          "license": "String",
          "licenseType": {
            "@odata.type": "microsoft.graph.editionUpgradeLicenseType"
          },
          "productKey": "String",
          "targetEdition": {
            "@odata.type": "microsoft.graph.windows10EditionType"
          }
        }
      },
      "microsoft.graph.iosCertificateProfile": { },
      "microsoft.graph.iosCompliancePolicy": {
        "value": {
          "deviceThreatProtectionEnabled": true,
          "deviceThreatProtectionRequiredSecurityLevel": {
            "@odata.type": "microsoft.graph.deviceThreatProtectionLevel"
          },
          "managedEmailProfileRequired": true,
          "osMaximumVersion": "String",
          "osMinimumVersion": "String",
          "passcodeBlockSimple": true,
          "passcodeExpirationDays": 0,
          "passcodeMinimumCharacterSetCount": 0,
          "passcodeMinimumLength": 0,
          "passcodeMinutesOfInactivityBeforeLock": 0,
          "passcodePreviousPasscodeBlockCount": 0,
          "passcodeRequired": true,
          "passcodeRequiredType": {
            "@odata.type": "microsoft.graph.requiredPasswordType"
          },
          "securityBlockJailbrokenDevices": true
        }
      },
      "microsoft.graph.iosCustomConfiguration": {
        "value": {
          "payload": "AA==",
          "payloadFileName": "String",
          "payloadName": "String"
        }
      },
      "microsoft.graph.iosDeviceFeaturesConfiguration": {
        "value": {
          "assetTagTemplate": "String",
          "homeScreenDockIcons": [
            {
              "@odata.type": "microsoft.graph.iosHomeScreenItem"
            }
          ],
          "homeScreenPages": [
            {
              "@odata.type": "microsoft.graph.iosHomeScreenPage"
            }
          ],
          "lockScreenFootnote": "String",
          "notificationSettings": [
            {
              "@odata.type": "microsoft.graph.iosNotificationSettings"
            }
          ]
        }
      },
      "microsoft.graph.iosGeneralDeviceConfiguration": {
        "value": {
          "accountBlockModification": true,
          "activationLockAllowWhenSupervised": true,
          "airDropBlocked": true,
          "airDropForceUnmanagedDropTarget": true,
          "airPlayForcePairingPasswordForOutgoingRequests": true,
          "appleNewsBlocked": true,
          "appleWatchBlockPairing": true,
          "appleWatchForceWristDetection": true,
          "appsSingleAppModeList": [
            {
              "@odata.type": "microsoft.graph.appListItem"
            }
          ],
          "appStoreBlockAutomaticDownloads": true,
          "appStoreBlocked": true,
          "appStoreBlockInAppPurchases": true,
          "appStoreBlockUIAppInstallation": true,
          "appStoreRequirePassword": true,
          "appsVisibilityList": [
            {
              "@odata.type": "microsoft.graph.appListItem"
            }
          ],
          "appsVisibilityListType": {
            "@odata.type": "microsoft.graph.appListType"
          },
          "bluetoothBlockModification": true,
          "cameraBlocked": true,
          "cellularBlockDataRoaming": true,
          "cellularBlockGlobalBackgroundFetchWhileRoaming": true,
          "cellularBlockPerAppDataModification": true,
          "cellularBlockPersonalHotspot": true,
          "cellularBlockVoiceRoaming": true,
          "certificatesBlockUntrustedTlsCertificates": true,
          "classroomAppBlockRemoteScreenObservation": true,
          "classroomAppForceUnpromptedScreenObservation": true,
          "compliantAppListType": {
            "@odata.type": "microsoft.graph.appListType"
          },
          "compliantAppsList": [
            {
              "@odata.type": "microsoft.graph.appListItem"
            }
          ],
          "configurationProfileBlockChanges": true,
          "definitionLookupBlocked": true,
          "deviceBlockEnableRestrictions": true,
          "deviceBlockEraseContentAndSettings": true,
          "deviceBlockNameModification": true,
          "diagnosticDataBlockSubmission": true,
          "diagnosticDataBlockSubmissionModification": true,
          "documentsBlockManagedDocumentsInUnmanagedApps": true,
          "documentsBlockUnmanagedDocumentsInManagedApps": true,
          "emailInDomainSuffixes": [
            "String"
          ],
          "enterpriseAppBlockTrust": true,
          "enterpriseAppBlockTrustModification": true,
          "faceTimeBlocked": true,
          "findMyFriendsBlocked": true,
          "gameCenterBlocked": true,
          "gamingBlockGameCenterFriends": true,
          "gamingBlockMultiplayer": true,
          "hostPairingBlocked": true,
          "iBooksStoreBlocked": true,
          "iBooksStoreBlockErotica": true,
          "iCloudBlockActivityContinuation": true,
          "iCloudBlockBackup": true,
          "iCloudBlockDocumentSync": true,
          "iCloudBlockManagedAppsSync": true,
          "iCloudBlockPhotoLibrary": true,
          "iCloudBlockPhotoStreamSync": true,
          "iCloudBlockSharedPhotoStream": true,
          "iCloudRequireEncryptedBackup": true,
          "iTunesBlockExplicitContent": true,
          "iTunesBlockMusicService": true,
          "iTunesBlockRadio": true,
          "keyboardBlockAutoCorrect": true,
          "keyboardBlockDictation": true,
          "keyboardBlockPredictive": true,
          "keyboardBlockShortcuts": true,
          "keyboardBlockSpellCheck": true,
          "kioskModeAllowAssistiveSpeak": true,
          "kioskModeAllowAssistiveTouchSettings": true,
          "kioskModeAllowAutoLock": true,
          "kioskModeAllowColorInversionSettings": true,
          "kioskModeAllowRingerSwitch": true,
          "kioskModeAllowScreenRotation": true,
          "kioskModeAllowSleepButton": true,
          "kioskModeAllowTouchscreen": true,
          "kioskModeAllowVoiceOverSettings": true,
          "kioskModeAllowVolumeButtons": true,
          "kioskModeAllowZoomSettings": true,
          "kioskModeAppStoreUrl": "String",
          "kioskModeBuiltInAppId": "String",
          "kioskModeManagedAppId": "String",
          "kioskModeRequireAssistiveTouch": true,
          "kioskModeRequireColorInversion": true,
          "kioskModeRequireMonoAudio": true,
          "kioskModeRequireVoiceOver": true,
          "kioskModeRequireZoom": true,
          "lockScreenBlockControlCenter": true,
          "lockScreenBlockNotificationView": true,
          "lockScreenBlockPassbook": true,
          "lockScreenBlockTodayView": true,
          "mediaContentRatingApps": {
            "@odata.type": "microsoft.graph.ratingAppsType"
          },
          "mediaContentRatingAustralia": {
            "@odata.type": "microsoft.graph.mediaContentRatingAustralia"
          },
          "mediaContentRatingCanada": {
            "@odata.type": "microsoft.graph.mediaContentRatingCanada"
          },
          "mediaContentRatingFrance": {
            "@odata.type": "microsoft.graph.mediaContentRatingFrance"
          },
          "mediaContentRatingGermany": {
            "@odata.type": "microsoft.graph.mediaContentRatingGermany"
          },
          "mediaContentRatingIreland": {
            "@odata.type": "microsoft.graph.mediaContentRatingIreland"
          },
          "mediaContentRatingJapan": {
            "@odata.type": "microsoft.graph.mediaContentRatingJapan"
          },
          "mediaContentRatingNewZealand": {
            "@odata.type": "microsoft.graph.mediaContentRatingNewZealand"
          },
          "mediaContentRatingUnitedKingdom": {
            "@odata.type": "microsoft.graph.mediaContentRatingUnitedKingdom"
          },
          "mediaContentRatingUnitedStates": {
            "@odata.type": "microsoft.graph.mediaContentRatingUnitedStates"
          },
          "messagesBlocked": true,
          "networkUsageRules": [
            {
              "@odata.type": "microsoft.graph.iosNetworkUsageRule"
            }
          ],
          "notificationsBlockSettingsModification": true,
          "passcodeBlockFingerprintModification": true,
          "passcodeBlockFingerprintUnlock": true,
          "passcodeBlockModification": true,
          "passcodeBlockSimple": true,
          "passcodeExpirationDays": 0,
          "passcodeMinimumCharacterSetCount": 0,
          "passcodeMinimumLength": 0,
          "passcodeMinutesOfInactivityBeforeLock": 0,
          "passcodeMinutesOfInactivityBeforeScreenTimeout": 0,
          "passcodePreviousPasscodeBlockCount": 0,
          "passcodeRequired": true,
          "passcodeRequiredType": {
            "@odata.type": "microsoft.graph.requiredPasswordType"
          },
          "passcodeSignInFailureCountBeforeWipe": 0,
          "podcastsBlocked": true,
          "safariBlockAutofill": true,
          "safariBlocked": true,
          "safariBlockJavaScript": true,
          "safariBlockPopups": true,
          "safariCookieSettings": {
            "@odata.type": "microsoft.graph.webBrowserCookieSettings"
          },
          "safariManagedDomains": [
            "String"
          ],
          "safariPasswordAutoFillDomains": [
            "String"
          ],
          "safariRequireFraudWarning": true,
          "screenCaptureBlocked": true,
          "siriBlocked": true,
          "siriBlockedWhenLocked": true,
          "siriBlockUserGeneratedContent": true,
          "siriRequireProfanityFilter": true,
          "spotlightBlockInternetResults": true,
          "voiceDialingBlocked": true,
          "wallpaperBlockModification": true,
          "wiFiConnectOnlyToConfiguredNetworks": true
        }
      },
      "microsoft.graph.iosUpdateConfiguration": {
        "value": {
          "activeHoursEnd": "TimeOfDay (timestamp)",
          "activeHoursStart": "TimeOfDay (timestamp)",
          "scheduledInstallDays": [
            {
              "@odata.type": "microsoft.graph.dayOfWeek"
            }
          ],
          "utcTimeOffsetInMinutes": 0
        }
      },
      "microsoft.graph.iosUpdateDeviceStatus": {
        "value": {
          "complianceGracePeriodExpirationDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "deviceDisplayName": "String",
          "deviceId": "String",
          "deviceModel": "String",
          "installStatus": {
            "@odata.type": "microsoft.graph.iosUpdatesInstallStatus"
          },
          "lastReportedDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "osVersion": "String",
          "status": {
            "@odata.type": "microsoft.graph.complianceStatus"
          },
          "userId": "String",
          "userName": "String",
          "userPrincipalName": "String"
        }
      },
      "microsoft.graph.macOSCompliancePolicy": {
        "value": {
          "deviceThreatProtectionEnabled": true,
          "deviceThreatProtectionRequiredSecurityLevel": {
            "@odata.type": "microsoft.graph.deviceThreatProtectionLevel"
          },
          "firewallBlockAllIncoming": true,
          "firewallEnabled": true,
          "firewallEnableStealthMode": true,
          "osMaximumVersion": "String",
          "osMinimumVersion": "String",
          "passwordBlockSimple": true,
          "passwordExpirationDays": 0,
          "passwordMinimumCharacterSetCount": 0,
          "passwordMinimumLength": 0,
          "passwordMinutesOfInactivityBeforeLock": 0,
          "passwordPreviousPasswordBlockCount": 0,
          "passwordRequired": true,
          "passwordRequiredType": {
            "@odata.type": "microsoft.graph.requiredPasswordType"
          },
          "storageRequireEncryption": true,
          "systemIntegrityProtectionEnabled": true
        }
      },
      "microsoft.graph.macOSCustomConfiguration": {
        "value": {
          "payload": "AA==",
          "payloadFileName": "String",
          "payloadName": "String"
        }
      },
      "microsoft.graph.macOSDeviceFeaturesConfiguration": { },
      "microsoft.graph.macOSGeneralDeviceConfiguration": {
        "value": {
          "compliantAppListType": {
            "@odata.type": "microsoft.graph.appListType"
          },
          "compliantAppsList": [
            {
              "@odata.type": "microsoft.graph.appListItem"
            }
          ],
          "emailInDomainSuffixes": [
            "String"
          ],
          "passwordBlockSimple": true,
          "passwordExpirationDays": 0,
          "passwordMinimumCharacterSetCount": 0,
          "passwordMinimumLength": 0,
          "passwordMinutesOfInactivityBeforeLock": 0,
          "passwordMinutesOfInactivityBeforeScreenTimeout": 0,
          "passwordPreviousPasswordBlockCount": 0,
          "passwordRequired": true,
          "passwordRequiredType": {
            "@odata.type": "microsoft.graph.requiredPasswordType"
          }
        }
      },
      "microsoft.graph.settingSource": {
        "value": {
          "displayName": "String",
          "id": "String (identifier)"
        }
      },
      "microsoft.graph.settingStateDeviceSummary": {
        "value": {
          "compliantDeviceCount": 0,
          "conflictDeviceCount": 0,
          "errorDeviceCount": 0,
          "instancePath": "String",
          "nonCompliantDeviceCount": 0,
          "notApplicableDeviceCount": 0,
          "remediatedDeviceCount": 0,
          "settingName": "String",
          "unknownDeviceCount": 0
        }
      },
      "microsoft.graph.sharedPCConfiguration": {
        "value": {
          "accountManagerPolicy": {
            "@odata.type": "microsoft.graph.sharedPCAccountManagerPolicy"
          },
          "allowedAccounts": {
            "@odata.type": "microsoft.graph.sharedPCAllowedAccountType"
          },
          "allowLocalStorage": true,
          "disableAccountManager": true,
          "disableEduPolicies": true,
          "disablePowerPolicies": true,
          "disableSignInOnResume": true,
          "enabled": true,
          "idleTimeBeforeSleepInSeconds": 0,
          "kioskAppDisplayName": "String",
          "kioskAppUserModelId": "String",
          "maintenanceStartTime": "TimeOfDay (timestamp)"
        }
      },
      "microsoft.graph.softwareUpdateStatusSummary": {
        "value": {
          "compliantDeviceCount": 0,
          "compliantUserCount": 0,
          "conflictDeviceCount": 0,
          "conflictUserCount": 0,
          "displayName": "String",
          "errorDeviceCount": 0,
          "errorUserCount": 0,
          "nonCompliantDeviceCount": 0,
          "nonCompliantUserCount": 0,
          "notApplicableDeviceCount": 0,
          "notApplicableUserCount": 0,
          "remediatedDeviceCount": 0,
          "remediatedUserCount": 0,
          "unknownDeviceCount": 0,
          "unknownUserCount": 0
        }
      },
      "microsoft.graph.windows10CompliancePolicy": {
        "value": {
          "bitLockerEnabled": true,
          "codeIntegrityEnabled": true,
          "earlyLaunchAntiMalwareDriverEnabled": true,
          "mobileOsMaximumVersion": "String",
          "mobileOsMinimumVersion": "String",
          "osMaximumVersion": "String",
          "osMinimumVersion": "String",
          "passwordBlockSimple": true,
          "passwordExpirationDays": 0,
          "passwordMinimumCharacterSetCount": 0,
          "passwordMinimumLength": 0,
          "passwordMinutesOfInactivityBeforeLock": 0,
          "passwordPreviousPasswordBlockCount": 0,
          "passwordRequired": true,
          "passwordRequiredToUnlockFromIdle": true,
          "passwordRequiredType": {
            "@odata.type": "microsoft.graph.requiredPasswordType"
          },
          "requireHealthyDeviceReport": true,
          "secureBootEnabled": true,
          "storageRequireEncryption": true
        }
      },
      "microsoft.graph.windows10CustomConfiguration": {
        "value": {
          "omaSettings": [
            {
              "@odata.type": "microsoft.graph.omaSetting"
            }
          ]
        }
      },
      "microsoft.graph.windows10EndpointProtectionConfiguration": {
        "value": {
          "applicationGuardAllowPersistence": true,
          "applicationGuardAllowPrintToLocalPrinters": true,
          "applicationGuardAllowPrintToNetworkPrinters": true,
          "applicationGuardAllowPrintToPDF": true,
          "applicationGuardAllowPrintToXPS": true,
          "applicationGuardBlockClipboardSharing": {
            "@odata.type": "microsoft.graph.applicationGuardBlockClipboardSharingType"
          },
          "applicationGuardBlockFileTransfer": {
            "@odata.type": "microsoft.graph.applicationGuardBlockFileTransferType"
          },
          "applicationGuardBlockNonEnterpriseContent": true,
          "applicationGuardEnabled": true,
          "applicationGuardForceAuditing": true,
          "appLockerApplicationControl": {
            "@odata.type": "microsoft.graph.appLockerApplicationControlType"
          },
          "bitLockerDisableWarningForOtherDiskEncryption": true,
          "bitLockerEnableStorageCardEncryptionOnMobile": true,
          "bitLockerEncryptDevice": true,
          "bitLockerRemovableDrivePolicy": {
            "@odata.type": "microsoft.graph.bitLockerRemovableDrivePolicy"
          },
          "defenderAdditionalGuardedFolders": [
            "String"
          ],
          "defenderAttackSurfaceReductionExcludedPaths": [
            "String"
          ],
          "defenderExploitProtectionXml": "AA==",
          "defenderExploitProtectionXmlFileName": "String",
          "defenderGuardedFoldersAllowedAppPaths": [
            "String"
          ],
          "defenderSecurityCenterBlockExploitProtectionOverride": true,
          "firewallBlockStatefulFTP": true,
          "firewallCertificateRevocationListCheckMethod": {
            "@odata.type": "microsoft.graph.firewallCertificateRevocationListCheckMethodType"
          },
          "firewallIdleTimeoutForSecurityAssociationInSeconds": 0,
          "firewallIPSecExemptionsAllowDHCP": true,
          "firewallIPSecExemptionsAllowICMP": true,
          "firewallIPSecExemptionsAllowNeighborDiscovery": true,
          "firewallIPSecExemptionsAllowRouterDiscovery": true,
          "firewallMergeKeyingModuleSettings": true,
          "firewallPacketQueueingMethod": {
            "@odata.type": "microsoft.graph.firewallPacketQueueingMethodType"
          },
          "firewallPreSharedKeyEncodingMethod": {
            "@odata.type": "microsoft.graph.firewallPreSharedKeyEncodingMethodType"
          },
          "firewallProfileDomain": {
            "@odata.type": "microsoft.graph.windowsFirewallNetworkProfile"
          },
          "firewallProfilePrivate": {
            "@odata.type": "microsoft.graph.windowsFirewallNetworkProfile"
          },
          "firewallProfilePublic": {
            "@odata.type": "microsoft.graph.windowsFirewallNetworkProfile"
          },
          "smartScreenBlockOverrideForFiles": true,
          "smartScreenEnableInShell": true
        }
      },
      "microsoft.graph.windows10EnterpriseModernAppManagementConfiguration": {
        "value": {
          "uninstallBuiltInApps": true
        }
      },
      "microsoft.graph.windows10GeneralConfiguration": {
        "value": {
          "accountsBlockAddingNonMicrosoftAccountEmail": true,
          "antiTheftModeBlocked": true,
          "appsAllowTrustedAppsSideloading": {
            "@odata.type": "microsoft.graph.stateManagementSetting"
          },
          "appsBlockWindowsStoreOriginatedApps": true,
          "bluetoothAllowedServices": [
            "String"
          ],
          "bluetoothBlockAdvertising": true,
          "bluetoothBlockDiscoverableMode": true,
          "bluetoothBlocked": true,
          "bluetoothBlockPrePairing": true,
          "cameraBlocked": true,
          "cellularBlockDataWhenRoaming": true,
          "cellularBlockVpn": true,
          "cellularBlockVpnWhenRoaming": true,
          "certificatesBlockManualRootCertificateInstallation": true,
          "connectedDevicesServiceBlocked": true,
          "copyPasteBlocked": true,
          "cortanaBlocked": true,
          "defenderBlockEndUserAccess": true,
          "defenderCloudBlockLevel": {
            "@odata.type": "microsoft.graph.defenderCloudBlockLevelType"
          },
          "defenderDaysBeforeDeletingQuarantinedMalware": 0,
          "defenderDetectedMalwareActions": {
            "@odata.type": "microsoft.graph.defenderDetectedMalwareActions"
          },
          "defenderFileExtensionsToExclude": [
            "String"
          ],
          "defenderFilesAndFoldersToExclude": [
            "String"
          ],
          "defenderMonitorFileActivity": {
            "@odata.type": "microsoft.graph.defenderMonitorFileActivity"
          },
          "defenderProcessesToExclude": [
            "String"
          ],
          "defenderPromptForSampleSubmission": {
            "@odata.type": "microsoft.graph.defenderPromptForSampleSubmission"
          },
          "defenderRequireBehaviorMonitoring": true,
          "defenderRequireCloudProtection": true,
          "defenderRequireNetworkInspectionSystem": true,
          "defenderRequireRealTimeMonitoring": true,
          "defenderScanArchiveFiles": true,
          "defenderScanDownloads": true,
          "defenderScanIncomingMail": true,
          "defenderScanMappedNetworkDrivesDuringFullScan": true,
          "defenderScanMaxCpu": 0,
          "defenderScanNetworkFiles": true,
          "defenderScanRemovableDrivesDuringFullScan": true,
          "defenderScanScriptsLoadedInInternetExplorer": true,
          "defenderScanType": {
            "@odata.type": "microsoft.graph.defenderScanType"
          },
          "defenderScheduledQuickScanTime": "TimeOfDay (timestamp)",
          "defenderScheduledScanTime": "TimeOfDay (timestamp)",
          "defenderSignatureUpdateIntervalInHours": 0,
          "defenderSystemScanSchedule": {
            "@odata.type": "microsoft.graph.weeklySchedule"
          },
          "developerUnlockSetting": {
            "@odata.type": "microsoft.graph.stateManagementSetting"
          },
          "deviceManagementBlockFactoryResetOnMobile": true,
          "deviceManagementBlockManualUnenroll": true,
          "diagnosticsDataSubmissionMode": {
            "@odata.type": "microsoft.graph.diagnosticDataSubmissionMode"
          },
          "edgeAllowStartPagesModification": true,
          "edgeBlockAccessToAboutFlags": true,
          "edgeBlockAddressBarDropdown": true,
          "edgeBlockAutofill": true,
          "edgeBlockCompatibilityList": true,
          "edgeBlockDeveloperTools": true,
          "edgeBlocked": true,
          "edgeBlockExtensions": true,
          "edgeBlockInPrivateBrowsing": true,
          "edgeBlockJavaScript": true,
          "edgeBlockLiveTileDataCollection": true,
          "edgeBlockPasswordManager": true,
          "edgeBlockPopups": true,
          "edgeBlockSearchSuggestions": true,
          "edgeBlockSendingDoNotTrackHeader": true,
          "edgeBlockSendingIntranetTrafficToInternetExplorer": true,
          "edgeClearBrowsingDataOnExit": true,
          "edgeCookiePolicy": {
            "@odata.type": "microsoft.graph.edgeCookiePolicy"
          },
          "edgeDisableFirstRunPage": true,
          "edgeEnterpriseModeSiteListLocation": "String",
          "edgeFirstRunUrl": "String",
          "edgeHomepageUrls": [
            "String"
          ],
          "edgeRequireSmartScreen": true,
          "edgeSearchEngine": {
            "@odata.type": "microsoft.graph.edgeSearchEngineBase"
          },
          "edgeSyncFavoritesWithInternetExplorer": true,
          "enterpriseCloudPrintDiscoveryEndPoint": "String",
          "enterpriseCloudPrintDiscoveryMaxLimit": 0,
          "enterpriseCloudPrintMopriaDiscoveryResourceIdentifier": "String",
          "enterpriseCloudPrintOAuthAuthority": "String",
          "enterpriseCloudPrintOAuthClientIdentifier": "String",
          "enterpriseCloudPrintResourceIdentifier": "String",
          "experienceBlockDeviceDiscovery": true,
          "experienceBlockErrorDialogWhenNoSIM": true,
          "experienceBlockTaskSwitcher": true,
          "gameDvrBlocked": true,
          "internetSharingBlocked": true,
          "locationServicesBlocked": true,
          "lockScreenAllowTimeoutConfiguration": true,
          "lockScreenBlockActionCenterNotifications": true,
          "lockScreenBlockCortana": true,
          "lockScreenBlockToastNotifications": true,
          "lockScreenTimeoutInSeconds": 0,
          "logonBlockFastUserSwitching": true,
          "microsoftAccountBlocked": true,
          "microsoftAccountBlockSettingsSync": true,
          "networkProxyApplySettingsDeviceWide": true,
          "networkProxyAutomaticConfigurationUrl": "String",
          "networkProxyDisableAutoDetect": true,
          "networkProxyServer": {
            "@odata.type": "microsoft.graph.windows10NetworkProxyServer"
          },
          "nfcBlocked": true,
          "oneDriveDisableFileSync": true,
          "passwordBlockSimple": true,
          "passwordExpirationDays": 0,
          "passwordMinimumCharacterSetCount": 0,
          "passwordMinimumLength": 0,
          "passwordMinutesOfInactivityBeforeScreenTimeout": 0,
          "passwordPreviousPasswordBlockCount": 0,
          "passwordRequired": true,
          "passwordRequiredType": {
            "@odata.type": "microsoft.graph.requiredPasswordType"
          },
          "passwordRequireWhenResumeFromIdleState": true,
          "passwordSignInFailureCountBeforeFactoryReset": 0,
          "personalizationDesktopImageUrl": "String",
          "personalizationLockScreenImageUrl": "String",
          "privacyAdvertisingId": {
            "@odata.type": "microsoft.graph.stateManagementSetting"
          },
          "privacyAutoAcceptPairingAndConsentPrompts": true,
          "privacyBlockInputPersonalization": true,
          "resetProtectionModeBlocked": true,
          "safeSearchFilter": {
            "@odata.type": "microsoft.graph.safeSearchFilterType"
          },
          "screenCaptureBlocked": true,
          "searchBlockDiacritics": true,
          "searchDisableAutoLanguageDetection": true,
          "searchDisableIndexerBackoff": true,
          "searchDisableIndexingEncryptedItems": true,
          "searchDisableIndexingRemovableDrive": true,
          "searchEnableAutomaticIndexSizeManangement": true,
          "searchEnableRemoteQueries": true,
          "settingsBlockAccountsPage": true,
          "settingsBlockAddProvisioningPackage": true,
          "settingsBlockAppsPage": true,
          "settingsBlockChangeLanguage": true,
          "settingsBlockChangePowerSleep": true,
          "settingsBlockChangeRegion": true,
          "settingsBlockChangeSystemTime": true,
          "settingsBlockDevicesPage": true,
          "settingsBlockEaseOfAccessPage": true,
          "settingsBlockEditDeviceName": true,
          "settingsBlockGamingPage": true,
          "settingsBlockNetworkInternetPage": true,
          "settingsBlockPersonalizationPage": true,
          "settingsBlockPrivacyPage": true,
          "settingsBlockRemoveProvisioningPackage": true,
          "settingsBlockSettingsApp": true,
          "settingsBlockSystemPage": true,
          "settingsBlockTimeLanguagePage": true,
          "settingsBlockUpdateSecurityPage": true,
          "sharedUserAppDataAllowed": true,
          "smartScreenBlockPromptOverride": true,
          "smartScreenBlockPromptOverrideForFiles": true,
          "smartScreenEnableAppInstallControl": true,
          "startBlockUnpinningAppsFromTaskbar": true,
          "startMenuAppListVisibility": {
            "@odata.type": "microsoft.graph.windowsStartMenuAppListVisibilityType"
          },
          "startMenuHideChangeAccountSettings": true,
          "startMenuHideFrequentlyUsedApps": true,
          "startMenuHideHibernate": true,
          "startMenuHideLock": true,
          "startMenuHidePowerButton": true,
          "startMenuHideRecentJumpLists": true,
          "startMenuHideRecentlyAddedApps": true,
          "startMenuHideRestartOptions": true,
          "startMenuHideShutDown": true,
          "startMenuHideSignOut": true,
          "startMenuHideSleep": true,
          "startMenuHideSwitchAccount": true,
          "startMenuHideUserTile": true,
          "startMenuLayoutEdgeAssetsXml": "AA==",
          "startMenuLayoutXml": "AA==",
          "startMenuMode": {
            "@odata.type": "microsoft.graph.windowsStartMenuModeType"
          },
          "startMenuPinnedFolderDocuments": {
            "@odata.type": "microsoft.graph.visibilitySetting"
          },
          "startMenuPinnedFolderDownloads": {
            "@odata.type": "microsoft.graph.visibilitySetting"
          },
          "startMenuPinnedFolderFileExplorer": {
            "@odata.type": "microsoft.graph.visibilitySetting"
          },
          "startMenuPinnedFolderHomeGroup": {
            "@odata.type": "microsoft.graph.visibilitySetting"
          },
          "startMenuPinnedFolderMusic": {
            "@odata.type": "microsoft.graph.visibilitySetting"
          },
          "startMenuPinnedFolderNetwork": {
            "@odata.type": "microsoft.graph.visibilitySetting"
          },
          "startMenuPinnedFolderPersonalFolder": {
            "@odata.type": "microsoft.graph.visibilitySetting"
          },
          "startMenuPinnedFolderPictures": {
            "@odata.type": "microsoft.graph.visibilitySetting"
          },
          "startMenuPinnedFolderSettings": {
            "@odata.type": "microsoft.graph.visibilitySetting"
          },
          "startMenuPinnedFolderVideos": {
            "@odata.type": "microsoft.graph.visibilitySetting"
          },
          "storageBlockRemovableStorage": true,
          "storageRequireMobileDeviceEncryption": true,
          "storageRestrictAppDataToSystemVolume": true,
          "storageRestrictAppInstallToSystemVolume": true,
          "usbBlocked": true,
          "voiceRecordingBlocked": true,
          "webRtcBlockLocalhostIpAddress": true,
          "wiFiBlockAutomaticConnectHotspots": true,
          "wiFiBlocked": true,
          "wiFiBlockManualConfiguration": true,
          "wiFiScanInterval": 0,
          "windowsSpotlightBlockConsumerSpecificFeatures": true,
          "windowsSpotlightBlocked": true,
          "windowsSpotlightBlockOnActionCenter": true,
          "windowsSpotlightBlockTailoredExperiences": true,
          "windowsSpotlightBlockThirdPartyNotifications": true,
          "windowsSpotlightBlockWelcomeExperience": true,
          "windowsSpotlightBlockWindowsTips": true,
          "windowsSpotlightConfigureOnLockScreen": {
            "@odata.type": "microsoft.graph.windowsSpotlightEnablementSettings"
          },
          "windowsStoreBlockAutoUpdate": true,
          "windowsStoreBlocked": true,
          "windowsStoreEnablePrivateStoreOnly": true,
          "wirelessDisplayBlockProjectionToThisDevice": true,
          "wirelessDisplayBlockUserInputFromReceiver": true,
          "wirelessDisplayRequirePinForPairing": true
        }
      },
      "microsoft.graph.windows10MobileCompliancePolicy": {
        "value": {
          "bitLockerEnabled": true,
          "codeIntegrityEnabled": true,
          "earlyLaunchAntiMalwareDriverEnabled": true,
          "osMaximumVersion": "String",
          "osMinimumVersion": "String",
          "passwordBlockSimple": true,
          "passwordExpirationDays": 0,
          "passwordMinimumCharacterSetCount": 0,
          "passwordMinimumLength": 0,
          "passwordMinutesOfInactivityBeforeLock": 0,
          "passwordPreviousPasswordBlockCount": 0,
          "passwordRequired": true,
          "passwordRequiredType": {
            "@odata.type": "microsoft.graph.requiredPasswordType"
          },
          "passwordRequireToUnlockFromIdle": true,
          "secureBootEnabled": true,
          "storageRequireEncryption": true
        }
      },
      "microsoft.graph.windows10SecureAssessmentConfiguration": {
        "value": {
          "allowPrinting": true,
          "allowScreenCapture": true,
          "allowTextSuggestion": true,
          "configurationAccount": "String",
          "launchUri": "String"
        }
      },
      "microsoft.graph.windows10TeamGeneralConfiguration": {
        "value": {
          "azureOperationalInsightsBlockTelemetry": true,
          "azureOperationalInsightsWorkspaceId": "String",
          "azureOperationalInsightsWorkspaceKey": "String",
          "connectAppBlockAutoLaunch": true,
          "maintenanceWindowBlocked": true,
          "maintenanceWindowDurationInHours": 0,
          "maintenanceWindowStartTime": "TimeOfDay (timestamp)",
          "miracastBlocked": true,
          "miracastChannel": {
            "@odata.type": "microsoft.graph.miracastChannel"
          },
          "miracastRequirePin": true,
          "settingsBlockMyMeetingsAndFiles": true,
          "settingsBlockSessionResume": true,
          "settingsBlockSigninSuggestions": true,
          "settingsDefaultVolume": 0,
          "settingsScreenTimeoutInMinutes": 0,
          "settingsSessionTimeoutInMinutes": 0,
          "settingsSleepTimeoutInMinutes": 0,
          "welcomeScreenBackgroundImageUrl": "String",
          "welcomeScreenBlockAutomaticWakeUp": true,
          "welcomeScreenMeetingInformation": {
            "@odata.type": "microsoft.graph.welcomeScreenMeetingInformation"
          }
        }
      },
      "microsoft.graph.windows81CompliancePolicy": {
        "value": {
          "osMaximumVersion": "String",
          "osMinimumVersion": "String",
          "passwordBlockSimple": true,
          "passwordExpirationDays": 0,
          "passwordMinimumCharacterSetCount": 0,
          "passwordMinimumLength": 0,
          "passwordMinutesOfInactivityBeforeLock": 0,
          "passwordPreviousPasswordBlockCount": 0,
          "passwordRequired": true,
          "passwordRequiredType": {
            "@odata.type": "microsoft.graph.requiredPasswordType"
          },
          "storageRequireEncryption": true
        }
      },
      "microsoft.graph.windows81GeneralConfiguration": {
        "value": {
          "accountsBlockAddingNonMicrosoftAccountEmail": true,
          "applyOnlyToWindows81": true,
          "browserBlockAutofill": true,
          "browserBlockAutomaticDetectionOfIntranetSites": true,
          "browserBlockEnterpriseModeAccess": true,
          "browserBlockJavaScript": true,
          "browserBlockPlugins": true,
          "browserBlockPopups": true,
          "browserBlockSendingDoNotTrackHeader": true,
          "browserBlockSingleWordEntryOnIntranetSites": true,
          "browserEnterpriseModeSiteListLocation": "String",
          "browserInternetSecurityLevel": {
            "@odata.type": "microsoft.graph.internetSiteSecurityLevel"
          },
          "browserIntranetSecurityLevel": {
            "@odata.type": "microsoft.graph.siteSecurityLevel"
          },
          "browserLoggingReportLocation": "String",
          "browserRequireFirewall": true,
          "browserRequireFraudWarning": true,
          "browserRequireHighSecurityForRestrictedSites": true,
          "browserRequireSmartScreen": true,
          "browserTrustedSitesSecurityLevel": {
            "@odata.type": "microsoft.graph.siteSecurityLevel"
          },
          "cellularBlockDataRoaming": true,
          "diagnosticsBlockDataSubmission": true,
          "passwordBlockPicturePasswordAndPin": true,
          "passwordExpirationDays": 0,
          "passwordMinimumCharacterSetCount": 0,
          "passwordMinimumLength": 0,
          "passwordMinutesOfInactivityBeforeScreenTimeout": 0,
          "passwordPreviousPasswordBlockCount": 0,
          "passwordRequiredType": {
            "@odata.type": "microsoft.graph.requiredPasswordType"
          },
          "passwordSignInFailureCountBeforeFactoryReset": 0,
          "storageRequireDeviceEncryption": true,
          "updatesRequireAutomaticUpdates": true,
          "userAccountControlSettings": {
            "@odata.type": "microsoft.graph.windowsUserAccountControlSettings"
          },
          "workFoldersUrl": "String"
        }
      },
      "microsoft.graph.windowsDefenderAdvancedThreatProtectionConfiguration": {
        "value": {
          "allowSampleSharing": true,
          "enableExpeditedTelemetryReporting": true
        }
      },
      "microsoft.graph.windowsPhone81CompliancePolicy": {
        "value": {
          "osMaximumVersion": "String",
          "osMinimumVersion": "String",
          "passwordBlockSimple": true,
          "passwordExpirationDays": 0,
          "passwordMinimumCharacterSetCount": 0,
          "passwordMinimumLength": 0,
          "passwordMinutesOfInactivityBeforeLock": 0,
          "passwordPreviousPasswordBlockCount": 0,
          "passwordRequired": true,
          "passwordRequiredType": {
            "@odata.type": "microsoft.graph.requiredPasswordType"
          },
          "storageRequireEncryption": true
        }
      },
      "microsoft.graph.windowsPhone81CustomConfiguration": {
        "value": {
          "omaSettings": [
            {
              "@odata.type": "microsoft.graph.omaSetting"
            }
          ]
        }
      },
      "microsoft.graph.windowsPhone81GeneralConfiguration": {
        "value": {
          "applyOnlyToWindowsPhone81": true,
          "appsBlockCopyPaste": true,
          "bluetoothBlocked": true,
          "cameraBlocked": true,
          "cellularBlockWifiTethering": true,
          "compliantAppListType": {
            "@odata.type": "microsoft.graph.appListType"
          },
          "compliantAppsList": [
            {
              "@odata.type": "microsoft.graph.appListItem"
            }
          ],
          "diagnosticDataBlockSubmission": true,
          "emailBlockAddingAccounts": true,
          "locationServicesBlocked": true,
          "microsoftAccountBlocked": true,
          "nfcBlocked": true,
          "passwordBlockSimple": true,
          "passwordExpirationDays": 0,
          "passwordMinimumCharacterSetCount": 0,
          "passwordMinimumLength": 0,
          "passwordMinutesOfInactivityBeforeScreenTimeout": 0,
          "passwordPreviousPasswordBlockCount": 0,
          "passwordRequired": true,
          "passwordRequiredType": {
            "@odata.type": "microsoft.graph.requiredPasswordType"
          },
          "passwordSignInFailureCountBeforeFactoryReset": 0,
          "screenCaptureBlocked": true,
          "storageBlockRemovableStorage": true,
          "storageRequireEncryption": true,
          "webBrowserBlocked": true,
          "wifiBlockAutomaticConnectHotspots": true,
          "wifiBlocked": true,
          "wifiBlockHotspotReporting": true,
          "windowsStoreBlocked": true
        }
      },
      "microsoft.graph.windowsUpdateForBusinessConfiguration": {
        "value": {
          "automaticUpdateMode": {
            "@odata.type": "microsoft.graph.automaticUpdateMode"
          },
          "businessReadyUpdatesOnly": {
            "@odata.type": "microsoft.graph.windowsUpdateType"
          },
          "deliveryOptimizationMode": {
            "@odata.type": "microsoft.graph.windowsDeliveryOptimizationMode"
          },
          "driversExcluded": true,
          "featureUpdatesDeferralPeriodInDays": 0,
          "featureUpdatesPaused": true,
          "featureUpdatesPauseExpiryDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "installationSchedule": {
            "@odata.type": "microsoft.graph.windowsUpdateInstallScheduleType"
          },
          "microsoftUpdateServiceAllowed": true,
          "prereleaseFeatures": {
            "@odata.type": "microsoft.graph.prereleaseFeatures"
          },
          "qualityUpdatesDeferralPeriodInDays": 0,
          "qualityUpdatesPaused": true,
          "qualityUpdatesPauseExpiryDateTime": "0001-01-01T00:00:00.0000000+00:00"
        }
      },
      "microsoft.graph.applePushNotificationCertificate": {
        "value": {
          "appleIdentifier": "String",
          "certificate": "String",
          "expirationDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "lastModifiedDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "topicIdentifier": "String"
        }
      },
      "microsoft.graph.detectedApp": {
        "value": {
          "deviceCount": 0,
          "displayName": "String",
          "managedDevices": [
            {
              "@odata.type": "microsoft.graph.managedDevice"
            }
          ],
          "sizeInByte": 0,
          "version": "String"
        }
      },
      "microsoft.graph.managedDevice": {
        "value": {
          "activationLockBypassCode": "String",
          "androidSecurityPatchLevel": "String",
          "azureADDeviceId": "String",
          "azureADRegistered": true,
          "complianceGracePeriodExpirationDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "complianceState": {
            "@odata.type": "microsoft.graph.complianceState"
          },
          "configurationManagerClientEnabledFeatures": {
            "@odata.type": "microsoft.graph.configurationManagerClientEnabledFeatures"
          },
          "deviceActionResults": [
            {
              "@odata.type": "microsoft.graph.deviceActionResult"
            }
          ],
          "deviceCategory": {
            "@odata.type": "microsoft.graph.deviceCategory"
          },
          "deviceCategoryDisplayName": "String",
          "deviceEnrollmentType": {
            "@odata.type": "microsoft.graph.deviceEnrollmentType"
          },
          "deviceHealthAttestationState": {
            "@odata.type": "microsoft.graph.deviceHealthAttestationState"
          },
          "deviceName": "String",
          "deviceRegistrationState": {
            "@odata.type": "microsoft.graph.deviceRegistrationState"
          },
          "easActivated": true,
          "easActivationDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "easDeviceId": "String",
          "emailAddress": "String",
          "enrolledDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "exchangeAccessState": {
            "@odata.type": "microsoft.graph.deviceManagementExchangeAccessState"
          },
          "exchangeAccessStateReason": {
            "@odata.type": "microsoft.graph.deviceManagementExchangeAccessStateReason"
          },
          "exchangeLastSuccessfulSyncDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "freeStorageSpaceInBytes": 0,
          "imei": "String",
          "isEncrypted": true,
          "isSupervised": true,
          "jailBroken": "String",
          "lastSyncDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "managedDeviceName": "String",
          "managedDeviceOwnerType": {
            "@odata.type": "microsoft.graph.managedDeviceOwnerType"
          },
          "managementAgent": {
            "@odata.type": "microsoft.graph.managementAgentType"
          },
          "manufacturer": "String",
          "meid": "String",
          "model": "String",
          "operatingSystem": "String",
          "osVersion": "String",
          "partnerReportedThreatState": {
            "@odata.type": "microsoft.graph.managedDevicePartnerReportedHealthState"
          },
          "phoneNumber": "String",
          "remoteAssistanceSessionErrorDetails": "String",
          "remoteAssistanceSessionUrl": "String",
          "serialNumber": "String",
          "subscriberCarrier": "String",
          "totalStorageSpaceInBytes": 0,
          "userDisplayName": "String",
          "userId": "String",
          "userPrincipalName": "String",
          "wiFiMacAddress": "String"
        }
      },
      "microsoft.graph.managedDeviceOverview": {
        "value": {
          "deviceExchangeAccessStateSummary": {
            "@odata.type": "microsoft.graph.deviceExchangeAccessStateSummary"
          },
          "deviceOperatingSystemSummary": {
            "@odata.type": "microsoft.graph.deviceOperatingSystemSummary"
          },
          "dualEnrolledDeviceCount": 0,
          "enrolledDeviceCount": 0,
          "mdmEnrolledCount": 0
        }
      },
      "microsoft.graph.importedWindowsAutopilotDeviceIdentity": {
        "value": {
          "hardwareIdentifier": "AA==",
          "id": "String (identifier)",
          "orderIdentifier": "String",
          "productKey": "String",
          "serialNumber": "String",
          "state": {
            "@odata.type": "microsoft.graph.importedWindowsAutopilotDeviceIdentityState"
          }
        }
      },
      "microsoft.graph.importedWindowsAutopilotDeviceIdentityUpload": {
        "value": {
          "createdDateTimeUtc": "0001-01-01T00:00:00.0000000+00:00",
          "deviceIdentities": [
            {
              "@odata.type": "microsoft.graph.importedWindowsAutopilotDeviceIdentity"
            }
          ],
          "id": "String (identifier)",
          "status": {
            "@odata.type": "microsoft.graph.importedWindowsAutopilotDeviceIdentityUploadStatus"
          }
        }
      },
      "microsoft.graph.managedAppPolicy": {
        "value": {
          "createdDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "description": "String",
          "displayName": "String",
          "lastModifiedDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "version": "String"
        }
      },
      "microsoft.graph.managedAppProtection": {
        "value": {
          "allowedDataStorageLocations": [
            {
              "@odata.type": "microsoft.graph.managedAppDataStorageLocation"
            }
          ],
          "allowedInboundDataTransferSources": {
            "@odata.type": "microsoft.graph.managedAppDataTransferLevel"
          },
          "allowedOutboundClipboardSharingLevel": {
            "@odata.type": "microsoft.graph.managedAppClipboardSharingLevel"
          },
          "allowedOutboundDataTransferDestinations": {
            "@odata.type": "microsoft.graph.managedAppDataTransferLevel"
          },
          "contactSyncBlocked": true,
          "dataBackupBlocked": true,
          "deviceComplianceRequired": true,
          "disableAppPinIfDevicePinIsSet": true,
          "fingerprintBlocked": true,
          "managedBrowserToOpenLinksRequired": true,
          "maximumPinRetries": 0,
          "minimumPinLength": 0,
          "minimumRequiredAppVersion": "String",
          "minimumRequiredOsVersion": "String",
          "minimumWarningAppVersion": "String",
          "minimumWarningOsVersion": "String",
          "organizationalCredentialsRequired": true,
          "periodBeforePinReset": "Duration",
          "periodOfflineBeforeAccessCheck": "Duration",
          "periodOfflineBeforeWipeIsEnforced": "Duration",
          "periodOnlineBeforeAccessCheck": "Duration",
          "pinCharacterSet": {
            "@odata.type": "microsoft.graph.managedAppPinCharacterSet"
          },
          "pinRequired": true,
          "printBlocked": true,
          "saveAsBlocked": true,
          "simplePinBlocked": true
        }
      },
      "microsoft.graph.targetedManagedAppProtection": {
        "value": {
          "assignments": [
            {
              "@odata.type": "microsoft.graph.targetedManagedAppPolicyAssignment"
            }
          ],
          "isAssigned": true
        }
      },
      "microsoft.graph.androidManagedAppProtection": {
        "value": {
          "apps": [
            {
              "@odata.type": "microsoft.graph.managedMobileApp"
            }
          ],
          "deployedAppCount": 0,
          "deploymentSummary": {
            "@odata.type": "microsoft.graph.managedAppPolicyDeploymentSummary"
          },
          "disableAppEncryptionIfDeviceEncryptionIsEnabled": true,
          "encryptAppData": true,
          "minimumRequiredPatchVersion": "String",
          "minimumWarningPatchVersion": "String",
          "screenCaptureBlocked": true
        }
      },
      "microsoft.graph.managedAppRegistration": {
        "value": {
          "appIdentifier": {
            "@odata.type": "microsoft.graph.mobileAppIdentifier"
          },
          "applicationVersion": "String",
          "appliedPolicies": [
            {
              "@odata.type": "microsoft.graph.managedAppPolicy"
            }
          ],
          "createdDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "deviceName": "String",
          "deviceTag": "String",
          "deviceType": "String",
          "flaggedReasons": [
            {
              "@odata.type": "microsoft.graph.managedAppFlaggedReason"
            }
          ],
          "intendedPolicies": [
            {
              "@odata.type": "microsoft.graph.managedAppPolicy"
            }
          ],
          "lastSyncDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "managementSdkVersion": "String",
          "operations": [
            {
              "@odata.type": "microsoft.graph.managedAppOperation"
            }
          ],
          "platformVersion": "String",
          "userId": "String",
          "version": "String"
        }
      },
      "microsoft.graph.androidManagedAppRegistration": { },
      "microsoft.graph.defaultManagedAppProtection": {
        "value": {
          "appDataEncryptionType": {
            "@odata.type": "microsoft.graph.managedAppDataEncryptionType"
          },
          "apps": [
            {
              "@odata.type": "microsoft.graph.managedMobileApp"
            }
          ],
          "customSettings": [
            {
              "@odata.type": "microsoft.graph.keyValuePair"
            }
          ],
          "deployedAppCount": 0,
          "deploymentSummary": {
            "@odata.type": "microsoft.graph.managedAppPolicyDeploymentSummary"
          },
          "disableAppEncryptionIfDeviceEncryptionIsEnabled": true,
          "encryptAppData": true,
          "faceIdBlocked": true,
          "minimumRequiredPatchVersion": "String",
          "minimumRequiredSdkVersion": "String",
          "minimumWarningPatchVersion": "String",
          "screenCaptureBlocked": true
        }
      },
      "microsoft.graph.iosManagedAppProtection": {
        "value": {
          "appDataEncryptionType": {
            "@odata.type": "microsoft.graph.managedAppDataEncryptionType"
          },
          "apps": [
            {
              "@odata.type": "microsoft.graph.managedMobileApp"
            }
          ],
          "deployedAppCount": 0,
          "deploymentSummary": {
            "@odata.type": "microsoft.graph.managedAppPolicyDeploymentSummary"
          },
          "faceIdBlocked": true,
          "minimumRequiredSdkVersion": "String"
        }
      },
      "microsoft.graph.iosManagedAppRegistration": { },
      "microsoft.graph.managedAppConfiguration": {
        "value": {
          "customSettings": [
            {
              "@odata.type": "microsoft.graph.keyValuePair"
            }
          ]
        }
      },
      "microsoft.graph.managedAppOperation": {
        "value": {
          "displayName": "String",
          "lastModifiedDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "state": "String",
          "version": "String"
        }
      },
      "microsoft.graph.managedAppPolicyDeploymentSummary": {
        "value": {
          "configurationDeployedUserCount": 0,
          "configurationDeploymentSummaryPerApp": [
            {
              "@odata.type": "microsoft.graph.managedAppPolicyDeploymentSummaryPerApp"
            }
          ],
          "displayName": "String",
          "lastRefreshTime": "0001-01-01T00:00:00.0000000+00:00",
          "version": "String"
        }
      },
      "microsoft.graph.managedAppStatus": {
        "value": {
          "displayName": "String",
          "version": "String"
        }
      },
      "microsoft.graph.managedAppStatusRaw": {
        "value": {
          "content": {
            "@odata.type": "microsoft.graph.Json"
          }
        }
      },
      "microsoft.graph.managedMobileApp": {
        "value": {
          "mobileAppIdentifier": {
            "@odata.type": "microsoft.graph.mobileAppIdentifier"
          },
          "version": "String"
        }
      },
      "microsoft.graph.windowsInformationProtection": {
        "value": {
          "assignments": [
            {
              "@odata.type": "microsoft.graph.targetedManagedAppPolicyAssignment"
            }
          ],
          "azureRightsManagementServicesAllowed": true,
          "dataRecoveryCertificate": {
            "@odata.type": "microsoft.graph.windowsInformationProtectionDataRecoveryCertificate"
          },
          "enforcementLevel": {
            "@odata.type": "microsoft.graph.windowsInformationProtectionEnforcementLevel"
          },
          "enterpriseDomain": "String",
          "enterpriseInternalProxyServers": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionResourceCollection"
            }
          ],
          "enterpriseIPRanges": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionIPRangeCollection"
            }
          ],
          "enterpriseIPRangesAreAuthoritative": true,
          "enterpriseNetworkDomainNames": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionResourceCollection"
            }
          ],
          "enterpriseProtectedDomainNames": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionResourceCollection"
            }
          ],
          "enterpriseProxiedDomains": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionProxiedDomainCollection"
            }
          ],
          "enterpriseProxyServers": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionResourceCollection"
            }
          ],
          "enterpriseProxyServersAreAuthoritative": true,
          "exemptAppLockerFiles": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionAppLockerFile"
            }
          ],
          "exemptApps": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionApp"
            }
          ],
          "iconsVisible": true,
          "indexingEncryptedStoresOrItemsBlocked": true,
          "isAssigned": true,
          "neutralDomainResources": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionResourceCollection"
            }
          ],
          "protectedAppLockerFiles": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionAppLockerFile"
            }
          ],
          "protectedApps": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionApp"
            }
          ],
          "protectionUnderLockConfigRequired": true,
          "revokeOnUnenrollDisabled": true,
          "rightsManagementServicesTemplateId": "00000000-0000-0000-0000-000000000000",
          "smbAutoEncryptedFileExtensions": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionResourceCollection"
            }
          ]
        }
      },
      "microsoft.graph.mdmWindowsInformationProtectionPolicy": { },
      "microsoft.graph.targetedManagedAppConfiguration": {
        "value": {
          "apps": [
            {
              "@odata.type": "microsoft.graph.managedMobileApp"
            }
          ],
          "assignments": [
            {
              "@odata.type": "microsoft.graph.targetedManagedAppPolicyAssignment"
            }
          ],
          "deployedAppCount": 0,
          "deploymentSummary": {
            "@odata.type": "microsoft.graph.managedAppPolicyDeploymentSummary"
          },
          "isAssigned": true
        }
      },
      "microsoft.graph.targetedManagedAppPolicyAssignment": {
        "value": {
          "target": {
            "@odata.type": "microsoft.graph.deviceAndAppManagementAssignmentTarget"
          }
        }
      },
      "microsoft.graph.windowsInformationProtectionAppLockerFile": {
        "value": {
          "displayName": "String",
          "file": "AA==",
          "fileHash": "String",
          "version": "String"
        }
      },
      "microsoft.graph.windowsInformationProtectionPolicy": {
        "value": {
          "daysWithoutContactBeforeUnenroll": 0,
          "mdmEnrollmentUrl": "String",
          "minutesOfInactivityBeforeDeviceLock": 0,
          "numberOfPastPinsRemembered": 0,
          "passwordMaximumAttemptCount": 0,
          "pinExpirationDays": 0,
          "pinLowercaseLetters": {
            "@odata.type": "microsoft.graph.windowsInformationProtectionPinCharacterRequirements"
          },
          "pinMinimumLength": 0,
          "pinSpecialCharacters": {
            "@odata.type": "microsoft.graph.windowsInformationProtectionPinCharacterRequirements"
          },
          "pinUppercaseLetters": {
            "@odata.type": "microsoft.graph.windowsInformationProtectionPinCharacterRequirements"
          },
          "revokeOnMdmHandoffDisabled": true,
          "windowsHelloForBusinessBlocked": true
        }
      },
      "microsoft.graph.localizedNotificationMessage": {
        "value": {
          "isDefault": true,
          "lastModifiedDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "locale": "String",
          "messageTemplate": "String",
          "subject": "String"
        }
      },
      "microsoft.graph.notificationMessageTemplate": {
        "value": {
          "brandingOptions": {
            "@odata.type": "microsoft.graph.notificationTemplateBrandingOptions"
          },
          "defaultLocale": "String",
          "displayName": "String",
          "lastModifiedDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "localizedNotificationMessages": [
            {
              "@odata.type": "microsoft.graph.localizedNotificationMessage"
            }
          ]
        }
      },
      "microsoft.graph.deviceEnrollmentConfiguration": {
        "value": {
          "assignments": [
            {
              "@odata.type": "microsoft.graph.enrollmentConfigurationAssignment"
            }
          ],
          "createdDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "description": "String",
          "displayName": "String",
          "lastModifiedDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "priority": 0,
          "version": 0
        }
      },
      "microsoft.graph.deviceEnrollmentLimitConfiguration": {
        "value": {
          "limit": 0
        }
      },
      "microsoft.graph.deviceEnrollmentPlatformRestrictionsConfiguration": {
        "value": {
          "androidRestriction": {
            "@odata.type": "microsoft.graph.deviceEnrollmentPlatformRestriction"
          },
          "iosRestriction": {
            "@odata.type": "microsoft.graph.deviceEnrollmentPlatformRestriction"
          },
          "macOSRestriction": {
            "@odata.type": "microsoft.graph.deviceEnrollmentPlatformRestriction"
          },
          "windowsMobileRestriction": {
            "@odata.type": "microsoft.graph.deviceEnrollmentPlatformRestriction"
          },
          "windowsRestriction": {
            "@odata.type": "microsoft.graph.deviceEnrollmentPlatformRestriction"
          }
        }
      },
      "microsoft.graph.deviceEnrollmentWindowsHelloForBusinessConfiguration": {
        "value": {
          "enhancedBiometricsState": {
            "@odata.type": "microsoft.graph.enablement"
          },
          "pinExpirationInDays": 0,
          "pinLowercaseCharactersUsage": {
            "@odata.type": "microsoft.graph.windowsHelloForBusinessPinUsage"
          },
          "pinMaximumLength": 0,
          "pinMinimumLength": 0,
          "pinPreviousBlockCount": 0,
          "pinSpecialCharactersUsage": {
            "@odata.type": "microsoft.graph.windowsHelloForBusinessPinUsage"
          },
          "pinUppercaseCharactersUsage": {
            "@odata.type": "microsoft.graph.windowsHelloForBusinessPinUsage"
          },
          "remotePassportEnabled": true,
          "securityDeviceRequired": true,
          "state": {
            "@odata.type": "microsoft.graph.enablement"
          },
          "unlockWithBiometricsEnabled": true
        }
      },
      "microsoft.graph.deviceManagementExchangeConnector": {
        "value": {
          "connectorServerName": "String",
          "exchangeAlias": "String",
          "exchangeConnectorType": {
            "@odata.type": "microsoft.graph.deviceManagementExchangeConnectorType"
          },
          "exchangeOrganization": "String",
          "lastSyncDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "primarySmtpAddress": "String",
          "serverName": "String",
          "status": {
            "@odata.type": "microsoft.graph.deviceManagementExchangeConnectorStatus"
          },
          "version": "String"
        }
      },
      "microsoft.graph.deviceManagementPartner": {
        "value": {
          "displayName": "String",
          "isConfigured": true,
          "lastHeartbeatDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "partnerAppType": {
            "@odata.type": "microsoft.graph.deviceManagementPartnerAppType"
          },
          "partnerState": {
            "@odata.type": "microsoft.graph.deviceManagementPartnerTenantState"
          },
          "singleTenantAppId": "String",
          "whenPartnerDevicesWillBeMarkedAsNonCompliantDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "whenPartnerDevicesWillBeRemovedDateTime": "0001-01-01T00:00:00.0000000+00:00"
        }
      },
      "microsoft.graph.enrollmentConfigurationAssignment": {
        "value": {
          "target": {
            "@odata.type": "microsoft.graph.deviceAndAppManagementAssignmentTarget"
          }
        }
      },
      "microsoft.graph.mobileThreatDefenseConnector": {
        "value": {
          "androidDeviceBlockedOnMissingPartnerData": true,
          "androidEnabled": true,
          "iosDeviceBlockedOnMissingPartnerData": true,
          "iosEnabled": true,
          "lastHeartbeatDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "partnerState": {
            "@odata.type": "microsoft.graph.mobileThreatPartnerTenantState"
          },
          "partnerUnresponsivenessThresholdInDays": 0,
          "partnerUnsupportedOsVersionBlocked": true
        }
      },
      "microsoft.graph.onPremisesConditionalAccessSettings": {
        "value": {
          "enabled": true,
          "excludedGroups": [
            "00000000-0000-0000-0000-000000000000"
          ],
          "includedGroups": [
            "00000000-0000-0000-0000-000000000000"
          ],
          "overrideDefaultRule": true
        }
      },
      "microsoft.graph.organization": {
        "value": {
          "assignedPlans": [
            {
              "@odata.type": "microsoft.graph.assignedPlan"
            }
          ],
          "businessPhones": [
            "String"
          ],
          "city": "String",
          "companyLastDirSyncTime": "0001-01-01T00:00:00.0000000+00:00",
          "country": "String",
          "countryLetterCode": "String",
          "deletionTimestamp": "0001-01-01T00:00:00.0000000+00:00",
          "dirSyncEnabled": true,
          "displayName": "String",
          "extensions": [
            {
              "@odata.type": "microsoft.graph.extension"
            }
          ],
          "marketingNotificationEmails": [
            "String"
          ],
          "mobileDeviceManagementAuthority": {
            "@odata.type": "microsoft.graph.mdmAuthority"
          },
          "objectType": "String",
          "onPremisesLastSyncDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "onPremisesSyncEnabled": true,
          "postalCode": "String",
          "preferredLanguage": "String",
          "privacyProfile": {
            "@odata.type": "microsoft.graph.privacyProfile"
          },
          "provisionedPlans": [
            {
              "@odata.type": "microsoft.graph.provisionedPlan"
            }
          ],
          "securityComplianceNotificationMails": [
            "String"
          ],
          "securityComplianceNotificationPhones": [
            "String"
          ],
          "state": "String",
          "street": "String",
          "technicalNotificationMails": [
            "String"
          ],
          "telephoneNumber": "String",
          "verifiedDomains": [
            {
              "@odata.type": "microsoft.graph.verifiedDomain"
            }
          ]
        }
      },
      "microsoft.graph.vppToken": {
        "value": {
          "appleId": "String",
          "automaticallyUpdateApps": true,
          "countryOrRegion": "String",
          "expirationDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "lastModifiedDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "lastSyncDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "lastSyncStatus": {
            "@odata.type": "microsoft.graph.vppTokenSyncStatus"
          },
          "organizationName": "String",
          "state": {
            "@odata.type": "microsoft.graph.vppTokenState"
          },
          "token": "String",
          "vppTokenAccountType": {
            "@odata.type": "microsoft.graph.vppTokenAccountType"
          }
        }
      },
      "microsoft.graph.roleAssignment": {
        "value": {
          "description": "String",
          "displayName": "String",
          "resourceScopes": [
            "String"
          ],
          "roleDefinition": {
            "@odata.type": "microsoft.graph.roleDefinition"
          }
        }
      },
      "microsoft.graph.deviceAndAppManagementRoleAssignment": {
        "value": {
          "members": [
            "String"
          ]
        }
      },
      "microsoft.graph.roleDefinition": {
        "value": {
          "description": "String",
          "displayName": "String",
          "isBuiltIn": true,
          "roleAssignments": [
            {
              "@odata.type": "microsoft.graph.roleAssignment"
            }
          ],
          "rolePermissions": [
            {
              "@odata.type": "microsoft.graph.rolePermission"
            }
          ]
        }
      },
      "microsoft.graph.deviceAndAppManagementRoleDefinition": { },
      "microsoft.graph.resourceOperation": {
        "value": {
          "actionName": "String",
          "description": "String",
          "resourceName": "String"
        }
      },
      "microsoft.graph.remoteAssistancePartner": {
        "value": {
          "displayName": "String",
          "lastConnectionDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "onboardingStatus": {
            "@odata.type": "microsoft.graph.remoteAssistanceOnboardingStatus"
          },
          "onboardingUrl": "String"
        }
      },
      "microsoft.graph.deviceAppManagement": {
        "value": {
          "androidManagedAppProtections": [
            {
              "@odata.type": "microsoft.graph.androidManagedAppProtection"
            }
          ],
          "defaultManagedAppProtections": [
            {
              "@odata.type": "microsoft.graph.defaultManagedAppProtection"
            }
          ],
          "iosManagedAppProtections": [
            {
              "@odata.type": "microsoft.graph.iosManagedAppProtection"
            }
          ],
          "isEnabledForMicrosoftStoreForBusiness": true,
          "managedAppPolicies": [
            {
              "@odata.type": "microsoft.graph.managedAppPolicy"
            }
          ],
          "managedAppRegistrations": [
            {
              "@odata.type": "microsoft.graph.managedAppRegistration"
            }
          ],
          "managedAppStatuses": [
            {
              "@odata.type": "microsoft.graph.managedAppStatus"
            }
          ],
          "managedEBooks": [
            {
              "@odata.type": "microsoft.graph.managedEBook"
            }
          ],
          "mdmWindowsInformationProtectionPolicies": [
            {
              "@odata.type": "microsoft.graph.mdmWindowsInformationProtectionPolicy"
            }
          ],
          "microsoftStoreForBusinessLanguage": "String",
          "microsoftStoreForBusinessLastCompletedApplicationSyncTime": "0001-01-01T00:00:00.0000000+00:00",
          "microsoftStoreForBusinessLastSuccessfulSyncDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "mobileAppCategories": [
            {
              "@odata.type": "microsoft.graph.mobileAppCategory"
            }
          ],
          "mobileAppConfigurations": [
            {
              "@odata.type": "microsoft.graph.managedDeviceMobileAppConfiguration"
            }
          ],
          "mobileApps": [
            {
              "@odata.type": "microsoft.graph.mobileApp"
            }
          ],
          "targetedManagedAppConfigurations": [
            {
              "@odata.type": "microsoft.graph.targetedManagedAppConfiguration"
            }
          ],
          "vppTokens": [
            {
              "@odata.type": "microsoft.graph.vppToken"
            }
          ],
          "windowsInformationProtectionPolicies": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionPolicy"
            }
          ]
        }
      },
      "microsoft.graph.deviceCategory": {
        "value": {
          "description": "String",
          "displayName": "String"
        }
      },
      "microsoft.graph.deviceManagement": {
        "value": {
          "applePushNotificationCertificate": {
            "@odata.type": "microsoft.graph.applePushNotificationCertificate"
          },
          "auditEvents": [
            {
              "@odata.type": "microsoft.graph.auditEvent"
            }
          ],
          "conditionalAccessSettings": {
            "@odata.type": "microsoft.graph.onPremisesConditionalAccessSettings"
          },
          "detectedApps": [
            {
              "@odata.type": "microsoft.graph.detectedApp"
            }
          ],
          "deviceCategories": [
            {
              "@odata.type": "microsoft.graph.deviceCategory"
            }
          ],
          "deviceCompliancePolicies": [
            {
              "@odata.type": "microsoft.graph.deviceCompliancePolicy"
            }
          ],
          "deviceCompliancePolicyDeviceStateSummary": {
            "@odata.type": "microsoft.graph.deviceCompliancePolicyDeviceStateSummary"
          },
          "deviceCompliancePolicySettingStateSummaries": [
            {
              "@odata.type": "microsoft.graph.deviceCompliancePolicySettingStateSummary"
            }
          ],
          "deviceConfigurationDeviceStateSummaries": {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceStateSummary"
          },
          "deviceConfigurations": [
            {
              "@odata.type": "microsoft.graph.deviceConfiguration"
            }
          ],
          "deviceEnrollmentConfigurations": [
            {
              "@odata.type": "microsoft.graph.deviceEnrollmentConfiguration"
            }
          ],
          "deviceManagementPartners": [
            {
              "@odata.type": "microsoft.graph.deviceManagementPartner"
            }
          ],
          "exchangeConnectors": [
            {
              "@odata.type": "microsoft.graph.deviceManagementExchangeConnector"
            }
          ],
          "importedWindowsAutopilotDeviceIdentities": [
            {
              "@odata.type": "microsoft.graph.importedWindowsAutopilotDeviceIdentity"
            }
          ],
          "importedWindowsAutopilotDeviceIdentityUploads": [
            {
              "@odata.type": "microsoft.graph.importedWindowsAutopilotDeviceIdentityUpload"
            }
          ],
          "intuneBrand": {
            "@odata.type": "microsoft.graph.intuneBrand"
          },
          "iosUpdateStatuses": [
            {
              "@odata.type": "microsoft.graph.iosUpdateDeviceStatus"
            }
          ],
          "managedDeviceOverview": {
            "@odata.type": "microsoft.graph.managedDeviceOverview"
          },
          "managedDevices": [
            {
              "@odata.type": "microsoft.graph.managedDevice"
            }
          ],
          "mobileThreatDefenseConnectors": [
            {
              "@odata.type": "microsoft.graph.mobileThreatDefenseConnector"
            }
          ],
          "notificationMessageTemplates": [
            {
              "@odata.type": "microsoft.graph.notificationMessageTemplate"
            }
          ],
          "remoteAssistancePartners": [
            {
              "@odata.type": "microsoft.graph.remoteAssistancePartner"
            }
          ],
          "resourceOperations": [
            {
              "@odata.type": "microsoft.graph.resourceOperation"
            }
          ],
          "roleAssignments": [
            {
              "@odata.type": "microsoft.graph.deviceAndAppManagementRoleAssignment"
            }
          ],
          "roleDefinitions": [
            {
              "@odata.type": "microsoft.graph.roleDefinition"
            }
          ],
          "settings": {
            "@odata.type": "microsoft.graph.deviceManagementSettings"
          },
          "softwareUpdateStatusSummary": {
            "@odata.type": "microsoft.graph.softwareUpdateStatusSummary"
          },
          "subscriptionState": "String",
          "telecomExpenseManagementPartners": [
            {
              "@odata.type": "microsoft.graph.telecomExpenseManagementPartner"
            }
          ],
          "termsAndConditions": [
            {
              "@odata.type": "microsoft.graph.termsAndConditions"
            }
          ],
          "troubleshootingEvents": [
            {
              "@odata.type": "microsoft.graph.deviceManagementTroubleshootingEvent"
            }
          ],
          "windowsInformationProtectionAppLearningSummaries": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionAppLearningSummary"
            }
          ],
          "windowsInformationProtectionNetworkLearningSummaries": [
            {
              "@odata.type": "microsoft.graph.windowsInformationProtectionNetworkLearningSummary"
            }
          ]
        }
      },
      "microsoft.graph.reportRoot": { },
      "microsoft.graph.user": {
        "value": {
          "aboutMe": "String",
          "accountEnabled": true,
          "activities": [
            {
              "@odata.type": "microsoft.graph.userActivity"
            }
          ],
          "ageGroup": "String",
          "assignedLicenses": [
            {
              "@odata.type": "microsoft.graph.assignedLicense"
            }
          ],
          "assignedPlans": [
            {
              "@odata.type": "microsoft.graph.assignedPlan"
            }
          ],
          "birthday": "0001-01-01T00:00:00.0000000+00:00",
          "businessPhones": [
            "String"
          ],
          "calendar": {
            "@odata.type": "microsoft.graph.calendar"
          },
          "calendarGroups": [
            {
              "@odata.type": "microsoft.graph.calendarGroup"
            }
          ],
          "calendars": [
            {
              "@odata.type": "microsoft.graph.calendar"
            }
          ],
          "calendarView": [
            {
              "@odata.type": "microsoft.graph.event"
            }
          ],
          "city": "String",
          "companyName": "String",
          "consentProvidedForMinor": "String",
          "contactFolders": [
            {
              "@odata.type": "microsoft.graph.contactFolder"
            }
          ],
          "contacts": [
            {
              "@odata.type": "microsoft.graph.contact"
            }
          ],
          "country": "String",
          "createdObjects": [
            {
              "@odata.type": "microsoft.graph.directoryObject"
            }
          ],
          "department": "String",
          "deviceEnrollmentLimit": 0,
          "deviceManagementTroubleshootingEvents": [
            {
              "@odata.type": "microsoft.graph.deviceManagementTroubleshootingEvent"
            }
          ],
          "directReports": [
            {
              "@odata.type": "microsoft.graph.directoryObject"
            }
          ],
          "displayName": "String",
          "drive": {
            "@odata.type": "microsoft.graph.drive"
          },
          "drives": [
            {
              "@odata.type": "microsoft.graph.drive"
            }
          ],
          "events": [
            {
              "@odata.type": "microsoft.graph.event"
            }
          ],
          "extensions": [
            {
              "@odata.type": "microsoft.graph.extension"
            }
          ],
          "givenName": "String",
          "hireDate": "0001-01-01T00:00:00.0000000+00:00",
          "imAddresses": [
            "String"
          ],
          "inferenceClassification": {
            "@odata.type": "microsoft.graph.inferenceClassification"
          },
          "interests": [
            "String"
          ],
          "jobTitle": "String",
          "legalAgeGroupClassification": "String",
          "licenseDetails": [
            {
              "@odata.type": "microsoft.graph.licenseDetails"
            }
          ],
          "mail": "String",
          "mailboxSettings": {
            "@odata.type": "microsoft.graph.mailboxSettings"
          },
          "mailFolders": [
            {
              "@odata.type": "microsoft.graph.mailFolder"
            }
          ],
          "mailNickname": "String",
          "managedAppRegistrations": [
            {
              "@odata.type": "microsoft.graph.managedAppRegistration"
            }
          ],
          "managedDevices": [
            {
              "@odata.type": "microsoft.graph.managedDevice"
            }
          ],
          "manager": {
            "@odata.type": "microsoft.graph.directoryObject"
          },
          "memberOf": [
            {
              "@odata.type": "microsoft.graph.directoryObject"
            }
          ],
          "messages": [
            {
              "@odata.type": "microsoft.graph.message"
            }
          ],
          "mobilePhone": "String",
          "mySite": "String",
          "officeLocation": "String",
          "onenote": {
            "@odata.type": "microsoft.graph.onenote"
          },
          "onPremisesDomainName": "String",
          "onPremisesExtensionAttributes": {
            "@odata.type": "microsoft.graph.onPremisesExtensionAttributes"
          },
          "onPremisesImmutableId": "String",
          "onPremisesLastSyncDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "onPremisesProvisioningErrors": [
            {
              "@odata.type": "microsoft.graph.onPremisesProvisioningError"
            }
          ],
          "onPremisesSamAccountName": "String",
          "onPremisesSecurityIdentifier": "String",
          "onPremisesSyncEnabled": true,
          "onPremisesUserPrincipalName": "String",
          "outlook": {
            "@odata.type": "microsoft.graph.outlookUser"
          },
          "ownedDevices": [
            {
              "@odata.type": "microsoft.graph.directoryObject"
            }
          ],
          "ownedObjects": [
            {
              "@odata.type": "microsoft.graph.directoryObject"
            }
          ],
          "passwordPolicies": "String",
          "passwordProfile": {
            "@odata.type": "microsoft.graph.passwordProfile"
          },
          "pastProjects": [
            "String"
          ],
          "people": [
            {
              "@odata.type": "microsoft.graph.person"
            }
          ],
          "photo": {
            "@odata.type": "microsoft.graph.profilePhoto"
          },
          "planner": {
            "@odata.type": "microsoft.graph.plannerUser"
          },
          "postalCode": "String",
          "preferredLanguage": "String",
          "preferredName": "String",
          "provisionedPlans": [
            {
              "@odata.type": "microsoft.graph.provisionedPlan"
            }
          ],
          "proxyAddresses": [
            "String"
          ],
          "registeredDevices": [
            {
              "@odata.type": "microsoft.graph.directoryObject"
            }
          ],
          "responsibilities": [
            "String"
          ],
          "schools": [
            "String"
          ],
          "skills": [
            "String"
          ],
          "state": "String",
          "streetAddress": "String",
          "surname": "String",
          "usageLocation": "String",
          "userPrincipalName": "String",
          "userType": "String"
        }
      },
      "microsoft.graph.telecomExpenseManagementPartner": {
        "value": {
          "appAuthorized": true,
          "displayName": "String",
          "enabled": true,
          "lastConnectionDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "url": "String"
        }
      },
      "microsoft.graph.deviceManagementTroubleshootingEvent": {
        "value": {
          "correlationId": "String",
          "eventDateTime": "0001-01-01T00:00:00.0000000+00:00"
        }
      },
      "microsoft.graph.enrollmentTroubleshootingEvent": {
        "value": {
          "deviceId": "String",
          "enrollmentType": {
            "@odata.type": "microsoft.graph.deviceEnrollmentType"
          },
          "failureCategory": {
            "@odata.type": "microsoft.graph.deviceEnrollmentFailureReason"
          },
          "failureReason": "String",
          "managedDeviceIdentifier": "String",
          "operatingSystem": "String",
          "osVersion": "String",
          "userId": "String"
        }
      },
      "microsoft.graph.windowsInformationProtectionAppLearningSummary": {
        "value": {
          "applicationName": "String",
          "applicationType": {
            "@odata.type": "microsoft.graph.applicationType"
          },
          "deviceCount": 0
        }
      },
      "microsoft.graph.windowsInformationProtectionNetworkLearningSummary": {
        "value": {
          "deviceCount": 0,
          "url": "String"
        }
      },
      "microsoft.graph.invitation": {
        "value": {
          "invitedUser": {
            "@odata.type": "microsoft.graph.user"
          },
          "invitedUserDisplayName": "String",
          "invitedUserEmailAddress": "String",
          "invitedUserMessageInfo": {
            "@odata.type": "microsoft.graph.invitedUserMessageInfo"
          },
          "invitedUserType": "String",
          "inviteRedeemUrl": "String",
          "inviteRedirectUrl": "String",
          "sendInvitationMessage": true,
          "status": "String"
        }
      },
      "microsoft.graph.itemAttachment": {
        "value": {
          "item": {
            "@odata.type": "microsoft.graph.outlookItem"
          }
        }
      },
      "microsoft.graph.licenseDetails": {
        "value": {
          "servicePlans": [
            {
              "@odata.type": "microsoft.graph.servicePlanInfo"
            }
          ],
          "skuId": "00000000-0000-0000-0000-000000000000",
          "skuPartNumber": "String"
        }
      },
      "microsoft.graph.list": {
        "value": {
          "columns": [
            {
              "@odata.type": "microsoft.graph.columnDefinition"
            }
          ],
          "contentTypes": [
            {
              "@odata.type": "microsoft.graph.contentType"
            }
          ],
          "displayName": "String",
          "drive": {
            "@odata.type": "microsoft.graph.drive"
          },
          "items": [
            {
              "@odata.type": "microsoft.graph.listItem"
            }
          ],
          "list": {
            "@odata.type": "microsoft.graph.listInfo"
          },
          "sharepointIds": {
            "@odata.type": "microsoft.graph.sharepointIds"
          },
          "system": {
            "@odata.type": "microsoft.graph.systemFacet"
          }
        }
      },
      "microsoft.graph.listItem": {
        "value": {
          "contentType": {
            "@odata.type": "microsoft.graph.contentTypeInfo"
          },
          "driveItem": {
            "@odata.type": "microsoft.graph.driveItem"
          },
          "fields": {
            "@odata.type": "microsoft.graph.fieldValueSet"
          },
          "sharepointIds": {
            "@odata.type": "microsoft.graph.sharepointIds"
          },
          "versions": [
            {
              "@odata.type": "microsoft.graph.listItemVersion"
            }
          ]
        }
      },
      "microsoft.graph.listItemVersion": {
        "value": {
          "fields": {
            "@odata.type": "microsoft.graph.fieldValueSet"
          },
          "published": {
            "@odata.type": "microsoft.graph.publicationFacet"
          }
        }
      },
      "microsoft.graph.mailFolder": {
        "value": {
          "childFolderCount": 0,
          "childFolders": [
            {
              "@odata.type": "microsoft.graph.mailFolder"
            }
          ],
          "displayName": "String",
          "messageRules": [
            {
              "@odata.type": "microsoft.graph.messageRule"
            }
          ],
          "messages": [
            {
              "@odata.type": "microsoft.graph.message"
            }
          ],
          "multiValueExtendedProperties": [
            {
              "@odata.type": "microsoft.graph.multiValueLegacyExtendedProperty"
            }
          ],
          "parentFolderId": "String",
          "singleValueExtendedProperties": [
            {
              "@odata.type": "microsoft.graph.singleValueLegacyExtendedProperty"
            }
          ],
          "totalItemCount": 0,
          "unreadItemCount": 0
        }
      },
      "microsoft.graph.messageRule": {
        "value": {
          "actions": {
            "@odata.type": "microsoft.graph.messageRuleActions"
          },
          "conditions": {
            "@odata.type": "microsoft.graph.messageRulePredicates"
          },
          "displayName": "String",
          "exceptions": {
            "@odata.type": "microsoft.graph.messageRulePredicates"
          },
          "hasError": true,
          "isEnabled": true,
          "isReadOnly": true,
          "sequence": 0
        }
      },
      "microsoft.graph.multiValueLegacyExtendedProperty": {
        "value": {
          "value": [
            "String"
          ]
        }
      },
      "microsoft.graph.workbookNamedItem": {
        "value": {
          "comment": "String",
          "name": "String",
          "scope": "String",
          "type": "String",
          "value": {
            "@odata.type": "microsoft.graph.Json"
          },
          "visible": true,
          "worksheet": {
            "@odata.type": "microsoft.graph.workbookWorksheet"
          }
        }
      },
      "microsoft.graph.onenoteEntityBaseModel": {
        "value": {
          "self": "String"
        }
      },
      "microsoft.graph.onenoteEntitySchemaObjectModel": {
        "value": {
          "createdDateTime": "0001-01-01T00:00:00.0000000+00:00"
        }
      },
      "microsoft.graph.onenoteEntityHierarchyModel": {
        "value": {
          "createdBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "displayName": "String",
          "lastModifiedBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "lastModifiedDateTime": "0001-01-01T00:00:00.0000000+00:00"
        }
      },
      "microsoft.graph.notebook": {
        "value": {
          "isDefault": true,
          "isShared": true,
          "links": {
            "@odata.type": "microsoft.graph.notebookLinks"
          },
          "sectionGroups": [
            {
              "@odata.type": "microsoft.graph.sectionGroup"
            }
          ],
          "sectionGroupsUrl": "String",
          "sections": [
            {
              "@odata.type": "microsoft.graph.onenoteSection"
            }
          ],
          "sectionsUrl": "String",
          "userRole": {
            "@odata.type": "microsoft.graph.onenoteUserRole"
          }
        }
      },
      "microsoft.graph.onenote": {
        "value": {
          "notebooks": [
            {
              "@odata.type": "microsoft.graph.notebook"
            }
          ],
          "operations": [
            {
              "@odata.type": "microsoft.graph.onenoteOperation"
            }
          ],
          "pages": [
            {
              "@odata.type": "microsoft.graph.onenotePage"
            }
          ],
          "resources": [
            {
              "@odata.type": "microsoft.graph.onenoteResource"
            }
          ],
          "sectionGroups": [
            {
              "@odata.type": "microsoft.graph.sectionGroup"
            }
          ],
          "sections": [
            {
              "@odata.type": "microsoft.graph.onenoteSection"
            }
          ]
        }
      },
      "microsoft.graph.operation": {
        "value": {
          "createdDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "lastActionDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "status": {
            "@odata.type": "microsoft.graph.operationStatus"
          }
        }
      },
      "microsoft.graph.onenoteOperation": {
        "value": {
          "error": {
            "@odata.type": "microsoft.graph.onenoteOperationError"
          },
          "percentComplete": "String",
          "resourceId": "String",
          "resourceLocation": "String"
        }
      },
      "microsoft.graph.openTypeExtension": {
        "value": {
          "extensionName": "String"
        }
      },
      "microsoft.graph.outlookCategory": {
        "value": {
          "color": {
            "@odata.type": "microsoft.graph.categoryColor"
          },
          "displayName": "String"
        }
      },
      "microsoft.graph.outlookUser": {
        "value": {
          "masterCategories": [
            {
              "@odata.type": "microsoft.graph.outlookCategory"
            }
          ]
        }
      },
      "microsoft.graph.onenotePage": {
        "value": {
          "content": "Stream",
          "contentUrl": "String",
          "createdByAppId": "String",
          "lastModifiedDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "level": 0,
          "links": {
            "@odata.type": "microsoft.graph.pageLinks"
          },
          "order": 0,
          "parentNotebook": {
            "@odata.type": "microsoft.graph.notebook"
          },
          "parentSection": {
            "@odata.type": "microsoft.graph.onenoteSection"
          },
          "title": "String"
        }
      },
      "microsoft.graph.permission": {
        "value": {
          "grantedTo": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "inheritedFrom": {
            "@odata.type": "microsoft.graph.itemReference"
          },
          "invitation": {
            "@odata.type": "microsoft.graph.sharingInvitation"
          },
          "link": {
            "@odata.type": "microsoft.graph.sharingLink"
          },
          "roles": [
            "String"
          ],
          "shareId": "String"
        }
      },
      "microsoft.graph.person": {
        "value": {
          "birthday": "String",
          "companyName": "String",
          "department": "String",
          "displayName": "String",
          "givenName": "String",
          "imAddress": "String",
          "isFavorite": true,
          "jobTitle": "String",
          "officeLocation": "String",
          "personNotes": "String",
          "personType": {
            "@odata.type": "microsoft.graph.personType"
          },
          "phones": [
            {
              "@odata.type": "microsoft.graph.phone"
            }
          ],
          "postalAddresses": [
            {
              "@odata.type": "microsoft.graph.location"
            }
          ],
          "profession": "String",
          "scoredEmailAddresses": [
            {
              "@odata.type": "microsoft.graph.scoredEmailAddress"
            }
          ],
          "surname": "String",
          "userPrincipalName": "String",
          "websites": [
            {
              "@odata.type": "microsoft.graph.website"
            }
          ],
          "yomiCompany": "String"
        }
      },
      "microsoft.graph.planner": {
        "value": {
          "buckets": [
            {
              "@odata.type": "microsoft.graph.plannerBucket"
            }
          ],
          "plans": [
            {
              "@odata.type": "microsoft.graph.plannerPlan"
            }
          ],
          "tasks": [
            {
              "@odata.type": "microsoft.graph.plannerTask"
            }
          ]
        }
      },
      "microsoft.graph.plannerAssignedToTaskBoardTaskFormat": {
        "value": {
          "orderHintsByAssignee": {
            "@odata.type": "microsoft.graph.plannerOrderHintsByAssignee"
          },
          "unassignedOrderHint": "String"
        }
      },
      "microsoft.graph.plannerBucket": {
        "value": {
          "name": "String",
          "orderHint": "String",
          "planId": "String",
          "tasks": [
            {
              "@odata.type": "microsoft.graph.plannerTask"
            }
          ]
        }
      },
      "microsoft.graph.plannerBucketTaskBoardTaskFormat": {
        "value": {
          "orderHint": "String"
        }
      },
      "microsoft.graph.plannerGroup": {
        "value": {
          "plans": [
            {
              "@odata.type": "microsoft.graph.plannerPlan"
            }
          ]
        }
      },
      "microsoft.graph.plannerPlan": {
        "value": {
          "buckets": [
            {
              "@odata.type": "microsoft.graph.plannerBucket"
            }
          ],
          "createdBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "createdDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "details": {
            "@odata.type": "microsoft.graph.plannerPlanDetails"
          },
          "owner": "String",
          "tasks": [
            {
              "@odata.type": "microsoft.graph.plannerTask"
            }
          ],
          "title": "String"
        }
      },
      "microsoft.graph.plannerPlanDetails": {
        "value": {
          "categoryDescriptions": {
            "@odata.type": "microsoft.graph.plannerCategoryDescriptions"
          },
          "sharedWith": {
            "@odata.type": "microsoft.graph.plannerUserIds"
          }
        }
      },
      "microsoft.graph.plannerProgressTaskBoardTaskFormat": {
        "value": {
          "orderHint": "String"
        }
      },
      "microsoft.graph.plannerTask": {
        "value": {
          "activeChecklistItemCount": 0,
          "appliedCategories": {
            "@odata.type": "microsoft.graph.plannerAppliedCategories"
          },
          "assignedToTaskBoardFormat": {
            "@odata.type": "microsoft.graph.plannerAssignedToTaskBoardTaskFormat"
          },
          "assigneePriority": "String",
          "assignments": {
            "@odata.type": "microsoft.graph.plannerAssignments"
          },
          "bucketId": "String",
          "bucketTaskBoardFormat": {
            "@odata.type": "microsoft.graph.plannerBucketTaskBoardTaskFormat"
          },
          "checklistItemCount": 0,
          "completedBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "completedDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "conversationThreadId": "String",
          "createdBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "createdDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "details": {
            "@odata.type": "microsoft.graph.plannerTaskDetails"
          },
          "dueDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "hasDescription": true,
          "orderHint": "String",
          "percentComplete": 0,
          "planId": "String",
          "previewType": {
            "@odata.type": "microsoft.graph.plannerPreviewType"
          },
          "progressTaskBoardFormat": {
            "@odata.type": "microsoft.graph.plannerProgressTaskBoardTaskFormat"
          },
          "referenceCount": 0,
          "startDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "title": "String"
        }
      },
      "microsoft.graph.plannerTaskDetails": {
        "value": {
          "checklist": {
            "@odata.type": "microsoft.graph.plannerChecklistItems"
          },
          "description": "String",
          "previewType": "String",
          "references": {
            "@odata.type": "microsoft.graph.plannerExternalReferences"
          }
        }
      },
      "microsoft.graph.plannerUser": {
        "value": {
          "plans": [
            {
              "@odata.type": "microsoft.graph.plannerPlan"
            }
          ],
          "tasks": [
            {
              "@odata.type": "microsoft.graph.plannerTask"
            }
          ]
        }
      },
      "microsoft.graph.post": {
        "value": {
          "attachments": [
            {
              "@odata.type": "microsoft.graph.attachment"
            }
          ],
          "body": {
            "@odata.type": "microsoft.graph.itemBody"
          },
          "conversationId": "String",
          "conversationThreadId": "String",
          "extensions": [
            {
              "@odata.type": "microsoft.graph.extension"
            }
          ],
          "from": {
            "@odata.type": "microsoft.graph.recipient"
          },
          "hasAttachments": true,
          "inReplyTo": {
            "@odata.type": "microsoft.graph.post"
          },
          "multiValueExtendedProperties": [
            {
              "@odata.type": "microsoft.graph.multiValueLegacyExtendedProperty"
            }
          ],
          "newParticipants": [
            {
              "@odata.type": "microsoft.graph.recipient"
            }
          ],
          "receivedDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "sender": {
            "@odata.type": "microsoft.graph.recipient"
          },
          "singleValueExtendedProperties": [
            {
              "@odata.type": "microsoft.graph.singleValueLegacyExtendedProperty"
            }
          ]
        }
      },
      "microsoft.graph.profilePhoto": {
        "value": {
          "height": 0,
          "width": 0
        }
      },
      "microsoft.graph.userActivity": {
        "value": {
          "activationUrl": "String",
          "activitySourceHost": "String",
          "appActivityId": "String",
          "appDisplayName": "String",
          "contentInfo": {
            "@odata.type": "microsoft.graph.Json"
          },
          "contentUrl": "String",
          "createdDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "expirationDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "fallbackUrl": "String",
          "historyItems": [
            {
              "@odata.type": "microsoft.graph.activityHistoryItem"
            }
          ],
          "lastModifiedDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "status": {
            "@odata.type": "microsoft.graph.status"
          },
          "userTimezone": "String",
          "visualElements": {
            "@odata.type": "microsoft.graph.visualInfo"
          }
        }
      },
      "microsoft.graph.activityHistoryItem": {
        "value": {
          "activeDurationSeconds": 0,
          "activity": {
            "@odata.type": "microsoft.graph.userActivity"
          },
          "createdDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "expirationDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "lastActiveDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "lastModifiedDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "startedDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "status": {
            "@odata.type": "microsoft.graph.status"
          },
          "userTimezone": "String"
        }
      },
      "microsoft.graph.workbookRange": {
        "value": {
          "address": "String",
          "addressLocal": "String",
          "cellCount": 0,
          "columnCount": 0,
          "columnHidden": true,
          "columnIndex": 0,
          "format": {
            "@odata.type": "microsoft.graph.workbookRangeFormat"
          },
          "formulas": {
            "@odata.type": "microsoft.graph.Json"
          },
          "formulasLocal": {
            "@odata.type": "microsoft.graph.Json"
          },
          "formulasR1C1": {
            "@odata.type": "microsoft.graph.Json"
          },
          "hidden": true,
          "numberFormat": {
            "@odata.type": "microsoft.graph.Json"
          },
          "rowCount": 0,
          "rowHidden": true,
          "rowIndex": 0,
          "sort": {
            "@odata.type": "microsoft.graph.workbookRangeSort"
          },
          "text": {
            "@odata.type": "microsoft.graph.Json"
          },
          "values": {
            "@odata.type": "microsoft.graph.Json"
          },
          "valueTypes": {
            "@odata.type": "microsoft.graph.Json"
          },
          "worksheet": {
            "@odata.type": "microsoft.graph.workbookWorksheet"
          }
        }
      },
      "microsoft.graph.workbookRangeBorder": {
        "value": {
          "color": "String",
          "sideIndex": "String",
          "style": "String",
          "weight": "String"
        }
      },
      "microsoft.graph.workbookRangeFill": {
        "value": {
          "color": "String"
        }
      },
      "microsoft.graph.workbookRangeFont": {
        "value": {
          "bold": true,
          "color": "String",
          "italic": true,
          "name": "String",
          "size": 0,
          "underline": "String"
        }
      },
      "microsoft.graph.workbookRangeFormat": {
        "value": {
          "borders": [
            {
              "@odata.type": "microsoft.graph.workbookRangeBorder"
            }
          ],
          "columnWidth": 0,
          "fill": {
            "@odata.type": "microsoft.graph.workbookRangeFill"
          },
          "font": {
            "@odata.type": "microsoft.graph.workbookRangeFont"
          },
          "horizontalAlignment": "String",
          "protection": {
            "@odata.type": "microsoft.graph.workbookFormatProtection"
          },
          "rowHeight": 0,
          "verticalAlignment": "String",
          "wrapText": true
        }
      },
      "microsoft.graph.workbookRangeSort": { },
      "microsoft.graph.referenceAttachment": { },
      "microsoft.graph.onenoteResource": {
        "value": {
          "content": "Stream",
          "contentUrl": "String"
        }
      },
      "microsoft.graph.schemaExtension": {
        "value": {
          "description": "String",
          "owner": "String",
          "properties": [
            {
              "@odata.type": "microsoft.graph.extensionSchemaProperty"
            }
          ],
          "status": "String",
          "targetTypes": [
            "String"
          ]
        }
      },
      "microsoft.graph.onenoteSection": {
        "value": {
          "isDefault": true,
          "links": {
            "@odata.type": "microsoft.graph.sectionLinks"
          },
          "pages": [
            {
              "@odata.type": "microsoft.graph.onenotePage"
            }
          ],
          "pagesUrl": "String",
          "parentNotebook": {
            "@odata.type": "microsoft.graph.notebook"
          },
          "parentSectionGroup": {
            "@odata.type": "microsoft.graph.sectionGroup"
          }
        }
      },
      "microsoft.graph.sectionGroup": {
        "value": {
          "parentNotebook": {
            "@odata.type": "microsoft.graph.notebook"
          },
          "parentSectionGroup": {
            "@odata.type": "microsoft.graph.sectionGroup"
          },
          "sectionGroups": [
            {
              "@odata.type": "microsoft.graph.sectionGroup"
            }
          ],
          "sectionGroupsUrl": "String",
          "sections": [
            {
              "@odata.type": "microsoft.graph.onenoteSection"
            }
          ],
          "sectionsUrl": "String"
        }
      },
      "microsoft.graph.security": {
        "value": {
          "alerts": [
            {
              "@odata.type": "microsoft.graph.alert"
            }
          ]
        }
      },
      "microsoft.graph.sharedDriveItem": {
        "value": {
          "driveItem": {
            "@odata.type": "microsoft.graph.driveItem"
          },
          "items": [
            {
              "@odata.type": "microsoft.graph.driveItem"
            }
          ],
          "list": {
            "@odata.type": "microsoft.graph.list"
          },
          "listItem": {
            "@odata.type": "microsoft.graph.listItem"
          },
          "owner": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "root": {
            "@odata.type": "microsoft.graph.driveItem"
          },
          "site": {
            "@odata.type": "microsoft.graph.site"
          }
        }
      },
      "microsoft.graph.singleValueLegacyExtendedProperty": {
        "value": {
          "value": "String"
        }
      },
      "microsoft.graph.site": {
        "value": {
          "columns": [
            {
              "@odata.type": "microsoft.graph.columnDefinition"
            }
          ],
          "contentTypes": [
            {
              "@odata.type": "microsoft.graph.contentType"
            }
          ],
          "displayName": "String",
          "drive": {
            "@odata.type": "microsoft.graph.drive"
          },
          "drives": [
            {
              "@odata.type": "microsoft.graph.drive"
            }
          ],
          "items": [
            {
              "@odata.type": "microsoft.graph.baseItem"
            }
          ],
          "lists": [
            {
              "@odata.type": "microsoft.graph.list"
            }
          ],
          "onenote": {
            "@odata.type": "microsoft.graph.onenote"
          },
          "root": {
            "@odata.type": "microsoft.graph.root"
          },
          "sharepointIds": {
            "@odata.type": "microsoft.graph.sharepointIds"
          },
          "siteCollection": {
            "@odata.type": "microsoft.graph.siteCollection"
          },
          "sites": [
            {
              "@odata.type": "microsoft.graph.site"
            }
          ]
        }
      },
      "microsoft.graph.subscribedSku": {
        "value": {
          "appliesTo": "String",
          "capabilityStatus": "String",
          "consumedUnits": 0,
          "prepaidUnits": {
            "@odata.type": "microsoft.graph.licenseUnitsDetail"
          },
          "servicePlans": [
            {
              "@odata.type": "microsoft.graph.servicePlanInfo"
            }
          ],
          "skuId": "00000000-0000-0000-0000-000000000000",
          "skuPartNumber": "String"
        }
      },
      "microsoft.graph.subscription": {
        "value": {
          "applicationId": "String",
          "changeType": "String",
          "clientState": "String",
          "creatorId": "String",
          "expirationDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "notificationUrl": "String",
          "resource": "String"
        }
      },
      "microsoft.graph.workbookTable": {
        "value": {
          "columns": [
            {
              "@odata.type": "microsoft.graph.workbookTableColumn"
            }
          ],
          "highlightFirstColumn": true,
          "highlightLastColumn": true,
          "legacyId": "String",
          "name": "String",
          "rows": [
            {
              "@odata.type": "microsoft.graph.workbookTableRow"
            }
          ],
          "showBandedColumns": true,
          "showBandedRows": true,
          "showFilterButton": true,
          "showHeaders": true,
          "showTotals": true,
          "sort": {
            "@odata.type": "microsoft.graph.workbookTableSort"
          },
          "style": "String",
          "worksheet": {
            "@odata.type": "microsoft.graph.workbookWorksheet"
          }
        }
      },
      "microsoft.graph.workbookTableColumn": {
        "value": {
          "filter": {
            "@odata.type": "microsoft.graph.workbookFilter"
          },
          "index": 0,
          "name": "String",
          "values": {
            "@odata.type": "microsoft.graph.Json"
          }
        }
      },
      "microsoft.graph.workbookTableRow": {
        "value": {
          "index": 0,
          "values": {
            "@odata.type": "microsoft.graph.Json"
          }
        }
      },
      "microsoft.graph.workbookTableSort": {
        "value": {
          "fields": [
            {
              "@odata.type": "microsoft.graph.workbookSortField"
            }
          ],
          "matchCase": true,
          "method": "String"
        }
      },
      "microsoft.graph.thumbnailSet": {
        "value": {
          "large": {
            "@odata.type": "microsoft.graph.thumbnail"
          },
          "medium": {
            "@odata.type": "microsoft.graph.thumbnail"
          },
          "small": {
            "@odata.type": "microsoft.graph.thumbnail"
          },
          "source": {
            "@odata.type": "microsoft.graph.thumbnail"
          }
        }
      },
      "microsoft.graph.workbook": {
        "value": {
          "names": [
            {
              "@odata.type": "microsoft.graph.workbookNamedItem"
            }
          ],
          "tables": [
            {
              "@odata.type": "microsoft.graph.workbookTable"
            }
          ],
          "worksheets": [
            {
              "@odata.type": "microsoft.graph.workbookWorksheet"
            }
          ]
        }
      },
      "microsoft.graph.workbookPivotTable": {
        "value": {
          "name": "String",
          "worksheet": {
            "@odata.type": "microsoft.graph.workbookWorksheet"
          }
        }
      },
      "microsoft.graph.workbookRangeView": {
        "value": {
          "cellAddresses": {
            "@odata.type": "microsoft.graph.Json"
          },
          "columnCount": 0,
          "formulas": {
            "@odata.type": "microsoft.graph.Json"
          },
          "formulasLocal": {
            "@odata.type": "microsoft.graph.Json"
          },
          "formulasR1C1": {
            "@odata.type": "microsoft.graph.Json"
          },
          "index": 0,
          "numberFormat": {
            "@odata.type": "microsoft.graph.Json"
          },
          "rowCount": 0,
          "rows": [
            {
              "@odata.type": "microsoft.graph.workbookRangeView"
            }
          ],
          "text": {
            "@odata.type": "microsoft.graph.Json"
          },
          "values": {
            "@odata.type": "microsoft.graph.Json"
          },
          "valueTypes": {
            "@odata.type": "microsoft.graph.Json"
          }
        }
      },
      "microsoft.graph.workbookWorksheet": {
        "value": {
          "charts": [
            {
              "@odata.type": "microsoft.graph.workbookChart"
            }
          ],
          "name": "String",
          "names": [
            {
              "@odata.type": "microsoft.graph.workbookNamedItem"
            }
          ],
          "pivotTables": [
            {
              "@odata.type": "microsoft.graph.workbookPivotTable"
            }
          ],
          "position": 0,
          "protection": {
            "@odata.type": "microsoft.graph.workbookWorksheetProtection"
          },
          "tables": [
            {
              "@odata.type": "microsoft.graph.workbookTable"
            }
          ],
          "visibility": "String"
        }
      },
      "microsoft.graph.workbookWorksheetProtection": {
        "value": {
          "options": {
            "@odata.type": "microsoft.graph.workbookWorksheetProtectionOptions"
          },
          "protected": true
        }
      },
      "microsoft.graph.driveItemUploadableProperties": {
        "value": {
          "description": "String",
          "fileSystemInfo": {
            "@odata.type": "microsoft.graph.fileSystemInfo"
          },
          "name": "String"
        }
      },
      "microsoft.graph.alert": {
        "value": {
          "activityGroupName": "String",
          "assignedTo": "String",
          "azureSubscriptionId": "String",
          "azureTenantId": "String",
          "category": "String",
          "closedDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "cloudAppStates": [
            {
              "@odata.type": "microsoft.graph.cloudAppSecurityState"
            }
          ],
          "comments": [
            "String"
          ],
          "confidence": 0,
          "createdDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "description": "String",
          "detectionIds": [
            "String"
          ],
          "eventDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "feedback": {
            "@odata.type": "microsoft.graph.alertFeedback"
          },
          "fileStates": [
            {
              "@odata.type": "microsoft.graph.fileSecurityState"
            }
          ],
          "hostStates": [
            {
              "@odata.type": "microsoft.graph.hostSecurityState"
            }
          ],
          "id": "String",
          "lastModifiedDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "malwareStates": [
            {
              "@odata.type": "microsoft.graph.malwareState"
            }
          ],
          "networkConnections": [
            {
              "@odata.type": "microsoft.graph.networkConnection"
            }
          ],
          "processes": [
            {
              "@odata.type": "microsoft.graph.process"
            }
          ],
          "recommendedActions": [
            "String"
          ],
          "registryKeyStates": [
            {
              "@odata.type": "microsoft.graph.registryKeyState"
            }
          ],
          "severity": {
            "@odata.type": "microsoft.graph.alertSeverity"
          },
          "sourceMaterials": [
            "String"
          ],
          "status": {
            "@odata.type": "microsoft.graph.alertStatus"
          },
          "tags": [
            "String"
          ],
          "title": "String",
          "triggers": [
            {
              "@odata.type": "microsoft.graph.alertTrigger"
            }
          ],
          "userStates": [
            {
              "@odata.type": "microsoft.graph.userSecurityState"
            }
          ],
          "vendorInformation": {
            "@odata.type": "microsoft.graph.securityVendorInformation"
          },
          "vulnerabilityStates": [
            {
              "@odata.type": "microsoft.graph.vulnerabilityState"
            }
          ]
        }
      },
      "microsoft.graph.alertTrigger": {
        "value": {
          "name": "String",
          "type": "String",
          "value": "String"
        }
      },
      "microsoft.graph.alternativeSecurityId": {
        "value": {
          "identityProvider": "String",
          "key": "AA==",
          "type": 0
        }
      },
      "microsoft.graph.assignedLicense": {
        "value": {
          "disabledPlans": [
            "00000000-0000-0000-0000-000000000000"
          ],
          "skuId": "00000000-0000-0000-0000-000000000000"
        }
      },
      "microsoft.graph.assignedPlan": {
        "value": {
          "assignedDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "capabilityStatus": "String",
          "service": "String",
          "servicePlanId": "00000000-0000-0000-0000-000000000000"
        }
      },
      "microsoft.graph.recipient": {
        "value": {
          "emailAddress": {
            "@odata.type": "microsoft.graph.emailAddress"
          }
        }
      },
      "microsoft.graph.attendeeBase": {
        "value": {
          "type": {
            "@odata.type": "microsoft.graph.attendeeType"
          }
        }
      },
      "microsoft.graph.attendee": {
        "value": {
          "status": {
            "@odata.type": "microsoft.graph.responseStatus"
          }
        }
      },
      "microsoft.graph.attendeeAvailability": {
        "value": {
          "attendee": {
            "@odata.type": "microsoft.graph.attendeeBase"
          },
          "availability": {
            "@odata.type": "microsoft.graph.freeBusyStatus"
          }
        }
      },
      "microsoft.graph.audio": {
        "value": {
          "album": "String",
          "albumArtist": "String",
          "artist": "String",
          "bitrate": 0,
          "composers": "String",
          "copyright": "String",
          "disc": 0,
          "discCount": 0,
          "duration": 0,
          "genre": "String",
          "hasDrm": true,
          "isVariableBitrate": true,
          "title": "String",
          "track": 0,
          "trackCount": 0,
          "year": 0
        }
      },
      "microsoft.graph.automaticRepliesMailTips": {
        "value": {
          "message": "String",
          "messageLanguage": {
            "@odata.type": "microsoft.graph.localeInfo"
          },
          "scheduledEndTime": {
            "@odata.type": "microsoft.graph.dateTimeTimeZone"
          },
          "scheduledStartTime": {
            "@odata.type": "microsoft.graph.dateTimeTimeZone"
          }
        }
      },
      "microsoft.graph.automaticRepliesSetting": {
        "value": {
          "externalAudience": {
            "@odata.type": "microsoft.graph.externalAudienceScope"
          },
          "externalReplyMessage": "String",
          "internalReplyMessage": "String",
          "scheduledEndDateTime": {
            "@odata.type": "microsoft.graph.dateTimeTimeZone"
          },
          "scheduledStartDateTime": {
            "@odata.type": "microsoft.graph.dateTimeTimeZone"
          },
          "status": {
            "@odata.type": "microsoft.graph.automaticRepliesStatus"
          }
        }
      },
      "microsoft.graph.booleanColumn": { },
      "microsoft.graph.calculatedColumn": {
        "value": {
          "format": "String",
          "formula": "String",
          "outputType": "String"
        }
      },
      "microsoft.graph.choiceColumn": {
        "value": {
          "allowTextEntry": true,
          "choices": [
            "String"
          ],
          "displayAs": "String"
        }
      },
      "microsoft.graph.cloudAppSecurityState": {
        "value": {
          "destinationServiceIp": "String",
          "destinationServiceName": "String",
          "riskScore": "String"
        }
      },
      "microsoft.graph.contentTypeInfo": {
        "value": {
          "id": "String"
        }
      },
      "microsoft.graph.contentTypeOrder": {
        "value": {
          "default": true,
          "position": 0
        }
      },
      "microsoft.graph.currencyColumn": {
        "value": {
          "locale": "String"
        }
      },
      "microsoft.graph.timeZoneBase": {
        "value": {
          "name": "String"
        }
      },
      "microsoft.graph.customTimeZone": {
        "value": {
          "bias": 0,
          "daylightOffset": {
            "@odata.type": "microsoft.graph.daylightTimeZoneOffset"
          },
          "standardOffset": {
            "@odata.type": "microsoft.graph.standardTimeZoneOffset"
          }
        }
      },
      "microsoft.graph.dateTimeColumn": {
        "value": {
          "displayAs": "String",
          "format": "String"
        }
      },
      "microsoft.graph.dateTimeTimeZone": {
        "value": {
          "dateTime": "String",
          "timeZone": "String"
        }
      },
      "microsoft.graph.standardTimeZoneOffset": {
        "value": {
          "dayOccurrence": 0,
          "dayOfWeek": {
            "@odata.type": "microsoft.graph.dayOfWeek"
          },
          "month": 0,
          "time": "TimeOfDay (timestamp)",
          "year": 0
        }
      },
      "microsoft.graph.daylightTimeZoneOffset": {
        "value": {
          "daylightBias": 0
        }
      },
      "microsoft.graph.defaultColumnValue": {
        "value": {
          "formula": "String",
          "value": "String"
        }
      },
      "microsoft.graph.deleted": {
        "value": {
          "state": "String"
        }
      },
      "microsoft.graph.domainState": {
        "value": {
          "lastActionDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "operation": "String",
          "status": "String"
        }
      },
      "microsoft.graph.driveRecipient": {
        "value": {
          "alias": "String",
          "email": "String",
          "objectId": "String"
        }
      },
      "microsoft.graph.educationStudent": {
        "value": {
          "birthDate": "0001-01-01T00:00:00.0000000",
          "externalId": "String",
          "gender": {
            "@odata.type": "microsoft.graph.educationGender"
          },
          "grade": "String",
          "graduationYear": "String",
          "studentNumber": "String"
        }
      },
      "microsoft.graph.educationTeacher": {
        "value": {
          "externalId": "String",
          "teacherNumber": "String"
        }
      },
      "microsoft.graph.educationTerm": {
        "value": {
          "displayName": "String",
          "endDate": "0001-01-01T00:00:00.0000000",
          "externalId": "String",
          "startDate": "0001-01-01T00:00:00.0000000"
        }
      },
      "microsoft.graph.emailAddress": {
        "value": {
          "address": "String",
          "name": "String"
        }
      },
      "microsoft.graph.extensionSchemaProperty": {
        "value": {
          "name": "String",
          "type": "String"
        }
      },
      "microsoft.graph.externalLink": {
        "value": {
          "href": "String"
        }
      },
      "microsoft.graph.file": {
        "value": {
          "hashes": {
            "@odata.type": "microsoft.graph.hashes"
          },
          "mimeType": "String"
        }
      },
      "microsoft.graph.fileHash": {
        "value": {
          "hashType": {
            "@odata.type": "microsoft.graph.fileHashType"
          },
          "hashValue": "String"
        }
      },
      "microsoft.graph.fileSecurityState": {
        "value": {
          "fileHash": {
            "@odata.type": "microsoft.graph.fileHash"
          },
          "name": "String",
          "path": "String",
          "riskScore": "String"
        }
      },
      "microsoft.graph.fileSystemInfo": {
        "value": {
          "createdDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "lastAccessedDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "lastModifiedDateTime": "0001-01-01T00:00:00.0000000+00:00"
        }
      },
      "microsoft.graph.workbookFilterCriteria": {
        "value": {
          "color": "String",
          "criterion1": "String",
          "criterion2": "String",
          "dynamicCriteria": "String",
          "filterOn": "String",
          "icon": {
            "@odata.type": "microsoft.graph.workbookIcon"
          },
          "values": {
            "@odata.type": "microsoft.graph.Json"
          }
        }
      },
      "microsoft.graph.workbookFilterDateTime": {
        "value": {
          "date": "String",
          "specificity": "String"
        }
      },
      "microsoft.graph.folder": {
        "value": {
          "childCount": 0,
          "view": {
            "@odata.type": "microsoft.graph.folderView"
          }
        }
      },
      "microsoft.graph.folderView": {
        "value": {
          "sortBy": "String",
          "sortOrder": "String",
          "viewType": "String"
        }
      },
      "microsoft.graph.followupFlag": {
        "value": {
          "completedDateTime": {
            "@odata.type": "microsoft.graph.dateTimeTimeZone"
          },
          "dueDateTime": {
            "@odata.type": "microsoft.graph.dateTimeTimeZone"
          },
          "flagStatus": {
            "@odata.type": "microsoft.graph.followupFlagStatus"
          },
          "startDateTime": {
            "@odata.type": "microsoft.graph.dateTimeTimeZone"
          }
        }
      },
      "microsoft.graph.geoCoordinates": {
        "value": {
          "altitude": 0,
          "latitude": 0,
          "longitude": 0
        }
      },
      "microsoft.graph.hashes": {
        "value": {
          "crc32Hash": "String",
          "quickXorHash": "String",
          "sha1Hash": "String"
        }
      },
      "microsoft.graph.hostSecurityState": {
        "value": {
          "fqdn": "String",
          "isAzureAadJoined": true,
          "isAzureAadRegistered": true,
          "isHybridAzureDomainJoined": true,
          "netBiosName": "String",
          "os": "String",
          "privateIpAddress": "String",
          "publicIpAddress": "String",
          "riskScore": "String"
        }
      },
      "microsoft.graph.workbookIcon": {
        "value": {
          "index": 0,
          "set": "String"
        }
      },
      "microsoft.graph.identity": {
        "value": {
          "displayName": "String",
          "id": "String"
        }
      },
      "microsoft.graph.identitySet": {
        "value": {
          "application": {
            "@odata.type": "microsoft.graph.identity"
          },
          "device": {
            "@odata.type": "microsoft.graph.identity"
          },
          "user": {
            "@odata.type": "microsoft.graph.identity"
          }
        }
      },
      "microsoft.graph.image": {
        "value": {
          "height": 0,
          "width": 0
        }
      },
      "microsoft.graph.internetMessageHeader": {
        "value": {
          "name": "String",
          "value": "String"
        }
      },
      "microsoft.graph.androidMinimumOperatingSystem": {
        "value": {
          "v4_0": true,
          "v4_0_3": true,
          "v4_1": true,
          "v4_2": true,
          "v4_3": true,
          "v4_4": true,
          "v5_0": true,
          "v5_1": true
        }
      },
      "microsoft.graph.appConfigurationSettingItem": {
        "value": {
          "appConfigKey": "String",
          "appConfigKeyType": {
            "@odata.type": "microsoft.graph.mdmAppConfigKeyType"
          },
          "appConfigKeyValue": "String"
        }
      },
      "microsoft.graph.fileEncryptionInfo": {
        "value": {
          "encryptionKey": "AA==",
          "fileDigest": "AA==",
          "fileDigestAlgorithm": "String",
          "initializationVector": "AA==",
          "mac": "AA==",
          "macKey": "AA==",
          "profileIdentifier": "String"
        }
      },
      "microsoft.graph.iosDeviceType": {
        "value": {
          "iPad": true,
          "iPhoneAndIPod": true
        }
      },
      "microsoft.graph.iosLobAppAssignmentSettings": {
        "value": {
          "vpnConfigurationId": "String"
        }
      },
      "microsoft.graph.iosMinimumOperatingSystem": {
        "value": {
          "v10_0": true,
          "v11_0": true,
          "v8_0": true,
          "v9_0": true
        }
      },
      "microsoft.graph.iosStoreAppAssignmentSettings": {
        "value": {
          "vpnConfigurationId": "String"
        }
      },
      "microsoft.graph.iosVppAppAssignmentSettings": {
        "value": {
          "useDeviceLicensing": true,
          "vpnConfigurationId": "String"
        }
      },
      "microsoft.graph.microsoftStoreForBusinessAppAssignmentSettings": {
        "value": {
          "useDeviceContext": true
        }
      },
      "microsoft.graph.mobileAppAssignmentSettings": { },
      "microsoft.graph.vppLicensingType": {
        "value": {
          "supportsDeviceLicensing": true,
          "supportsUserLicensing": true
        }
      },
      "microsoft.graph.windowsMinimumOperatingSystem": {
        "value": {
          "v10_0": true,
          "v8_0": true,
          "v8_1": true
        }
      },
      "microsoft.graph.auditActor": {
        "value": {
          "applicationDisplayName": "String",
          "applicationId": "String",
          "ipAddress": "String",
          "servicePrincipalName": "String",
          "type": "String",
          "userId": "String",
          "userPermissions": [
            "String"
          ],
          "userPrincipalName": "String"
        }
      },
      "microsoft.graph.auditProperty": {
        "value": {
          "displayName": "String",
          "newValue": "String",
          "oldValue": "String"
        }
      },
      "microsoft.graph.auditResource": {
        "value": {
          "displayName": "String",
          "modifiedProperties": [
            {
              "@odata.type": "microsoft.graph.auditProperty"
            }
          ],
          "resourceId": "String",
          "type": "String"
        }
      },
      "microsoft.graph.appListItem": {
        "value": {
          "appId": "String",
          "appStoreUrl": "String",
          "name": "String",
          "publisher": "String"
        }
      },
      "microsoft.graph.bitLockerRemovableDrivePolicy": {
        "value": {
          "blockCrossOrganizationWriteAccess": true,
          "encryptionMethod": {
            "@odata.type": "microsoft.graph.bitLockerEncryptionMethod"
          },
          "requireEncryptionForWriteAccess": true
        }
      },
      "microsoft.graph.defenderDetectedMalwareActions": {
        "value": {
          "highSeverity": {
            "@odata.type": "microsoft.graph.defenderThreatAction"
          },
          "lowSeverity": {
            "@odata.type": "microsoft.graph.defenderThreatAction"
          },
          "moderateSeverity": {
            "@odata.type": "microsoft.graph.defenderThreatAction"
          },
          "severeSeverity": {
            "@odata.type": "microsoft.graph.defenderThreatAction"
          }
        }
      },
      "microsoft.graph.deviceCompliancePolicySettingState": {
        "value": {
          "currentValue": "String",
          "errorCode": 0,
          "errorDescription": "String",
          "instanceDisplayName": "String",
          "setting": "String",
          "settingName": "String",
          "sources": [
            {
              "@odata.type": "microsoft.graph.settingSource"
            }
          ],
          "state": {
            "@odata.type": "microsoft.graph.complianceStatus"
          },
          "userEmail": "String",
          "userId": "String",
          "userName": "String",
          "userPrincipalName": "String"
        }
      },
      "microsoft.graph.deviceConfigurationSettingState": {
        "value": {
          "currentValue": "String",
          "errorCode": 0,
          "errorDescription": "String",
          "instanceDisplayName": "String",
          "setting": "String",
          "settingName": "String",
          "sources": [
            {
              "@odata.type": "microsoft.graph.settingSource"
            }
          ],
          "state": {
            "@odata.type": "microsoft.graph.complianceStatus"
          },
          "userEmail": "String",
          "userId": "String",
          "userName": "String",
          "userPrincipalName": "String"
        }
      },
      "microsoft.graph.deviceManagementSettings": {
        "value": {
          "deviceComplianceCheckinThresholdDays": 0,
          "isScheduledActionEnabled": true,
          "secureByDefault": true
        }
      },
      "microsoft.graph.edgeSearchEngine": {
        "value": {
          "edgeSearchEngineType": {
            "@odata.type": "microsoft.graph.edgeSearchEngineType"
          }
        }
      },
      "microsoft.graph.edgeSearchEngineBase": { },
      "microsoft.graph.edgeSearchEngineCustom": {
        "value": {
          "edgeSearchEngineOpenSearchXmlUrl": "String"
        }
      },
      "microsoft.graph.iosHomeScreenApp": {
        "value": {
          "bundleID": "String",
          "displayName": "String"
        }
      },
      "microsoft.graph.iosHomeScreenFolder": {
        "value": {
          "displayName": "String",
          "pages": [
            {
              "@odata.type": "microsoft.graph.iosHomeScreenFolderPage"
            }
          ]
        }
      },
      "microsoft.graph.iosHomeScreenFolderPage": {
        "value": {
          "apps": [
            {
              "@odata.type": "microsoft.graph.iosHomeScreenApp"
            }
          ],
          "displayName": "String"
        }
      },
      "microsoft.graph.iosHomeScreenItem": {
        "value": {
          "displayName": "String"
        }
      },
      "microsoft.graph.iosHomeScreenPage": {
        "value": {
          "displayName": "String",
          "icons": [
            {
              "@odata.type": "microsoft.graph.iosHomeScreenItem"
            }
          ]
        }
      },
      "microsoft.graph.iosNetworkUsageRule": {
        "value": {
          "cellularDataBlocked": true,
          "cellularDataBlockWhenRoaming": true,
          "managedApps": [
            {
              "@odata.type": "microsoft.graph.appListItem"
            }
          ]
        }
      },
      "microsoft.graph.iosNotificationSettings": {
        "value": {
          "alertType": {
            "@odata.type": "microsoft.graph.iosNotificationAlertType"
          },
          "appName": "String",
          "badgesEnabled": true,
          "bundleID": "String",
          "enabled": true,
          "publisher": "String",
          "showInNotificationCenter": true,
          "showOnLockScreen": true,
          "soundsEnabled": true
        }
      },
      "microsoft.graph.mediaContentRatingAustralia": {
        "value": {
          "movieRating": {
            "@odata.type": "microsoft.graph.ratingAustraliaMoviesType"
          },
          "tvRating": {
            "@odata.type": "microsoft.graph.ratingAustraliaTelevisionType"
          }
        }
      },
      "microsoft.graph.mediaContentRatingCanada": {
        "value": {
          "movieRating": {
            "@odata.type": "microsoft.graph.ratingCanadaMoviesType"
          },
          "tvRating": {
            "@odata.type": "microsoft.graph.ratingCanadaTelevisionType"
          }
        }
      },
      "microsoft.graph.mediaContentRatingFrance": {
        "value": {
          "movieRating": {
            "@odata.type": "microsoft.graph.ratingFranceMoviesType"
          },
          "tvRating": {
            "@odata.type": "microsoft.graph.ratingFranceTelevisionType"
          }
        }
      },
      "microsoft.graph.mediaContentRatingGermany": {
        "value": {
          "movieRating": {
            "@odata.type": "microsoft.graph.ratingGermanyMoviesType"
          },
          "tvRating": {
            "@odata.type": "microsoft.graph.ratingGermanyTelevisionType"
          }
        }
      },
      "microsoft.graph.mediaContentRatingIreland": {
        "value": {
          "movieRating": {
            "@odata.type": "microsoft.graph.ratingIrelandMoviesType"
          },
          "tvRating": {
            "@odata.type": "microsoft.graph.ratingIrelandTelevisionType"
          }
        }
      },
      "microsoft.graph.mediaContentRatingJapan": {
        "value": {
          "movieRating": {
            "@odata.type": "microsoft.graph.ratingJapanMoviesType"
          },
          "tvRating": {
            "@odata.type": "microsoft.graph.ratingJapanTelevisionType"
          }
        }
      },
      "microsoft.graph.mediaContentRatingNewZealand": {
        "value": {
          "movieRating": {
            "@odata.type": "microsoft.graph.ratingNewZealandMoviesType"
          },
          "tvRating": {
            "@odata.type": "microsoft.graph.ratingNewZealandTelevisionType"
          }
        }
      },
      "microsoft.graph.mediaContentRatingUnitedKingdom": {
        "value": {
          "movieRating": {
            "@odata.type": "microsoft.graph.ratingUnitedKingdomMoviesType"
          },
          "tvRating": {
            "@odata.type": "microsoft.graph.ratingUnitedKingdomTelevisionType"
          }
        }
      },
      "microsoft.graph.mediaContentRatingUnitedStates": {
        "value": {
          "movieRating": {
            "@odata.type": "microsoft.graph.ratingUnitedStatesMoviesType"
          },
          "tvRating": {
            "@odata.type": "microsoft.graph.ratingUnitedStatesTelevisionType"
          }
        }
      },
      "microsoft.graph.omaSetting": {
        "value": {
          "description": "String",
          "displayName": "String",
          "omaUri": "String"
        }
      },
      "microsoft.graph.omaSettingBase64": {
        "value": {
          "description": "String",
          "displayName": "String",
          "fileName": "String",
          "omaUri": "String",
          "value": "String"
        }
      },
      "microsoft.graph.omaSettingBoolean": {
        "value": {
          "description": "String",
          "displayName": "String",
          "omaUri": "String",
          "value": true
        }
      },
      "microsoft.graph.omaSettingDateTime": {
        "value": {
          "description": "String",
          "displayName": "String",
          "omaUri": "String",
          "value": "0001-01-01T00:00:00.0000000+00:00"
        }
      },
      "microsoft.graph.omaSettingFloatingPoint": {
        "value": {
          "description": "String",
          "displayName": "String",
          "omaUri": "String",
          "value": 0
        }
      },
      "microsoft.graph.omaSettingInteger": {
        "value": {
          "description": "String",
          "displayName": "String",
          "omaUri": "String",
          "value": 0
        }
      },
      "microsoft.graph.omaSettingString": {
        "value": {
          "description": "String",
          "displayName": "String",
          "omaUri": "String",
          "value": "String"
        }
      },
      "microsoft.graph.omaSettingStringXml": {
        "value": {
          "description": "String",
          "displayName": "String",
          "fileName": "String",
          "omaUri": "String",
          "value": "AA=="
        }
      },
      "microsoft.graph.sharedPCAccountManagerPolicy": {
        "value": {
          "accountDeletionPolicy": {
            "@odata.type": "microsoft.graph.sharedPCAccountDeletionPolicyType"
          },
          "cacheAccountsAboveDiskFreePercentage": 0,
          "inactiveThresholdDays": 0,
          "removeAccountsBelowDiskFreePercentage": 0
        }
      },
      "microsoft.graph.windows10NetworkProxyServer": {
        "value": {
          "address": "String",
          "exceptions": [
            "String"
          ],
          "useForLocalAddresses": true
        }
      },
      "microsoft.graph.windowsFirewallNetworkProfile": {
        "value": {
          "authorizedApplicationRulesFromGroupPolicyMerged": true,
          "connectionSecurityRulesFromGroupPolicyMerged": true,
          "firewallEnabled": {
            "@odata.type": "microsoft.graph.stateManagementSetting"
          },
          "globalPortRulesFromGroupPolicyMerged": true,
          "inboundConnectionsBlocked": true,
          "inboundNotificationsBlocked": true,
          "incomingTrafficBlocked": true,
          "outboundConnectionsBlocked": true,
          "policyRulesFromGroupPolicyMerged": true,
          "securedPacketExemptionAllowed": true,
          "stealthModeBlocked": true,
          "unicastResponsesToMulticastBroadcastsBlocked": true
        }
      },
      "microsoft.graph.windowsUpdateActiveHoursInstall": {
        "value": {
          "activeHoursEnd": "TimeOfDay (timestamp)",
          "activeHoursStart": "TimeOfDay (timestamp)"
        }
      },
      "microsoft.graph.windowsUpdateInstallScheduleType": { },
      "microsoft.graph.windowsUpdateScheduledInstall": {
        "value": {
          "scheduledInstallDay": {
            "@odata.type": "microsoft.graph.weeklySchedule"
          },
          "scheduledInstallTime": "TimeOfDay (timestamp)"
        }
      },
      "microsoft.graph.configurationManagerClientEnabledFeatures": {
        "value": {
          "compliancePolicy": true,
          "deviceConfiguration": true,
          "inventory": true,
          "modernApps": true,
          "resourceAccess": true,
          "windowsUpdateForBusiness": true
        }
      },
      "microsoft.graph.deleteUserFromSharedAppleDeviceActionResult": {
        "value": {
          "actionName": "String",
          "actionState": {
            "@odata.type": "microsoft.graph.actionState"
          },
          "lastUpdatedDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "startDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "userPrincipalName": "String"
        }
      },
      "microsoft.graph.deviceActionResult": {
        "value": {
          "actionName": "String",
          "actionState": {
            "@odata.type": "microsoft.graph.actionState"
          },
          "lastUpdatedDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "startDateTime": "0001-01-01T00:00:00.0000000+00:00"
        }
      },
      "microsoft.graph.deviceExchangeAccessStateSummary": {
        "value": {
          "allowedDeviceCount": 0,
          "blockedDeviceCount": 0,
          "quarantinedDeviceCount": 0,
          "unavailableDeviceCount": 0,
          "unknownDeviceCount": 0
        }
      },
      "microsoft.graph.deviceGeoLocation": {
        "value": {
          "altitude": 0,
          "heading": 0,
          "horizontalAccuracy": 0,
          "lastCollectedDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "latitude": 0,
          "longitude": 0,
          "speed": 0,
          "verticalAccuracy": 0
        }
      },
      "microsoft.graph.deviceHealthAttestationState": {
        "value": {
          "attestationIdentityKey": "String",
          "bitLockerStatus": "String",
          "bootAppSecurityVersion": "String",
          "bootDebugging": "String",
          "bootManagerSecurityVersion": "String",
          "bootManagerVersion": "String",
          "bootRevisionListInfo": "String",
          "codeIntegrity": "String",
          "codeIntegrityCheckVersion": "String",
          "codeIntegrityPolicy": "String",
          "contentNamespaceUrl": "String",
          "contentVersion": "String",
          "dataExcutionPolicy": "String",
          "deviceHealthAttestationStatus": "String",
          "earlyLaunchAntiMalwareDriverProtection": "String",
          "healthAttestationSupportedStatus": "String",
          "healthStatusMismatchInfo": "String",
          "issuedDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "lastUpdateDateTime": "String",
          "operatingSystemKernelDebugging": "String",
          "operatingSystemRevListInfo": "String",
          "pcr0": "String",
          "pcrHashAlgorithm": "String",
          "resetCount": 0,
          "restartCount": 0,
          "safeMode": "String",
          "secureBoot": "String",
          "secureBootConfigurationPolicyFingerPrint": "String",
          "testSigning": "String",
          "tpmVersion": "String",
          "virtualSecureMode": "String",
          "windowsPE": "String"
        }
      },
      "microsoft.graph.deviceOperatingSystemSummary": {
        "value": {
          "androidCount": 0,
          "iosCount": 0,
          "macOSCount": 0,
          "unknownCount": 0,
          "windowsCount": 0,
          "windowsMobileCount": 0
        }
      },
      "microsoft.graph.locateDeviceActionResult": {
        "value": {
          "actionName": "String",
          "actionState": {
            "@odata.type": "microsoft.graph.actionState"
          },
          "deviceLocation": {
            "@odata.type": "microsoft.graph.deviceGeoLocation"
          },
          "lastUpdatedDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "startDateTime": "0001-01-01T00:00:00.0000000+00:00"
        }
      },
      "microsoft.graph.remoteLockActionResult": {
        "value": {
          "actionName": "String",
          "actionState": {
            "@odata.type": "microsoft.graph.actionState"
          },
          "lastUpdatedDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "startDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "unlockPin": "String"
        }
      },
      "microsoft.graph.resetPasscodeActionResult": {
        "value": {
          "actionName": "String",
          "actionState": {
            "@odata.type": "microsoft.graph.actionState"
          },
          "lastUpdatedDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "passcode": "String",
          "startDateTime": "0001-01-01T00:00:00.0000000+00:00"
        }
      },
      "microsoft.graph.updateWindowsDeviceAccountActionParameter": {
        "value": {
          "calendarSyncEnabled": true,
          "deviceAccount": {
            "@odata.type": "microsoft.graph.windowsDeviceAccount"
          },
          "deviceAccountEmail": "String",
          "exchangeServer": "String",
          "passwordRotationEnabled": true,
          "sessionInitiationProtocalAddress": "String"
        }
      },
      "microsoft.graph.windowsDefenderScanActionResult": {
        "value": {
          "actionName": "String",
          "actionState": {
            "@odata.type": "microsoft.graph.actionState"
          },
          "lastUpdatedDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "scanType": "String",
          "startDateTime": "0001-01-01T00:00:00.0000000+00:00"
        }
      },
      "microsoft.graph.windowsDeviceAccount": {
        "value": {
          "password": "String"
        }
      },
      "microsoft.graph.windowsDeviceADAccount": {
        "value": {
          "domainName": "String",
          "password": "String",
          "userName": "String"
        }
      },
      "microsoft.graph.windowsDeviceAzureADAccount": {
        "value": {
          "password": "String",
          "userPrincipalName": "String"
        }
      },
      "microsoft.graph.importedWindowsAutopilotDeviceIdentityState": {
        "value": {
          "deviceErrorCode": 0,
          "deviceErrorName": "String",
          "deviceImportStatus": {
            "@odata.type": "microsoft.graph.importedWindowsAutopilotDeviceIdentityImportStatus"
          },
          "deviceRegistrationId": "String"
        }
      },
      "microsoft.graph.androidMobileAppIdentifier": {
        "value": {
          "packageId": "String"
        }
      },
      "microsoft.graph.iosMobileAppIdentifier": {
        "value": {
          "bundleId": "String"
        }
      },
      "microsoft.graph.ipRange": { },
      "microsoft.graph.iPv4Range": {
        "value": {
          "lowerAddress": "String",
          "upperAddress": "String"
        }
      },
      "microsoft.graph.iPv6Range": {
        "value": {
          "lowerAddress": "String",
          "upperAddress": "String"
        }
      },
      "microsoft.graph.keyValuePair": {
        "value": {
          "name": "String",
          "value": "String"
        }
      },
      "microsoft.graph.managedAppDiagnosticStatus": {
        "value": {
          "mitigationInstruction": "String",
          "state": "String",
          "validationName": "String"
        }
      },
      "microsoft.graph.managedAppPolicyDeploymentSummaryPerApp": {
        "value": {
          "configurationAppliedUserCount": 0,
          "mobileAppIdentifier": {
            "@odata.type": "microsoft.graph.mobileAppIdentifier"
          }
        }
      },
      "microsoft.graph.mobileAppIdentifier": { },
      "microsoft.graph.proxiedDomain": {
        "value": {
          "ipAddressOrFQDN": "String",
          "proxy": "String"
        }
      },
      "microsoft.graph.windowsInformationProtectionApp": {
        "value": {
          "denied": true,
          "description": "String",
          "displayName": "String",
          "productName": "String",
          "publisherName": "String"
        }
      },
      "microsoft.graph.windowsInformationProtectionDataRecoveryCertificate": {
        "value": {
          "certificate": "AA==",
          "description": "String",
          "expirationDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "subjectName": "String"
        }
      },
      "microsoft.graph.windowsInformationProtectionDesktopApp": {
        "value": {
          "binaryName": "String",
          "binaryVersionHigh": "String",
          "binaryVersionLow": "String",
          "denied": true,
          "description": "String",
          "displayName": "String",
          "productName": "String",
          "publisherName": "String"
        }
      },
      "microsoft.graph.windowsInformationProtectionIPRangeCollection": {
        "value": {
          "displayName": "String",
          "ranges": [
            {
              "@odata.type": "microsoft.graph.ipRange"
            }
          ]
        }
      },
      "microsoft.graph.windowsInformationProtectionProxiedDomainCollection": {
        "value": {
          "displayName": "String",
          "proxiedDomains": [
            {
              "@odata.type": "microsoft.graph.proxiedDomain"
            }
          ]
        }
      },
      "microsoft.graph.windowsInformationProtectionResourceCollection": {
        "value": {
          "displayName": "String",
          "resources": [
            "String"
          ]
        }
      },
      "microsoft.graph.windowsInformationProtectionStoreApp": {
        "value": {
          "denied": true,
          "description": "String",
          "displayName": "String",
          "productName": "String",
          "publisherName": "String"
        }
      },
      "microsoft.graph.deviceEnrollmentPlatformRestriction": {
        "value": {
          "osMaximumVersion": "String",
          "osMinimumVersion": "String",
          "personalDeviceEnrollmentBlocked": true,
          "platformBlocked": true
        }
      },
      "microsoft.graph.intuneBrand": {
        "value": {
          "contactITEmailAddress": "String",
          "contactITName": "String",
          "contactITNotes": "String",
          "contactITPhoneNumber": "String",
          "darkBackgroundLogo": {
            "@odata.type": "microsoft.graph.mimeContent"
          },
          "displayName": "String",
          "lightBackgroundLogo": {
            "@odata.type": "microsoft.graph.mimeContent"
          },
          "onlineSupportSiteName": "String",
          "onlineSupportSiteUrl": "String",
          "privacyUrl": "String",
          "showDisplayNameNextToLogo": true,
          "showLogo": true,
          "showNameNextToLogo": true,
          "themeColor": {
            "@odata.type": "microsoft.graph.rgbColor"
          }
        }
      },
      "microsoft.graph.rgbColor": {
        "value": {
          "b": 0,
          "g": 0,
          "r": 0
        }
      },
      "microsoft.graph.resourceAction": {
        "value": {
          "allowedResourceActions": [
            "String"
          ],
          "notAllowedResourceActions": [
            "String"
          ]
        }
      },
      "microsoft.graph.rolePermission": {
        "value": {
          "resourceActions": [
            {
              "@odata.type": "microsoft.graph.resourceAction"
            }
          ]
        }
      },
      "microsoft.graph.allDevicesAssignmentTarget": { },
      "microsoft.graph.allLicensedUsersAssignmentTarget": { },
      "microsoft.graph.deviceAndAppManagementAssignmentTarget": { },
      "microsoft.graph.exclusionGroupAssignmentTarget": {
        "value": {
          "groupId": "String"
        }
      },
      "microsoft.graph.groupAssignmentTarget": {
        "value": {
          "groupId": "String"
        }
      },
      "microsoft.graph.mimeContent": {
        "value": {
          "type": "String",
          "value": "AA=="
        }
      },
      "microsoft.graph.report": {
        "value": {
          "content": "Stream"
        }
      },
      "microsoft.graph.uri": {
        "value": {
          "segments": [
            "String"
          ]
        }
      },
      "microsoft.graph.invitedUserMessageInfo": {
        "value": {
          "ccRecipients": [
            {
              "@odata.type": "microsoft.graph.recipient"
            }
          ],
          "customizedMessageBody": "String",
          "messageLanguage": "String"
        }
      },
      "microsoft.graph.itemBody": {
        "value": {
          "content": "String",
          "contentType": {
            "@odata.type": "microsoft.graph.bodyType"
          }
        }
      },
      "microsoft.graph.itemReference": {
        "value": {
          "driveId": "String",
          "driveType": "String",
          "id": "String",
          "name": "String",
          "path": "String",
          "shareId": "String",
          "sharepointIds": {
            "@odata.type": "microsoft.graph.sharepointIds"
          }
        }
      },
      "microsoft.graph.Json": { },
      "microsoft.graph.licenseUnitsDetail": {
        "value": {
          "enabled": 0,
          "suspended": 0,
          "warning": 0
        }
      },
      "microsoft.graph.listInfo": {
        "value": {
          "contentTypesEnabled": true,
          "hidden": true,
          "template": "String"
        }
      },
      "microsoft.graph.localeInfo": {
        "value": {
          "displayName": "String",
          "locale": "String"
        }
      },
      "microsoft.graph.location": {
        "value": {
          "address": {
            "@odata.type": "microsoft.graph.physicalAddress"
          },
          "coordinates": {
            "@odata.type": "microsoft.graph.outlookGeoCoordinates"
          },
          "displayName": "String",
          "locationEmailAddress": "String",
          "locationType": {
            "@odata.type": "microsoft.graph.locationType"
          },
          "locationUri": "String",
          "uniqueId": "String",
          "uniqueIdType": {
            "@odata.type": "microsoft.graph.locationUniqueIdType"
          }
        }
      },
      "microsoft.graph.locationConstraint": {
        "value": {
          "isRequired": true,
          "locations": [
            {
              "@odata.type": "microsoft.graph.locationConstraintItem"
            }
          ],
          "suggestLocation": true
        }
      },
      "microsoft.graph.locationConstraintItem": {
        "value": {
          "resolveAvailability": true
        }
      },
      "microsoft.graph.lookupColumn": {
        "value": {
          "allowMultipleValues": true,
          "allowUnlimitedLength": true,
          "columnName": "String",
          "listId": "String",
          "primaryLookupColumnId": "String"
        }
      },
      "microsoft.graph.mailboxSettings": {
        "value": {
          "archiveFolder": "String",
          "automaticRepliesSetting": {
            "@odata.type": "microsoft.graph.automaticRepliesSetting"
          },
          "language": {
            "@odata.type": "microsoft.graph.localeInfo"
          },
          "timeZone": "String",
          "workingHours": {
            "@odata.type": "microsoft.graph.workingHours"
          }
        }
      },
      "microsoft.graph.mailTips": {
        "value": {
          "automaticReplies": {
            "@odata.type": "microsoft.graph.automaticRepliesMailTips"
          },
          "customMailTip": "String",
          "deliveryRestricted": true,
          "emailAddress": {
            "@odata.type": "microsoft.graph.emailAddress"
          },
          "error": {
            "@odata.type": "microsoft.graph.mailTipsError"
          },
          "externalMemberCount": 0,
          "isModerated": true,
          "mailboxFull": true,
          "maxMessageSize": 0,
          "recipientScope": {
            "@odata.type": "microsoft.graph.recipientScopeType"
          },
          "recipientSuggestions": [
            {
              "@odata.type": "microsoft.graph.recipient"
            }
          ],
          "totalMemberCount": 0
        }
      },
      "microsoft.graph.mailTipsError": {
        "value": {
          "code": "String",
          "message": "String"
        }
      },
      "microsoft.graph.malwareState": {
        "value": {
          "category": "String",
          "family": "String",
          "name": "String",
          "severity": "String",
          "wasRunning": true
        }
      },
      "microsoft.graph.meetingTimeSuggestion": {
        "value": {
          "attendeeAvailability": [
            {
              "@odata.type": "microsoft.graph.attendeeAvailability"
            }
          ],
          "confidence": 0,
          "locations": [
            {
              "@odata.type": "microsoft.graph.location"
            }
          ],
          "meetingTimeSlot": {
            "@odata.type": "microsoft.graph.timeSlot"
          },
          "organizerAvailability": {
            "@odata.type": "microsoft.graph.freeBusyStatus"
          },
          "suggestionReason": "String"
        }
      },
      "microsoft.graph.meetingTimeSuggestionsResult": {
        "value": {
          "emptySuggestionsReason": "String",
          "meetingTimeSuggestions": [
            {
              "@odata.type": "microsoft.graph.meetingTimeSuggestion"
            }
          ]
        }
      },
      "microsoft.graph.messageRuleActions": {
        "value": {
          "assignCategories": [
            "String"
          ],
          "copyToFolder": "String",
          "delete": true,
          "forwardAsAttachmentTo": [
            {
              "@odata.type": "microsoft.graph.recipient"
            }
          ],
          "forwardTo": [
            {
              "@odata.type": "microsoft.graph.recipient"
            }
          ],
          "markAsRead": true,
          "markImportance": {
            "@odata.type": "microsoft.graph.importance"
          },
          "moveToFolder": "String",
          "permanentDelete": true,
          "redirectTo": [
            {
              "@odata.type": "microsoft.graph.recipient"
            }
          ],
          "stopProcessingRules": true
        }
      },
      "microsoft.graph.messageRulePredicates": {
        "value": {
          "bodyContains": [
            "String"
          ],
          "bodyOrSubjectContains": [
            "String"
          ],
          "categories": [
            "String"
          ],
          "fromAddresses": [
            {
              "@odata.type": "microsoft.graph.recipient"
            }
          ],
          "hasAttachments": true,
          "headerContains": [
            "String"
          ],
          "importance": {
            "@odata.type": "microsoft.graph.importance"
          },
          "isApprovalRequest": true,
          "isAutomaticForward": true,
          "isAutomaticReply": true,
          "isEncrypted": true,
          "isMeetingRequest": true,
          "isMeetingResponse": true,
          "isNonDeliveryReport": true,
          "isPermissionControlled": true,
          "isReadReceipt": true,
          "isSigned": true,
          "isVoicemail": true,
          "messageActionFlag": {
            "@odata.type": "microsoft.graph.messageActionFlag"
          },
          "notSentToMe": true,
          "recipientContains": [
            "String"
          ],
          "senderContains": [
            "String"
          ],
          "sensitivity": {
            "@odata.type": "microsoft.graph.sensitivity"
          },
          "sentCcMe": true,
          "sentOnlyToMe": true,
          "sentToAddresses": [
            {
              "@odata.type": "microsoft.graph.recipient"
            }
          ],
          "sentToMe": true,
          "sentToOrCcMe": true,
          "subjectContains": [
            "String"
          ],
          "withinSizeRange": {
            "@odata.type": "microsoft.graph.sizeRange"
          }
        }
      },
      "microsoft.graph.networkConnection": {
        "value": {
          "applicationName": "String",
          "destinationAddress": "String",
          "destinationDomain": "String",
          "destinationPort": "String",
          "destinationUrl": "String",
          "direction": {
            "@odata.type": "microsoft.graph.connectionDirection"
          },
          "domainRegisteredDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "localDnsName": "String",
          "natDestinationAddress": "String",
          "natDestinationPort": "String",
          "natSourceAddress": "String",
          "natSourcePort": "String",
          "protocol": {
            "@odata.type": "microsoft.graph.securityNetworkProtocol"
          },
          "riskScore": "String",
          "sourceAddress": "String",
          "sourcePort": "String",
          "status": {
            "@odata.type": "microsoft.graph.connectionStatus"
          },
          "urlParameters": "String"
        }
      },
      "microsoft.graph.notebookLinks": {
        "value": {
          "oneNoteClientUrl": {
            "@odata.type": "microsoft.graph.externalLink"
          },
          "oneNoteWebUrl": {
            "@odata.type": "microsoft.graph.externalLink"
          }
        }
      },
      "microsoft.graph.numberColumn": {
        "value": {
          "decimalPlaces": "String",
          "displayAs": "String",
          "maximum": 0,
          "minimum": 0
        }
      },
      "microsoft.graph.onenoteOperationError": {
        "value": {
          "code": "String",
          "message": "String"
        }
      },
      "microsoft.graph.onPremisesExtensionAttributes": {
        "value": {
          "extensionAttribute1": "String",
          "extensionAttribute10": "String",
          "extensionAttribute11": "String",
          "extensionAttribute12": "String",
          "extensionAttribute13": "String",
          "extensionAttribute14": "String",
          "extensionAttribute15": "String",
          "extensionAttribute2": "String",
          "extensionAttribute3": "String",
          "extensionAttribute4": "String",
          "extensionAttribute5": "String",
          "extensionAttribute6": "String",
          "extensionAttribute7": "String",
          "extensionAttribute8": "String",
          "extensionAttribute9": "String"
        }
      },
      "microsoft.graph.onPremisesProvisioningError": {
        "value": {
          "category": "String",
          "occurredDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "propertyCausingError": "String",
          "value": "String"
        }
      },
      "microsoft.graph.outlookGeoCoordinates": {
        "value": {
          "accuracy": 0,
          "altitude": 0,
          "altitudeAccuracy": 0,
          "latitude": 0,
          "longitude": 0
        }
      },
      "microsoft.graph.package": {
        "value": {
          "type": "String"
        }
      },
      "microsoft.graph.pageLinks": {
        "value": {
          "oneNoteClientUrl": {
            "@odata.type": "microsoft.graph.externalLink"
          },
          "oneNoteWebUrl": {
            "@odata.type": "microsoft.graph.externalLink"
          }
        }
      },
      "microsoft.graph.passwordProfile": {
        "value": {
          "forceChangePasswordNextSignIn": true,
          "password": "String"
        }
      },
      "microsoft.graph.onenotePatchContentCommand": {
        "value": {
          "action": {
            "@odata.type": "microsoft.graph.onenotePatchActionType"
          },
          "content": "String",
          "position": {
            "@odata.type": "microsoft.graph.onenotePatchInsertPosition"
          },
          "target": "String"
        }
      },
      "microsoft.graph.patternedRecurrence": {
        "value": {
          "pattern": {
            "@odata.type": "microsoft.graph.recurrencePattern"
          },
          "range": {
            "@odata.type": "microsoft.graph.recurrenceRange"
          }
        }
      },
      "microsoft.graph.personOrGroupColumn": {
        "value": {
          "allowMultipleSelection": true,
          "chooseFromType": "String",
          "displayAs": "String"
        }
      },
      "microsoft.graph.personType": {
        "value": {
          "class": "String",
          "subclass": "String"
        }
      },
      "microsoft.graph.phone": {
        "value": {
          "number": "String",
          "type": {
            "@odata.type": "microsoft.graph.phoneType"
          }
        }
      },
      "microsoft.graph.photo": {
        "value": {
          "cameraMake": "String",
          "cameraModel": "String",
          "exposureDenominator": 0,
          "exposureNumerator": 0,
          "fNumber": 0,
          "focalLength": 0,
          "iso": 0,
          "takenDateTime": "0001-01-01T00:00:00.0000000+00:00"
        }
      },
      "microsoft.graph.physicalAddress": {
        "value": {
          "city": "String",
          "countryOrRegion": "String",
          "postalCode": "String",
          "state": "String",
          "street": "String"
        }
      },
      "microsoft.graph.plannerAppliedCategories": { },
      "microsoft.graph.plannerAssignment": {
        "value": {
          "assignedBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "assignedDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "orderHint": "String"
        }
      },
      "microsoft.graph.plannerAssignments": { },
      "microsoft.graph.plannerCategoryDescriptions": {
        "value": {
          "category1": "String",
          "category2": "String",
          "category3": "String",
          "category4": "String",
          "category5": "String",
          "category6": "String"
        }
      },
      "microsoft.graph.plannerChecklistItem": {
        "value": {
          "isChecked": true,
          "lastModifiedBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "lastModifiedDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "orderHint": "String",
          "title": "String"
        }
      },
      "microsoft.graph.plannerChecklistItems": { },
      "microsoft.graph.plannerExternalReference": {
        "value": {
          "alias": "String",
          "lastModifiedBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "lastModifiedDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "previewPriority": "String",
          "type": "String"
        }
      },
      "microsoft.graph.plannerExternalReferences": { },
      "microsoft.graph.plannerOrderHintsByAssignee": { },
      "microsoft.graph.plannerUserIds": { },
      "microsoft.graph.privacyProfile": {
        "value": {
          "contactEmail": "String",
          "statementUrl": "String"
        }
      },
      "microsoft.graph.process": {
        "value": {
          "accountName": "String",
          "commandLine": "String",
          "createdDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "fileHash": {
            "@odata.type": "microsoft.graph.fileHash"
          },
          "integrityLevel": {
            "@odata.type": "microsoft.graph.processIntegrityLevel"
          },
          "isElevated": true,
          "name": "String",
          "parentProcessCreatedDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "parentProcessId": 0,
          "parentProcessName": "String",
          "path": "String",
          "processId": 0
        }
      },
      "microsoft.graph.imageInfo": {
        "value": {
          "addImageQuery": true,
          "alternateText": "String",
          "iconUrl": "String"
        }
      },
      "microsoft.graph.visualInfo": {
        "value": {
          "attribution": {
            "@odata.type": "microsoft.graph.imageInfo"
          },
          "backgroundColor": "String",
          "content": {
            "@odata.type": "microsoft.graph.Json"
          },
          "description": "String",
          "displayText": "String"
        }
      },
      "microsoft.graph.provisionedPlan": {
        "value": {
          "capabilityStatus": "String",
          "provisioningStatus": "String",
          "service": "String"
        }
      },
      "microsoft.graph.publicationFacet": {
        "value": {
          "level": "String",
          "versionId": "String"
        }
      },
      "microsoft.graph.quota": {
        "value": {
          "deleted": 0,
          "remaining": 0,
          "state": "String",
          "total": 0,
          "used": 0
        }
      },
      "microsoft.graph.recentNotebook": {
        "value": {
          "displayName": "String",
          "lastAccessedTime": "0001-01-01T00:00:00.0000000+00:00",
          "links": {
            "@odata.type": "microsoft.graph.recentNotebookLinks"
          },
          "sourceService": {
            "@odata.type": "microsoft.graph.onenoteSourceService"
          }
        }
      },
      "microsoft.graph.recentNotebookLinks": {
        "value": {
          "oneNoteClientUrl": {
            "@odata.type": "microsoft.graph.externalLink"
          },
          "oneNoteWebUrl": {
            "@odata.type": "microsoft.graph.externalLink"
          }
        }
      },
      "microsoft.graph.recurrencePattern": {
        "value": {
          "dayOfMonth": 0,
          "daysOfWeek": [
            {
              "@odata.type": "microsoft.graph.dayOfWeek"
            }
          ],
          "firstDayOfWeek": {
            "@odata.type": "microsoft.graph.dayOfWeek"
          },
          "index": {
            "@odata.type": "microsoft.graph.weekIndex"
          },
          "interval": 0,
          "month": 0,
          "type": {
            "@odata.type": "microsoft.graph.recurrencePatternType"
          }
        }
      },
      "microsoft.graph.recurrenceRange": {
        "value": {
          "endDate": "0001-01-01T00:00:00.0000000",
          "numberOfOccurrences": 0,
          "recurrenceTimeZone": "String",
          "startDate": "0001-01-01T00:00:00.0000000",
          "type": {
            "@odata.type": "microsoft.graph.recurrenceRangeType"
          }
        }
      },
      "microsoft.graph.registryKeyState": {
        "value": {
          "hive": {
            "@odata.type": "microsoft.graph.registryHive"
          },
          "key": "String",
          "oldKey": "String",
          "oldValueData": "String",
          "oldValueName": "String",
          "operation": {
            "@odata.type": "microsoft.graph.registryOperation"
          },
          "processId": 0,
          "valueData": "String",
          "valueName": "String",
          "valueType": {
            "@odata.type": "microsoft.graph.registryValueType"
          }
        }
      },
      "microsoft.graph.reminder": {
        "value": {
          "changeKey": "String",
          "eventEndTime": {
            "@odata.type": "microsoft.graph.dateTimeTimeZone"
          },
          "eventId": "String",
          "eventLocation": {
            "@odata.type": "microsoft.graph.location"
          },
          "eventStartTime": {
            "@odata.type": "microsoft.graph.dateTimeTimeZone"
          },
          "eventSubject": "String",
          "eventWebLink": "String",
          "reminderFireTime": {
            "@odata.type": "microsoft.graph.dateTimeTimeZone"
          }
        }
      },
      "microsoft.graph.remoteItem": {
        "value": {
          "createdBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "createdDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "file": {
            "@odata.type": "microsoft.graph.file"
          },
          "fileSystemInfo": {
            "@odata.type": "microsoft.graph.fileSystemInfo"
          },
          "folder": {
            "@odata.type": "microsoft.graph.folder"
          },
          "id": "String",
          "lastModifiedBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "lastModifiedDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "name": "String",
          "package": {
            "@odata.type": "microsoft.graph.package"
          },
          "parentReference": {
            "@odata.type": "microsoft.graph.itemReference"
          },
          "shared": {
            "@odata.type": "microsoft.graph.shared"
          },
          "sharepointIds": {
            "@odata.type": "microsoft.graph.sharepointIds"
          },
          "size": 0,
          "specialFolder": {
            "@odata.type": "microsoft.graph.specialFolder"
          },
          "webDavUrl": "String",
          "webUrl": "String"
        }
      },
      "microsoft.graph.responseStatus": {
        "value": {
          "response": {
            "@odata.type": "microsoft.graph.responseType"
          },
          "time": "0001-01-01T00:00:00.0000000+00:00"
        }
      },
      "microsoft.graph.root": { },
      "microsoft.graph.scoredEmailAddress": {
        "value": {
          "address": "String",
          "relevanceScore": 0
        }
      },
      "microsoft.graph.searchResult": {
        "value": {
          "onClickTelemetryUrl": "String"
        }
      },
      "microsoft.graph.sectionLinks": {
        "value": {
          "oneNoteClientUrl": {
            "@odata.type": "microsoft.graph.externalLink"
          },
          "oneNoteWebUrl": {
            "@odata.type": "microsoft.graph.externalLink"
          }
        }
      },
      "microsoft.graph.securityVendorInformation": {
        "value": {
          "provider": "String",
          "providerVersion": "String",
          "subProvider": "String",
          "vendor": "String"
        }
      },
      "microsoft.graph.servicePlanInfo": {
        "value": {
          "appliesTo": "String",
          "provisioningStatus": "String",
          "servicePlanId": "00000000-0000-0000-0000-000000000000",
          "servicePlanName": "String"
        }
      },
      "microsoft.graph.settingTemplateValue": {
        "value": {
          "defaultValue": "String",
          "description": "String",
          "name": "String",
          "type": "String"
        }
      },
      "microsoft.graph.settingValue": {
        "value": {
          "name": "String",
          "value": "String"
        }
      },
      "microsoft.graph.shared": {
        "value": {
          "owner": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "scope": "String",
          "sharedBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "sharedDateTime": "0001-01-01T00:00:00.0000000+00:00"
        }
      },
      "microsoft.graph.sharepointIds": {
        "value": {
          "listId": "String",
          "listItemId": "String",
          "listItemUniqueId": "String",
          "siteId": "String",
          "siteUrl": "String",
          "webId": "String"
        }
      },
      "microsoft.graph.sharingInvitation": {
        "value": {
          "email": "String",
          "invitedBy": {
            "@odata.type": "microsoft.graph.identitySet"
          },
          "signInRequired": true
        }
      },
      "microsoft.graph.sharingLink": {
        "value": {
          "application": {
            "@odata.type": "microsoft.graph.identity"
          },
          "scope": "String",
          "type": "String",
          "webHtml": "String",
          "webUrl": "String"
        }
      },
      "microsoft.graph.siteCollection": {
        "value": {
          "hostname": "String",
          "root": {
            "@odata.type": "microsoft.graph.root"
          }
        }
      },
      "microsoft.graph.sizeRange": {
        "value": {
          "maximumSize": 0,
          "minimumSize": 0
        }
      },
      "microsoft.graph.workbookSortField": {
        "value": {
          "ascending": true,
          "color": "String",
          "dataOption": "String",
          "icon": {
            "@odata.type": "microsoft.graph.workbookIcon"
          },
          "key": 0,
          "sortOn": "String"
        }
      },
      "microsoft.graph.specialFolder": {
        "value": {
          "name": "String"
        }
      },
      "microsoft.graph.systemFacet": { },
      "microsoft.graph.textColumn": {
        "value": {
          "allowMultipleLines": true,
          "appendChangesToExistingText": true,
          "linesForEditing": 0,
          "maxLength": 0,
          "textType": "String"
        }
      },
      "microsoft.graph.thumbnail": {
        "value": {
          "content": "Stream",
          "height": 0,
          "sourceItemId": "String",
          "url": "String",
          "width": 0
        }
      },
      "microsoft.graph.timeConstraint": {
        "value": {
          "activityDomain": {
            "@odata.type": "microsoft.graph.activityDomain"
          },
          "timeslots": [
            {
              "@odata.type": "microsoft.graph.timeSlot"
            }
          ]
        }
      },
      "microsoft.graph.timeSlot": {
        "value": {
          "end": {
            "@odata.type": "microsoft.graph.dateTimeTimeZone"
          },
          "start": {
            "@odata.type": "microsoft.graph.dateTimeTimeZone"
          }
        }
      },
      "microsoft.graph.timeStamp": {
        "value": {
          "date": "0001-01-01T00:00:00.0000000",
          "time": "TimeOfDay (timestamp)",
          "timeZone": "String"
        }
      },
      "microsoft.graph.timeZoneInformation": {
        "value": {
          "alias": "String",
          "displayName": "String"
        }
      },
      "microsoft.graph.uploadSession": {
        "value": {
          "expirationDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "nextExpectedRanges": [
            "String"
          ],
          "uploadUrl": "String"
        }
      },
      "microsoft.graph.userSecurityState": {
        "value": {
          "aadUserId": "String",
          "accountName": "String",
          "domainName": "String",
          "emailRole": {
            "@odata.type": "microsoft.graph.emailRole"
          },
          "isVpn": true,
          "logonDateTime": "0001-01-01T00:00:00.0000000+00:00",
          "logonId": "String",
          "logonIp": "String",
          "logonLocation": "String",
          "logonType": {
            "@odata.type": "microsoft.graph.logonType"
          },
          "onPremisesSecurityIdentifier": "String",
          "riskScore": "String",
          "userAccountType": {
            "@odata.type": "microsoft.graph.userAccountSecurityType"
          },
          "userPrincipalName": "String"
        }
      },
      "microsoft.graph.verifiedDomain": {
        "value": {
          "capabilities": "String",
          "isDefault": true,
          "isInitial": true,
          "name": "String",
          "type": "String"
        }
      },
      "microsoft.graph.video": {
        "value": {
          "audioBitsPerSample": 0,
          "audioChannels": 0,
          "audioFormat": "String",
          "audioSamplesPerSecond": 0,
          "bitrate": 0,
          "duration": 0,
          "fourCC": "String",
          "frameRate": 0,
          "height": 0,
          "width": 0
        }
      },
      "microsoft.graph.vulnerabilityState": {
        "value": {
          "cve": "String",
          "severity": "String",
          "wasRunning": true
        }
      },
      "microsoft.graph.website": {
        "value": {
          "address": "String",
          "displayName": "String",
          "type": {
            "@odata.type": "microsoft.graph.websiteType"
          }
        }
      },
      "microsoft.graph.workbookSessionInfo": {
        "value": {
          "id": "String",
          "persistChanges": true
        }
      },
      "microsoft.graph.workingHours": {
        "value": {
          "daysOfWeek": [
            {
              "@odata.type": "microsoft.graph.dayOfWeek"
            }
          ],
          "endTime": "TimeOfDay (timestamp)",
          "startTime": "TimeOfDay (timestamp)",
          "timeZone": {
            "@odata.type": "microsoft.graph.timeZoneBase"
          }
        }
      },
      "microsoft.graph.workbookWorksheetProtectionOptions": {
        "value": {
          "allowAutoFilter": true,
          "allowDeleteColumns": true,
          "allowDeleteRows": true,
          "allowFormatCells": true,
          "allowFormatColumns": true,
          "allowFormatRows": true,
          "allowInsertColumns": true,
          "allowInsertHyperlinks": true,
          "allowInsertRows": true,
          "allowPivotTables": true,
          "allowSort": true
        }
      }
    },
    "securitySchemes": {
      "Delegated (work or school account)": {
        "type": "oauth2",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://graph.microsoft.com/",
            "refreshUrl": "https://graph.microsoft.com/",
            "scopes": {
              "Bookings.Read.All": " Allows an app to read Bookings appointments, businesses, customers, services, and staff on behalf of the signed-in user. Intended for read-only applications. Typical target user is the customer of a booking business. ",
              "Bookings.ReadWrite.Appointments": "Allows an app to read and write Bookings appointments and customers, and additionally allows reading businesses, services, and staff on behalf of the signed-in user. Intended for scheduling applications which need to manipulate appointments and customers. Cannot change fundamental information about the booking business, nor its services and staff members. Typical target user is the customer of a booking business.",
              "Bookings.ReadWrite.All": "Allows an app to read and write Bookings appointments, businesses, customers, services, and staff on behalf of the signed-in user. Does not allow create, delete, or publish of Bookings businesses. Intended for management applications that manipulate existing businesses, their services and staff members. Cannot create, delete, or change the publishing status of a booking business. Typical target user is the support staff of an organization.",
              "Bookings.Manage": "Allows an app to read, write, and manage Bookings appointments, businesses, customers, services, and staff on behalf of the signed-in user. . Allows the app to have full access. Intended for a full management experience. Typical target user is the administrator of an organization.",
              "Calendars.Read": "    Read user calendars .Allows the app to read events in user calendars. ",
              "Calendars.Read.Shared": "    Read user and shared calendars .Allows the app to read events in all calendars that the user can access, including delegate and shared calendars. ",
              "Calendars.ReadWrite": "    Have full access to user calendars .Allows the app to create, read, update, and delete events in user calendars. ",
              "Calendars.ReadWrite.Shared": "    Read and write user and shared calendars .Allows the app to create, read, update and delete events in all calendars the user has permissions to access. This includes delegate and shared calendars.",
              "Contacts.Read": "Read user contacts  .Allows the app to read user contacts. ",
              "Contacts.Read.Shared": "    Read user and shared contacts .Allows the app to read contacts that the user has permissions to access, including the user's own and shared contacts. ",
              "Contacts.ReadWrite": "    Have full access to user contacts .Allows the app to create, read, update, and delete user contacts. ",
              "Contacts.ReadWrite.Shared": "    Read and write user and shared contacts .Allows the app to create, read, update and delete contacts that the user has permissions to, including the user's own and shared contacts. ",
              "Device.Read": "    Read user devices .Allows the app to read a user's list of devices on behalf of the signed-in user. ",
              "Device.Command": "    Communicate with user devices .Allows the app to launch another app or communicate with another app on a user's device on behalf of the signed-in user. ",
              "Directory.Read.All": "    Read directory data. Allows the app to read data in your organization's directory, such as users, groups and apps.",
              "Directory.ReadWrite.All": "    Read and write directory data. Allows the app to read and write data in your organization's directory, such as users, and groups. It does not allow the app to delete users or groups, or reset user passwords. ",
              "Directory.AccessAsUser.All": "    Access directory as the signed-in user. Allows the app to have the same access to information in the directory as the signed-in user. ",
              "EduAdministration.Read": "    Read education app settings. Allows the app to read education app settings on behalf of the user. ",
              "EduAdministration.ReadWrite": "    Manage education app settings. Allows the app to manage education app settings on behalf of the user. ",
              "EduAssignments.ReadBasic": "    Read users' class assignments without grades. Allows the app to read assignments without grades on behalf of the user ",
              "EduAssignments.ReadWriteBasic": "    Read and write users' class assignments without grades. Allows the app to read and write assignments without grades on behalf of the user ",
              "EduAssignments.Read": "    Read users' view of class assignments and their grades. Allows the app to read assignments and their grades on behalf of the user",
              "EduAssignments.ReadWrite": "    Read and write users' view of class assignments and their grades. Allows the app to read and write assignments and their grades on behalf of the user",
              "EduRostering.ReadBasic": "    Read a limited subset of users' view of the roster. Allows the app to read a limited subset of the data from the  structure of schools and classes in an organization's roster and  education-specific information about users to be read on behalf of the user. ",
              "Files.Read": "Read user files. Allows the app to read the signed-in user's files. ",
              "Files.Read.All": "Read all files that user can access. Allows the app to read all files the signed-in user can access. ",
              "Files.ReadWrite": "Have full access to user files. Allows the app to read, create, update, and delete the signed-in user's files. ",
              "Files.ReadWrite.All": "Have full access to all files user can access. Allows the app to read, create, update, and delete all files the signed-in user can access. ",
              "Files.ReadWrite.AppFolder": "Have full access to the application's folder (preview). (Preview) Allows the app to read, create, update, and delete files in the application's folder. ",
              "Files.Read.Selected": "Read files that the user selects. **Limited support in Microsoft Graph; see Remarks** . (Preview) Allows the app to read files that the user selects. The app has access for several hours after the user selects a file. ",
              "Files.ReadWrite.Selected": "Read and write files that the user selects. **Limited support in Microsoft Graph; see Remarks** . (Preview) Allows the app to read and write files that the user selects. The app has access for several hours after the user selects a file. ",
              "Group.Read.All": "Read all groups. Allows the app to list groups, and to read their properties and all group memberships on behalf of the signed-in user. Also allows the app to read calendar, conversations, files, and other group content for all groups the signed-in user can access. ",
              "Group.ReadWrite.All": "Read and write all groups. Allows the app to create groups and read all group properties and memberships on behalf of the signed-in user. Additionally allows group owners to manage their groups and allows group members to update group content. ",
              "IdentityRiskEvent.Read.All": "  Read identity risk event information. Allows the app to read identity risk event information for all users in your organization on behalf of the signed-in user. ",
              "IdentityProvider.Read.All": "  Read identity provider information. Allows the app to read identity providers configured in your Azure AD or Azure AD B2C tenant on behalf of the signed-in user. ",
              "IdentityProvider.ReadWrite.All": "  Read and write identity provider information. Allows the app to read or write identity providers configured in your Azure AD or Azure AD B2C tenant on behalf of the signed-in user. ",
              "DeviceManagementApps.Read.All": "Read Microsoft Intune apps. Allows the app to read the properties, group assignments and status of apps, app configurations and app protection policies managed by Microsoft Intune. ",
              "DeviceManagementApps.ReadWrite.All": "Read and write Microsoft Intune apps. Allows the app to read and write the properties, group assignments and status of apps, app configurations and app protection policies managed by Microsoft Intune. ",
              "DeviceManagementConfiguration.Read.All": "Read Microsoft Intune device configuration and policies. Allows the app to read properties of Microsoft Intune-managed device configuration and device compliance policies and their assignment to groups. ",
              "DeviceManagementConfiguration.ReadWrite.All": "Read and write Microsoft Intune device configuration and policies. Allows the app to read and write properties of Microsoft Intune-managed device configuration and device compliance policies and their assignment to groups. ",
              "DeviceManagementManagedDevices.PrivilegedOperations.All": "Perform user-impacting remote actions on Microsoft Intune devices. Allows the app to perform remote high impact actions such as wiping the device or resetting the passcode on devices managed by Microsoft Intune. ",
              "DeviceManagementManagedDevices.Read.All": "Read Microsoft Intune devices. Allows the app to read the properties of devices managed by Microsoft Intune. ",
              "DeviceManagementManagedDevices.ReadWrite.All": "Read and write Microsoft Intune devices. Allows the app to read and write the properties of devices managed by Microsoft Intune. Does not allow high impact operations such as remote wipe and password reset on the device’s owner. ",
              "DeviceManagementRBAC.Read.All": "Read Microsoft Intune RBAC settings. Allows the app to read the properties relating to the Microsoft Intune Role-Based Access Control (RBAC) settings. ",
              "DeviceManagementRBAC.ReadWrite.All": "Read and write Microsoft Intune RBAC settings. Allows the app to read and write the properties relating to the Microsoft Intune Role-Based Access Control (RBAC) settings. ",
              "DeviceManagementServiceConfig.Read.All": "Read Microsoft Intune configuration. Allows the app to read Intune service properties including device enrollment and third party service connection configuration. ",
              "DeviceManagementServiceConfig.ReadWrite.All": "Read and write Microsoft Intune configuration. Allows the app to read and write Microsoft Intune service properties including device enrollment and third party service connection configuration. ",
              "Mail.Read": "Read user mail. Allows the app to read email in user mailboxes. ",
              "Mail.ReadWrite": "Read and write access to user mail. Allows the app to create, read, update, and delete email in user mailboxes. Does not include permission to send mail.",
              "Mail.Read.Shared": "Read user and shared mail. Allows the app to read mail that the user can access, including the user's own and shared mail. ",
              "Mail.ReadWrite.Shared": "Read and write user and shared mail. Allows the app to create, read, update, and delete mail that the user has permission to access, including the user's own and shared mail. Does not include permission to send mail. ",
              "Mail.Send": "Send mail as a user. Allows the app to send mail as users in the organization. ",
              "Mail.Send.Shared": "Send mail on behalf of others. Allows the app to send mail as the signed-in user, including sending on-behalf of others. ",
              "MailboxSettings.Read": " Read user mailbox settings. Allows the app to the read user's mailbox settings. Does not include permission to send mail. ",
              "MailboxSettings.ReadWrite": " Read and write user mailbox settings. Allows the app to create, read, update, and delete user's mailbox settings. Does not include permission to directly send mail, but allows the app to create rules that can forward or redirect messages. ",
              "Member.Read.Hidden": "Read hidden memberships. Allows the app to read the memberships of hidden groups and administrative units on behalf of the signed-in user, for those hidden groups and administrative units that the signed-in user has access to. ",
              "Notes.Read": "Read user OneNote notebooks. Allows the app to read the titles of OneNote notebooks and sections and to create new pages, notebooks, and sections on behalf of the signed-in user. ",
              "Notes.Create": "Create user OneNote notebooks. Allows the app to read the titles of OneNote notebooks and sections and to create new pages, notebooks, and sections on behalf of the signed-in user.",
              "Notes.ReadWrite": "Read and write user OneNote notebooks. Allows the app to read, share, and modify OneNote notebooks on behalf of the signed-in user. ",
              "Notes.Read.All": "Read all OneNote notebooks that user can access. Allows the app to read OneNote notebooks that the signed-in user has access to in the organization. ",
              "Notes.ReadWrite.All": "Read and write all OneNote notebooks that user can access. Allows the app to read, share, and modify OneNote notebooks that the signed-in user has access to in the organization.",
              "Notes.ReadWrite.CreatedByApp": "Limited notebook access (deprecated). **Deprecated** .Do not use. No privileges are granted by this permission. ",
              "email": "View users' email address. Allows the app to read your users' primary email address. ",
              "offline_access": "Access user's data anytime. Allows the app to read and update user data, even when they are not currently using the app.",
              "openid": "Sign users in. Allows users to sign in to the app with their work or school accounts and allows the app to see basic user profile information.",
              "profile": "View users' basic profile. Allows the app to see your users' basic profile (name, picture, user name).",
              "People.Read": "Read users' relevant people lists. Allows the app to read a scored list of people relevant to the signed-in user. The list can include local contacts, contacts from social networking or your organization's directory, and people from recent communications (such as email and Skype). ",
              "People.Read.All": "Read all users' relevant people lists. Allows the app to read a scored list of people relevant to the signed-in user or other users in the signed-in user's organization. The list can include local contacts, contacts from social networking or your organization's directory, and people from recent communications (such as email and Skype). Also allows the app to search the entire directory of the signed-in user's organization. ",
              "Reports.Read.All": "Read all usage reports. Allows an app to read all service usage reports without a signed-in user. Services that provide usage reports include Office 365 and Azure Active Directory. ",
              "SecurityEvents.Read.All": " Read your organization’s security events. Allows the app to read your organization’s security events on behalf of the signed-in user. ",
              "SecurityEvents.ReadWrite.All": "Read and update your organization’s security events. Allows the app to read your organization’s security events on behalf of the signed-in user. Also allows the app to update editable properties in security events on behalf of the signed-in user. ",
              "Sites.Read.All": "Read items in all site collections. Allows the app to read documents and list items in all site collections on behalf of the signed-in user. ",
              "Sites.ReadWrite.All": "Read and write items in all site collections. Allows the app to edit or delete documents and list items in all site collections on behalf of the signed-in user. ",
              "Sites.Manage.All": "Create, edit, and delete items and lists in all site collections. Allows the app to manage and create lists, documents, and list items in all site collections on behalf of the signed-in user. ",
              "Sites.FullControl.All": "Have full control of all site collections. Allows the app to have full control to SharePoint sites in all site collections on behalf of the signed-in user. ",
              "Tasks.Read": "Read user tasks. Allows the app to read user tasks. ",
              "Tasks.Read.Shared": "Read user and shared tasks. Allows the app to read tasks a user has permissions to access, including their own and shared tasks. ",
              "Tasks.ReadWrite": "Create, read, update and delete user tasks and containers. Allows the app to create, read, update and delete tasks and containers (and tasks in them) that are assigned to or shared with the signed-in user.",
              "Tasks.ReadWrite.Shared": "Read and write user and shared tasks. Allows the app to create, read, update, and delete tasks a user has permissions to, including their own and shared tasks. ",
              "Agreement.Read.All": "Read all terms of use agreements. Allows the app to read terms of use agreements on behalf of the signed-in user. ",
              "Agreement.ReadWrite.All": "Read and write all terms of use agreements. Allows the app to read and write terms of use agreements on behalf of the signed-in user. ",
              "AgreementAcceptance.Read": "Read user terms of use acceptance statuses. Allows the app to read terms of use acceptance statuses on behalf of the signed-in user. ",
              "AgreementAcceptance.Read.All": "Read terms of use acceptance statuses that user can access. Allows the app to read terms of use acceptance statuses on behalf of the signed-in user. ",
              "User.Read": "Sign-in and read user profile. Allows users to sign-in to the app, and allows the app to read the profile of signed-in users. It also allows the app to read basic company information of signed-in users.",
              "User.ReadWrite": "Read and write access to user profile. Allows the app to read the signed-in user's full profile. It also allows the app to update the signed-in user's profile information on their behalf. ",
              "User.ReadBasic.All": "Read all users' basic profiles. Allows the app to read a basic set of profile properties of other users in your organization on behalf of the signed-in user. This includes display name, first and last name, email address, open extensions and photo. Also allows the app to read the full profile of the signed-in user. ",
              "User.Read.All": " Read all users' full profiles. Allows the app to read the full set of profile properties, reports, and managers of other users in your organization, on behalf of the signed-in user. ",
              "User.ReadWrite.All": " Read and write all users' full profiles. Allows the app to read and write the full set of profile properties, reports, and managers of other users in your organization, on behalf of the signed-in user. Also allows the app to create and delete users as well as reset user passwords on behalf of the signed-in user. ",
              "User.Invite.All": " Invite guest users to the organization. Allows the app to invite guest users to your organization, on behalf of the signed-in user. ",
              "User.Export.All": "Export users' data. Allows the app to export an organizational user's data, when performed by a Company Administrator.",
              "UserActivity.ReadWrite.CreatedByApp": "    Read and write app activity to users' activity feed .Allows the app to read and report the signed-in user's activity in the app. "
            }
          }
        }
      },
      "DelegatedPersonal": {
        "type": "oauth2",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://graph.microsoft.com/",
            "refreshUrl": "https://graph.microsoft.com/",
            "scopes": {
              "Calendars.Read": "    Read user calendars .Allows the app to read events in user calendars. ",
              "Calendars.ReadWrite": "    Have full access to user calendars .Allows the app to create, read, update, and delete events in user calendars. ",
              "Contacts.Read": "    Read user contacts  .Allows the app to read user contacts. ",
              "Contacts.ReadWrite": "    Have full access to user contacts .Allows the app to create, read, update, and delete user contacts. ",
              "Device.Read": "    Read user devices .Allows the app to read a user's list of devices on behalf of the signed-in user. ",
              "Device.Command": "    Communicate with user devices .Allows the app to launch another app or communicate with another app on a user's device on behalf of the signed-in user. ",
              "Files.Read": "Read user files. Allows the app to read the signed-in user's files. ",
              "Files.Read.All": "Read all files that user can access. Allows the app to read all files the signed-in user can access. ",
              "Files.ReadWrite": "Have full access to user files. Allows the app to read, create, update, and delete the signed-in user's files. ",
              "Files.ReadWrite.All": "Have full access to all files user can access. Allows the app to read, create, update, and delete all files the signed-in user can access. ",
              "Mail.ReadWrite": "Read and write access to user mail. Allows the app to create, read, update, and delete email in user mailboxes. Does not include permission to send mail.",
              "Member.Read.Hidden": "Read all hidden memberships. Allows the app to read the memberships of hidden groups and administrative units without a signed-in user. ",
              "Notes.Read": "Read user OneNote notebooks. Allows the app to read the titles of OneNote notebooks and sections and to create new pages, notebooks, and sections on behalf of the signed-in user. ",
              "Notes.Create": "Create user OneNote notebooks. Allows the app to read the titles of OneNote notebooks and sections and to create new pages, notebooks, and sections on behalf of the signed-in user.",
              "Notes.ReadWrite": "Read and write user OneNote notebooks. Allows the app to read, share, and modify OneNote notebooks on behalf of the signed-in user. ",
              "Notes.Read.All": "Read all OneNote notebooks that user can access. Allows the app to read OneNote notebooks that the signed-in user has access to in the organization. ",
              "Tasks.Read": "Read user tasks. Allows the app to read user tasks. ",
              "Tasks.ReadWrite": "Create, read, update and delete user tasks and containers. Allows the app to create, read, update and delete tasks and containers (and tasks in them) that are assigned to or shared with the signed-in user.",
              "User.Read": "Sign-in and read user profile. Allows users to sign-in to the app, and allows the app to read the profile of signed-in users. It also allows the app to read basic company information of signed-in users.",
              "User.ReadWrite": "Read and write access to user profile. Allows the app to read the signed-in user's full profile. It also allows the app to update the signed-in user's profile information on their behalf. ",
              "User.ReadBasic.All": "Read all users' basic profiles. Allows the app to read a basic set of profile properties of other users in your organization on behalf of the signed-in user. This includes display name, first and last name, email address, open extensions and photo. Also allows the app to read the full profile of the signed-in user. ",
              "User.Read.All": " Read all users' full profiles. Allows the app to read the full set of profile properties, reports, and managers of other users in your organization, on behalf of the signed-in user. ",
              "User.ReadWrite.All": " Read and write all users' full profiles. Allows the app to read and write the full set of profile properties, reports, and managers of other users in your organization, on behalf of the signed-in user. Also allows the app to create and delete users as well as reset user passwords on behalf of the signed-in user. ",
              "User.Invite.All": " Invite guest users to the organization. Allows the app to invite guest users to your organization, on behalf of the signed-in user. ",
              "User.Export.All": "Export users' data. Allows the app to export an organizational user's data, when performed by a Company Administrator.",
              "UserActivity.ReadWrite.CreatedByApp": "    Read and write app activity to users' activity feed .Allows the app to read and report the signed-in user's activity in the app. "
            }
          }
        }
      },
      "Application": {
        "type": "oauth2",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://graph.microsoft.com/",
            "refreshUrl": "https://graph.microsoft.com/",
            "scopes": {
              "Application.ReadWrite.All": "Read and write all apps. Allows the calling app to create, and manage (read, update, update application secrets and delete) applications and service principals without a signed-in user. Does not allow management of consent grants or application assignments to users or groups. ",
              "Application.ReadWrite.OwnedBy": "Manage apps that this app creates or owns. Allows the calling app to create other applications and service principals, and fully manage those applications and service principals (read, update, update application secrets and delete), without a signed-in user. It cannot update any applications that it is not an owner of. Does not allow management of consent grants or application assignments to users or groups. ",
              "Calendars.Read": "    Read calendars in all mailboxes .Allows the app to read events of all calendars without a signed-in user. ",
              "Calendars.ReadWrite": "    Read and write calendars in all mailboxes .Allows the app to create, read, update, and delete events of all calendars without a signed-in user. ",
              "Contacts.Read": "    Read contacts in all mailboxes .Allows the app to read all contacts in all mailboxes without a signed-in user. ",
              "Contacts.ReadWrite": "    Read and write contacts in all mailboxes .Allows the app to create, read, update, and delete all contacts in all mailboxes without a signed-in user. ",
              "Device.ReadWrite.All": "    Read and write devices .Allows the app to read and write all device properties without a signed in user. Does not allow device creation, device deletion, or update of device alternative security identifiers. ",
              "Directory.Read.All": "Read directory data. Allows the app to read data in your organization's directory, such as users, groups and apps, without a signed-in user. ",
              "Directory.ReadWrite.All": "Read and write directory data. Allows the app to read and write data in your organization's directory, such as users, and groups, without a signed-in user. Does not allow user or group deletion. ",
              "EduAssignments.ReadBasic.All": "Read class assignments without grades.Allows the app to read assignments without grades for all users",
              "EduAssignments.ReadWriteBasic.All": "Read and write class assignments without grades. Allows the app to read and write assignments without grades for all users",
              "EduAssignments.Read.All": "Read class assignments with grades. Allows the app to read assignments and their grades for all users ",
              "EduAssignments.ReadWrite.All": "Read and write class assignments with grades. Allows the app to read and write assignments and their grades for all users ",
              "EduRostering.ReadBasic.All": "Read a limited subset of the organization's roster. Allows the app to read a limited subset of both the structure of schools and classes in an organization's roster and education-specific information about all users. ",
              "EduRostering.Read.All": "Read the organization's roster. Allows the app to read the structure of schools and classes in the organization's roster and education-specific information about all users to be read. ",
              "EduRostering.ReadWrite.All": "Read and write the organization's roster. Allows the app to read and write the structure of schools and classes in the organization's roster and education-specific information about all users to be read and written. ",
              "Files.Read.All": "Read files in all site collections. Allows the app to read all files in all site collections without a signed in user. ",
              "Files.ReadWrite.All": "Read and write files in all site collections. Allows the app to read, create, update, and delete all files in all site collections without a signed in user. ",
              "Group.Read.All": "Read all groups. Allows the app to read memberships for all groups without a signed-in user. > **NOTE:** that not all group API supports access using app-only permissions. See [known issues](../concepts/known_issues.md) for examples. ",
              "Group.ReadWrite.All": "Read and write all groups. Allows the app to create groups, read and update group memberships, and delete groups. All of these operations can be performed by the app without a signed-in user. ",
              "IdentityRiskEvent.Read.All": "  Read identity risk event information. Allows the app to read identity risk event information for all users in your organization without a signed-in user. ",
              "Mail.Read": "Read mail in all mailboxes. Allows the app to read mail in all mailboxes without a signed-in user.",
              "Mail.ReadWrite": "Read and write mail in all mailboxes. Allows the app to create, read, update, and delete mail in all mailboxes without a signed-in user. Does not include permission to send mail. ",
              "Mail.Send": "Send mail as any user. Allows the app to send mail as any user without a signed-in user. ",
              "MailboxSettings.Read": " Read all user mailbox settings. Allows the app to read user's mailbox settings without a signed-in user. Does not include permission to send mail. ",
              "MailboxSettings.ReadWrite": "Read and write all user mailbox settings. Allows the app to create, read, update, and delete user's mailbox settings without a signed-in user. Does not include permission to send mail. ",
              "Notes.Read.All": "Read all OneNote notebooks. Allows the app to read all the OneNote notebooks in your organization, without a signed-in user. ",
              "Notes.ReadWrite.All": "Read and write all OneNote notebooks. Allows the app to read, share, and modify all the OneNote notebooks in your organization, without a signed-in user.",
              "People.Read.All": "Read all users' relevant people lists. Allows the app to read a scored list of people relevant to the signed-in user or other users in the signed-in user's organization. .The list can include local contacts, contacts from social networking or your organization's directory, and people from recent communications (such as email and Skype). Also allows the app to search the entire directory of the signed-in user's organization. ",
              "Reports.Read.All": "Read all usage reports. Allows an app to read all service usage reports without a signed-in user. Services that provide usage reports include Office 365 and Azure Active Directory. ",
              "SecurityEvents.Read.All": " Read your organization’s security events. Allows the app to read your organization’s security events. ",
              "SecurityEvents.ReadWrite.All": "Read and update your organization’s security events. Allows the app to read your organization’s security events. Also allows the app to update editable properties in security events. ",
              "Sites.Read.All": "Read items in all site collections. Allows the app to read documents and list items in all site collections without a signed in user. ",
              "Sites.ReadWrite.All": "Read and write items in all site collections. Allows the app to create, read, update, and delete documents and list items in all site collections without a signed in user. ",
              "Sites.Manage.All": "Have full control of all site collections. Allows the app to manage and create lists, documents, and list items in all site collections without a signed-in user. ",
              "Sites.FullControl.All": "Create, edit, and delete items and lists in all site collections. Allows the app to have full control to SharePoint sites in all site collections without a signed-in user. ",
              "User.Read.All": "Read all users' full profiles. Allows the app to read the full set of profile properties, group membership, reports and managers of other users in your organization, without a signed-in user.",
              "User.ReadWrite.All": "  Read and write all users' full profiles. Allows the app to read and write the full set of profile properties, group membership, reports and managers of other users in your organization, without a signed-in user. Also allows the app to create and delete non-administrative users. Does not allow reset of user passwords. ",
              "User.Invite.All": " Invite guest users to the organization. Allows the app to invite guest users to your organization, without a signed-in user. ",
              "User.Export.All": "Export users' data. Allows the app to export organizational users' data, without a signed-in user."
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "contracts.contract",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "devices.device",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "devices.extension",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "devices.directoryObject",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "directory.directory",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "directory.directoryObject",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "directoryObjects.directoryObject",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "directoryObjects.Actions",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "directoryRoles.directoryRole",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "directoryRoles.directoryObject",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "directoryRoleTemplates.directoryRoleTemplate",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "domains.domain",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "domains.directoryObject",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "domains.Actions",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "domains.domainDnsRecord",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "drives.drive",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "drives.driveItem",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "drives.Actions",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "drives.Functions",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "drives.list",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "education.educationRoot",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "education.educationClass",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "education.educationUser",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "education.educationSchool",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "groupLifecyclePolicies.groupLifecyclePolicy",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "groups.group",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "groups.directoryObject",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "groups.calendar",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "groups.event",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "groups.Actions",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "groups.Functions",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "groups.conversation",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "groups.drive",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "groups.extension",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "groups.groupLifecyclePolicy",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "groups.onenote",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "groups.profilePhoto",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "groups.plannerGroup",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "groups.groupSetting",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "groups.site",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "groups.conversationThread",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "groupSettings.groupSetting",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "groupSettingTemplates.groupSettingTemplate",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "invitations.invitation",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "invitations.user",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "me.user",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "me.userActivity",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "me.Functions",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "me.calendar",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "me.calendarGroup",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "me.event",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "me.Actions",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "me.contactFolder",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "me.contact",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "me.directoryObject",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "me.deviceManagementTroubleshootingEvent",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "me.drive",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "me.extension",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "me.inferenceClassification",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "me.licenseDetails",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "me.mailFolder",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "me.managedAppRegistration",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "me.managedDevice",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "me.message",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "me.onenote",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "me.outlookUser",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "me.person",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "me.profilePhoto",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "me.plannerUser",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "organization.organization",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "organization.extension",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "planner.planner",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "planner.plannerBucket",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "planner.plannerPlan",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "planner.plannerTask",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "reports.reportRoot",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "reports.Functions",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "schemaExtensions.schemaExtension",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "security.security",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "security.alert",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "shares.sharedDriveItem",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "shares.driveItem",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "shares.Actions",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "shares.Functions",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "shares.list",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "shares.listItem",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "shares.site",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "sites.site",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "sites.columnDefinition",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "sites.contentType",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "sites.drive",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "sites.baseItem",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "sites.list",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "sites.onenote",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "subscribedSkus.subscribedSku",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "subscriptions.subscription",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "users.user",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "users.userActivity",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "users.Functions",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "users.calendar",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "users.calendarGroup",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "users.event",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "users.Actions",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "users.contactFolder",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "users.contact",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "users.directoryObject",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "users.deviceManagementTroubleshootingEvent",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "users.drive",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "users.extension",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "users.inferenceClassification",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "users.licenseDetails",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "users.mailFolder",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "users.managedAppRegistration",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "users.managedDevice",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "users.message",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "users.onenote",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "users.outlookUser",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "users.person",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "users.profilePhoto",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "users.plannerUser",
      "x-ms-docs-toc-type": "page"
    }
  ]
}